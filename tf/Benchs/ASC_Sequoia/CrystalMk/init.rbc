; ModuleID = 'init.bc'
source_filename = "init.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define void @init(double*, double*, double*, double*, double*, [12 x double]*, [12 x double]*, [12 x double]*) #0 {
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca [12 x double]*, align 8
  %15 = alloca [12 x double]*, align 8
  %16 = alloca [12 x double]*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store double* %0, double** %9, align 8
  store double* %1, double** %10, align 8
  store double* %2, double** %11, align 8
  store double* %3, double** %12, align 8
  store double* %4, double** %13, align 8
  store [12 x double]* %5, [12 x double]** %14, align 8
  store [12 x double]* %6, [12 x double]** %15, align 8
  store [12 x double]* %7, [12 x double]** %16, align 8
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %18, align 4
  br label %19

; <label>:19:                                     ; preds = %100, %8
  %20 = load i32, i32* %18, align 4
  %21 = icmp slt i32 %20, 12
  br i1 %21, label %22, label %103

; <label>:22:                                     ; preds = %19
  %23 = load i32, i32* %18, align 4
  %24 = sitofp i32 %23 to double
  %25 = fmul double 2.000000e-01, %24
  %26 = fdiv double %25, 1.200000e+01
  %27 = fadd double 1.900000e+00, %26
  %28 = load double*, double** %9, align 8
  %29 = load i32, i32* %18, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds double, double* %28, i64 %30
  store double %27, double* %31, align 8
  %32 = load double*, double** %9, align 8
  %33 = load i32, i32* %18, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds double, double* %32, i64 %34
  %36 = load double, double* %35, align 8
  %37 = fmul double %36, 1.000000e-03
  %38 = load double*, double** %10, align 8
  %39 = load i32, i32* %18, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds double, double* %38, i64 %40
  store double %37, double* %41, align 8
  %42 = load i32, i32* %18, align 4
  %43 = sitofp i32 %42 to double
  %44 = fadd double %43, 2.000000e+00
  %45 = load double*, double** %11, align 8
  %46 = load i32, i32* %18, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds double, double* %45, i64 %47
  store double %44, double* %48, align 8
  %49 = load double*, double** %12, align 8
  %50 = load i32, i32* %18, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds double, double* %49, i64 %51
  store double 3.000000e+01, double* %52, align 8
  %53 = load i32, i32* %18, align 4
  %54 = sitofp i32 %53 to double
  %55 = fadd double %54, 3.500000e+00
  %56 = load double*, double** %13, align 8
  %57 = load i32, i32* %18, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds double, double* %56, i64 %58
  store double %55, double* %59, align 8
  store i32 0, i32* %17, align 4
  br label %60

; <label>:60:                                     ; preds = %96, %22
  %61 = load i32, i32* %17, align 4
  %62 = icmp slt i32 %61, 12
  br i1 %62, label %63, label %99

; <label>:63:                                     ; preds = %60
  %64 = load i32, i32* %17, align 4
  %65 = sitofp i32 %64 to double
  %66 = fmul double 1.000000e-05, %65
  %67 = load i32, i32* %18, align 4
  %68 = sitofp i32 %67 to double
  %69 = fmul double %66, %68
  %70 = fadd double 1.000000e-02, %69
  %71 = load [12 x double]*, [12 x double]** %14, align 8
  %72 = load i32, i32* %18, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [12 x double], [12 x double]* %71, i64 %73
  %75 = load i32, i32* %17, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [12 x double], [12 x double]* %74, i64 0, i64 %76
  store double %70, double* %77, align 8
  %78 = load i32, i32* %17, align 4
  %79 = load i32, i32* %18, align 4
  %80 = add nsw i32 %78, %79
  %81 = sitofp i32 %80 to double
  %82 = load [12 x double]*, [12 x double]** %15, align 8
  %83 = load i32, i32* %18, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [12 x double], [12 x double]* %82, i64 %84
  %86 = load i32, i32* %17, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [12 x double], [12 x double]* %85, i64 0, i64 %87
  store double %81, double* %88, align 8
  %89 = load [12 x double]*, [12 x double]** %16, align 8
  %90 = load i32, i32* %18, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [12 x double], [12 x double]* %89, i64 %91
  %93 = load i32, i32* %17, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [12 x double], [12 x double]* %92, i64 0, i64 %94
  store double 0.000000e+00, double* %95, align 8
  br label %96

; <label>:96:                                     ; preds = %63
  %97 = load i32, i32* %17, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %17, align 4
  br label %60

; <label>:99:                                     ; preds = %60
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* %18, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %18, align 4
  br label %19

; <label>:103:                                    ; preds = %19
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
