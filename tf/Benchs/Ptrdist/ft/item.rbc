; ModuleID = 'item.bc'
source_filename = "item.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._Vertices = type { i32, %struct._Edges*, %struct._Vertices*, i32, %struct._Edges* }
%struct._Edges = type { i32, %struct._Vertices*, %struct._Vertices*, %struct._Edges* }

@.str = private unnamed_addr constant [10 x i8] c"delta > 0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"item.c\00", align 1
@__PRETTY_FUNCTION__.Subtract = private unnamed_addr constant [28 x i8] c"Item *Subtract(Item *, int)\00", align 1

; Function Attrs: noinline nounwind uwtable
define i32 @LessThan(%struct._Vertices*, %struct._Vertices*) #0 {
  %3 = alloca %struct._Vertices*, align 8
  %4 = alloca %struct._Vertices*, align 8
  store %struct._Vertices* %0, %struct._Vertices** %3, align 8
  store %struct._Vertices* %1, %struct._Vertices** %4, align 8
  %5 = load %struct._Vertices*, %struct._Vertices** %3, align 8
  %6 = getelementptr inbounds %struct._Vertices, %struct._Vertices* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = load %struct._Vertices*, %struct._Vertices** %4, align 8
  %9 = getelementptr inbounds %struct._Vertices, %struct._Vertices* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %7, %10
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: noinline nounwind uwtable
define i32 @Equal(%struct._Vertices*, %struct._Vertices*) #0 {
  %3 = alloca %struct._Vertices*, align 8
  %4 = alloca %struct._Vertices*, align 8
  store %struct._Vertices* %0, %struct._Vertices** %3, align 8
  store %struct._Vertices* %1, %struct._Vertices** %4, align 8
  %5 = load %struct._Vertices*, %struct._Vertices** %3, align 8
  %6 = getelementptr inbounds %struct._Vertices, %struct._Vertices* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = load %struct._Vertices*, %struct._Vertices** %4, align 8
  %9 = getelementptr inbounds %struct._Vertices, %struct._Vertices* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %7, %10
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: noinline nounwind uwtable
define %struct._Vertices* @Subtract(%struct._Vertices*, i32) #0 {
  %3 = alloca %struct._Vertices*, align 8
  %4 = alloca i32, align 4
  store %struct._Vertices* %0, %struct._Vertices** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %2
  br label %9

; <label>:8:                                      ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 49, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.Subtract, i32 0, i32 0)) #2
  unreachable

; <label>:9:                                      ; preds = %7
  %10 = load %struct._Vertices*, %struct._Vertices** %3, align 8
  %11 = getelementptr inbounds %struct._Vertices, %struct._Vertices* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = load i32, i32* %4, align 4
  %14 = sub nsw i32 %12, %13
  %15 = load %struct._Vertices*, %struct._Vertices** %3, align 8
  %16 = getelementptr inbounds %struct._Vertices, %struct._Vertices* %15, i32 0, i32 3
  store i32 %14, i32* %16, align 8
  %17 = load %struct._Vertices*, %struct._Vertices** %3, align 8
  ret %struct._Vertices* %17
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
