; ModuleID = 'nbody.rbc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.planet = type { double, double, double, double, double, double, double }

@bodies = global [5 x %struct.planet] [%struct.planet { double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x4043BD3CC9BE45DE }, %struct.planet { double 0x40135DA0343CD92C, double 0xBFF290ABC01FDB7C, double 0xBFBA86F96C25EBF0, double 0x3FE367069B93CCBC, double 0x40067EF2F57D949B, double 0xBF99D2D79A5A0715, double 0x3FA34C95D9AB33D8 }, %struct.planet { double 0x4020AFCDC332CA67, double 0x40107FCB31DE01B0, double 0xBFD9D353E1EB467C, double 0xBFF02C21B8879442, double 0x3FFD35E9BF1F8F13, double 0x3F813C485F1123B4, double 0x3F871D490D07C637 }, %struct.planet { double 0x4029C9EACEA7D9CF, double 0xC02E38E8D626667E, double 0xBFCC9557BE257DA0, double 0x3FF1531CA9911BEF, double 0x3FEBCC7F3E54BBC5, double 0xBF862F6BFAF23E7C, double 0x3F5C3DD29CF41EB3 }, %struct.planet { double 0x402EC267A905572A, double 0xC039EB5833C8A220, double 0x3FC6F1F393ABE540, double 0x3FEF54B61659BC4A, double 0x3FE307C631C4FBA3, double 0xBFA1CB88587665F6, double 0x3F60A8F3531799AC }], align 16
@.str = private unnamed_addr constant [6 x i8] c"%.9f\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @advance(i32, %struct.planet*, double) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.planet*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.planet*, align 8
  %10 = alloca %struct.planet*, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca %struct.planet*, align 8
  store i32 %0, i32* %4, align 4
  store %struct.planet* %1, %struct.planet** %5, align 8
  store double %2, double* %6, align 8
  br label %16

; <label>:16:                                     ; preds = %131, %3
  %storemerge = phi i32 [ 0, %3 ], [ %133, %131 ]
  store i32 %storemerge, i32* %7, align 4
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %storemerge, %17
  br i1 %18, label %19, label %134

; <label>:19:                                     ; preds = %16
  %20 = load %struct.planet*, %struct.planet** %5, align 8
  %21 = load i32, i32* %7, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.planet, %struct.planet* %20, i64 %22
  store %struct.planet* %23, %struct.planet** %9, align 8
  br label %24

; <label>:24:                                     ; preds = %128, %19
  %storemerge2.in = phi i32 [ %21, %19 ], [ %129, %128 ]
  %storemerge2 = add nsw i32 %storemerge2.in, 1
  store i32 %storemerge2, i32* %8, align 4
  %25 = load i32, i32* %4, align 4
  %26 = icmp slt i32 %storemerge2, %25
  br i1 %26, label %27, label %130

; <label>:27:                                     ; preds = %24
  %28 = load %struct.planet*, %struct.planet** %5, align 8
  %29 = load i32, i32* %8, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.planet, %struct.planet* %28, i64 %30
  store %struct.planet* %31, %struct.planet** %10, align 8
  %32 = load %struct.planet*, %struct.planet** %9, align 8
  %33 = getelementptr inbounds %struct.planet, %struct.planet* %32, i64 0, i32 0
  %34 = load double, double* %33, align 8
  %35 = getelementptr inbounds %struct.planet, %struct.planet* %31, i64 0, i32 0
  %36 = load double, double* %35, align 8
  %37 = fsub double %34, %36
  store double %37, double* %11, align 8
  %38 = load %struct.planet*, %struct.planet** %9, align 8
  %39 = getelementptr inbounds %struct.planet, %struct.planet* %38, i64 0, i32 1
  %40 = load double, double* %39, align 8
  %41 = load %struct.planet*, %struct.planet** %10, align 8
  %42 = getelementptr inbounds %struct.planet, %struct.planet* %41, i64 0, i32 1
  %43 = load double, double* %42, align 8
  %44 = fsub double %40, %43
  store double %44, double* %12, align 8
  %45 = load %struct.planet*, %struct.planet** %9, align 8
  %46 = getelementptr inbounds %struct.planet, %struct.planet* %45, i64 0, i32 2
  %47 = load double, double* %46, align 8
  %48 = load %struct.planet*, %struct.planet** %10, align 8
  %49 = getelementptr inbounds %struct.planet, %struct.planet* %48, i64 0, i32 2
  %50 = load double, double* %49, align 8
  %51 = fsub double %47, %50
  store double %51, double* %13, align 8
  %52 = load double, double* %11, align 8
  %53 = fmul double %52, %52
  %54 = load double, double* %12, align 8
  %55 = fmul double %54, %54
  %56 = fadd double %53, %55
  %57 = fmul double %51, %51
  %58 = fadd double %56, %57
  %59 = call double @sqrt(double %58) #3
  %60 = load double, double* %6, align 8
  %61 = fmul double %59, %59
  %62 = fmul double %61, %59
  %63 = fdiv double %60, %62
  store double %63, double* %14, align 8
  %64 = load double, double* %11, align 8
  %65 = load %struct.planet*, %struct.planet** %10, align 8
  %66 = getelementptr inbounds %struct.planet, %struct.planet* %65, i64 0, i32 6
  %67 = load double, double* %66, align 8
  %68 = fmul double %64, %67
  %69 = fmul double %68, %63
  %70 = load %struct.planet*, %struct.planet** %9, align 8
  %71 = getelementptr inbounds %struct.planet, %struct.planet* %70, i64 0, i32 3
  %72 = load double, double* %71, align 8
  %73 = fsub double %72, %69
  store double %73, double* %71, align 8
  %74 = load double, double* %12, align 8
  %75 = load %struct.planet*, %struct.planet** %10, align 8
  %76 = getelementptr inbounds %struct.planet, %struct.planet* %75, i64 0, i32 6
  %77 = load double, double* %76, align 8
  %78 = fmul double %74, %77
  %79 = load double, double* %14, align 8
  %80 = fmul double %78, %79
  %81 = load %struct.planet*, %struct.planet** %9, align 8
  %82 = getelementptr inbounds %struct.planet, %struct.planet* %81, i64 0, i32 4
  %83 = load double, double* %82, align 8
  %84 = fsub double %83, %80
  store double %84, double* %82, align 8
  %85 = load double, double* %13, align 8
  %86 = load %struct.planet*, %struct.planet** %10, align 8
  %87 = getelementptr inbounds %struct.planet, %struct.planet* %86, i64 0, i32 6
  %88 = load double, double* %87, align 8
  %89 = fmul double %85, %88
  %90 = load double, double* %14, align 8
  %91 = fmul double %89, %90
  %92 = load %struct.planet*, %struct.planet** %9, align 8
  %93 = getelementptr inbounds %struct.planet, %struct.planet* %92, i64 0, i32 5
  %94 = load double, double* %93, align 8
  %95 = fsub double %94, %91
  store double %95, double* %93, align 8
  %96 = load double, double* %11, align 8
  %97 = getelementptr inbounds %struct.planet, %struct.planet* %92, i64 0, i32 6
  %98 = load double, double* %97, align 8
  %99 = fmul double %96, %98
  %100 = load double, double* %14, align 8
  %101 = fmul double %99, %100
  %102 = load %struct.planet*, %struct.planet** %10, align 8
  %103 = getelementptr inbounds %struct.planet, %struct.planet* %102, i64 0, i32 3
  %104 = load double, double* %103, align 8
  %105 = fadd double %104, %101
  store double %105, double* %103, align 8
  %106 = load double, double* %12, align 8
  %107 = load %struct.planet*, %struct.planet** %9, align 8
  %108 = getelementptr inbounds %struct.planet, %struct.planet* %107, i64 0, i32 6
  %109 = load double, double* %108, align 8
  %110 = fmul double %106, %109
  %111 = load double, double* %14, align 8
  %112 = fmul double %110, %111
  %113 = load %struct.planet*, %struct.planet** %10, align 8
  %114 = getelementptr inbounds %struct.planet, %struct.planet* %113, i64 0, i32 4
  %115 = load double, double* %114, align 8
  %116 = fadd double %115, %112
  store double %116, double* %114, align 8
  %117 = load double, double* %13, align 8
  %118 = load %struct.planet*, %struct.planet** %9, align 8
  %119 = getelementptr inbounds %struct.planet, %struct.planet* %118, i64 0, i32 6
  %120 = load double, double* %119, align 8
  %121 = fmul double %117, %120
  %122 = load double, double* %14, align 8
  %123 = fmul double %121, %122
  %124 = load %struct.planet*, %struct.planet** %10, align 8
  %125 = getelementptr inbounds %struct.planet, %struct.planet* %124, i64 0, i32 5
  %126 = load double, double* %125, align 8
  %127 = fadd double %126, %123
  store double %127, double* %125, align 8
  br label %128

; <label>:128:                                    ; preds = %27
  %129 = load i32, i32* %8, align 4
  br label %24

; <label>:130:                                    ; preds = %24
  br label %131

; <label>:131:                                    ; preds = %130
  %132 = load i32, i32* %7, align 4
  %133 = add nsw i32 %132, 1
  br label %16

; <label>:134:                                    ; preds = %16
  br label %135

; <label>:135:                                    ; preds = %166, %134
  %storemerge1 = phi i32 [ 0, %134 ], [ %168, %166 ]
  store i32 %storemerge1, i32* %7, align 4
  %136 = load i32, i32* %4, align 4
  %137 = icmp slt i32 %storemerge1, %136
  br i1 %137, label %138, label %169

; <label>:138:                                    ; preds = %135
  %139 = load %struct.planet*, %struct.planet** %5, align 8
  %140 = load i32, i32* %7, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.planet, %struct.planet* %139, i64 %141
  store %struct.planet* %142, %struct.planet** %15, align 8
  %143 = load double, double* %6, align 8
  %144 = getelementptr inbounds %struct.planet, %struct.planet* %139, i64 %141, i32 3
  %145 = load double, double* %144, align 8
  %146 = fmul double %143, %145
  %147 = getelementptr inbounds %struct.planet, %struct.planet* %142, i64 0, i32 0
  %148 = load double, double* %147, align 8
  %149 = fadd double %148, %146
  store double %149, double* %147, align 8
  %150 = load double, double* %6, align 8
  %151 = load %struct.planet*, %struct.planet** %15, align 8
  %152 = getelementptr inbounds %struct.planet, %struct.planet* %151, i64 0, i32 4
  %153 = load double, double* %152, align 8
  %154 = fmul double %150, %153
  %155 = getelementptr inbounds %struct.planet, %struct.planet* %151, i64 0, i32 1
  %156 = load double, double* %155, align 8
  %157 = fadd double %156, %154
  store double %157, double* %155, align 8
  %158 = load double, double* %6, align 8
  %159 = load %struct.planet*, %struct.planet** %15, align 8
  %160 = getelementptr inbounds %struct.planet, %struct.planet* %159, i64 0, i32 5
  %161 = load double, double* %160, align 8
  %162 = fmul double %158, %161
  %163 = getelementptr inbounds %struct.planet, %struct.planet* %159, i64 0, i32 2
  %164 = load double, double* %163, align 8
  %165 = fadd double %164, %162
  store double %165, double* %163, align 8
  br label %166

; <label>:166:                                    ; preds = %138
  %167 = load i32, i32* %7, align 4
  %168 = add nsw i32 %167, 1
  br label %135

; <label>:169:                                    ; preds = %135
  ret void
}

; Function Attrs: nounwind
declare double @sqrt(double) #1

; Function Attrs: noinline nounwind uwtable
define double @energy(i32, %struct.planet*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.planet*, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.planet*, align 8
  %9 = alloca %struct.planet*, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  store i32 %0, i32* %3, align 4
  store %struct.planet* %1, %struct.planet** %4, align 8
  store double 0.000000e+00, double* %5, align 8
  br label %13

; <label>:13:                                     ; preds = %93, %2
  %storemerge = phi i32 [ 0, %2 ], [ %95, %93 ]
  store i32 %storemerge, i32* %6, align 4
  %14 = load i32, i32* %3, align 4
  %15 = icmp slt i32 %storemerge, %14
  br i1 %15, label %16, label %96

; <label>:16:                                     ; preds = %13
  %17 = load %struct.planet*, %struct.planet** %4, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.planet, %struct.planet* %17, i64 %19
  store %struct.planet* %20, %struct.planet** %8, align 8
  %21 = getelementptr inbounds %struct.planet, %struct.planet* %17, i64 %19, i32 6
  %22 = load double, double* %21, align 8
  %23 = fmul double %22, 5.000000e-01
  %24 = getelementptr inbounds %struct.planet, %struct.planet* %17, i64 %19, i32 3
  %25 = load double, double* %24, align 8
  %26 = fmul double %25, %25
  %27 = load %struct.planet*, %struct.planet** %8, align 8
  %28 = getelementptr inbounds %struct.planet, %struct.planet* %27, i64 0, i32 4
  %29 = load double, double* %28, align 8
  %30 = fmul double %29, %29
  %31 = fadd double %26, %30
  %32 = getelementptr inbounds %struct.planet, %struct.planet* %27, i64 0, i32 5
  %33 = load double, double* %32, align 8
  %34 = load %struct.planet*, %struct.planet** %8, align 8
  %35 = getelementptr inbounds %struct.planet, %struct.planet* %34, i64 0, i32 5
  %36 = load double, double* %35, align 8
  %37 = fmul double %33, %36
  %38 = fadd double %31, %37
  %39 = fmul double %23, %38
  %40 = load double, double* %5, align 8
  %41 = fadd double %40, %39
  store double %41, double* %5, align 8
  %42 = load i32, i32* %6, align 4
  br label %43

; <label>:43:                                     ; preds = %90, %16
  %storemerge1.in = phi i32 [ %42, %16 ], [ %91, %90 ]
  %storemerge1 = add nsw i32 %storemerge1.in, 1
  store i32 %storemerge1, i32* %7, align 4
  %44 = load i32, i32* %3, align 4
  %45 = icmp slt i32 %storemerge1, %44
  br i1 %45, label %46, label %92

; <label>:46:                                     ; preds = %43
  %47 = load %struct.planet*, %struct.planet** %4, align 8
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.planet, %struct.planet* %47, i64 %49
  store %struct.planet* %50, %struct.planet** %9, align 8
  %51 = load %struct.planet*, %struct.planet** %8, align 8
  %52 = getelementptr inbounds %struct.planet, %struct.planet* %51, i64 0, i32 0
  %53 = load double, double* %52, align 8
  %54 = getelementptr inbounds %struct.planet, %struct.planet* %50, i64 0, i32 0
  %55 = load double, double* %54, align 8
  %56 = fsub double %53, %55
  store double %56, double* %10, align 8
  %57 = load %struct.planet*, %struct.planet** %8, align 8
  %58 = getelementptr inbounds %struct.planet, %struct.planet* %57, i64 0, i32 1
  %59 = load double, double* %58, align 8
  %60 = load %struct.planet*, %struct.planet** %9, align 8
  %61 = getelementptr inbounds %struct.planet, %struct.planet* %60, i64 0, i32 1
  %62 = load double, double* %61, align 8
  %63 = fsub double %59, %62
  store double %63, double* %11, align 8
  %64 = load %struct.planet*, %struct.planet** %8, align 8
  %65 = getelementptr inbounds %struct.planet, %struct.planet* %64, i64 0, i32 2
  %66 = load double, double* %65, align 8
  %67 = load %struct.planet*, %struct.planet** %9, align 8
  %68 = getelementptr inbounds %struct.planet, %struct.planet* %67, i64 0, i32 2
  %69 = load double, double* %68, align 8
  %70 = fsub double %66, %69
  %71 = load double, double* %10, align 8
  %72 = fmul double %71, %71
  %73 = load double, double* %11, align 8
  %74 = fmul double %73, %73
  %75 = fadd double %72, %74
  %76 = fmul double %70, %70
  %77 = fadd double %75, %76
  %78 = call double @sqrt(double %77) #3
  store double %78, double* %12, align 8
  %79 = load %struct.planet*, %struct.planet** %8, align 8
  %80 = getelementptr inbounds %struct.planet, %struct.planet* %79, i64 0, i32 6
  %81 = load double, double* %80, align 8
  %82 = load %struct.planet*, %struct.planet** %9, align 8
  %83 = getelementptr inbounds %struct.planet, %struct.planet* %82, i64 0, i32 6
  %84 = load double, double* %83, align 8
  %85 = fmul double %81, %84
  %86 = load double, double* %12, align 8
  %87 = fdiv double %85, %86
  %88 = load double, double* %5, align 8
  %89 = fsub double %88, %87
  store double %89, double* %5, align 8
  br label %90

; <label>:90:                                     ; preds = %46
  %91 = load i32, i32* %7, align 4
  br label %43

; <label>:92:                                     ; preds = %43
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* %6, align 4
  %95 = add nsw i32 %94, 1
  br label %13

; <label>:96:                                     ; preds = %13
  %97 = load double, double* %5, align 8
  ret double %97
}

; Function Attrs: noinline nounwind uwtable
define void @offset_momentum(i32, %struct.planet*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.planet*, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store %struct.planet* %1, %struct.planet** %4, align 8
  store double 0.000000e+00, double* %5, align 8
  store double 0.000000e+00, double* %6, align 8
  store double 0.000000e+00, double* %7, align 8
  br label %9

; <label>:9:                                      ; preds = %46, %2
  %storemerge = phi i32 [ 0, %2 ], [ %48, %46 ]
  store i32 %storemerge, i32* %8, align 4
  %10 = load i32, i32* %3, align 4
  %11 = icmp slt i32 %storemerge, %10
  br i1 %11, label %12, label %49

; <label>:12:                                     ; preds = %9
  %13 = load %struct.planet*, %struct.planet** %4, align 8
  %14 = load i32, i32* %8, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.planet, %struct.planet* %13, i64 %15, i32 3
  %17 = load double, double* %16, align 8
  %18 = sext i32 %14 to i64
  %19 = getelementptr inbounds %struct.planet, %struct.planet* %13, i64 %18, i32 6
  %20 = load double, double* %19, align 8
  %21 = fmul double %17, %20
  %22 = load double, double* %5, align 8
  %23 = fadd double %22, %21
  store double %23, double* %5, align 8
  %24 = load %struct.planet*, %struct.planet** %4, align 8
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.planet, %struct.planet* %24, i64 %26, i32 4
  %28 = load double, double* %27, align 8
  %29 = sext i32 %25 to i64
  %30 = getelementptr inbounds %struct.planet, %struct.planet* %24, i64 %29, i32 6
  %31 = load double, double* %30, align 8
  %32 = fmul double %28, %31
  %33 = load double, double* %6, align 8
  %34 = fadd double %33, %32
  store double %34, double* %6, align 8
  %35 = load %struct.planet*, %struct.planet** %4, align 8
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.planet, %struct.planet* %35, i64 %37, i32 5
  %39 = load double, double* %38, align 8
  %40 = sext i32 %36 to i64
  %41 = getelementptr inbounds %struct.planet, %struct.planet* %35, i64 %40, i32 6
  %42 = load double, double* %41, align 8
  %43 = fmul double %39, %42
  %44 = load double, double* %7, align 8
  %45 = fadd double %44, %43
  store double %45, double* %7, align 8
  br label %46

; <label>:46:                                     ; preds = %12
  %47 = load i32, i32* %8, align 4
  %48 = add nsw i32 %47, 1
  br label %9

; <label>:49:                                     ; preds = %9
  %50 = load double, double* %5, align 8
  %51 = fsub double -0.000000e+00, %50
  %52 = fdiv double %51, 0x4043BD3CC9BE45DE
  %53 = load %struct.planet*, %struct.planet** %4, align 8
  %54 = getelementptr inbounds %struct.planet, %struct.planet* %53, i64 0, i32 3
  store double %52, double* %54, align 8
  %55 = load double, double* %6, align 8
  %56 = fsub double -0.000000e+00, %55
  %57 = fdiv double %56, 0x4043BD3CC9BE45DE
  %58 = getelementptr inbounds %struct.planet, %struct.planet* %53, i64 0, i32 4
  store double %57, double* %58, align 8
  %59 = load double, double* %7, align 8
  %60 = fsub double -0.000000e+00, %59
  %61 = fdiv double %60, 0x4043BD3CC9BE45DE
  %62 = load %struct.planet*, %struct.planet** %4, align 8
  %63 = getelementptr inbounds %struct.planet, %struct.planet* %62, i64 0, i32 5
  store double %61, double* %63, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 5000000, i32* %3, align 4
  call void @offset_momentum(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i64 0, i64 0))
  %5 = call double @energy(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i64 0, i64 0))
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), double %5) #3
  br label %7

; <label>:7:                                      ; preds = %11, %2
  %storemerge = phi i32 [ 1, %2 ], [ %13, %11 ]
  store i32 %storemerge, i32* %4, align 4
  %8 = load i32, i32* %3, align 4
  %9 = icmp sgt i32 %storemerge, %8
  br i1 %9, label %14, label %10

; <label>:10:                                     ; preds = %7
  call void @advance(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i64 0, i64 0), double 1.000000e-02)
  br label %11

; <label>:11:                                     ; preds = %10
  %12 = load i32, i32* %4, align 4
  %13 = add nsw i32 %12, 1
  br label %7

; <label>:14:                                     ; preds = %7
  %15 = call double @energy(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), double %15) #3
  ret i32 0
}

declare i32 @printf(i8*, ...) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
