# mark_description "Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.5.281 Build 20190815";
# mark_description "-lm -S -c -o check_sum";
	.file "check_sum.c"
	.text
..TXTST0:
.L_2__routine_start_check_sum_0:
# -- Begin  check_sum
	.text
# mark_begin;
       .align    16,0x90
	.globl check_sum
# --- check_sum(int)
check_sum:
# parameter 1: %edi
..B1.1:                         # Preds ..B1.0
                                # Execution count [1.00e+00]
	.cfi_startproc
..___tag_value_check_sum.1:
..L2:
                                                          #35.1
        pushq     %rbp                                          #35.1
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
        subq      $80, %rsp                                     #35.1
	.cfi_def_cfa_offset 96
        movl      %edi, %ebp                                    #35.1
..___tag_value_check_sum.6:
#       timer(void)
        call      timer                                         #40.9
..___tag_value_check_sum.7:
                                # LOE rbx r12 r13 r14 r15 ebp xmm0
..B1.40:                        # Preds ..B1.1
                                # Execution count [1.00e+00]
        movsd     %xmm0, 40(%rsp)                               #40.9[spill]
                                # LOE rbx r12 r13 r14 r15 ebp
..B1.2:                         # Preds ..B1.40
                                # Execution count [1.00e+00]
        movslq    num_refine(%rip), %rdx                        #43.35
        xorl      %r9d, %r9d                                    #43.4
        movq      sorted_index(%rip), %rax                      #43.22
        pxor      %xmm1, %xmm1                                  #42.4
        movslq    4(%rax,%rdx,4), %rcx                          #43.22
        testq     %rcx, %rcx                                    #43.22
        jle       ..B1.33       # Prob 9%                       #43.22
                                # LOE rcx rbx r9 r12 r13 r14 r15 ebp xmm1
..B1.3:                         # Preds ..B1.2
                                # Execution count [9.00e-01]
        movslq    z_block_size(%rip), %r8                       #50.33
        movl      %r8d, %eax                                    #50.16
        movq      blocks(%rip), %rdx                            #45.13
        movq      sorted_list(%rip), %r10                       #44.11
        movslq    x_block_size(%rip), %rsi                      #48.27
        movslq    y_block_size(%rip), %rdi                      #49.30
        movslq    %ebp, %rbp                                    #35.1
        movq      %r12, 16(%rsp)                                #50.16[spill]
        movq      %r13, 24(%rsp)                                #50.16[spill]
        movq      %r14, 32(%rsp)                                #50.16[spill]
        movq      %r15, (%rsp)                                  #50.16[spill]
        movq      %rbx, 8(%rsp)                                 #50.16[spill]
	.cfi_offset 3, -88
	.cfi_offset 12, -80
	.cfi_offset 13, -72
	.cfi_offset 14, -64
	.cfi_offset 15, -96
                                # LOE rdx rcx rbp rsi rdi r8 r9 r10 eax xmm1
..B1.4:                         # Preds ..B1.31 ..B1.3
                                # Execution count [5.00e+00]
        movslq    4(%r10,%r9,8), %rbx                           #44.11
        lea       (%rbx,%rbx,2), %r11                           #45.13
        shlq      $6, %r11                                      #45.13
        cmpl      $0, (%r11,%rdx)                               #46.25
        jl        ..B1.31       # Prob 16%                      #46.25
                                # LOE rdx rcx rbp rsi rdi r8 r9 r10 r11 eax xmm1
..B1.5:                         # Preds ..B1.4
                                # Execution count [4.20e+00]
        xorl      %ebx, %ebx                                    #48.10
        pxor      %xmm2, %xmm2                                  #47.10
        testq     %rsi, %rsi                                    #48.27
        jle       ..B1.30       # Prob 10%                      #48.27
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 eax xmm1 xmm2
..B1.6:                         # Preds ..B1.5
                                # Execution count [3.78e+00]
        movq      %r10, 64(%rsp)                                #[spill]
        movq      %r9, 56(%rsp)                                 #[spill]
        movq      %rcx, 48(%rsp)                                #[spill]
                                # LOE rdx rbx rbp rsi rdi r8 r11 eax xmm1 xmm2
..B1.7:                         # Preds ..B1.28 ..B1.6
                                # Execution count [2.10e+01]
        xorl      %r10d, %r10d                                  #49.13
        testq     %rdi, %rdi                                    #49.30
        jle       ..B1.28       # Prob 9%                       #49.30
                                # LOE rdx rbx rbp rsi rdi r8 r10 r11 eax xmm1 xmm2
..B1.9:                         # Preds ..B1.7 ..B1.26
                                # Execution count [1.05e+02]
        testq     %r8, %r8                                      #50.33
        jle       ..B1.26       # Prob 50%                      #50.33
                                # LOE rdx rbx rbp rsi rdi r8 r10 r11 eax xmm1 xmm2
..B1.10:                        # Preds ..B1.9
                                # Execution count [9.45e+01]
        movq      184(%r11,%rdx), %r9                           #51.32
        cmpq      $8, %r8                                       #50.16
        jl        ..B1.35       # Prob 10%                      #50.16
                                # LOE rdx rbx rbp rsi rdi r8 r9 r10 r11 eax xmm1 xmm2
..B1.11:                        # Preds ..B1.10
                                # Execution count [9.45e+01]
        movq      (%r9,%rbp,8), %rcx                            #51.32
        movq      8(%rcx,%rbx,8), %rcx                          #51.32
        movl      8(%rcx,%r10,8), %r15d                         #51.32
        addl      $8, %r15d                                     #51.32
        andl      $15, %r15d                                    #50.16
        je        ..B1.14       # Prob 50%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 eax r15d xmm1 xmm2
..B1.12:                        # Preds ..B1.11
                                # Execution count [9.45e+01]
        testl     $7, %r15d                                     #50.16
        jne       ..B1.35       # Prob 10%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 eax xmm1 xmm2
..B1.13:                        # Preds ..B1.12
                                # Execution count [4.72e+01]
        movl      $1, %r15d                                     #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 eax r15d xmm1 xmm2
..B1.14:                        # Preds ..B1.13 ..B1.11
                                # Execution count [9.45e+01]
        movl      %r15d, %r14d                                  #50.16
        lea       8(%r14), %r12                                 #50.16
        cmpq      %r12, %r8                                     #50.16
        jl        ..B1.35       # Prob 10%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r14 eax r15d xmm1 xmm2
..B1.15:                        # Preds ..B1.14
                                # Execution count [1.05e+02]
        movl      %eax, %r12d                                   #50.16
        xorl      %r13d, %r13d                                  #50.16
        subl      %r15d, %r12d                                  #50.16
        andl      $7, %r12d                                     #50.16
        negl      %r12d                                         #50.16
        addl      %eax, %r12d                                   #50.16
        movslq    %r12d, %r12                                   #50.16
        movq      8(%rcx,%r10,8), %rcx                          #51.32
        testl     %r15d, %r15d                                  #50.16
        jbe       ..B1.19       # Prob 10%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r13 r14 eax xmm1 xmm2
..B1.17:                        # Preds ..B1.15 ..B1.17
                                # Execution count [5.25e+02]
        addsd     8(%rcx,%r13,8), %xmm2                         #51.19
        incq      %r13                                          #50.16
        cmpq      %r14, %r13                                    #50.16
        jb        ..B1.17       # Prob 82%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r13 r14 eax xmm1 xmm2
..B1.19:                        # Preds ..B1.17 ..B1.15
                                # Execution count [9.45e+01]
        pxor      %xmm4, %xmm4                                  #37.4
        movaps    %xmm4, %xmm5                                  #37.4
        movaps    %xmm4, %xmm3                                  #37.4
        movsd     %xmm2, %xmm5                                  #37.4
        movaps    %xmm3, %xmm2                                  #37.4
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r14 eax xmm1 xmm2 xmm3 xmm4 xmm5
..B1.20:                        # Preds ..B1.20 ..B1.19
                                # Execution count [5.25e+02]
        addpd     8(%rcx,%r14,8), %xmm5                         #51.19
        addpd     24(%rcx,%r14,8), %xmm4                        #51.19
        addpd     40(%rcx,%r14,8), %xmm3                        #51.19
        addpd     56(%rcx,%r14,8), %xmm2                        #51.19
        addq      $8, %r14                                      #50.16
        cmpq      %r12, %r14                                    #50.16
        jb        ..B1.20       # Prob 82%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r9 r10 r11 r12 r14 eax xmm1 xmm2 xmm3 xmm4 xmm5
..B1.21:                        # Preds ..B1.20
                                # Execution count [9.45e+01]
        addpd     %xmm4, %xmm5                                  #37.4
        addpd     %xmm2, %xmm3                                  #37.4
        addpd     %xmm3, %xmm5                                  #37.4
        movaps    %xmm5, %xmm2                                  #37.4
        unpckhpd  %xmm5, %xmm2                                  #37.4
        addsd     %xmm2, %xmm5                                  #37.4
        movaps    %xmm5, %xmm2                                  #37.4
                                # LOE rdx rbx rbp rsi rdi r8 r9 r10 r11 r12 eax xmm1 xmm2
..B1.22:                        # Preds ..B1.21 ..B1.35
                                # Execution count [1.05e+02]
        cmpq      %r8, %r12                                     #50.16
        jae       ..B1.26       # Prob 10%                      #50.16
                                # LOE rdx rbx rbp rsi rdi r8 r9 r10 r11 r12 eax xmm1 xmm2
..B1.23:                        # Preds ..B1.22
                                # Execution count [9.45e+01]
        movq      (%r9,%rbp,8), %rcx                            #51.32
        movq      8(%rcx,%rbx,8), %r9                           #51.32
        movq      8(%r9,%r10,8), %rcx                           #51.32
                                # LOE rdx rcx rbx rbp rsi rdi r8 r10 r11 r12 eax xmm1 xmm2
..B1.24:                        # Preds ..B1.24 ..B1.23
                                # Execution count [5.25e+02]
        addsd     8(%rcx,%r12,8), %xmm2                         #51.19
        incq      %r12                                          #50.16
        cmpq      %r8, %r12                                     #50.16
        jb        ..B1.24       # Prob 82%                      #50.16
                                # LOE rdx rcx rbx rbp rsi rdi r8 r10 r11 r12 eax xmm1 xmm2
..B1.26:                        # Preds ..B1.24 ..B1.22 ..B1.9
                                # Execution count [1.05e+02]
        incq      %r10                                          #49.13
        cmpq      %rdi, %r10                                    #49.13
        jb        ..B1.9        # Prob 82%                      #49.13
                                # LOE rdx rbx rbp rsi rdi r8 r10 r11 eax xmm1 xmm2
..B1.28:                        # Preds ..B1.26 ..B1.7
                                # Execution count [2.10e+01]
        .byte     15                                            #48.10
        .byte     31                                            #48.10
        .byte     132                                           #48.10
        .byte     0                                             #48.10
        .byte     0                                             #48.10
        .byte     0                                             #48.10
        .byte     0                                             #48.10
        .byte     0                                             #48.10
        incq      %rbx                                          #48.10
        cmpq      %rsi, %rbx                                    #48.10
        jb        ..B1.7        # Prob 82%                      #48.10
                                # LOE rdx rbx rbp rsi rdi r8 r11 eax xmm1 xmm2
..B1.29:                        # Preds ..B1.28
                                # Execution count [3.78e+00]
        movq      64(%rsp), %r10                                #[spill]
        movq      56(%rsp), %r9                                 #[spill]
        movq      48(%rsp), %rcx                                #[spill]
                                # LOE rdx rcx rbp rsi rdi r8 r9 r10 eax xmm1 xmm2
..B1.30:                        # Preds ..B1.29 ..B1.5
                                # Execution count [4.20e+00]
        addsd     %xmm2, %xmm1                                  #52.10
                                # LOE rdx rcx rbp rsi rdi r8 r9 r10 eax xmm1
..B1.31:                        # Preds ..B1.30 ..B1.4
                                # Execution count [5.00e+00]
        incq      %r9                                           #43.4
        cmpq      %rcx, %r9                                     #43.4
        jb        ..B1.4        # Prob 82%                      #43.4
                                # LOE rdx rcx rbp rsi rdi r8 r9 r10 eax xmm1
..B1.32:                        # Preds ..B1.31
                                # Execution count [9.00e-01]
        movq      16(%rsp), %r12                                #[spill]
	.cfi_restore 12
        movq      24(%rsp), %r13                                #[spill]
	.cfi_restore 13
        movq      32(%rsp), %r14                                #[spill]
	.cfi_restore 14
        movq      (%rsp), %r15                                  #[spill]
	.cfi_restore 15
        movq      8(%rsp), %rbx                                 #[spill]
	.cfi_restore 3
                                # LOE rbx r12 r13 r14 r15 xmm1
..B1.33:                        # Preds ..B1.32 ..B1.2
                                # Execution count [1.00e+00]
        movsd     %xmm1, 48(%rsp)                               #56.9[spill]
..___tag_value_check_sum.34:
#       timer(void)
        call      timer                                         #56.9
..___tag_value_check_sum.35:
                                # LOE rbx r12 r13 r14 r15 xmm0
..B1.41:                        # Preds ..B1.33
                                # Execution count [1.00e+00]
        movsd     48(%rsp), %xmm1                               #[spill]
                                # LOE rbx r12 r13 r14 r15 xmm0 xmm1
..B1.34:                        # Preds ..B1.41
                                # Execution count [1.00e+00]
        incl      total_red(%rip)                               #58.4
        subsd     40(%rsp), %xmm0                               #57.26[spill]
        addsd     timer_cs_calc(%rip), %xmm0                    #57.4
        movsd     %xmm0, timer_cs_calc(%rip)                    #57.4
        movaps    %xmm1, %xmm0                                  #60.11
        addq      $80, %rsp                                     #60.11
	.cfi_def_cfa_offset 16
	.cfi_restore 6
        popq      %rbp                                          #60.11
	.cfi_def_cfa_offset 8
        ret                                                     #60.11
	.cfi_def_cfa_offset 96
	.cfi_offset 3, -88
	.cfi_offset 6, -16
	.cfi_offset 12, -80
	.cfi_offset 13, -72
	.cfi_offset 14, -64
	.cfi_offset 15, -96
                                # LOE
..B1.35:                        # Preds ..B1.10 ..B1.12 ..B1.14
                                # Execution count [9.45e+00]: Infreq
        xorl      %r12d, %r12d                                  #50.16
        jmp       ..B1.22       # Prob 100%                     #50.16
        .align    16,0x90
                                # LOE rdx rbx rbp rsi rdi r8 r9 r10 r11 r12 eax xmm1 xmm2
	.cfi_endproc
# mark_end;
	.type	check_sum,@function
	.size	check_sum,.-check_sum
..LNcheck_sum.0:
	.data
# -- End  check_sum
	.data
	.comm blocks,8,8
	.comm parents,8,8
	.comm sorted_list,8,8
	.comm sorted_index,8,8
	.comm my_pe,4,4
	.comm num_pes,4,4
	.comm max_num_blocks,4,4
	.comm target_active,4,4
	.comm target_max,4,4
	.comm target_min,4,4
	.comm num_refine,4,4
	.comm uniform_refine,4,4
	.comm x_block_size,4,4
	.comm y_block_size,4,4
	.comm z_block_size,4,4
	.comm num_vars,4,4
	.comm comm_vars,4,4
	.comm init_block_x,4,4
	.comm init_block_y,4,4
	.comm init_block_z,4,4
	.comm reorder,4,4
	.comm npx,4,4
	.comm npy,4,4
	.comm npz,4,4
	.comm inbalance,4,4
	.comm refine_freq,4,4
	.comm report_diffusion,4,4
	.comm checksum_freq,4,4
	.comm stages_per_ts,4,4
	.comm error_tol,4,4
	.comm num_tsteps,4,4
	.comm stencil,4,4
	.comm report_perf,4,4
	.comm plot_freq,4,4
	.comm lb_opt,4,4
	.comm block_change,4,4
	.comm code,4,4
	.comm permute,4,4
	.comm nonblocking,4,4
	.comm refine_ghost,4,4
	.comm max_num_parents,4,4
	.comm num_parents,4,4
	.comm max_active_parent,4,4
	.comm cur_max_level,4,4
	.comm num_blocks,8,8
	.comm block_start,8,8
	.comm num_active,4,4
	.comm max_active_block,4,4
	.comm global_active,4,4
	.comm x_block_half,4,4
	.comm y_block_half,4,4
	.comm z_block_half,4,4
	.comm tol,8,8
	.comm grid_sum,8,8
	.comm p8,8,8
	.comm p2,8,8
	.comm mesh_size,12,4
	.comm max_mesh_size,4,4
	.comm from,8,8
	.comm to,8,8
	.comm msg_len,48,4
	.comm local_max_b,4,4
	.comm global_max_b,4,4
	.comm num_objects,4,4
	.comm objects,8,8
	.comm average,1024,32
	.comm stddev,1024,32
	.comm minimum,1024,32
	.comm maximum,1024,32
	.comm timer_all,8,8
	.comm timer_comm_all,8,8
	.comm timer_comm_dir,24,8
	.comm timer_comm_same,24,8
	.comm timer_comm_diff,24,8
	.comm timer_comm_bc,24,8
	.comm timer_calc_all,8,8
	.comm timer_cs_all,8,8
	.comm timer_cs_calc,8,8
	.comm timer_refine_all,8,8
	.comm timer_refine_co,8,8
	.comm timer_refine_mr,8,8
	.comm timer_refine_sb,8,8
	.comm timer_refine_cc,8,8
	.comm timer_cb_all,8,8
	.comm timer_target_all,8,8
	.comm timer_target_rb,8,8
	.comm timer_target_dc,8,8
	.comm timer_target_cb,8,8
	.comm timer_target_ab,8,8
	.comm timer_target_da,8,8
	.comm timer_target_sb,8,8
	.comm timer_plot,8,8
	.comm total_blocks,8,8
	.comm nb_min,4,4
	.comm nb_max,4,4
	.comm nrs,4,4
	.comm nps,4,4
	.comm num_refined,4,4
	.comm num_reformed,4,4
	.comm counter_bc,12,4
	.comm counter_same,12,4
	.comm counter_diff,12,4
	.comm counter_malloc,4,4
	.comm size_malloc,8,8
	.comm counter_malloc_init,4,4
	.comm size_malloc_init,8,8
	.comm total_red,4,4
	.section .note.GNU-stack, ""
# End
