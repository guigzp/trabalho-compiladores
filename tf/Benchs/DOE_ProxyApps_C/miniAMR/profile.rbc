; ModuleID = 'profile.bc'
source_filename = "profile.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.object = type { i32, i32, [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double] }
%struct.block = type { i32, i32, i32, i32, i32, i32, i32, [6 x i32], [6 x i32], [6 x [2 x [2 x i32]]], [3 x i32], double**** }
%struct.parent = type { i32, i32, i32, i32, i32, i32, [8 x i32], [8 x i32], [3 x i32] }
%struct.sorted_block = type { i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [16 x i8] c"1.0 provisional\00", align 1
@total_blocks = common global i64 0, align 8
@x_block_size = common global i32 0, align 4
@y_block_size = common global i32 0, align 4
@z_block_size = common global i32 0, align 4
@stencil = common global i32 0, align 4
@average = common global [128 x double] zeroinitializer, align 16
@num_pes = common global i32 0, align 4
@my_pe = common global i32 0, align 4
@report_perf = common global i32 0, align 4
@.str.1 = private unnamed_addr constant [13 x i8] c"results.yaml\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"code: miniAMR\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"version: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"ranks: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"init_block_x: %d\0A\00", align 1
@init_block_x = common global i32 0, align 4
@.str.7 = private unnamed_addr constant [18 x i8] c"init_block_y: %d\0A\00", align 1
@init_block_y = common global i32 0, align 4
@.str.8 = private unnamed_addr constant [18 x i8] c"init_block_z: %d\0A\00", align 1
@init_block_z = common global i32 0, align 4
@.str.9 = private unnamed_addr constant [18 x i8] c"x_block_size: %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"y_block_size: %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"z_block_size: %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"permute: %d\0A\00", align 1
@permute = common global i32 0, align 4
@.str.13 = private unnamed_addr constant [24 x i8] c"max_blocks_allowed: %d\0A\00", align 1
@max_num_blocks = common global i32 0, align 4
@.str.14 = private unnamed_addr constant [10 x i8] c"code: %d\0A\00", align 1
@code = common global i32 0, align 4
@.str.15 = private unnamed_addr constant [16 x i8] c"num_refine: %d\0A\00", align 1
@num_refine = common global i32 0, align 4
@.str.16 = private unnamed_addr constant [18 x i8] c"block_change: %d\0A\00", align 1
@block_change = common global i32 0, align 4
@.str.17 = private unnamed_addr constant [18 x i8] c"refine_ghost: %d\0A\00", align 1
@refine_ghost = common global i32 0, align 4
@.str.18 = private unnamed_addr constant [20 x i8] c"uniform_refine: %d\0A\00", align 1
@uniform_refine = common global i32 0, align 4
@.str.19 = private unnamed_addr constant [17 x i8] c"num_objects: %d\0A\00", align 1
@num_objects = common global i32 0, align 4
@objects = common global %struct.object* null, align 8
@.str.20 = private unnamed_addr constant [15 x i8] c"obj%dtype: %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"obj%dbounce: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"obj%dcenter_x: %lf\0A\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"obj%dcenter_y: %lf\0A\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"obj%dcenter_z: %lf\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"obj%dmove_x: %lf\0A\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"obj%dmove_y: %lf\0A\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"obj%dmove_z: %lf\0A\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"obj%dsize_x: %lf\0A\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"obj%dsize_y: %lf\0A\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"obj%dsize_z: %lf\0A\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"obj%dinc_x: %lf\0A\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"obj%dinc_y: %lf\0A\00", align 1
@.str.33 = private unnamed_addr constant [17 x i8] c"obj%dinc_z: %lf\0A\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"num_tsteps: %d\0A\00", align 1
@num_tsteps = common global i32 0, align 4
@.str.35 = private unnamed_addr constant [25 x i8] c"stages_per_timestep: %d\0A\00", align 1
@stages_per_ts = common global i32 0, align 4
@.str.36 = private unnamed_addr constant [19 x i8] c"checksum_freq: %d\0A\00", align 1
@checksum_freq = common global i32 0, align 4
@.str.37 = private unnamed_addr constant [17 x i8] c"refine_freq: %d\0A\00", align 1
@refine_freq = common global i32 0, align 4
@.str.38 = private unnamed_addr constant [15 x i8] c"plot_freq: %d\0A\00", align 1
@plot_freq = common global i32 0, align 4
@.str.39 = private unnamed_addr constant [14 x i8] c"num_vars: %d\0A\00", align 1
@num_vars = common global i32 0, align 4
@.str.40 = private unnamed_addr constant [13 x i8] c"stencil: %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"comm_vars: %d\0A\00", align 1
@comm_vars = common global i32 0, align 4
@.str.42 = private unnamed_addr constant [15 x i8] c"error_tol: %d\0A\00", align 1
@error_tol = common global i32 0, align 4
@.str.43 = private unnamed_addr constant [17 x i8] c"total_time: %lf\0A\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"memory_used: %lf\0A\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"compute_time: %lf\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"total_gflops: %lf\0A\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"ave_gflops: %lf\0A\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"total_comm: %lf\0A\00", align 1
@.str.49 = private unnamed_addr constant [25 x i8] c"   total_exch_same: %lf\0A\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"   total_exch_diff: %lf\0A\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"   total_apply_bc: %lf\0A\00", align 1
@.str.52 = private unnamed_addr constant [30 x i8] c"   total_face_exch_same: %lf\0A\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"   total_face_exch_diff: %lf\0A\00", align 1
@.str.54 = private unnamed_addr constant [29 x i8] c"   total_face_bc_apply: %lf\0A\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"   x_comm: %lf\0A\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"      x_exch_same: %lf\0A\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"      x_exch_diff: %lf\0A\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"      x_apply_bc: %lf\0A\00", align 1
@.str.59 = private unnamed_addr constant [29 x i8] c"      x_face_exch_same: %lf\0A\00", align 1
@.str.60 = private unnamed_addr constant [29 x i8] c"      x_face_exch_diff: %lf\0A\00", align 1
@.str.61 = private unnamed_addr constant [28 x i8] c"      x_face_bc_apply: %lf\0A\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"   y_comm: %lf\0A\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"      y_exch_same: %lf\0A\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"      y_exch_diff: %lf\0A\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"      y_apply_bc: %lf\0A\00", align 1
@.str.66 = private unnamed_addr constant [29 x i8] c"      y_face_exch_same: %lf\0A\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"      y_face_exch_diff: %lf\0A\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"      y_face_bc_apply: %lf\0A\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"   z_comm: %lf\0A\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"      z_exch_same: %lf\0A\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"      z_exch_diff: %lf\0A\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"      z_apply_bc: %lf\0A\00", align 1
@.str.73 = private unnamed_addr constant [29 x i8] c"      z_face_exch_same: %lf\0A\00", align 1
@.str.74 = private unnamed_addr constant [29 x i8] c"      z_face_exch_diff: %lf\0A\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"      z_face_bc_apply: %lf\0A\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"gridsum_time: %lf\0A\00", align 1
@.str.77 = private unnamed_addr constant [22 x i8] c"   gridsum_calc: %lf\0A\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"refine_time: %lf\0A\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"   total_blocks_ts: %lf\0A\00", align 1
@.str.80 = private unnamed_addr constant [28 x i8] c"   total_blocks_ts_min: %d\0A\00", align 1
@nb_min = common global i32 0, align 4
@.str.81 = private unnamed_addr constant [28 x i8] c"   total_blocks_ts_max: %d\0A\00", align 1
@nb_max = common global i32 0, align 4
@.str.82 = private unnamed_addr constant [22 x i8] c"   blocks_split: %lf\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"   blocks_reformed: %lf\0A\00", align 1
@.str.84 = private unnamed_addr constant [26 x i8] c"   time_compare_obj: %lf\0A\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"   time_mark_refine: %lf\0A\00", align 1
@.str.86 = private unnamed_addr constant [26 x i8] c"   time_split_block: %lf\0A\00", align 1
@.str.87 = private unnamed_addr constant [28 x i8] c"   time_total_coarsen: %lf\0A\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"   time_misc: %lf\0A\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"plot_time: %lf\0A\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"results.txt\00", align 1
@.str.91 = private unnamed_addr constant [54 x i8] c"\0A ================ Start report ===================\0A\0A\00", align 1
@.str.92 = private unnamed_addr constant [27 x i8] c"          Mantevo miniAMR\0A\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"          version %s\0A\0A\00", align 1
@.str.94 = private unnamed_addr constant [22 x i8] c"serial run on 1 rank\0A\00", align 1
@.str.95 = private unnamed_addr constant [38 x i8] c"initial blocks per rank %d x %d x %d\0A\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"block size %d x %d x %d\0A\00", align 1
@.str.97 = private unnamed_addr constant [29 x i8] c"Order of exchanges permuted\0A\00", align 1
@.str.98 = private unnamed_addr constant [41 x i8] c"Maximum number of blocks per rank is %d\0A\00", align 1
@target_active = common global i32 0, align 4
@.str.99 = private unnamed_addr constant [40 x i8] c"Target number of blocks per rank is %d\0A\00", align 1
@target_max = common global i32 0, align 4
@.str.100 = private unnamed_addr constant [44 x i8] c"Target max number of blocks per rank is %d\0A\00", align 1
@target_min = common global i32 0, align 4
@.str.101 = private unnamed_addr constant [44 x i8] c"Target min number of blocks per rank is %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"Code set to code %d\0A\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Number of levels of refinement is %d\0A\00", align 1
@.str.104 = private unnamed_addr constant [52 x i8] c"Blocks can change by %d levels per refinement step\0A\00", align 1
@.str.105 = private unnamed_addr constant [56 x i8] c"Ghost cells will be used determine is block is refined\0A\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"\0ABlocks will be uniformly refined\0A\00", align 1
@.str.107 = private unnamed_addr constant [40 x i8] c"\0ABlocks will be refined by %d objects\0A\0A\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c"Object %d is the surface of a rectangle\0A\00", align 1
@.str.109 = private unnamed_addr constant [40 x i8] c"Object %d is the volume of a rectangle\0A\00", align 1
@.str.110 = private unnamed_addr constant [40 x i8] c"Object %d is the surface of a spheroid\0A\00", align 1
@.str.111 = private unnamed_addr constant [39 x i8] c"Object %d is the volume of a spheroid\0A\00", align 1
@.str.112 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x+ hemispheroid\0A\00", align 1
@.str.113 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of x+ hemispheroid\0A\00", align 1
@.str.114 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x- hemispheroid\0A\00", align 1
@.str.115 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of x- hemispheroid\0A\00", align 1
@.str.116 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y+ hemispheroid\0A\00", align 1
@.str.117 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of y+ hemispheroid\0A\00", align 1
@.str.118 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y- hemispheroid\0A\00", align 1
@.str.119 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of y- hemispheroid\0A\00", align 1
@.str.120 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z+ hemispheroid\0A\00", align 1
@.str.121 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of z+ hemispheroid\0A\00", align 1
@.str.122 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z- hemispheroid\0A\00", align 1
@.str.123 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of z- hemispheroid\0A\00", align 1
@.str.124 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x axis cylinder\0A\00", align 1
@.str.125 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of x axis cylinder\0A\00", align 1
@.str.126 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y axis cylinder\0A\00", align 1
@.str.127 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of y axis cylinder\0A\00", align 1
@.str.128 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z axis cylinder\0A\00", align 1
@.str.129 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of z axis cylinder\0A\00", align 1
@.str.130 = private unnamed_addr constant [22 x i8] c"Oject may leave mesh\0A\00", align 1
@.str.131 = private unnamed_addr constant [39 x i8] c"Oject center will bounce off of walls\0A\00", align 1
@.str.132 = private unnamed_addr constant [32 x i8] c"Center starting at %lf %lf %lf\0A\00", align 1
@.str.133 = private unnamed_addr constant [27 x i8] c"Center end at %lf %lf %lf\0A\00", align 1
@.str.134 = private unnamed_addr constant [36 x i8] c"Moving at %lf %lf %lf per timestep\0A\00", align 1
@.str.135 = private unnamed_addr constant [52 x i8] c"   Rate relative to smallest cell size %lf %lf %lf\0A\00", align 1
@mesh_size = common global [3 x i32] zeroinitializer, align 4
@.str.136 = private unnamed_addr constant [26 x i8] c"Initial size %lf %lf %lf\0A\00", align 1
@.str.137 = private unnamed_addr constant [24 x i8] c"Final size %lf %lf %lf\0A\00", align 1
@.str.138 = private unnamed_addr constant [42 x i8] c"Size increasing %lf %lf %lf per timestep\0A\00", align 1
@.str.139 = private unnamed_addr constant [53 x i8] c"   Rate relative to smallest cell size %lf %lf %lf\0A\0A\00", align 1
@.str.140 = private unnamed_addr constant [28 x i8] c"\0ANumber of timesteps is %d\0A\00", align 1
@.str.141 = private unnamed_addr constant [52 x i8] c"Communicaion/computation stages per timestep is %d\0A\00", align 1
@.str.142 = private unnamed_addr constant [40 x i8] c"Will perform checksums every %d stages\0A\00", align 1
@.str.143 = private unnamed_addr constant [32 x i8] c"Will refine every %d timesteps\0A\00", align 1
@.str.144 = private unnamed_addr constant [38 x i8] c"Will plot results every %d timesteps\0A\00", align 1
@.str.145 = private unnamed_addr constant [23 x i8] c"Will not plot results\0A\00", align 1
@.str.146 = private unnamed_addr constant [49 x i8] c"Calculate on %d variables with %d point stencil\0A\00", align 1
@.str.147 = private unnamed_addr constant [36 x i8] c"Communicate %d variables at a time\0A\00", align 1
@.str.148 = private unnamed_addr constant [47 x i8] c"Error tolorance for variable sums is 10^(-%d)\0A\00", align 1
@.str.149 = private unnamed_addr constant [35 x i8] c"\0ATotal time for test: (sec): %lf\0A\0A\00", align 1
@.str.150 = private unnamed_addr constant [30 x i8] c"\0ANumber of malloc calls: %lf\0A\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"\0AAmount malloced: %lf\0A\00", align 1
@.str.152 = private unnamed_addr constant [47 x i8] c"---------------------------------------------\0A\00", align 1
@.str.153 = private unnamed_addr constant [37 x i8] c"          Computational Performance\0A\00", align 1
@.str.154 = private unnamed_addr constant [48 x i8] c"---------------------------------------------\0A\0A\00", align 1
@.str.155 = private unnamed_addr constant [46 x i8] c"     Time: ave, stddev, min, max (sec): %lf\0A\0A\00", align 1
@.str.156 = private unnamed_addr constant [36 x i8] c"     total GFLOPS:             %lf\0A\00", align 1
@.str.157 = private unnamed_addr constant [37 x i8] c"     Average GFLOPS per rank:  %lf\0A\0A\00", align 1
@.str.158 = private unnamed_addr constant [37 x i8] c"     Total floating point ops: %lf\0A\0A\00", align 1
@.str.159 = private unnamed_addr constant [36 x i8] c"        Adds:                  %lf\0A\00", align 1
@.str.160 = private unnamed_addr constant [37 x i8] c"        Divides:               %lf\0A\0A\00", align 1
@.str.161 = private unnamed_addr constant [37 x i8] c"           Interblock communication\0A\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"\0ATotal communication:\0A\0A\00", align 1
@.str.163 = private unnamed_addr constant [41 x i8] c"\0AX direction communication statistics:\0A\0A\00", align 1
@.str.164 = private unnamed_addr constant [41 x i8] c"\0AY direction communication statistics:\0A\0A\00", align 1
@.str.165 = private unnamed_addr constant [41 x i8] c"\0AZ direction communication statistics:\0A\0A\00", align 1
@.str.166 = private unnamed_addr constant [67 x i8] c"                              average    stddev  minimum  maximum\0A\00", align 1
@.str.167 = private unnamed_addr constant [35 x i8] c"     Total time             : %lf\0A\00", align 1
@.str.168 = private unnamed_addr constant [35 x i8] c"     Exchange same level    : %lf\0A\00", align 1
@.str.169 = private unnamed_addr constant [35 x i8] c"     Exchange diff level    : %lf\0A\00", align 1
@.str.170 = private unnamed_addr constant [35 x i8] c"     Apply BC               : %lf\0A\00", align 1
@.str.171 = private unnamed_addr constant [35 x i8] c"     Faces exchanged same   : %lf\0A\00", align 1
@.str.172 = private unnamed_addr constant [35 x i8] c"     Faces exchanged diff   : %lf\0A\00", align 1
@.str.173 = private unnamed_addr constant [35 x i8] c"     Faces with BC applied  : %lf\0A\00", align 1
@.str.174 = private unnamed_addr constant [48 x i8] c"\0A---------------------------------------------\0A\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"             Gridsum performance\0A\00", align 1
@.str.176 = private unnamed_addr constant [49 x i8] c"        calc: ave, stddev, min, max (sec): %lf\0A\0A\00", align 1
@.str.177 = private unnamed_addr constant [35 x i8] c"     total number:             %d\0A\00", align 1
@total_red = common global i32 0, align 4
@.str.178 = private unnamed_addr constant [36 x i8] c"     number per timestep:      %d\0A\0A\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"               Mesh Refinement\0A\00", align 1
@.str.180 = private unnamed_addr constant [38 x i8] c"     Number of refinement steps: %d\0A\0A\00", align 1
@nrs = common global i32 0, align 4
@.str.181 = private unnamed_addr constant [35 x i8] c"     Total blocks           : %ld\0A\00", align 1
@.str.182 = private unnamed_addr constant [48 x i8] c"     Blocks/timestep ave, min, max : %lf %d %d\0A\00", align 1
@.str.183 = private unnamed_addr constant [48 x i8] c"     Max blocks on a processor at any time: %d\0A\00", align 1
@global_max_b = common global i32 0, align 4
@.str.184 = private unnamed_addr constant [35 x i8] c"     total blocks split     : %lf\0A\00", align 1
@.str.185 = private unnamed_addr constant [36 x i8] c"     total blocks reformed  : %lf\0A\0A\00", align 1
@.str.186 = private unnamed_addr constant [12 x i8] c"     Time:\0A\00", align 1
@.str.187 = private unnamed_addr constant [35 x i8] c"        compare objects     : %lf\0A\00", align 1
@.str.188 = private unnamed_addr constant [35 x i8] c"        mark refine/coarsen : %lf\0A\00", align 1
@.str.189 = private unnamed_addr constant [35 x i8] c"        split blocks        : %lf\0A\00", align 1
@.str.190 = private unnamed_addr constant [35 x i8] c"        total coarsen blocks: %lf\0A\00", align 1
@.str.191 = private unnamed_addr constant [35 x i8] c"        misc time           : %lf\0A\00", align 1
@.str.192 = private unnamed_addr constant [35 x i8] c"        total target active : %lf\0A\00", align 1
@.str.193 = private unnamed_addr constant [35 x i8] c"          reduce blocks     : %lf\0A\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"            decide and comm : %lf\0A\00", align 1
@.str.195 = private unnamed_addr constant [35 x i8] c"            coarsen blocks  : %lf\0A\00", align 1
@.str.196 = private unnamed_addr constant [35 x i8] c"          add blocks        : %lf\0A\00", align 1
@.str.197 = private unnamed_addr constant [35 x i8] c"            split blocks    : %lf\0A\00", align 1
@.str.198 = private unnamed_addr constant [25 x i8] c"                   Plot\0A\00", align 1
@.str.199 = private unnamed_addr constant [31 x i8] c"     Number of plot steps: %d\0A\00", align 1
@nps = common global i32 0, align 4
@.str.200 = private unnamed_addr constant [53 x i8] c"\0A ================== End report ===================\0A\00", align 1
@timer_all = common global double 0.000000e+00, align 8
@timer_comm_dir = common global [3 x double] zeroinitializer, align 16
@timer_comm_same = common global [3 x double] zeroinitializer, align 16
@timer_comm_diff = common global [3 x double] zeroinitializer, align 16
@timer_comm_bc = common global [3 x double] zeroinitializer, align 16
@timer_comm_all = common global double 0.000000e+00, align 8
@timer_calc_all = common global double 0.000000e+00, align 8
@timer_cs_all = common global double 0.000000e+00, align 8
@timer_cs_calc = common global double 0.000000e+00, align 8
@timer_refine_all = common global double 0.000000e+00, align 8
@timer_refine_co = common global double 0.000000e+00, align 8
@timer_refine_mr = common global double 0.000000e+00, align 8
@timer_refine_cc = common global double 0.000000e+00, align 8
@timer_refine_sb = common global double 0.000000e+00, align 8
@timer_cb_all = common global double 0.000000e+00, align 8
@timer_target_all = common global double 0.000000e+00, align 8
@timer_target_rb = common global double 0.000000e+00, align 8
@timer_target_dc = common global double 0.000000e+00, align 8
@timer_target_cb = common global double 0.000000e+00, align 8
@timer_target_ab = common global double 0.000000e+00, align 8
@timer_target_da = common global double 0.000000e+00, align 8
@timer_target_sb = common global double 0.000000e+00, align 8
@timer_plot = common global double 0.000000e+00, align 8
@counter_bc = common global [3 x i32] zeroinitializer, align 4
@counter_same = common global [3 x i32] zeroinitializer, align 4
@counter_diff = common global [3 x i32] zeroinitializer, align 4
@num_refined = common global i32 0, align 4
@num_reformed = common global i32 0, align 4
@counter_malloc = common global i32 0, align 4
@size_malloc = common global double 0.000000e+00, align 8
@counter_malloc_init = common global i32 0, align 4
@size_malloc_init = common global double 0.000000e+00, align 8
@blocks = common global %struct.block* null, align 8
@parents = common global %struct.parent* null, align 8
@sorted_list = common global %struct.sorted_block* null, align 8
@sorted_index = common global i32* null, align 8
@reorder = common global i32 0, align 4
@npx = common global i32 0, align 4
@npy = common global i32 0, align 4
@npz = common global i32 0, align 4
@inbalance = common global i32 0, align 4
@report_diffusion = common global i32 0, align 4
@lb_opt = common global i32 0, align 4
@nonblocking = common global i32 0, align 4
@max_num_parents = common global i32 0, align 4
@num_parents = common global i32 0, align 4
@max_active_parent = common global i32 0, align 4
@cur_max_level = common global i32 0, align 4
@num_blocks = common global i32* null, align 8
@block_start = common global i32* null, align 8
@num_active = common global i32 0, align 4
@max_active_block = common global i32 0, align 4
@global_active = common global i32 0, align 4
@x_block_half = common global i32 0, align 4
@y_block_half = common global i32 0, align 4
@z_block_half = common global i32 0, align 4
@tol = common global double 0.000000e+00, align 8
@grid_sum = common global double* null, align 8
@p8 = common global i32* null, align 8
@p2 = common global i32* null, align 8
@max_mesh_size = common global i32 0, align 4
@from = common global i32* null, align 8
@to = common global i32* null, align 8
@msg_len = common global [3 x [4 x i32]] zeroinitializer, align 16
@local_max_b = common global i32 0, align 4
@stddev = common global [128 x double] zeroinitializer, align 16
@minimum = common global [128 x double] zeroinitializer, align 16
@maximum = common global [128 x double] zeroinitializer, align 16

; Function Attrs: noinline nounwind uwtable
define void @profile() #0 {
  %1 = alloca i32, align 4
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca %struct.object*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8** %8, align 8
  call void @calculate_results()
  %10 = load i64, i64* @total_blocks, align 8
  %11 = sitofp i64 %10 to double
  %12 = load i32, i32* @x_block_size, align 4
  %13 = sitofp i32 %12 to double
  %14 = fmul double %11, %13
  %15 = load i32, i32* @y_block_size, align 4
  %16 = sitofp i32 %15 to double
  %17 = fmul double %14, %16
  %18 = load i32, i32* @z_block_size, align 4
  %19 = sitofp i32 %18 to double
  %20 = fmul double %17, %19
  store double %20, double* %6, align 8
  %21 = load i32, i32* @stencil, align 4
  %22 = icmp eq i32 %21, 7
  br i1 %22, label %23, label %26

; <label>:23:                                     ; preds = %0
  %24 = load double, double* %6, align 8
  %25 = fmul double 6.000000e+00, %24
  store double %25, double* %5, align 8
  br label %29

; <label>:26:                                     ; preds = %0
  %27 = load double, double* %6, align 8
  %28 = fmul double 2.600000e+01, %27
  store double %28, double* %5, align 8
  br label %29

; <label>:29:                                     ; preds = %26, %23
  %30 = load double, double* %6, align 8
  %31 = load double, double* %5, align 8
  %32 = fadd double %30, %31
  store double %32, double* %4, align 8
  %33 = load double, double* %4, align 8
  %34 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %35 = fmul double %34, 1.024000e+03
  %36 = fmul double %35, 1.024000e+03
  %37 = fmul double %36, 1.024000e+03
  %38 = fdiv double %33, %37
  store double %38, double* %2, align 8
  %39 = load double, double* %2, align 8
  %40 = load i32, i32* @num_pes, align 4
  %41 = sitofp i32 %40 to double
  %42 = fdiv double %39, %41
  store double %42, double* %3, align 8
  %43 = load i32, i32* @my_pe, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %1572, label %45

; <label>:45:                                     ; preds = %29
  %46 = load i32, i32* @report_perf, align 4
  %47 = and i32 %46, 1
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %386

; <label>:49:                                     ; preds = %45
  %50 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  store %struct._IO_FILE* %50, %struct._IO_FILE** %9, align 8
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0))
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %54 = load i8*, i8** %8, align 8
  %55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), i8* %54)
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %57 = load i32, i32* @num_pes, align 4
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i32 %57)
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %60 = load i32, i32* @init_block_x, align 4
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0), i32 %60)
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %63 = load i32, i32* @init_block_y, align 4
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0), i32 %63)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %66 = load i32, i32* @init_block_z, align 4
  %67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i32 0, i32 0), i32 %66)
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %69 = load i32, i32* @x_block_size, align 4
  %70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0), i32 %69)
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %72 = load i32, i32* @y_block_size, align 4
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i32 0, i32 0), i32 %72)
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %75 = load i32, i32* @z_block_size, align 4
  %76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i32 0, i32 0), i32 %75)
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %78 = load i32, i32* @permute, align 4
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i32 %78)
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %81 = load i32, i32* @max_num_blocks, align 4
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 %81)
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %84 = load i32, i32* @code, align 4
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i32 %84)
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %87 = load i32, i32* @num_refine, align 4
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0), i32 %87)
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %90 = load i32, i32* @block_change, align 4
  %91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i32 0, i32 0), i32 %90)
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %93 = load i32, i32* @refine_ghost, align 4
  %94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i32 0, i32 0), i32 %93)
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %96 = load i32, i32* @uniform_refine, align 4
  %97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i32 0, i32 0), i32 %96)
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %99 = load i32, i32* @num_objects, align 4
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0), i32 %99)
  store i32 0, i32* %1, align 4
  br label %101

; <label>:101:                                    ; preds = %206, %49
  %102 = load i32, i32* %1, align 4
  %103 = load i32, i32* @num_objects, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %209

; <label>:105:                                    ; preds = %101
  %106 = load %struct.object*, %struct.object** @objects, align 8
  %107 = load i32, i32* %1, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %struct.object, %struct.object* %106, i64 %108
  store %struct.object* %109, %struct.object** %7, align 8
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %111 = load i32, i32* %1, align 4
  %112 = load %struct.object*, %struct.object** %7, align 8
  %113 = getelementptr inbounds %struct.object, %struct.object* %112, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i32 %111, i32 %114)
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %117 = load i32, i32* %1, align 4
  %118 = load %struct.object*, %struct.object** %7, align 8
  %119 = getelementptr inbounds %struct.object, %struct.object* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i32 %117, i32 %120)
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %123 = load i32, i32* %1, align 4
  %124 = load %struct.object*, %struct.object** %7, align 8
  %125 = getelementptr inbounds %struct.object, %struct.object* %124, i32 0, i32 2
  %126 = getelementptr inbounds [3 x double], [3 x double]* %125, i64 0, i64 0
  %127 = load double, double* %126, align 8
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), i32 %123, double %127)
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %130 = load i32, i32* %1, align 4
  %131 = load %struct.object*, %struct.object** %7, align 8
  %132 = getelementptr inbounds %struct.object, %struct.object* %131, i32 0, i32 2
  %133 = getelementptr inbounds [3 x double], [3 x double]* %132, i64 0, i64 1
  %134 = load double, double* %133, align 8
  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i32 %130, double %134)
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %137 = load i32, i32* %1, align 4
  %138 = load %struct.object*, %struct.object** %7, align 8
  %139 = getelementptr inbounds %struct.object, %struct.object* %138, i32 0, i32 2
  %140 = getelementptr inbounds [3 x double], [3 x double]* %139, i64 0, i64 2
  %141 = load double, double* %140, align 8
  %142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i32 %137, double %141)
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %144 = load i32, i32* %1, align 4
  %145 = load %struct.object*, %struct.object** %7, align 8
  %146 = getelementptr inbounds %struct.object, %struct.object* %145, i32 0, i32 4
  %147 = getelementptr inbounds [3 x double], [3 x double]* %146, i64 0, i64 0
  %148 = load double, double* %147, align 8
  %149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i32 0, i32 0), i32 %144, double %148)
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %151 = load i32, i32* %1, align 4
  %152 = load %struct.object*, %struct.object** %7, align 8
  %153 = getelementptr inbounds %struct.object, %struct.object* %152, i32 0, i32 4
  %154 = getelementptr inbounds [3 x double], [3 x double]* %153, i64 0, i64 1
  %155 = load double, double* %154, align 8
  %156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i32 0, i32 0), i32 %151, double %155)
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %158 = load i32, i32* %1, align 4
  %159 = load %struct.object*, %struct.object** %7, align 8
  %160 = getelementptr inbounds %struct.object, %struct.object* %159, i32 0, i32 4
  %161 = getelementptr inbounds [3 x double], [3 x double]* %160, i64 0, i64 2
  %162 = load double, double* %161, align 8
  %163 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %157, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i32 0, i32 0), i32 %158, double %162)
  %164 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %165 = load i32, i32* %1, align 4
  %166 = load %struct.object*, %struct.object** %7, align 8
  %167 = getelementptr inbounds %struct.object, %struct.object* %166, i32 0, i32 6
  %168 = getelementptr inbounds [3 x double], [3 x double]* %167, i64 0, i64 0
  %169 = load double, double* %168, align 8
  %170 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %164, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i32 %165, double %169)
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %172 = load i32, i32* %1, align 4
  %173 = load %struct.object*, %struct.object** %7, align 8
  %174 = getelementptr inbounds %struct.object, %struct.object* %173, i32 0, i32 6
  %175 = getelementptr inbounds [3 x double], [3 x double]* %174, i64 0, i64 1
  %176 = load double, double* %175, align 8
  %177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0), i32 %172, double %176)
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %179 = load i32, i32* %1, align 4
  %180 = load %struct.object*, %struct.object** %7, align 8
  %181 = getelementptr inbounds %struct.object, %struct.object* %180, i32 0, i32 6
  %182 = getelementptr inbounds [3 x double], [3 x double]* %181, i64 0, i64 2
  %183 = load double, double* %182, align 8
  %184 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), i32 %179, double %183)
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %186 = load i32, i32* %1, align 4
  %187 = load %struct.object*, %struct.object** %7, align 8
  %188 = getelementptr inbounds %struct.object, %struct.object* %187, i32 0, i32 8
  %189 = getelementptr inbounds [3 x double], [3 x double]* %188, i64 0, i64 0
  %190 = load double, double* %189, align 8
  %191 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0), i32 %186, double %190)
  %192 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %193 = load i32, i32* %1, align 4
  %194 = load %struct.object*, %struct.object** %7, align 8
  %195 = getelementptr inbounds %struct.object, %struct.object* %194, i32 0, i32 8
  %196 = getelementptr inbounds [3 x double], [3 x double]* %195, i64 0, i64 1
  %197 = load double, double* %196, align 8
  %198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %192, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i32 %193, double %197)
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %200 = load i32, i32* %1, align 4
  %201 = load %struct.object*, %struct.object** %7, align 8
  %202 = getelementptr inbounds %struct.object, %struct.object* %201, i32 0, i32 8
  %203 = getelementptr inbounds [3 x double], [3 x double]* %202, i64 0, i64 2
  %204 = load double, double* %203, align 8
  %205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %199, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i32 0, i32 0), i32 %200, double %204)
  br label %206

; <label>:206:                                    ; preds = %105
  %207 = load i32, i32* %1, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %1, align 4
  br label %101

; <label>:209:                                    ; preds = %101
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %211 = load i32, i32* @num_tsteps, align 4
  %212 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %210, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i32 %211)
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %214 = load i32, i32* @stages_per_ts, align 4
  %215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %213, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i32 0, i32 0), i32 %214)
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %217 = load i32, i32* @checksum_freq, align 4
  %218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %216, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i32 0, i32 0), i32 %217)
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %220 = load i32, i32* @refine_freq, align 4
  %221 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %219, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i32 %220)
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %223 = load i32, i32* @plot_freq, align 4
  %224 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %222, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 %223)
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %226 = load i32, i32* @num_vars, align 4
  %227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %225, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i32 %226)
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %229 = load i32, i32* @stencil, align 4
  %230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %228, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i32 %229)
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %232 = load i32, i32* @comm_vars, align 4
  %233 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %231, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i32 %232)
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %235 = load i32, i32* @error_tol, align 4
  %236 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %234, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i32 %235)
  %237 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %238 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 0), align 16
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %237, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), double %238)
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %241 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 111), align 8
  %242 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %240, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0), double %241)
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %244 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %245 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), double %244)
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %247 = load double, double* %2, align 8
  %248 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %246, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0), double %247)
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %250 = load double, double* %3, align 8
  %251 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %249, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0), double %250)
  %252 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %253 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 37), align 8
  %254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %252, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i32 0, i32 0), double %253)
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %256 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 5), align 8
  %257 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %255, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49, i32 0, i32 0), double %256)
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %259 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 6), align 16
  %260 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %258, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i32 0, i32 0), double %259)
  %261 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %262 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 7), align 8
  %263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %261, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i32 0, i32 0), double %262)
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %265 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 75), align 8
  %266 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %264, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52, i32 0, i32 0), double %265)
  %267 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %268 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 76), align 16
  %269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %267, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), double %268)
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %271 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 74), align 16
  %272 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %270, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.54, i32 0, i32 0), double %271)
  %273 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %274 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 10), align 16
  %275 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %273, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), double %274)
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %277 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 14), align 16
  %278 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %276, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i32 0, i32 0), double %277)
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %280 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 15), align 8
  %281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %279, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i32 0, i32 0), double %280)
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %283 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 16), align 16
  %284 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i32 0, i32 0), double %283)
  %285 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %286 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 84), align 16
  %287 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %285, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59, i32 0, i32 0), double %286)
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %289 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 85), align 8
  %290 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %288, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i32 0, i32 0), double %289)
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %292 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 83), align 8
  %293 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %291, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61, i32 0, i32 0), double %292)
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %295 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 19), align 8
  %296 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %294, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0), double %295)
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %298 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 23), align 8
  %299 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i32 0, i32 0), double %298)
  %300 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %301 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 24), align 16
  %302 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %300, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i32 0, i32 0), double %301)
  %303 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %304 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 25), align 8
  %305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %303, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i32 0, i32 0), double %304)
  %306 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %307 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 93), align 8
  %308 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %306, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), double %307)
  %309 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %310 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 94), align 16
  %311 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %309, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), double %310)
  %312 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %313 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 92), align 16
  %314 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %312, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i32 0, i32 0), double %313)
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %316 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 28), align 16
  %317 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %315, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), double %316)
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %319 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 32), align 16
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %318, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i32 0, i32 0), double %319)
  %321 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %322 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 33), align 8
  %323 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %321, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i32 0, i32 0), double %322)
  %324 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %325 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 34), align 16
  %326 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %324, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i32 0, i32 0), double %325)
  %327 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %328 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 102), align 16
  %329 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %327, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.73, i32 0, i32 0), double %328)
  %330 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %331 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 103), align 8
  %332 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %330, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.74, i32 0, i32 0), double %331)
  %333 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %334 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 101), align 8
  %335 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %333, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i32 0, i32 0), double %334)
  %336 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %337 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 39), align 8
  %338 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %336, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), double %337)
  %339 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %340 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 41), align 8
  %341 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %339, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.77, i32 0, i32 0), double %340)
  %342 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %343 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 42), align 16
  %344 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %342, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i32 0, i32 0), double %343)
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %346 = load i64, i64* @total_blocks, align 8
  %347 = sitofp i64 %346 to double
  %348 = load i32, i32* @num_tsteps, align 4
  %349 = load i32, i32* @stages_per_ts, align 4
  %350 = mul nsw i32 %348, %349
  %351 = sitofp i32 %350 to double
  %352 = fdiv double %347, %351
  %353 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %345, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i32 0, i32 0), double %352)
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %355 = load i32, i32* @nb_min, align 4
  %356 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %354, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80, i32 0, i32 0), i32 %355)
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %358 = load i32, i32* @nb_max, align 4
  %359 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.81, i32 0, i32 0), i32 %358)
  %360 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %361 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 104), align 16
  %362 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i32 0, i32 0), double %361)
  %363 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %364 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 105), align 8
  %365 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %363, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i32 0, i32 0), double %364)
  %366 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %367 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 43), align 8
  %368 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %366, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.84, i32 0, i32 0), double %367)
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %370 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 44), align 16
  %371 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %369, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.85, i32 0, i32 0), double %370)
  %372 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %373 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 46), align 16
  %374 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %372, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86, i32 0, i32 0), double %373)
  %375 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %376 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 47), align 8
  %377 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %375, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i32 0, i32 0), double %376)
  %378 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %379 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 45), align 8
  %380 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %378, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i32 0, i32 0), double %379)
  %381 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %382 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 67), align 8
  %383 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %381, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i32 0), double %382)
  %384 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %385 = call i32 @fclose(%struct._IO_FILE* %384)
  br label %386

; <label>:386:                                    ; preds = %209, %45
  %387 = load i32, i32* @report_perf, align 4
  %388 = and i32 %387, 2
  %389 = icmp ne i32 %388, 0
  br i1 %389, label %390, label %1129

; <label>:390:                                    ; preds = %386
  %391 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  store %struct._IO_FILE* %391, %struct._IO_FILE** %9, align 8
  %392 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %393 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %392, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.91, i32 0, i32 0))
  %394 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %395 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %394, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92, i32 0, i32 0))
  %396 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %397 = load i8*, i8** %8, align 8
  %398 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %396, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i32 0, i32 0), i8* %397)
  %399 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %400 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %399, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i32 0, i32 0))
  %401 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %402 = load i32, i32* @init_block_x, align 4
  %403 = load i32, i32* @init_block_y, align 4
  %404 = load i32, i32* @init_block_z, align 4
  %405 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %401, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i32 0, i32 0), i32 %402, i32 %403, i32 %404)
  %406 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %407 = load i32, i32* @x_block_size, align 4
  %408 = load i32, i32* @y_block_size, align 4
  %409 = load i32, i32* @z_block_size, align 4
  %410 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %406, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i32 %407, i32 %408, i32 %409)
  %411 = load i32, i32* @permute, align 4
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %413, label %416

; <label>:413:                                    ; preds = %390
  %414 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %415 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %414, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i32 0, i32 0))
  br label %416

; <label>:416:                                    ; preds = %413, %390
  %417 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %418 = load i32, i32* @max_num_blocks, align 4
  %419 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %417, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i32 0, i32 0), i32 %418)
  %420 = load i32, i32* @target_active, align 4
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %422, label %426

; <label>:422:                                    ; preds = %416
  %423 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %424 = load i32, i32* @target_active, align 4
  %425 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %423, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i32 0, i32 0), i32 %424)
  br label %426

; <label>:426:                                    ; preds = %422, %416
  %427 = load i32, i32* @target_max, align 4
  %428 = icmp ne i32 %427, 0
  br i1 %428, label %429, label %433

; <label>:429:                                    ; preds = %426
  %430 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %431 = load i32, i32* @target_max, align 4
  %432 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %430, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i32 0, i32 0), i32 %431)
  br label %433

; <label>:433:                                    ; preds = %429, %426
  %434 = load i32, i32* @target_min, align 4
  %435 = icmp ne i32 %434, 0
  br i1 %435, label %436, label %440

; <label>:436:                                    ; preds = %433
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %438 = load i32, i32* @target_min, align 4
  %439 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %437, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.101, i32 0, i32 0), i32 %438)
  br label %440

; <label>:440:                                    ; preds = %436, %433
  %441 = load i32, i32* @code, align 4
  %442 = icmp ne i32 %441, 0
  br i1 %442, label %443, label %447

; <label>:443:                                    ; preds = %440
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %445 = load i32, i32* @code, align 4
  %446 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %444, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), i32 %445)
  br label %447

; <label>:447:                                    ; preds = %443, %440
  %448 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %449 = load i32, i32* @num_refine, align 4
  %450 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %448, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i32 0, i32 0), i32 %449)
  %451 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %452 = load i32, i32* @block_change, align 4
  %453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %451, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.104, i32 0, i32 0), i32 %452)
  %454 = load i32, i32* @refine_ghost, align 4
  %455 = icmp ne i32 %454, 0
  br i1 %455, label %456, label %459

; <label>:456:                                    ; preds = %447
  %457 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %458 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %457, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.105, i32 0, i32 0))
  br label %459

; <label>:459:                                    ; preds = %456, %447
  %460 = load i32, i32* @uniform_refine, align 4
  %461 = icmp ne i32 %460, 0
  br i1 %461, label %462, label %465

; <label>:462:                                    ; preds = %459
  %463 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %464 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %463, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i32 0, i32 0))
  br label %854

; <label>:465:                                    ; preds = %459
  %466 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %467 = load i32, i32* @num_objects, align 4
  %468 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %466, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107, i32 0, i32 0), i32 %467)
  store i32 0, i32* %1, align 4
  br label %469

; <label>:469:                                    ; preds = %850, %465
  %470 = load i32, i32* %1, align 4
  %471 = load i32, i32* @num_objects, align 4
  %472 = icmp slt i32 %470, %471
  br i1 %472, label %473, label %853

; <label>:473:                                    ; preds = %469
  %474 = load %struct.object*, %struct.object** @objects, align 8
  %475 = load i32, i32* %1, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds %struct.object, %struct.object* %474, i64 %476
  store %struct.object* %477, %struct.object** %7, align 8
  %478 = load %struct.object*, %struct.object** %7, align 8
  %479 = getelementptr inbounds %struct.object, %struct.object* %478, i32 0, i32 0
  %480 = load i32, i32* %479, align 8
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %486

; <label>:482:                                    ; preds = %473
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %484 = load i32, i32* %1, align 4
  %485 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %483, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i32 0, i32 0), i32 %484)
  br label %696

; <label>:486:                                    ; preds = %473
  %487 = load %struct.object*, %struct.object** %7, align 8
  %488 = getelementptr inbounds %struct.object, %struct.object* %487, i32 0, i32 0
  %489 = load i32, i32* %488, align 8
  %490 = icmp eq i32 %489, 1
  br i1 %490, label %491, label %495

; <label>:491:                                    ; preds = %486
  %492 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %493 = load i32, i32* %1, align 4
  %494 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %492, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i32 0, i32 0), i32 %493)
  br label %695

; <label>:495:                                    ; preds = %486
  %496 = load %struct.object*, %struct.object** %7, align 8
  %497 = getelementptr inbounds %struct.object, %struct.object* %496, i32 0, i32 0
  %498 = load i32, i32* %497, align 8
  %499 = icmp eq i32 %498, 2
  br i1 %499, label %500, label %504

; <label>:500:                                    ; preds = %495
  %501 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %502 = load i32, i32* %1, align 4
  %503 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %501, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.110, i32 0, i32 0), i32 %502)
  br label %694

; <label>:504:                                    ; preds = %495
  %505 = load %struct.object*, %struct.object** %7, align 8
  %506 = getelementptr inbounds %struct.object, %struct.object* %505, i32 0, i32 0
  %507 = load i32, i32* %506, align 8
  %508 = icmp eq i32 %507, 3
  br i1 %508, label %509, label %513

; <label>:509:                                    ; preds = %504
  %510 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %511 = load i32, i32* %1, align 4
  %512 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %510, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111, i32 0, i32 0), i32 %511)
  br label %693

; <label>:513:                                    ; preds = %504
  %514 = load %struct.object*, %struct.object** %7, align 8
  %515 = getelementptr inbounds %struct.object, %struct.object* %514, i32 0, i32 0
  %516 = load i32, i32* %515, align 8
  %517 = icmp eq i32 %516, 4
  br i1 %517, label %518, label %522

; <label>:518:                                    ; preds = %513
  %519 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %520 = load i32, i32* %1, align 4
  %521 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %519, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i32 0, i32 0), i32 %520)
  br label %692

; <label>:522:                                    ; preds = %513
  %523 = load %struct.object*, %struct.object** %7, align 8
  %524 = getelementptr inbounds %struct.object, %struct.object* %523, i32 0, i32 0
  %525 = load i32, i32* %524, align 8
  %526 = icmp eq i32 %525, 5
  br i1 %526, label %527, label %531

; <label>:527:                                    ; preds = %522
  %528 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %529 = load i32, i32* %1, align 4
  %530 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %528, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i32 0, i32 0), i32 %529)
  br label %691

; <label>:531:                                    ; preds = %522
  %532 = load %struct.object*, %struct.object** %7, align 8
  %533 = getelementptr inbounds %struct.object, %struct.object* %532, i32 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = icmp eq i32 %534, 6
  br i1 %535, label %536, label %540

; <label>:536:                                    ; preds = %531
  %537 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %538 = load i32, i32* %1, align 4
  %539 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %537, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i32 0, i32 0), i32 %538)
  br label %690

; <label>:540:                                    ; preds = %531
  %541 = load %struct.object*, %struct.object** %7, align 8
  %542 = getelementptr inbounds %struct.object, %struct.object* %541, i32 0, i32 0
  %543 = load i32, i32* %542, align 8
  %544 = icmp eq i32 %543, 7
  br i1 %544, label %545, label %549

; <label>:545:                                    ; preds = %540
  %546 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %547 = load i32, i32* %1, align 4
  %548 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %546, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.115, i32 0, i32 0), i32 %547)
  br label %689

; <label>:549:                                    ; preds = %540
  %550 = load %struct.object*, %struct.object** %7, align 8
  %551 = getelementptr inbounds %struct.object, %struct.object* %550, i32 0, i32 0
  %552 = load i32, i32* %551, align 8
  %553 = icmp eq i32 %552, 8
  br i1 %553, label %554, label %558

; <label>:554:                                    ; preds = %549
  %555 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %556 = load i32, i32* %1, align 4
  %557 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %555, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i32 0, i32 0), i32 %556)
  br label %688

; <label>:558:                                    ; preds = %549
  %559 = load %struct.object*, %struct.object** %7, align 8
  %560 = getelementptr inbounds %struct.object, %struct.object* %559, i32 0, i32 0
  %561 = load i32, i32* %560, align 8
  %562 = icmp eq i32 %561, 9
  br i1 %562, label %563, label %567

; <label>:563:                                    ; preds = %558
  %564 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %565 = load i32, i32* %1, align 4
  %566 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %564, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117, i32 0, i32 0), i32 %565)
  br label %687

; <label>:567:                                    ; preds = %558
  %568 = load %struct.object*, %struct.object** %7, align 8
  %569 = getelementptr inbounds %struct.object, %struct.object* %568, i32 0, i32 0
  %570 = load i32, i32* %569, align 8
  %571 = icmp eq i32 %570, 10
  br i1 %571, label %572, label %576

; <label>:572:                                    ; preds = %567
  %573 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %574 = load i32, i32* %1, align 4
  %575 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %573, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i32 0, i32 0), i32 %574)
  br label %686

; <label>:576:                                    ; preds = %567
  %577 = load %struct.object*, %struct.object** %7, align 8
  %578 = getelementptr inbounds %struct.object, %struct.object* %577, i32 0, i32 0
  %579 = load i32, i32* %578, align 8
  %580 = icmp eq i32 %579, 11
  br i1 %580, label %581, label %585

; <label>:581:                                    ; preds = %576
  %582 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %583 = load i32, i32* %1, align 4
  %584 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %582, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i32 0, i32 0), i32 %583)
  br label %685

; <label>:585:                                    ; preds = %576
  %586 = load %struct.object*, %struct.object** %7, align 8
  %587 = getelementptr inbounds %struct.object, %struct.object* %586, i32 0, i32 0
  %588 = load i32, i32* %587, align 8
  %589 = icmp eq i32 %588, 12
  br i1 %589, label %590, label %594

; <label>:590:                                    ; preds = %585
  %591 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %592 = load i32, i32* %1, align 4
  %593 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %591, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i32 0, i32 0), i32 %592)
  br label %684

; <label>:594:                                    ; preds = %585
  %595 = load %struct.object*, %struct.object** %7, align 8
  %596 = getelementptr inbounds %struct.object, %struct.object* %595, i32 0, i32 0
  %597 = load i32, i32* %596, align 8
  %598 = icmp eq i32 %597, 13
  br i1 %598, label %599, label %603

; <label>:599:                                    ; preds = %594
  %600 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %601 = load i32, i32* %1, align 4
  %602 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %600, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i32 0, i32 0), i32 %601)
  br label %683

; <label>:603:                                    ; preds = %594
  %604 = load %struct.object*, %struct.object** %7, align 8
  %605 = getelementptr inbounds %struct.object, %struct.object* %604, i32 0, i32 0
  %606 = load i32, i32* %605, align 8
  %607 = icmp eq i32 %606, 14
  br i1 %607, label %608, label %612

; <label>:608:                                    ; preds = %603
  %609 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %610 = load i32, i32* %1, align 4
  %611 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %609, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i32 0, i32 0), i32 %610)
  br label %682

; <label>:612:                                    ; preds = %603
  %613 = load %struct.object*, %struct.object** %7, align 8
  %614 = getelementptr inbounds %struct.object, %struct.object* %613, i32 0, i32 0
  %615 = load i32, i32* %614, align 8
  %616 = icmp eq i32 %615, 15
  br i1 %616, label %617, label %621

; <label>:617:                                    ; preds = %612
  %618 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %619 = load i32, i32* %1, align 4
  %620 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %618, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i32 0, i32 0), i32 %619)
  br label %681

; <label>:621:                                    ; preds = %612
  %622 = load %struct.object*, %struct.object** %7, align 8
  %623 = getelementptr inbounds %struct.object, %struct.object* %622, i32 0, i32 0
  %624 = load i32, i32* %623, align 8
  %625 = icmp eq i32 %624, 20
  br i1 %625, label %626, label %630

; <label>:626:                                    ; preds = %621
  %627 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %628 = load i32, i32* %1, align 4
  %629 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %627, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i32 0, i32 0), i32 %628)
  br label %680

; <label>:630:                                    ; preds = %621
  %631 = load %struct.object*, %struct.object** %7, align 8
  %632 = getelementptr inbounds %struct.object, %struct.object* %631, i32 0, i32 0
  %633 = load i32, i32* %632, align 8
  %634 = icmp eq i32 %633, 21
  br i1 %634, label %635, label %639

; <label>:635:                                    ; preds = %630
  %636 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %637 = load i32, i32* %1, align 4
  %638 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %636, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.125, i32 0, i32 0), i32 %637)
  br label %679

; <label>:639:                                    ; preds = %630
  %640 = load %struct.object*, %struct.object** %7, align 8
  %641 = getelementptr inbounds %struct.object, %struct.object* %640, i32 0, i32 0
  %642 = load i32, i32* %641, align 8
  %643 = icmp eq i32 %642, 22
  br i1 %643, label %644, label %648

; <label>:644:                                    ; preds = %639
  %645 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %646 = load i32, i32* %1, align 4
  %647 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %645, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.126, i32 0, i32 0), i32 %646)
  br label %678

; <label>:648:                                    ; preds = %639
  %649 = load %struct.object*, %struct.object** %7, align 8
  %650 = getelementptr inbounds %struct.object, %struct.object* %649, i32 0, i32 0
  %651 = load i32, i32* %650, align 8
  %652 = icmp eq i32 %651, 23
  br i1 %652, label %653, label %657

; <label>:653:                                    ; preds = %648
  %654 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %655 = load i32, i32* %1, align 4
  %656 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %654, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i32 0, i32 0), i32 %655)
  br label %677

; <label>:657:                                    ; preds = %648
  %658 = load %struct.object*, %struct.object** %7, align 8
  %659 = getelementptr inbounds %struct.object, %struct.object* %658, i32 0, i32 0
  %660 = load i32, i32* %659, align 8
  %661 = icmp eq i32 %660, 24
  br i1 %661, label %662, label %666

; <label>:662:                                    ; preds = %657
  %663 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %664 = load i32, i32* %1, align 4
  %665 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %663, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i32 0, i32 0), i32 %664)
  br label %676

; <label>:666:                                    ; preds = %657
  %667 = load %struct.object*, %struct.object** %7, align 8
  %668 = getelementptr inbounds %struct.object, %struct.object* %667, i32 0, i32 0
  %669 = load i32, i32* %668, align 8
  %670 = icmp eq i32 %669, 25
  br i1 %670, label %671, label %675

; <label>:671:                                    ; preds = %666
  %672 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %673 = load i32, i32* %1, align 4
  %674 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %672, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129, i32 0, i32 0), i32 %673)
  br label %675

; <label>:675:                                    ; preds = %671, %666
  br label %676

; <label>:676:                                    ; preds = %675, %662
  br label %677

; <label>:677:                                    ; preds = %676, %653
  br label %678

; <label>:678:                                    ; preds = %677, %644
  br label %679

; <label>:679:                                    ; preds = %678, %635
  br label %680

; <label>:680:                                    ; preds = %679, %626
  br label %681

; <label>:681:                                    ; preds = %680, %617
  br label %682

; <label>:682:                                    ; preds = %681, %608
  br label %683

; <label>:683:                                    ; preds = %682, %599
  br label %684

; <label>:684:                                    ; preds = %683, %590
  br label %685

; <label>:685:                                    ; preds = %684, %581
  br label %686

; <label>:686:                                    ; preds = %685, %572
  br label %687

; <label>:687:                                    ; preds = %686, %563
  br label %688

; <label>:688:                                    ; preds = %687, %554
  br label %689

; <label>:689:                                    ; preds = %688, %545
  br label %690

; <label>:690:                                    ; preds = %689, %536
  br label %691

; <label>:691:                                    ; preds = %690, %527
  br label %692

; <label>:692:                                    ; preds = %691, %518
  br label %693

; <label>:693:                                    ; preds = %692, %509
  br label %694

; <label>:694:                                    ; preds = %693, %500
  br label %695

; <label>:695:                                    ; preds = %694, %491
  br label %696

; <label>:696:                                    ; preds = %695, %482
  %697 = load %struct.object*, %struct.object** %7, align 8
  %698 = getelementptr inbounds %struct.object, %struct.object* %697, i32 0, i32 1
  %699 = load i32, i32* %698, align 4
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %704

; <label>:701:                                    ; preds = %696
  %702 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %703 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %702, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i32 0, i32 0))
  br label %707

; <label>:704:                                    ; preds = %696
  %705 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %706 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %705, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.131, i32 0, i32 0))
  br label %707

; <label>:707:                                    ; preds = %704, %701
  %708 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %709 = load %struct.object*, %struct.object** %7, align 8
  %710 = getelementptr inbounds %struct.object, %struct.object* %709, i32 0, i32 3
  %711 = getelementptr inbounds [3 x double], [3 x double]* %710, i64 0, i64 0
  %712 = load double, double* %711, align 8
  %713 = load %struct.object*, %struct.object** %7, align 8
  %714 = getelementptr inbounds %struct.object, %struct.object* %713, i32 0, i32 3
  %715 = getelementptr inbounds [3 x double], [3 x double]* %714, i64 0, i64 1
  %716 = load double, double* %715, align 8
  %717 = load %struct.object*, %struct.object** %7, align 8
  %718 = getelementptr inbounds %struct.object, %struct.object* %717, i32 0, i32 3
  %719 = getelementptr inbounds [3 x double], [3 x double]* %718, i64 0, i64 2
  %720 = load double, double* %719, align 8
  %721 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %708, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i32 0, i32 0), double %712, double %716, double %720)
  %722 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %723 = load %struct.object*, %struct.object** %7, align 8
  %724 = getelementptr inbounds %struct.object, %struct.object* %723, i32 0, i32 2
  %725 = getelementptr inbounds [3 x double], [3 x double]* %724, i64 0, i64 0
  %726 = load double, double* %725, align 8
  %727 = load %struct.object*, %struct.object** %7, align 8
  %728 = getelementptr inbounds %struct.object, %struct.object* %727, i32 0, i32 2
  %729 = getelementptr inbounds [3 x double], [3 x double]* %728, i64 0, i64 1
  %730 = load double, double* %729, align 8
  %731 = load %struct.object*, %struct.object** %7, align 8
  %732 = getelementptr inbounds %struct.object, %struct.object* %731, i32 0, i32 2
  %733 = getelementptr inbounds [3 x double], [3 x double]* %732, i64 0, i64 2
  %734 = load double, double* %733, align 8
  %735 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %722, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i32 0, i32 0), double %726, double %730, double %734)
  %736 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %737 = load %struct.object*, %struct.object** %7, align 8
  %738 = getelementptr inbounds %struct.object, %struct.object* %737, i32 0, i32 5
  %739 = getelementptr inbounds [3 x double], [3 x double]* %738, i64 0, i64 0
  %740 = load double, double* %739, align 8
  %741 = load %struct.object*, %struct.object** %7, align 8
  %742 = getelementptr inbounds %struct.object, %struct.object* %741, i32 0, i32 5
  %743 = getelementptr inbounds [3 x double], [3 x double]* %742, i64 0, i64 1
  %744 = load double, double* %743, align 8
  %745 = load %struct.object*, %struct.object** %7, align 8
  %746 = getelementptr inbounds %struct.object, %struct.object* %745, i32 0, i32 5
  %747 = getelementptr inbounds [3 x double], [3 x double]* %746, i64 0, i64 2
  %748 = load double, double* %747, align 8
  %749 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %736, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i32 0, i32 0), double %740, double %744, double %748)
  %750 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %751 = load %struct.object*, %struct.object** %7, align 8
  %752 = getelementptr inbounds %struct.object, %struct.object* %751, i32 0, i32 5
  %753 = getelementptr inbounds [3 x double], [3 x double]* %752, i64 0, i64 0
  %754 = load double, double* %753, align 8
  %755 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %756 = load i32, i32* @x_block_size, align 4
  %757 = mul nsw i32 %755, %756
  %758 = sitofp i32 %757 to double
  %759 = fmul double %754, %758
  %760 = load %struct.object*, %struct.object** %7, align 8
  %761 = getelementptr inbounds %struct.object, %struct.object* %760, i32 0, i32 5
  %762 = getelementptr inbounds [3 x double], [3 x double]* %761, i64 0, i64 1
  %763 = load double, double* %762, align 8
  %764 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %765 = load i32, i32* @y_block_size, align 4
  %766 = mul nsw i32 %764, %765
  %767 = sitofp i32 %766 to double
  %768 = fmul double %763, %767
  %769 = load %struct.object*, %struct.object** %7, align 8
  %770 = getelementptr inbounds %struct.object, %struct.object* %769, i32 0, i32 5
  %771 = getelementptr inbounds [3 x double], [3 x double]* %770, i64 0, i64 2
  %772 = load double, double* %771, align 8
  %773 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %774 = load i32, i32* @z_block_size, align 4
  %775 = mul nsw i32 %773, %774
  %776 = sitofp i32 %775 to double
  %777 = fmul double %772, %776
  %778 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %750, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i32 0, i32 0), double %759, double %768, double %777)
  %779 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %780 = load %struct.object*, %struct.object** %7, align 8
  %781 = getelementptr inbounds %struct.object, %struct.object* %780, i32 0, i32 7
  %782 = getelementptr inbounds [3 x double], [3 x double]* %781, i64 0, i64 0
  %783 = load double, double* %782, align 8
  %784 = load %struct.object*, %struct.object** %7, align 8
  %785 = getelementptr inbounds %struct.object, %struct.object* %784, i32 0, i32 7
  %786 = getelementptr inbounds [3 x double], [3 x double]* %785, i64 0, i64 1
  %787 = load double, double* %786, align 8
  %788 = load %struct.object*, %struct.object** %7, align 8
  %789 = getelementptr inbounds %struct.object, %struct.object* %788, i32 0, i32 7
  %790 = getelementptr inbounds [3 x double], [3 x double]* %789, i64 0, i64 2
  %791 = load double, double* %790, align 8
  %792 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %779, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i32 0, i32 0), double %783, double %787, double %791)
  %793 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %794 = load %struct.object*, %struct.object** %7, align 8
  %795 = getelementptr inbounds %struct.object, %struct.object* %794, i32 0, i32 6
  %796 = getelementptr inbounds [3 x double], [3 x double]* %795, i64 0, i64 0
  %797 = load double, double* %796, align 8
  %798 = load %struct.object*, %struct.object** %7, align 8
  %799 = getelementptr inbounds %struct.object, %struct.object* %798, i32 0, i32 6
  %800 = getelementptr inbounds [3 x double], [3 x double]* %799, i64 0, i64 1
  %801 = load double, double* %800, align 8
  %802 = load %struct.object*, %struct.object** %7, align 8
  %803 = getelementptr inbounds %struct.object, %struct.object* %802, i32 0, i32 6
  %804 = getelementptr inbounds [3 x double], [3 x double]* %803, i64 0, i64 2
  %805 = load double, double* %804, align 8
  %806 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %793, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i32 0, i32 0), double %797, double %801, double %805)
  %807 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %808 = load %struct.object*, %struct.object** %7, align 8
  %809 = getelementptr inbounds %struct.object, %struct.object* %808, i32 0, i32 8
  %810 = getelementptr inbounds [3 x double], [3 x double]* %809, i64 0, i64 0
  %811 = load double, double* %810, align 8
  %812 = load %struct.object*, %struct.object** %7, align 8
  %813 = getelementptr inbounds %struct.object, %struct.object* %812, i32 0, i32 8
  %814 = getelementptr inbounds [3 x double], [3 x double]* %813, i64 0, i64 1
  %815 = load double, double* %814, align 8
  %816 = load %struct.object*, %struct.object** %7, align 8
  %817 = getelementptr inbounds %struct.object, %struct.object* %816, i32 0, i32 8
  %818 = getelementptr inbounds [3 x double], [3 x double]* %817, i64 0, i64 2
  %819 = load double, double* %818, align 8
  %820 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %807, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i32 0, i32 0), double %811, double %815, double %819)
  %821 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %822 = load %struct.object*, %struct.object** %7, align 8
  %823 = getelementptr inbounds %struct.object, %struct.object* %822, i32 0, i32 8
  %824 = getelementptr inbounds [3 x double], [3 x double]* %823, i64 0, i64 0
  %825 = load double, double* %824, align 8
  %826 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %827 = load i32, i32* @x_block_size, align 4
  %828 = mul nsw i32 %826, %827
  %829 = sitofp i32 %828 to double
  %830 = fmul double %825, %829
  %831 = load %struct.object*, %struct.object** %7, align 8
  %832 = getelementptr inbounds %struct.object, %struct.object* %831, i32 0, i32 8
  %833 = getelementptr inbounds [3 x double], [3 x double]* %832, i64 0, i64 1
  %834 = load double, double* %833, align 8
  %835 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %836 = load i32, i32* @y_block_size, align 4
  %837 = mul nsw i32 %835, %836
  %838 = sitofp i32 %837 to double
  %839 = fmul double %834, %838
  %840 = load %struct.object*, %struct.object** %7, align 8
  %841 = getelementptr inbounds %struct.object, %struct.object* %840, i32 0, i32 8
  %842 = getelementptr inbounds [3 x double], [3 x double]* %841, i64 0, i64 2
  %843 = load double, double* %842, align 8
  %844 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %845 = load i32, i32* @z_block_size, align 4
  %846 = mul nsw i32 %844, %845
  %847 = sitofp i32 %846 to double
  %848 = fmul double %843, %847
  %849 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %821, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i32 0, i32 0), double %830, double %839, double %848)
  br label %850

; <label>:850:                                    ; preds = %707
  %851 = load i32, i32* %1, align 4
  %852 = add nsw i32 %851, 1
  store i32 %852, i32* %1, align 4
  br label %469

; <label>:853:                                    ; preds = %469
  br label %854

; <label>:854:                                    ; preds = %853, %462
  %855 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %856 = load i32, i32* @num_tsteps, align 4
  %857 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %855, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i32 0, i32 0), i32 %856)
  %858 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %859 = load i32, i32* @stages_per_ts, align 4
  %860 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %858, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.141, i32 0, i32 0), i32 %859)
  %861 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %862 = load i32, i32* @checksum_freq, align 4
  %863 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %861, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142, i32 0, i32 0), i32 %862)
  %864 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %865 = load i32, i32* @refine_freq, align 4
  %866 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %864, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i32 0, i32 0), i32 %865)
  %867 = load i32, i32* @plot_freq, align 4
  %868 = icmp ne i32 %867, 0
  br i1 %868, label %869, label %873

; <label>:869:                                    ; preds = %854
  %870 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %871 = load i32, i32* @plot_freq, align 4
  %872 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %870, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i32 0, i32 0), i32 %871)
  br label %876

; <label>:873:                                    ; preds = %854
  %874 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %875 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %874, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.145, i32 0, i32 0))
  br label %876

; <label>:876:                                    ; preds = %873, %869
  %877 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %878 = load i32, i32* @num_vars, align 4
  %879 = load i32, i32* @stencil, align 4
  %880 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %877, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.146, i32 0, i32 0), i32 %878, i32 %879)
  %881 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %882 = load i32, i32* @comm_vars, align 4
  %883 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %881, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.147, i32 0, i32 0), i32 %882)
  %884 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %885 = load i32, i32* @error_tol, align 4
  %886 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %884, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i32 0, i32 0), i32 %885)
  %887 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %888 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 0), align 16
  %889 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %887, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.149, i32 0, i32 0), double %888)
  %890 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %891 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 110), align 16
  %892 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %890, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.150, i32 0, i32 0), double %891)
  %893 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %894 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 111), align 8
  %895 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %893, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i32 0, i32 0), double %894)
  %896 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %897 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %896, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i32 0, i32 0))
  %898 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %899 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %898, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.153, i32 0, i32 0))
  %900 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %901 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %900, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i32 0, i32 0))
  %902 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %903 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %904 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %902, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i32 0, i32 0), double %903)
  %905 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %906 = load double, double* %2, align 8
  %907 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %905, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.156, i32 0, i32 0), double %906)
  %908 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %909 = load double, double* %3, align 8
  %910 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %908, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.157, i32 0, i32 0), double %909)
  %911 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %912 = load double, double* %4, align 8
  %913 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %911, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.158, i32 0, i32 0), double %912)
  %914 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %915 = load double, double* %5, align 8
  %916 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %914, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.159, i32 0, i32 0), double %915)
  %917 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %918 = load double, double* %6, align 8
  %919 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %917, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.160, i32 0, i32 0), double %918)
  %920 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %921 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %920, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i32 0, i32 0))
  %922 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %923 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %922, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.161, i32 0, i32 0))
  %924 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %925 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %924, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i32 0, i32 0))
  %926 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %927 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 37), align 8
  %928 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %926, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i32 0, i32 0), double %927)
  store i32 0, i32* %1, align 4
  br label %929

; <label>:929:                                    ; preds = %1014, %876
  %930 = load i32, i32* %1, align 4
  %931 = icmp slt i32 %930, 4
  br i1 %931, label %932, label %1017

; <label>:932:                                    ; preds = %929
  %933 = load i32, i32* %1, align 4
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %935, label %938

; <label>:935:                                    ; preds = %932
  %936 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %937 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %936, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i32 0, i32 0))
  br label %955

; <label>:938:                                    ; preds = %932
  %939 = load i32, i32* %1, align 4
  %940 = icmp eq i32 %939, 1
  br i1 %940, label %941, label %944

; <label>:941:                                    ; preds = %938
  %942 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %943 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %942, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.163, i32 0, i32 0))
  br label %954

; <label>:944:                                    ; preds = %938
  %945 = load i32, i32* %1, align 4
  %946 = icmp eq i32 %945, 2
  br i1 %946, label %947, label %950

; <label>:947:                                    ; preds = %944
  %948 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %949 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %948, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.164, i32 0, i32 0))
  br label %953

; <label>:950:                                    ; preds = %944
  %951 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %952 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %951, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.165, i32 0, i32 0))
  br label %953

; <label>:953:                                    ; preds = %950, %947
  br label %954

; <label>:954:                                    ; preds = %953, %941
  br label %955

; <label>:955:                                    ; preds = %954, %935
  %956 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %957 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %956, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.166, i32 0, i32 0))
  %958 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %959 = load i32, i32* %1, align 4
  %960 = mul nsw i32 9, %959
  %961 = add nsw i32 1, %960
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %962
  %964 = load double, double* %963, align 8
  %965 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %958, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.167, i32 0, i32 0), double %964)
  %966 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %967 = load i32, i32* %1, align 4
  %968 = mul nsw i32 9, %967
  %969 = add nsw i32 5, %968
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %970
  %972 = load double, double* %971, align 8
  %973 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %966, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.168, i32 0, i32 0), double %972)
  %974 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %975 = load i32, i32* %1, align 4
  %976 = mul nsw i32 9, %975
  %977 = add nsw i32 6, %976
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %978
  %980 = load double, double* %979, align 8
  %981 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %974, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.169, i32 0, i32 0), double %980)
  %982 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %983 = load i32, i32* %1, align 4
  %984 = mul nsw i32 9, %983
  %985 = add nsw i32 7, %984
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %986
  %988 = load double, double* %987, align 8
  %989 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %982, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.170, i32 0, i32 0), double %988)
  %990 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %991 = load i32, i32* %1, align 4
  %992 = mul nsw i32 9, %991
  %993 = add nsw i32 75, %992
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %994
  %996 = load double, double* %995, align 8
  %997 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %990, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i32 0, i32 0), double %996)
  %998 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %999 = load i32, i32* %1, align 4
  %1000 = mul nsw i32 9, %999
  %1001 = add nsw i32 76, %1000
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %1002
  %1004 = load double, double* %1003, align 8
  %1005 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %998, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.172, i32 0, i32 0), double %1004)
  %1006 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1007 = load i32, i32* %1, align 4
  %1008 = mul nsw i32 9, %1007
  %1009 = add nsw i32 74, %1008
  %1010 = sext i32 %1009 to i64
  %1011 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %1010
  %1012 = load double, double* %1011, align 8
  %1013 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1006, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.173, i32 0, i32 0), double %1012)
  br label %1014

; <label>:1014:                                   ; preds = %955
  %1015 = load i32, i32* %1, align 4
  %1016 = add nsw i32 %1015, 1
  store i32 %1016, i32* %1, align 4
  br label %929

; <label>:1017:                                   ; preds = %929
  %1018 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1019 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1018, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.174, i32 0, i32 0))
  %1020 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1021 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1020, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i32 0, i32 0))
  %1022 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1023 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1022, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i32 0, i32 0))
  %1024 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1025 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 39), align 8
  %1026 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1024, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i32 0, i32 0), double %1025)
  %1027 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1028 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 41), align 8
  %1029 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1027, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.176, i32 0, i32 0), double %1028)
  %1030 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1031 = load i32, i32* @total_red, align 4
  %1032 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1030, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.177, i32 0, i32 0), i32 %1031)
  %1033 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1034 = load i32, i32* @num_vars, align 4
  %1035 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1033, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.178, i32 0, i32 0), i32 %1034)
  %1036 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1037 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1036, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i32 0, i32 0))
  %1038 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1039 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1038, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i32 0, i32 0))
  %1040 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1041 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1040, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i32 0, i32 0))
  %1042 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1043 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 42), align 16
  %1044 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1042, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i32 0, i32 0), double %1043)
  %1045 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1046 = load i32, i32* @nrs, align 4
  %1047 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1045, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.180, i32 0, i32 0), i32 %1046)
  %1048 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1049 = load i64, i64* @total_blocks, align 8
  %1050 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1048, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.181, i32 0, i32 0), i64 %1049)
  %1051 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1052 = load i64, i64* @total_blocks, align 8
  %1053 = sitofp i64 %1052 to double
  %1054 = load i32, i32* @num_tsteps, align 4
  %1055 = load i32, i32* @stages_per_ts, align 4
  %1056 = mul nsw i32 %1054, %1055
  %1057 = sitofp i32 %1056 to double
  %1058 = fdiv double %1053, %1057
  %1059 = load i32, i32* @nb_min, align 4
  %1060 = load i32, i32* @nb_max, align 4
  %1061 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1051, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.182, i32 0, i32 0), double %1058, i32 %1059, i32 %1060)
  %1062 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1063 = load i32, i32* @global_max_b, align 4
  %1064 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1062, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.183, i32 0, i32 0), i32 %1063)
  %1065 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1066 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 104), align 16
  %1067 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1065, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.184, i32 0, i32 0), double %1066)
  %1068 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1069 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 105), align 8
  %1070 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1068, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.185, i32 0, i32 0), double %1069)
  %1071 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1072 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1071, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.186, i32 0, i32 0))
  %1073 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1074 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 43), align 8
  %1075 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1073, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.187, i32 0, i32 0), double %1074)
  %1076 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1077 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 44), align 16
  %1078 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1076, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.188, i32 0, i32 0), double %1077)
  %1079 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1080 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 46), align 16
  %1081 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1079, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.189, i32 0, i32 0), double %1080)
  %1082 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1083 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 47), align 8
  %1084 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1082, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.190, i32 0, i32 0), double %1083)
  %1085 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1086 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 45), align 8
  %1087 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1085, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.191, i32 0, i32 0), double %1086)
  %1088 = load i32, i32* @target_active, align 4
  %1089 = icmp ne i32 %1088, 0
  br i1 %1089, label %1090, label %1112

; <label>:1090:                                   ; preds = %1017
  %1091 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1092 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 52), align 16
  %1093 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1091, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.192, i32 0, i32 0), double %1092)
  %1094 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1095 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 53), align 8
  %1096 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1094, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.193, i32 0, i32 0), double %1095)
  %1097 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1098 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 54), align 16
  %1099 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1097, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.194, i32 0, i32 0), double %1098)
  %1100 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1101 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 58), align 16
  %1102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1100, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.195, i32 0, i32 0), double %1101)
  %1103 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1104 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 59), align 8
  %1105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1103, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.196, i32 0, i32 0), double %1104)
  %1106 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1107 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 60), align 16
  %1108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1106, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.194, i32 0, i32 0), double %1107)
  %1109 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1110 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 61), align 8
  %1111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1109, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.197, i32 0, i32 0), double %1110)
  br label %1112

; <label>:1112:                                   ; preds = %1090, %1017
  %1113 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1113, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i32 0, i32 0))
  %1115 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.198, i32 0, i32 0))
  %1117 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1117, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i32 0, i32 0))
  %1119 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1120 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 67), align 8
  %1121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1119, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i32 0, i32 0), double %1120)
  %1122 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1123 = load i32, i32* @nps, align 4
  %1124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1122, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.199, i32 0, i32 0), i32 %1123)
  %1125 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1125, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.200, i32 0, i32 0))
  %1127 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1128 = call i32 @fclose(%struct._IO_FILE* %1127)
  br label %1129

; <label>:1129:                                   ; preds = %1112, %386
  %1130 = load i32, i32* @report_perf, align 4
  %1131 = and i32 %1130, 4
  %1132 = icmp ne i32 %1131, 0
  br i1 %1132, label %1133, label %1571

; <label>:1133:                                   ; preds = %1129
  %1134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.91, i32 0, i32 0))
  %1135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92, i32 0, i32 0))
  %1136 = load i8*, i8** %8, align 8
  %1137 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i32 0, i32 0), i8* %1136)
  %1138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i32 0, i32 0))
  %1139 = load i32, i32* @init_block_x, align 4
  %1140 = load i32, i32* @init_block_y, align 4
  %1141 = load i32, i32* @init_block_z, align 4
  %1142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i32 0, i32 0), i32 %1139, i32 %1140, i32 %1141)
  %1143 = load i32, i32* @x_block_size, align 4
  %1144 = load i32, i32* @y_block_size, align 4
  %1145 = load i32, i32* @z_block_size, align 4
  %1146 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0), i32 %1143, i32 %1144, i32 %1145)
  %1147 = load i32, i32* @permute, align 4
  %1148 = icmp ne i32 %1147, 0
  br i1 %1148, label %1149, label %1151

; <label>:1149:                                   ; preds = %1133
  %1150 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i32 0, i32 0))
  br label %1151

; <label>:1151:                                   ; preds = %1149, %1133
  %1152 = load i32, i32* @max_num_blocks, align 4
  %1153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i32 0, i32 0), i32 %1152)
  %1154 = load i32, i32* @target_active, align 4
  %1155 = icmp ne i32 %1154, 0
  br i1 %1155, label %1156, label %1159

; <label>:1156:                                   ; preds = %1151
  %1157 = load i32, i32* @target_active, align 4
  %1158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i32 0, i32 0), i32 %1157)
  br label %1159

; <label>:1159:                                   ; preds = %1156, %1151
  %1160 = load i32, i32* @target_max, align 4
  %1161 = icmp ne i32 %1160, 0
  br i1 %1161, label %1162, label %1165

; <label>:1162:                                   ; preds = %1159
  %1163 = load i32, i32* @target_max, align 4
  %1164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i32 0, i32 0), i32 %1163)
  br label %1165

; <label>:1165:                                   ; preds = %1162, %1159
  %1166 = load i32, i32* @target_min, align 4
  %1167 = icmp ne i32 %1166, 0
  br i1 %1167, label %1168, label %1171

; <label>:1168:                                   ; preds = %1165
  %1169 = load i32, i32* @target_min, align 4
  %1170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.101, i32 0, i32 0), i32 %1169)
  br label %1171

; <label>:1171:                                   ; preds = %1168, %1165
  %1172 = load i32, i32* @code, align 4
  %1173 = icmp ne i32 %1172, 0
  br i1 %1173, label %1174, label %1177

; <label>:1174:                                   ; preds = %1171
  %1175 = load i32, i32* @code, align 4
  %1176 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), i32 %1175)
  br label %1177

; <label>:1177:                                   ; preds = %1174, %1171
  %1178 = load i32, i32* @num_refine, align 4
  %1179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i32 0, i32 0), i32 %1178)
  %1180 = load i32, i32* @block_change, align 4
  %1181 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.104, i32 0, i32 0), i32 %1180)
  %1182 = load i32, i32* @refine_ghost, align 4
  %1183 = icmp ne i32 %1182, 0
  br i1 %1183, label %1184, label %1186

; <label>:1184:                                   ; preds = %1177
  %1185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.105, i32 0, i32 0))
  br label %1186

; <label>:1186:                                   ; preds = %1184, %1177
  %1187 = load i32, i32* @uniform_refine, align 4
  %1188 = icmp ne i32 %1187, 0
  br i1 %1188, label %1189, label %1191

; <label>:1189:                                   ; preds = %1186
  %1190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i32 0, i32 0))
  br label %1547

; <label>:1191:                                   ; preds = %1186
  %1192 = load i32, i32* @num_objects, align 4
  %1193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107, i32 0, i32 0), i32 %1192)
  store i32 0, i32* %1, align 4
  br label %1194

; <label>:1194:                                   ; preds = %1543, %1191
  %1195 = load i32, i32* %1, align 4
  %1196 = load i32, i32* @num_objects, align 4
  %1197 = icmp slt i32 %1195, %1196
  br i1 %1197, label %1198, label %1546

; <label>:1198:                                   ; preds = %1194
  %1199 = load %struct.object*, %struct.object** @objects, align 8
  %1200 = load i32, i32* %1, align 4
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds %struct.object, %struct.object* %1199, i64 %1201
  store %struct.object* %1202, %struct.object** %7, align 8
  %1203 = load %struct.object*, %struct.object** %7, align 8
  %1204 = getelementptr inbounds %struct.object, %struct.object* %1203, i32 0, i32 0
  %1205 = load i32, i32* %1204, align 8
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1210

; <label>:1207:                                   ; preds = %1198
  %1208 = load i32, i32* %1, align 4
  %1209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i32 0, i32 0), i32 %1208)
  br label %1399

; <label>:1210:                                   ; preds = %1198
  %1211 = load %struct.object*, %struct.object** %7, align 8
  %1212 = getelementptr inbounds %struct.object, %struct.object* %1211, i32 0, i32 0
  %1213 = load i32, i32* %1212, align 8
  %1214 = icmp eq i32 %1213, 1
  br i1 %1214, label %1215, label %1218

; <label>:1215:                                   ; preds = %1210
  %1216 = load i32, i32* %1, align 4
  %1217 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i32 0, i32 0), i32 %1216)
  br label %1398

; <label>:1218:                                   ; preds = %1210
  %1219 = load %struct.object*, %struct.object** %7, align 8
  %1220 = getelementptr inbounds %struct.object, %struct.object* %1219, i32 0, i32 0
  %1221 = load i32, i32* %1220, align 8
  %1222 = icmp eq i32 %1221, 2
  br i1 %1222, label %1223, label %1226

; <label>:1223:                                   ; preds = %1218
  %1224 = load i32, i32* %1, align 4
  %1225 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.110, i32 0, i32 0), i32 %1224)
  br label %1397

; <label>:1226:                                   ; preds = %1218
  %1227 = load %struct.object*, %struct.object** %7, align 8
  %1228 = getelementptr inbounds %struct.object, %struct.object* %1227, i32 0, i32 0
  %1229 = load i32, i32* %1228, align 8
  %1230 = icmp eq i32 %1229, 3
  br i1 %1230, label %1231, label %1234

; <label>:1231:                                   ; preds = %1226
  %1232 = load i32, i32* %1, align 4
  %1233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111, i32 0, i32 0), i32 %1232)
  br label %1396

; <label>:1234:                                   ; preds = %1226
  %1235 = load %struct.object*, %struct.object** %7, align 8
  %1236 = getelementptr inbounds %struct.object, %struct.object* %1235, i32 0, i32 0
  %1237 = load i32, i32* %1236, align 8
  %1238 = icmp eq i32 %1237, 4
  br i1 %1238, label %1239, label %1242

; <label>:1239:                                   ; preds = %1234
  %1240 = load i32, i32* %1, align 4
  %1241 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i32 0, i32 0), i32 %1240)
  br label %1395

; <label>:1242:                                   ; preds = %1234
  %1243 = load %struct.object*, %struct.object** %7, align 8
  %1244 = getelementptr inbounds %struct.object, %struct.object* %1243, i32 0, i32 0
  %1245 = load i32, i32* %1244, align 8
  %1246 = icmp eq i32 %1245, 5
  br i1 %1246, label %1247, label %1250

; <label>:1247:                                   ; preds = %1242
  %1248 = load i32, i32* %1, align 4
  %1249 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i32 0, i32 0), i32 %1248)
  br label %1394

; <label>:1250:                                   ; preds = %1242
  %1251 = load %struct.object*, %struct.object** %7, align 8
  %1252 = getelementptr inbounds %struct.object, %struct.object* %1251, i32 0, i32 0
  %1253 = load i32, i32* %1252, align 8
  %1254 = icmp eq i32 %1253, 6
  br i1 %1254, label %1255, label %1258

; <label>:1255:                                   ; preds = %1250
  %1256 = load i32, i32* %1, align 4
  %1257 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i32 0, i32 0), i32 %1256)
  br label %1393

; <label>:1258:                                   ; preds = %1250
  %1259 = load %struct.object*, %struct.object** %7, align 8
  %1260 = getelementptr inbounds %struct.object, %struct.object* %1259, i32 0, i32 0
  %1261 = load i32, i32* %1260, align 8
  %1262 = icmp eq i32 %1261, 7
  br i1 %1262, label %1263, label %1266

; <label>:1263:                                   ; preds = %1258
  %1264 = load i32, i32* %1, align 4
  %1265 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.115, i32 0, i32 0), i32 %1264)
  br label %1392

; <label>:1266:                                   ; preds = %1258
  %1267 = load %struct.object*, %struct.object** %7, align 8
  %1268 = getelementptr inbounds %struct.object, %struct.object* %1267, i32 0, i32 0
  %1269 = load i32, i32* %1268, align 8
  %1270 = icmp eq i32 %1269, 8
  br i1 %1270, label %1271, label %1274

; <label>:1271:                                   ; preds = %1266
  %1272 = load i32, i32* %1, align 4
  %1273 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i32 0, i32 0), i32 %1272)
  br label %1391

; <label>:1274:                                   ; preds = %1266
  %1275 = load %struct.object*, %struct.object** %7, align 8
  %1276 = getelementptr inbounds %struct.object, %struct.object* %1275, i32 0, i32 0
  %1277 = load i32, i32* %1276, align 8
  %1278 = icmp eq i32 %1277, 9
  br i1 %1278, label %1279, label %1282

; <label>:1279:                                   ; preds = %1274
  %1280 = load i32, i32* %1, align 4
  %1281 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117, i32 0, i32 0), i32 %1280)
  br label %1390

; <label>:1282:                                   ; preds = %1274
  %1283 = load %struct.object*, %struct.object** %7, align 8
  %1284 = getelementptr inbounds %struct.object, %struct.object* %1283, i32 0, i32 0
  %1285 = load i32, i32* %1284, align 8
  %1286 = icmp eq i32 %1285, 10
  br i1 %1286, label %1287, label %1290

; <label>:1287:                                   ; preds = %1282
  %1288 = load i32, i32* %1, align 4
  %1289 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i32 0, i32 0), i32 %1288)
  br label %1389

; <label>:1290:                                   ; preds = %1282
  %1291 = load %struct.object*, %struct.object** %7, align 8
  %1292 = getelementptr inbounds %struct.object, %struct.object* %1291, i32 0, i32 0
  %1293 = load i32, i32* %1292, align 8
  %1294 = icmp eq i32 %1293, 11
  br i1 %1294, label %1295, label %1298

; <label>:1295:                                   ; preds = %1290
  %1296 = load i32, i32* %1, align 4
  %1297 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i32 0, i32 0), i32 %1296)
  br label %1388

; <label>:1298:                                   ; preds = %1290
  %1299 = load %struct.object*, %struct.object** %7, align 8
  %1300 = getelementptr inbounds %struct.object, %struct.object* %1299, i32 0, i32 0
  %1301 = load i32, i32* %1300, align 8
  %1302 = icmp eq i32 %1301, 12
  br i1 %1302, label %1303, label %1306

; <label>:1303:                                   ; preds = %1298
  %1304 = load i32, i32* %1, align 4
  %1305 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i32 0, i32 0), i32 %1304)
  br label %1387

; <label>:1306:                                   ; preds = %1298
  %1307 = load %struct.object*, %struct.object** %7, align 8
  %1308 = getelementptr inbounds %struct.object, %struct.object* %1307, i32 0, i32 0
  %1309 = load i32, i32* %1308, align 8
  %1310 = icmp eq i32 %1309, 13
  br i1 %1310, label %1311, label %1314

; <label>:1311:                                   ; preds = %1306
  %1312 = load i32, i32* %1, align 4
  %1313 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i32 0, i32 0), i32 %1312)
  br label %1386

; <label>:1314:                                   ; preds = %1306
  %1315 = load %struct.object*, %struct.object** %7, align 8
  %1316 = getelementptr inbounds %struct.object, %struct.object* %1315, i32 0, i32 0
  %1317 = load i32, i32* %1316, align 8
  %1318 = icmp eq i32 %1317, 14
  br i1 %1318, label %1319, label %1322

; <label>:1319:                                   ; preds = %1314
  %1320 = load i32, i32* %1, align 4
  %1321 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i32 0, i32 0), i32 %1320)
  br label %1385

; <label>:1322:                                   ; preds = %1314
  %1323 = load %struct.object*, %struct.object** %7, align 8
  %1324 = getelementptr inbounds %struct.object, %struct.object* %1323, i32 0, i32 0
  %1325 = load i32, i32* %1324, align 8
  %1326 = icmp eq i32 %1325, 15
  br i1 %1326, label %1327, label %1330

; <label>:1327:                                   ; preds = %1322
  %1328 = load i32, i32* %1, align 4
  %1329 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i32 0, i32 0), i32 %1328)
  br label %1384

; <label>:1330:                                   ; preds = %1322
  %1331 = load %struct.object*, %struct.object** %7, align 8
  %1332 = getelementptr inbounds %struct.object, %struct.object* %1331, i32 0, i32 0
  %1333 = load i32, i32* %1332, align 8
  %1334 = icmp eq i32 %1333, 20
  br i1 %1334, label %1335, label %1338

; <label>:1335:                                   ; preds = %1330
  %1336 = load i32, i32* %1, align 4
  %1337 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i32 0, i32 0), i32 %1336)
  br label %1383

; <label>:1338:                                   ; preds = %1330
  %1339 = load %struct.object*, %struct.object** %7, align 8
  %1340 = getelementptr inbounds %struct.object, %struct.object* %1339, i32 0, i32 0
  %1341 = load i32, i32* %1340, align 8
  %1342 = icmp eq i32 %1341, 21
  br i1 %1342, label %1343, label %1346

; <label>:1343:                                   ; preds = %1338
  %1344 = load i32, i32* %1, align 4
  %1345 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.125, i32 0, i32 0), i32 %1344)
  br label %1382

; <label>:1346:                                   ; preds = %1338
  %1347 = load %struct.object*, %struct.object** %7, align 8
  %1348 = getelementptr inbounds %struct.object, %struct.object* %1347, i32 0, i32 0
  %1349 = load i32, i32* %1348, align 8
  %1350 = icmp eq i32 %1349, 22
  br i1 %1350, label %1351, label %1354

; <label>:1351:                                   ; preds = %1346
  %1352 = load i32, i32* %1, align 4
  %1353 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.126, i32 0, i32 0), i32 %1352)
  br label %1381

; <label>:1354:                                   ; preds = %1346
  %1355 = load %struct.object*, %struct.object** %7, align 8
  %1356 = getelementptr inbounds %struct.object, %struct.object* %1355, i32 0, i32 0
  %1357 = load i32, i32* %1356, align 8
  %1358 = icmp eq i32 %1357, 23
  br i1 %1358, label %1359, label %1362

; <label>:1359:                                   ; preds = %1354
  %1360 = load i32, i32* %1, align 4
  %1361 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i32 0, i32 0), i32 %1360)
  br label %1380

; <label>:1362:                                   ; preds = %1354
  %1363 = load %struct.object*, %struct.object** %7, align 8
  %1364 = getelementptr inbounds %struct.object, %struct.object* %1363, i32 0, i32 0
  %1365 = load i32, i32* %1364, align 8
  %1366 = icmp eq i32 %1365, 24
  br i1 %1366, label %1367, label %1370

; <label>:1367:                                   ; preds = %1362
  %1368 = load i32, i32* %1, align 4
  %1369 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i32 0, i32 0), i32 %1368)
  br label %1379

; <label>:1370:                                   ; preds = %1362
  %1371 = load %struct.object*, %struct.object** %7, align 8
  %1372 = getelementptr inbounds %struct.object, %struct.object* %1371, i32 0, i32 0
  %1373 = load i32, i32* %1372, align 8
  %1374 = icmp eq i32 %1373, 25
  br i1 %1374, label %1375, label %1378

; <label>:1375:                                   ; preds = %1370
  %1376 = load i32, i32* %1, align 4
  %1377 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129, i32 0, i32 0), i32 %1376)
  br label %1378

; <label>:1378:                                   ; preds = %1375, %1370
  br label %1379

; <label>:1379:                                   ; preds = %1378, %1367
  br label %1380

; <label>:1380:                                   ; preds = %1379, %1359
  br label %1381

; <label>:1381:                                   ; preds = %1380, %1351
  br label %1382

; <label>:1382:                                   ; preds = %1381, %1343
  br label %1383

; <label>:1383:                                   ; preds = %1382, %1335
  br label %1384

; <label>:1384:                                   ; preds = %1383, %1327
  br label %1385

; <label>:1385:                                   ; preds = %1384, %1319
  br label %1386

; <label>:1386:                                   ; preds = %1385, %1311
  br label %1387

; <label>:1387:                                   ; preds = %1386, %1303
  br label %1388

; <label>:1388:                                   ; preds = %1387, %1295
  br label %1389

; <label>:1389:                                   ; preds = %1388, %1287
  br label %1390

; <label>:1390:                                   ; preds = %1389, %1279
  br label %1391

; <label>:1391:                                   ; preds = %1390, %1271
  br label %1392

; <label>:1392:                                   ; preds = %1391, %1263
  br label %1393

; <label>:1393:                                   ; preds = %1392, %1255
  br label %1394

; <label>:1394:                                   ; preds = %1393, %1247
  br label %1395

; <label>:1395:                                   ; preds = %1394, %1239
  br label %1396

; <label>:1396:                                   ; preds = %1395, %1231
  br label %1397

; <label>:1397:                                   ; preds = %1396, %1223
  br label %1398

; <label>:1398:                                   ; preds = %1397, %1215
  br label %1399

; <label>:1399:                                   ; preds = %1398, %1207
  %1400 = load %struct.object*, %struct.object** %7, align 8
  %1401 = getelementptr inbounds %struct.object, %struct.object* %1400, i32 0, i32 1
  %1402 = load i32, i32* %1401, align 4
  %1403 = icmp eq i32 %1402, 0
  br i1 %1403, label %1404, label %1406

; <label>:1404:                                   ; preds = %1399
  %1405 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i32 0, i32 0))
  br label %1408

; <label>:1406:                                   ; preds = %1399
  %1407 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.131, i32 0, i32 0))
  br label %1408

; <label>:1408:                                   ; preds = %1406, %1404
  %1409 = load %struct.object*, %struct.object** %7, align 8
  %1410 = getelementptr inbounds %struct.object, %struct.object* %1409, i32 0, i32 3
  %1411 = getelementptr inbounds [3 x double], [3 x double]* %1410, i64 0, i64 0
  %1412 = load double, double* %1411, align 8
  %1413 = load %struct.object*, %struct.object** %7, align 8
  %1414 = getelementptr inbounds %struct.object, %struct.object* %1413, i32 0, i32 3
  %1415 = getelementptr inbounds [3 x double], [3 x double]* %1414, i64 0, i64 1
  %1416 = load double, double* %1415, align 8
  %1417 = load %struct.object*, %struct.object** %7, align 8
  %1418 = getelementptr inbounds %struct.object, %struct.object* %1417, i32 0, i32 3
  %1419 = getelementptr inbounds [3 x double], [3 x double]* %1418, i64 0, i64 2
  %1420 = load double, double* %1419, align 8
  %1421 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i32 0, i32 0), double %1412, double %1416, double %1420)
  %1422 = load %struct.object*, %struct.object** %7, align 8
  %1423 = getelementptr inbounds %struct.object, %struct.object* %1422, i32 0, i32 2
  %1424 = getelementptr inbounds [3 x double], [3 x double]* %1423, i64 0, i64 0
  %1425 = load double, double* %1424, align 8
  %1426 = load %struct.object*, %struct.object** %7, align 8
  %1427 = getelementptr inbounds %struct.object, %struct.object* %1426, i32 0, i32 2
  %1428 = getelementptr inbounds [3 x double], [3 x double]* %1427, i64 0, i64 1
  %1429 = load double, double* %1428, align 8
  %1430 = load %struct.object*, %struct.object** %7, align 8
  %1431 = getelementptr inbounds %struct.object, %struct.object* %1430, i32 0, i32 2
  %1432 = getelementptr inbounds [3 x double], [3 x double]* %1431, i64 0, i64 2
  %1433 = load double, double* %1432, align 8
  %1434 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i32 0, i32 0), double %1425, double %1429, double %1433)
  %1435 = load %struct.object*, %struct.object** %7, align 8
  %1436 = getelementptr inbounds %struct.object, %struct.object* %1435, i32 0, i32 5
  %1437 = getelementptr inbounds [3 x double], [3 x double]* %1436, i64 0, i64 0
  %1438 = load double, double* %1437, align 8
  %1439 = load %struct.object*, %struct.object** %7, align 8
  %1440 = getelementptr inbounds %struct.object, %struct.object* %1439, i32 0, i32 5
  %1441 = getelementptr inbounds [3 x double], [3 x double]* %1440, i64 0, i64 1
  %1442 = load double, double* %1441, align 8
  %1443 = load %struct.object*, %struct.object** %7, align 8
  %1444 = getelementptr inbounds %struct.object, %struct.object* %1443, i32 0, i32 5
  %1445 = getelementptr inbounds [3 x double], [3 x double]* %1444, i64 0, i64 2
  %1446 = load double, double* %1445, align 8
  %1447 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i32 0, i32 0), double %1438, double %1442, double %1446)
  %1448 = load %struct.object*, %struct.object** %7, align 8
  %1449 = getelementptr inbounds %struct.object, %struct.object* %1448, i32 0, i32 5
  %1450 = getelementptr inbounds [3 x double], [3 x double]* %1449, i64 0, i64 0
  %1451 = load double, double* %1450, align 8
  %1452 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %1453 = load i32, i32* @x_block_size, align 4
  %1454 = mul nsw i32 %1452, %1453
  %1455 = sitofp i32 %1454 to double
  %1456 = fmul double %1451, %1455
  %1457 = load %struct.object*, %struct.object** %7, align 8
  %1458 = getelementptr inbounds %struct.object, %struct.object* %1457, i32 0, i32 5
  %1459 = getelementptr inbounds [3 x double], [3 x double]* %1458, i64 0, i64 1
  %1460 = load double, double* %1459, align 8
  %1461 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %1462 = load i32, i32* @y_block_size, align 4
  %1463 = mul nsw i32 %1461, %1462
  %1464 = sitofp i32 %1463 to double
  %1465 = fmul double %1460, %1464
  %1466 = load %struct.object*, %struct.object** %7, align 8
  %1467 = getelementptr inbounds %struct.object, %struct.object* %1466, i32 0, i32 5
  %1468 = getelementptr inbounds [3 x double], [3 x double]* %1467, i64 0, i64 2
  %1469 = load double, double* %1468, align 8
  %1470 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %1471 = load i32, i32* @z_block_size, align 4
  %1472 = mul nsw i32 %1470, %1471
  %1473 = sitofp i32 %1472 to double
  %1474 = fmul double %1469, %1473
  %1475 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i32 0, i32 0), double %1456, double %1465, double %1474)
  %1476 = load %struct.object*, %struct.object** %7, align 8
  %1477 = getelementptr inbounds %struct.object, %struct.object* %1476, i32 0, i32 7
  %1478 = getelementptr inbounds [3 x double], [3 x double]* %1477, i64 0, i64 0
  %1479 = load double, double* %1478, align 8
  %1480 = load %struct.object*, %struct.object** %7, align 8
  %1481 = getelementptr inbounds %struct.object, %struct.object* %1480, i32 0, i32 7
  %1482 = getelementptr inbounds [3 x double], [3 x double]* %1481, i64 0, i64 1
  %1483 = load double, double* %1482, align 8
  %1484 = load %struct.object*, %struct.object** %7, align 8
  %1485 = getelementptr inbounds %struct.object, %struct.object* %1484, i32 0, i32 7
  %1486 = getelementptr inbounds [3 x double], [3 x double]* %1485, i64 0, i64 2
  %1487 = load double, double* %1486, align 8
  %1488 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i32 0, i32 0), double %1479, double %1483, double %1487)
  %1489 = load %struct.object*, %struct.object** %7, align 8
  %1490 = getelementptr inbounds %struct.object, %struct.object* %1489, i32 0, i32 6
  %1491 = getelementptr inbounds [3 x double], [3 x double]* %1490, i64 0, i64 0
  %1492 = load double, double* %1491, align 8
  %1493 = load %struct.object*, %struct.object** %7, align 8
  %1494 = getelementptr inbounds %struct.object, %struct.object* %1493, i32 0, i32 6
  %1495 = getelementptr inbounds [3 x double], [3 x double]* %1494, i64 0, i64 1
  %1496 = load double, double* %1495, align 8
  %1497 = load %struct.object*, %struct.object** %7, align 8
  %1498 = getelementptr inbounds %struct.object, %struct.object* %1497, i32 0, i32 6
  %1499 = getelementptr inbounds [3 x double], [3 x double]* %1498, i64 0, i64 2
  %1500 = load double, double* %1499, align 8
  %1501 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i32 0, i32 0), double %1492, double %1496, double %1500)
  %1502 = load %struct.object*, %struct.object** %7, align 8
  %1503 = getelementptr inbounds %struct.object, %struct.object* %1502, i32 0, i32 8
  %1504 = getelementptr inbounds [3 x double], [3 x double]* %1503, i64 0, i64 0
  %1505 = load double, double* %1504, align 8
  %1506 = load %struct.object*, %struct.object** %7, align 8
  %1507 = getelementptr inbounds %struct.object, %struct.object* %1506, i32 0, i32 8
  %1508 = getelementptr inbounds [3 x double], [3 x double]* %1507, i64 0, i64 1
  %1509 = load double, double* %1508, align 8
  %1510 = load %struct.object*, %struct.object** %7, align 8
  %1511 = getelementptr inbounds %struct.object, %struct.object* %1510, i32 0, i32 8
  %1512 = getelementptr inbounds [3 x double], [3 x double]* %1511, i64 0, i64 2
  %1513 = load double, double* %1512, align 8
  %1514 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i32 0, i32 0), double %1505, double %1509, double %1513)
  %1515 = load %struct.object*, %struct.object** %7, align 8
  %1516 = getelementptr inbounds %struct.object, %struct.object* %1515, i32 0, i32 8
  %1517 = getelementptr inbounds [3 x double], [3 x double]* %1516, i64 0, i64 0
  %1518 = load double, double* %1517, align 8
  %1519 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %1520 = load i32, i32* @x_block_size, align 4
  %1521 = mul nsw i32 %1519, %1520
  %1522 = sitofp i32 %1521 to double
  %1523 = fmul double %1518, %1522
  %1524 = load %struct.object*, %struct.object** %7, align 8
  %1525 = getelementptr inbounds %struct.object, %struct.object* %1524, i32 0, i32 8
  %1526 = getelementptr inbounds [3 x double], [3 x double]* %1525, i64 0, i64 1
  %1527 = load double, double* %1526, align 8
  %1528 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %1529 = load i32, i32* @y_block_size, align 4
  %1530 = mul nsw i32 %1528, %1529
  %1531 = sitofp i32 %1530 to double
  %1532 = fmul double %1527, %1531
  %1533 = load %struct.object*, %struct.object** %7, align 8
  %1534 = getelementptr inbounds %struct.object, %struct.object* %1533, i32 0, i32 8
  %1535 = getelementptr inbounds [3 x double], [3 x double]* %1534, i64 0, i64 2
  %1536 = load double, double* %1535, align 8
  %1537 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %1538 = load i32, i32* @z_block_size, align 4
  %1539 = mul nsw i32 %1537, %1538
  %1540 = sitofp i32 %1539 to double
  %1541 = fmul double %1536, %1540
  %1542 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i32 0, i32 0), double %1523, double %1532, double %1541)
  br label %1543

; <label>:1543:                                   ; preds = %1408
  %1544 = load i32, i32* %1, align 4
  %1545 = add nsw i32 %1544, 1
  store i32 %1545, i32* %1, align 4
  br label %1194

; <label>:1546:                                   ; preds = %1194
  br label %1547

; <label>:1547:                                   ; preds = %1546, %1189
  %1548 = load i32, i32* @num_tsteps, align 4
  %1549 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i32 0, i32 0), i32 %1548)
  %1550 = load i32, i32* @stages_per_ts, align 4
  %1551 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.141, i32 0, i32 0), i32 %1550)
  %1552 = load i32, i32* @checksum_freq, align 4
  %1553 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142, i32 0, i32 0), i32 %1552)
  %1554 = load i32, i32* @refine_freq, align 4
  %1555 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i32 0, i32 0), i32 %1554)
  %1556 = load i32, i32* @plot_freq, align 4
  %1557 = icmp ne i32 %1556, 0
  br i1 %1557, label %1558, label %1561

; <label>:1558:                                   ; preds = %1547
  %1559 = load i32, i32* @plot_freq, align 4
  %1560 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i32 0, i32 0), i32 %1559)
  br label %1563

; <label>:1561:                                   ; preds = %1547
  %1562 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.145, i32 0, i32 0))
  br label %1563

; <label>:1563:                                   ; preds = %1561, %1558
  %1564 = load i32, i32* @num_vars, align 4
  %1565 = load i32, i32* @stencil, align 4
  %1566 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.146, i32 0, i32 0), i32 %1564, i32 %1565)
  %1567 = load i32, i32* @comm_vars, align 4
  %1568 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.147, i32 0, i32 0), i32 %1567)
  %1569 = load i32, i32* @error_tol, align 4
  %1570 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i32 0, i32 0), i32 %1569)
  br label %1571

; <label>:1571:                                   ; preds = %1563, %1129
  br label %1572

; <label>:1572:                                   ; preds = %1571, %29
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @calculate_results() #0 {
  %1 = alloca [128 x double], align 16
  %2 = alloca i32, align 4
  %3 = load double, double* @timer_all, align 8
  %4 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 0
  store double %3, double* %4, align 16
  store i32 0, i32* %2, align 4
  br label %5

; <label>:5:                                      ; preds = %13, %0
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 9
  br i1 %7, label %8, label %16

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %2, align 4
  %10 = add nsw i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %11
  store double 0.000000e+00, double* %12, align 8
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* %2, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %2, align 4
  br label %5

; <label>:16:                                     ; preds = %5
  store i32 0, i32* %2, align 4
  br label %17

; <label>:17:                                     ; preds = %69, %16
  %18 = load i32, i32* %2, align 4
  %19 = icmp slt i32 %18, 3
  br i1 %19, label %20, label %72

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* %2, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = load i32, i32* %2, align 4
  %26 = mul nsw i32 9, %25
  %27 = add nsw i32 10, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %28
  store double %24, double* %29, align 8
  %30 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 1
  %31 = load double, double* %30, align 8
  %32 = fadd double %31, %24
  store double %32, double* %30, align 8
  %33 = load i32, i32* %2, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %34
  %36 = load double, double* %35, align 8
  %37 = load i32, i32* %2, align 4
  %38 = mul nsw i32 9, %37
  %39 = add nsw i32 14, %38
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %40
  store double %36, double* %41, align 8
  %42 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 5
  %43 = load double, double* %42, align 8
  %44 = fadd double %43, %36
  store double %44, double* %42, align 8
  %45 = load i32, i32* %2, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %46
  %48 = load double, double* %47, align 8
  %49 = load i32, i32* %2, align 4
  %50 = mul nsw i32 9, %49
  %51 = add nsw i32 15, %50
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %52
  store double %48, double* %53, align 8
  %54 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 6
  %55 = load double, double* %54, align 16
  %56 = fadd double %55, %48
  store double %56, double* %54, align 16
  %57 = load i32, i32* %2, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %58
  %60 = load double, double* %59, align 8
  %61 = load i32, i32* %2, align 4
  %62 = mul nsw i32 9, %61
  %63 = add nsw i32 16, %62
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %64
  store double %60, double* %65, align 8
  %66 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 7
  %67 = load double, double* %66, align 8
  %68 = fadd double %67, %60
  store double %68, double* %66, align 8
  br label %69

; <label>:69:                                     ; preds = %20
  %70 = load i32, i32* %2, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %2, align 4
  br label %17

; <label>:72:                                     ; preds = %17
  %73 = load double, double* @timer_comm_all, align 8
  %74 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 37
  store double %73, double* %74, align 8
  %75 = load double, double* @timer_calc_all, align 8
  %76 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 38
  store double %75, double* %76, align 16
  %77 = load double, double* @timer_cs_all, align 8
  %78 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 39
  store double %77, double* %78, align 8
  %79 = load double, double* @timer_cs_calc, align 8
  %80 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 41
  store double %79, double* %80, align 8
  %81 = load double, double* @timer_refine_all, align 8
  %82 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 42
  store double %81, double* %82, align 16
  %83 = load double, double* @timer_refine_co, align 8
  %84 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 43
  store double %83, double* %84, align 8
  %85 = load double, double* @timer_refine_mr, align 8
  %86 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 44
  store double %85, double* %86, align 16
  %87 = load double, double* @timer_refine_cc, align 8
  %88 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 45
  store double %87, double* %88, align 8
  %89 = load double, double* @timer_refine_sb, align 8
  %90 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 46
  store double %89, double* %90, align 16
  %91 = load double, double* @timer_cb_all, align 8
  %92 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 47
  store double %91, double* %92, align 8
  %93 = load double, double* @timer_target_all, align 8
  %94 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 52
  store double %93, double* %94, align 16
  %95 = load double, double* @timer_target_rb, align 8
  %96 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 53
  store double %95, double* %96, align 8
  %97 = load double, double* @timer_target_dc, align 8
  %98 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 54
  store double %97, double* %98, align 16
  %99 = load double, double* @timer_target_cb, align 8
  %100 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 58
  store double %99, double* %100, align 16
  %101 = load double, double* @timer_target_ab, align 8
  %102 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 59
  store double %101, double* %102, align 8
  %103 = load double, double* @timer_target_da, align 8
  %104 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 60
  store double %103, double* %104, align 16
  %105 = load double, double* @timer_target_sb, align 8
  %106 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 61
  store double %105, double* %106, align 8
  %107 = load double, double* @timer_plot, align 8
  %108 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 67
  store double %107, double* %108, align 8
  store i32 0, i32* %2, align 4
  br label %109

; <label>:109:                                    ; preds = %117, %72
  %110 = load i32, i32* %2, align 4
  %111 = icmp slt i32 %110, 9
  br i1 %111, label %112, label %120

; <label>:112:                                    ; preds = %109
  %113 = load i32, i32* %2, align 4
  %114 = add nsw i32 68, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %115
  store double 0.000000e+00, double* %116, align 8
  br label %117

; <label>:117:                                    ; preds = %112
  %118 = load i32, i32* %2, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %2, align 4
  br label %109

; <label>:120:                                    ; preds = %109
  store i32 0, i32* %2, align 4
  br label %121

; <label>:121:                                    ; preds = %164, %120
  %122 = load i32, i32* %2, align 4
  %123 = icmp slt i32 %122, 3
  br i1 %123, label %124, label %167

; <label>:124:                                    ; preds = %121
  %125 = load i32, i32* %2, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = sitofp i32 %128 to double
  %130 = load i32, i32* %2, align 4
  %131 = mul nsw i32 9, %130
  %132 = add nsw i32 83, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %133
  store double %129, double* %134, align 8
  %135 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 74
  %136 = load double, double* %135, align 16
  %137 = fadd double %136, %129
  store double %137, double* %135, align 16
  %138 = load i32, i32* %2, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sitofp i32 %141 to double
  %143 = load i32, i32* %2, align 4
  %144 = mul nsw i32 9, %143
  %145 = add nsw i32 84, %144
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %146
  store double %142, double* %147, align 8
  %148 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 75
  %149 = load double, double* %148, align 8
  %150 = fadd double %149, %142
  store double %150, double* %148, align 8
  %151 = load i32, i32* %2, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = sitofp i32 %154 to double
  %156 = load i32, i32* %2, align 4
  %157 = mul nsw i32 9, %156
  %158 = add nsw i32 85, %157
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %159
  store double %155, double* %160, align 8
  %161 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 76
  %162 = load double, double* %161, align 16
  %163 = fadd double %162, %155
  store double %163, double* %161, align 16
  br label %164

; <label>:164:                                    ; preds = %124
  %165 = load i32, i32* %2, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %2, align 4
  br label %121

; <label>:167:                                    ; preds = %121
  %168 = load i32, i32* @num_refined, align 4
  %169 = sitofp i32 %168 to double
  %170 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 104
  store double %169, double* %170, align 16
  %171 = load i32, i32* @num_reformed, align 4
  %172 = sitofp i32 %171 to double
  %173 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 105
  store double %172, double* %173, align 8
  %174 = load i32, i32* @counter_malloc, align 4
  %175 = sitofp i32 %174 to double
  %176 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 110
  store double %175, double* %176, align 16
  %177 = load double, double* @size_malloc, align 8
  %178 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 111
  store double %177, double* %178, align 8
  %179 = load i32, i32* @counter_malloc_init, align 4
  %180 = sitofp i32 %179 to double
  %181 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 112
  store double %180, double* %181, align 16
  %182 = load double, double* @size_malloc_init, align 8
  %183 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 113
  store double %182, double* %183, align 8
  %184 = load i32, i32* @counter_malloc, align 4
  %185 = load i32, i32* @counter_malloc_init, align 4
  %186 = sub nsw i32 %184, %185
  %187 = sitofp i32 %186 to double
  %188 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 114
  store double %187, double* %188, align 16
  %189 = load double, double* @size_malloc, align 8
  %190 = load double, double* @size_malloc_init, align 8
  %191 = fsub double %189, %190
  %192 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 115
  store double %191, double* %192, align 8
  store i32 0, i32* %2, align 4
  br label %193

; <label>:193:                                    ; preds = %204, %167
  %194 = load i32, i32* %2, align 4
  %195 = icmp slt i32 %194, 128
  br i1 %195, label %196, label %207

; <label>:196:                                    ; preds = %193
  %197 = load i32, i32* %2, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %198
  %200 = load double, double* %199, align 8
  %201 = load i32, i32* %2, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %202
  store double %200, double* %203, align 8
  br label %204

; <label>:204:                                    ; preds = %196
  %205 = load i32, i32* %2, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %2, align 4
  br label %193

; <label>:207:                                    ; preds = %193
  ret void
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare i32 @fclose(%struct._IO_FILE*) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define void @init_profile() #0 {
  %1 = alloca i32, align 4
  store double 0.000000e+00, double* @timer_all, align 8
  store double 0.000000e+00, double* @timer_comm_all, align 8
  store i32 0, i32* %1, align 4
  br label %2

; <label>:2:                                      ; preds = %18, %0
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 3
  br i1 %4, label %5, label %21

; <label>:5:                                      ; preds = %2
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %7
  store double 0.000000e+00, double* %8, align 8
  %9 = load i32, i32* %1, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %10
  store double 0.000000e+00, double* %11, align 8
  %12 = load i32, i32* %1, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %13
  store double 0.000000e+00, double* %14, align 8
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %16
  store double 0.000000e+00, double* %17, align 8
  br label %18

; <label>:18:                                     ; preds = %5
  %19 = load i32, i32* %1, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %1, align 4
  br label %2

; <label>:21:                                     ; preds = %2
  store double 0.000000e+00, double* @timer_calc_all, align 8
  store double 0.000000e+00, double* @timer_cs_all, align 8
  store double 0.000000e+00, double* @timer_cs_calc, align 8
  store double 0.000000e+00, double* @timer_refine_all, align 8
  store double 0.000000e+00, double* @timer_refine_co, align 8
  store double 0.000000e+00, double* @timer_refine_mr, align 8
  store double 0.000000e+00, double* @timer_refine_cc, align 8
  store double 0.000000e+00, double* @timer_refine_sb, align 8
  store double 0.000000e+00, double* @timer_cb_all, align 8
  store double 0.000000e+00, double* @timer_target_all, align 8
  store double 0.000000e+00, double* @timer_target_rb, align 8
  store double 0.000000e+00, double* @timer_target_dc, align 8
  store double 0.000000e+00, double* @timer_target_cb, align 8
  store double 0.000000e+00, double* @timer_target_ab, align 8
  store double 0.000000e+00, double* @timer_target_da, align 8
  store double 0.000000e+00, double* @timer_target_sb, align 8
  store double 0.000000e+00, double* @timer_plot, align 8
  store i64 0, i64* @total_blocks, align 8
  store i32 0, i32* @nrs, align 4
  store i32 0, i32* @nps, align 4
  store i32 0, i32* @num_refined, align 4
  store i32 0, i32* @num_reformed, align 4
  store i32 0, i32* %1, align 4
  br label %22

; <label>:22:                                     ; preds = %35, %21
  %23 = load i32, i32* %1, align 4
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %38

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* %1, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %27
  store i32 0, i32* %28, align 4
  %29 = load i32, i32* %1, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %30
  store i32 0, i32* %31, align 4
  %32 = load i32, i32* %1, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %33
  store i32 0, i32* %34, align 4
  br label %35

; <label>:35:                                     ; preds = %25
  %36 = load i32, i32* %1, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %1, align 4
  br label %22

; <label>:38:                                     ; preds = %22
  store i32 0, i32* @total_red, align 4
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
