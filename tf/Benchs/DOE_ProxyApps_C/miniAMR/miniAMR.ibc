; ModuleID = 'miniAMR.rbc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.block = type { i32, i32, i32, i32, i32, i32, i32, [6 x i32], [6 x i32], [6 x [2 x [2 x i32]]], [3 x i32], double**** }
%struct.parent = type { i32, i32, i32, i32, i32, i32, [8 x i32], [8 x i32], [3 x i32] }
%struct.sorted_block = type { i32, i32 }
%struct.object = type { i32, i32, [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@cur_max_level = common global i32 0, align 4
@max_active_block = common global i32 0, align 4
@blocks = common global %struct.block* null, align 8
@block_start = common global i32* null, align 8
@p2 = common global i32* null, align 8
@npx = common global i32 0, align 4
@init_block_x = common global i32 0, align 4
@npy = common global i32 0, align 4
@init_block_y = common global i32 0, align 4
@num_active = common global i32 0, align 4
@max_num_blocks = common global i32 0, align 4
@my_pe = common global i32 0, align 4
@local_max_b = common global i32 0, align 4
@num_blocks = common global i32* null, align 8
@max_active_parent = common global i32 0, align 4
@parents = common global %struct.parent* null, align 8
@max_num_parents = common global i32 0, align 4
@num_parents = common global i32 0, align 4
@num_refined = common global i32 0, align 4
@num_refine = common global i32 0, align 4
@x_block_half = common global i32 0, align 4
@y_block_half = common global i32 0, align 4
@z_block_half = common global i32 0, align 4
@num_vars = common global i32 0, align 4
@stencil = common global i32 0, align 4
@num_reformed = common global i32 0, align 4
@sorted_index = common global i32* null, align 8
@sorted_list = common global %struct.sorted_block* null, align 8
@num_pes = common global i32 0, align 4
@target_active = common global i32 0, align 4
@target_max = common global i32 0, align 4
@target_min = common global i32 0, align 4
@uniform_refine = common global i32 0, align 4
@x_block_size = common global i32 0, align 4
@y_block_size = common global i32 0, align 4
@z_block_size = common global i32 0, align 4
@comm_vars = common global i32 0, align 4
@init_block_z = common global i32 0, align 4
@reorder = common global i32 0, align 4
@npz = common global i32 0, align 4
@inbalance = common global i32 0, align 4
@refine_freq = common global i32 0, align 4
@report_diffusion = common global i32 0, align 4
@checksum_freq = common global i32 0, align 4
@stages_per_ts = common global i32 0, align 4
@error_tol = common global i32 0, align 4
@num_tsteps = common global i32 0, align 4
@report_perf = common global i32 0, align 4
@plot_freq = common global i32 0, align 4
@lb_opt = common global i32 0, align 4
@block_change = common global i32 0, align 4
@code = common global i32 0, align 4
@permute = common global i32 0, align 4
@nonblocking = common global i32 0, align 4
@refine_ghost = common global i32 0, align 4
@global_active = common global i32 0, align 4
@tol = common global double 0.000000e+00, align 8
@grid_sum = common global double* null, align 8
@p8 = common global i32* null, align 8
@mesh_size = common global [3 x i32] zeroinitializer, align 4
@max_mesh_size = common global i32 0, align 4
@from = common global i32* null, align 8
@to = common global i32* null, align 8
@msg_len = common global [3 x [4 x i32]] zeroinitializer, align 16
@global_max_b = common global i32 0, align 4
@num_objects = common global i32 0, align 4
@objects = common global %struct.object* null, align 8
@average = common global [128 x double] zeroinitializer, align 16
@stddev = common global [128 x double] zeroinitializer, align 16
@minimum = common global [128 x double] zeroinitializer, align 16
@maximum = common global [128 x double] zeroinitializer, align 16
@timer_all = common global double 0.000000e+00, align 8
@timer_comm_all = common global double 0.000000e+00, align 8
@timer_comm_dir = common global [3 x double] zeroinitializer, align 16
@timer_comm_same = common global [3 x double] zeroinitializer, align 16
@timer_comm_diff = common global [3 x double] zeroinitializer, align 16
@timer_comm_bc = common global [3 x double] zeroinitializer, align 16
@timer_calc_all = common global double 0.000000e+00, align 8
@timer_cs_all = common global double 0.000000e+00, align 8
@timer_cs_calc = common global double 0.000000e+00, align 8
@timer_refine_all = common global double 0.000000e+00, align 8
@timer_refine_co = common global double 0.000000e+00, align 8
@timer_refine_mr = common global double 0.000000e+00, align 8
@timer_refine_sb = common global double 0.000000e+00, align 8
@timer_refine_cc = common global double 0.000000e+00, align 8
@timer_cb_all = common global double 0.000000e+00, align 8
@timer_target_all = common global double 0.000000e+00, align 8
@timer_target_rb = common global double 0.000000e+00, align 8
@timer_target_dc = common global double 0.000000e+00, align 8
@timer_target_cb = common global double 0.000000e+00, align 8
@timer_target_ab = common global double 0.000000e+00, align 8
@timer_target_da = common global double 0.000000e+00, align 8
@timer_target_sb = common global double 0.000000e+00, align 8
@timer_plot = common global double 0.000000e+00, align 8
@total_blocks = common global i64 0, align 8
@nb_min = common global i32 0, align 4
@nb_max = common global i32 0, align 4
@nrs = common global i32 0, align 4
@nps = common global i32 0, align 4
@counter_bc = common global [3 x i32] zeroinitializer, align 4
@counter_same = common global [3 x i32] zeroinitializer, align 4
@counter_diff = common global [3 x i32] zeroinitializer, align 4
@counter_malloc = common global i32 0, align 4
@size_malloc = common global double 0.000000e+00, align 8
@counter_malloc_init = common global i32 0, align 4
@size_malloc_init = common global double 0.000000e+00, align 8
@total_red = common global i32 0, align 4
@.str = private unnamed_addr constant [37 x i8] c"ERROR: Need more blocks %d %d on %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"ERROR: Need more parents\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"Error: No inactive blocks available %d %d %d\0A\00", align 1
@split_blocks.side = internal global [6 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 0, i32 2], [2 x i32] [i32 4, i32 6]], [2 x [2 x i32]] [[2 x i32] [i32 1, i32 3], [2 x i32] [i32 5, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 4, i32 5]], [2 x [2 x i32]] [[2 x i32] [i32 2, i32 3], [2 x i32] [i32 6, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 3]], [2 x [2 x i32]] [[2 x i32] [i32 4, i32 5], [2 x i32] [i32 6, i32 7]]], align 16
@split_blocks.off = internal global [6 x i32] [i32 1, i32 -1, i32 2, i32 -2, i32 4, i32 -4], align 16
@.str.3 = private unnamed_addr constant [55 x i8] c"%d ERROR: internal misconnect block %d num %d c %d %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"%d ERROR: misconnected b %d %d l %d nei[%d] %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"ERROR: del_sorted_list on %d - number %d not found\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"Out of free blocks in consolidate_blocks %d\0A\00", align 1
@consolidate_blocks.side = internal global [6 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 0, i32 2], [2 x i32] [i32 4, i32 6]], [2 x [2 x i32]] [[2 x i32] [i32 1, i32 3], [2 x i32] [i32 5, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 4, i32 5]], [2 x [2 x i32]] [[2 x i32] [i32 2, i32 3], [2 x i32] [i32 6, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 3]], [2 x [2 x i32]] [[2 x i32] [i32 4, i32 5], [2 x i32] [i32 6, i32 7]]], align 16
@.str.6 = private unnamed_addr constant [50 x i8] c"%d ERROR: %d con %d block %d c %d wrong level %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [53 x i8] c"ERROR: find_sorted_list on %d - number %d not found\0A\00", align 1
@comm.permutations = private unnamed_addr constant [6 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 2], [3 x i32] [i32 1, i32 2, i32 0], [3 x i32] [i32 2, i32 0, i32 1], [3 x i32] [i32 0, i32 2, i32 1], [3 x i32] [i32 1, i32 0, i32 2], [3 x i32] [i32 2, i32 1, i32 0]], align 16
@.str.9 = private unnamed_addr constant [27 x i8] c"ERROR: misconnected block\0A\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"%d var %d sum %lf old %lf diff %lf tol %lf\0A\00", align 1
@.str.1.11 = private unnamed_addr constant [65 x i8] c"Time step %d sum %lf (old %lf) variable %d difference too large\0A\00", align 1
@next = internal global i32 0, align 4
@table = internal global [344 x i32] zeroinitializer, align 16
@.str.14 = private unnamed_addr constant [13 x i8] c"--max_blocks\00", align 1
@.str.1.15 = private unnamed_addr constant [16 x i8] c"--target_active\00", align 1
@.str.2.16 = private unnamed_addr constant [13 x i8] c"--target_max\00", align 1
@.str.3.17 = private unnamed_addr constant [13 x i8] c"--target_min\00", align 1
@.str.4.18 = private unnamed_addr constant [13 x i8] c"--num_refine\00", align 1
@.str.5.19 = private unnamed_addr constant [15 x i8] c"--block_change\00", align 1
@.str.6.20 = private unnamed_addr constant [17 x i8] c"--uniform_refine\00", align 1
@.str.7.21 = private unnamed_addr constant [5 x i8] c"--nx\00", align 1
@.str.8.22 = private unnamed_addr constant [5 x i8] c"--ny\00", align 1
@.str.9.23 = private unnamed_addr constant [5 x i8] c"--nz\00", align 1
@.str.10.24 = private unnamed_addr constant [11 x i8] c"--num_vars\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"--comm_vars\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"--init_x\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"--init_y\00", align 1
@.str.14.25 = private unnamed_addr constant [9 x i8] c"--init_z\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"--refine_freq\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"--report_diffusion\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"--error_tol\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"--num_tsteps\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"--stages_per_ts\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"--checksum_freq\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"--stencil\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"--permute\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"--report_perf\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"--plot_freq\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"--code\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"--refine_ghost\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"--num_objects\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"main.c\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"--object\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"object number greater than num_objects\0A\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.32 = private unnamed_addr constant [40 x i8] c"** Error ** Unknown input parameter %s\0A\00", align 1
@.str.66 = private unnamed_addr constant [46 x i8] c"initial blocks on processor must be positive\0A\00", align 1
@.str.67 = private unnamed_addr constant [33 x i8] c"max_num_blocks not large enough\0A\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"block size must be positive\0A\00", align 1
@.str.69 = private unnamed_addr constant [40 x i8] c"block size in x direction must be even\0A\00", align 1
@.str.70 = private unnamed_addr constant [40 x i8] c"block size in y direction must be even\0A\00", align 1
@.str.71 = private unnamed_addr constant [40 x i8] c"block size in z direction must be even\0A\00", align 1
@.str.72 = private unnamed_addr constant [54 x i8] c"Only one of target_active and target_max can be used\0A\00", align 1
@.str.73 = private unnamed_addr constant [54 x i8] c"Only one of target_active and target_min can be used\0A\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"illegal value for target_active\0A\00", align 1
@.str.75 = private unnamed_addr constant [30 x i8] c"illegal value for target_max\0A\00", align 1
@.str.76 = private unnamed_addr constant [30 x i8] c"illegal value for target_min\0A\00", align 1
@.str.77 = private unnamed_addr constant [50 x i8] c"number of refinement levels must be non-negative\0A\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"number of variables must be positive\0A\00", align 1
@.str.79 = private unnamed_addr constant [59 x i8] c"number of processors used does not match number allocated\0A\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"illegal value for stencil\0A\00", align 1
@.str.81 = private unnamed_addr constant [76 x i8] c"WARNING: 27 point stencil with non-uniform refinement: answers may diverge\0A\00", align 1
@.str.82 = private unnamed_addr constant [25 x i8] c"code must be 0, 1, or 2\0A\00", align 1
@.str.33 = private unnamed_addr constant [49 x i8] c"(Optional) command line input is of the form: \0A\0A\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"--nx - block size x (even && > 0)\0A\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c"--ny - block size y (even && > 0)\0A\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"--nz - block size z (even && > 0)\0A\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"--init_x - initial blocks in x (> 0)\0A\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"--init_y - initial blocks in y (> 0)\0A\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"--init_z - initial blocks in z (> 0)\0A\00", align 1
@.str.40 = private unnamed_addr constant [54 x i8] c"--reorder - ordering of blocks if initial number > 1\0A\00", align 1
@.str.41 = private unnamed_addr constant [50 x i8] c"--max_blocks - maximun number of blocks per core\0A\00", align 1
@.str.42 = private unnamed_addr constant [54 x i8] c"--num_refine - (>= 0) number of levels of refinement\0A\00", align 1
@.str.43 = private unnamed_addr constant [75 x i8] c"--block_change - (>= 0) number of levels a block can change in a timestep\0A\00", align 1
@.str.44 = private unnamed_addr constant [57 x i8] c"--uniform_refine - if 1, then grid is uniformly refined\0A\00", align 1
@.str.45 = private unnamed_addr constant [69 x i8] c"--refine_freq - frequency (in timesteps) of checking for refinement\0A\00", align 1
@.str.46 = private unnamed_addr constant [70 x i8] c"--target_active - (>= 0) target number of blocks per core, none if 0\0A\00", align 1
@.str.47 = private unnamed_addr constant [64 x i8] c"--target_max - (>= 0) max number of blocks per core, none if 0\0A\00", align 1
@.str.48 = private unnamed_addr constant [64 x i8] c"--target_min - (>= 0) min number of blocks per core, none if 0\0A\00", align 1
@.str.49 = private unnamed_addr constant [40 x i8] c"--num_vars - number of variables (> 0)\0A\00", align 1
@.str.50 = private unnamed_addr constant [54 x i8] c"--comm_vars - number of vars to communicate together\0A\00", align 1
@.str.51 = private unnamed_addr constant [42 x i8] c"--num_tsteps - number of timesteps (> 0)\0A\00", align 1
@.str.52 = private unnamed_addr constant [59 x i8] c"--stages_per_ts - number of comm/calc stages per timestep\0A\00", align 1
@.str.53 = private unnamed_addr constant [54 x i8] c"--checksum_freq - number of stages between checksums\0A\00", align 1
@.str.54 = private unnamed_addr constant [79 x i8] c"--stencil - 7 or 27 point (27 will not work with refinement (except uniform))\0A\00", align 1
@.str.55 = private unnamed_addr constant [40 x i8] c"--error_tol - (e^{-error_tol} ; >= 0) \0A\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"--report_diffusion - (>= 0) none if 0\0A\00", align 1
@.str.57 = private unnamed_addr constant [25 x i8] c"--report_perf - 0, 1, 2\0A\00", align 1
@.str.58 = private unnamed_addr constant [64 x i8] c"--refine_freq - frequency (timesteps) of plotting (0 for none)\0A\00", align 1
@.str.59 = private unnamed_addr constant [57 x i8] c"--code - closely minic communication of different codes\0A\00", align 1
@.str.60 = private unnamed_addr constant [76 x i8] c"         0 minimal sends, 1 send ghosts, 2 send ghosts and process on send\0A\00", align 1
@.str.61 = private unnamed_addr constant [51 x i8] c"--permute - altenates directions in communication\0A\00", align 1
@.str.62 = private unnamed_addr constant [95 x i8] c"--refine_ghost - use full extent of block (including ghosts) to determine if block is refined\0A\00", align 1
@.str.63 = private unnamed_addr constant [62 x i8] c"--num_objects - (>= 0) number of objects to cause refinement\0A\00", align 1
@.str.64 = private unnamed_addr constant [64 x i8] c"--object - type, position, movement, size, size rate of change\0A\00", align 1
@.str.65 = private unnamed_addr constant [57 x i8] c"All associated settings are integers except for objects\0A\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"undefined object %d\0A\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.1.87 = private unnamed_addr constant [16 x i8] c"%d %d %d %d %d\0A\00", align 1
@.str.2.88 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.3.89 = private unnamed_addr constant [13 x i8] c"%d %d %d %d\0A\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"1.0 provisional\00", align 1
@.str.1.93 = private unnamed_addr constant [13 x i8] c"results.yaml\00", align 1
@.str.2.94 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3.95 = private unnamed_addr constant [15 x i8] c"code: miniAMR\0A\00", align 1
@.str.4.96 = private unnamed_addr constant [13 x i8] c"version: %s\0A\00", align 1
@.str.5.97 = private unnamed_addr constant [11 x i8] c"ranks: %d\0A\00", align 1
@.str.6.98 = private unnamed_addr constant [18 x i8] c"init_block_x: %d\0A\00", align 1
@.str.7.99 = private unnamed_addr constant [18 x i8] c"init_block_y: %d\0A\00", align 1
@.str.8.100 = private unnamed_addr constant [18 x i8] c"init_block_z: %d\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [18 x i8] c"x_block_size: %d\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [18 x i8] c"y_block_size: %d\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [18 x i8] c"z_block_size: %d\0A\00", align 1
@.str.12.104 = private unnamed_addr constant [13 x i8] c"permute: %d\0A\00", align 1
@.str.13.105 = private unnamed_addr constant [24 x i8] c"max_blocks_allowed: %d\0A\00", align 1
@.str.14.106 = private unnamed_addr constant [10 x i8] c"code: %d\0A\00", align 1
@.str.15.107 = private unnamed_addr constant [16 x i8] c"num_refine: %d\0A\00", align 1
@.str.16.108 = private unnamed_addr constant [18 x i8] c"block_change: %d\0A\00", align 1
@.str.17.109 = private unnamed_addr constant [18 x i8] c"refine_ghost: %d\0A\00", align 1
@.str.18.110 = private unnamed_addr constant [20 x i8] c"uniform_refine: %d\0A\00", align 1
@.str.19.111 = private unnamed_addr constant [17 x i8] c"num_objects: %d\0A\00", align 1
@.str.20.112 = private unnamed_addr constant [15 x i8] c"obj%dtype: %d\0A\00", align 1
@.str.21.113 = private unnamed_addr constant [17 x i8] c"obj%dbounce: %d\0A\00", align 1
@.str.22.114 = private unnamed_addr constant [20 x i8] c"obj%dcenter_x: %lf\0A\00", align 1
@.str.23.115 = private unnamed_addr constant [20 x i8] c"obj%dcenter_y: %lf\0A\00", align 1
@.str.24.116 = private unnamed_addr constant [20 x i8] c"obj%dcenter_z: %lf\0A\00", align 1
@.str.25.117 = private unnamed_addr constant [18 x i8] c"obj%dmove_x: %lf\0A\00", align 1
@.str.26.118 = private unnamed_addr constant [18 x i8] c"obj%dmove_y: %lf\0A\00", align 1
@.str.27.119 = private unnamed_addr constant [18 x i8] c"obj%dmove_z: %lf\0A\00", align 1
@.str.28.120 = private unnamed_addr constant [18 x i8] c"obj%dsize_x: %lf\0A\00", align 1
@.str.29.121 = private unnamed_addr constant [18 x i8] c"obj%dsize_y: %lf\0A\00", align 1
@.str.30.122 = private unnamed_addr constant [18 x i8] c"obj%dsize_z: %lf\0A\00", align 1
@.str.31.123 = private unnamed_addr constant [17 x i8] c"obj%dinc_x: %lf\0A\00", align 1
@.str.32.124 = private unnamed_addr constant [17 x i8] c"obj%dinc_y: %lf\0A\00", align 1
@.str.33.125 = private unnamed_addr constant [17 x i8] c"obj%dinc_z: %lf\0A\00", align 1
@.str.34.126 = private unnamed_addr constant [16 x i8] c"num_tsteps: %d\0A\00", align 1
@.str.35.127 = private unnamed_addr constant [25 x i8] c"stages_per_timestep: %d\0A\00", align 1
@.str.36.128 = private unnamed_addr constant [19 x i8] c"checksum_freq: %d\0A\00", align 1
@.str.37.129 = private unnamed_addr constant [17 x i8] c"refine_freq: %d\0A\00", align 1
@.str.38.130 = private unnamed_addr constant [15 x i8] c"plot_freq: %d\0A\00", align 1
@.str.39.131 = private unnamed_addr constant [14 x i8] c"num_vars: %d\0A\00", align 1
@.str.40.132 = private unnamed_addr constant [13 x i8] c"stencil: %d\0A\00", align 1
@.str.41.133 = private unnamed_addr constant [15 x i8] c"comm_vars: %d\0A\00", align 1
@.str.42.134 = private unnamed_addr constant [15 x i8] c"error_tol: %d\0A\00", align 1
@.str.43.135 = private unnamed_addr constant [17 x i8] c"total_time: %lf\0A\00", align 1
@.str.44.136 = private unnamed_addr constant [18 x i8] c"memory_used: %lf\0A\00", align 1
@.str.45.137 = private unnamed_addr constant [19 x i8] c"compute_time: %lf\0A\00", align 1
@.str.46.138 = private unnamed_addr constant [19 x i8] c"total_gflops: %lf\0A\00", align 1
@.str.47.139 = private unnamed_addr constant [17 x i8] c"ave_gflops: %lf\0A\00", align 1
@.str.48.140 = private unnamed_addr constant [17 x i8] c"total_comm: %lf\0A\00", align 1
@.str.49.141 = private unnamed_addr constant [25 x i8] c"   total_exch_same: %lf\0A\00", align 1
@.str.50.142 = private unnamed_addr constant [25 x i8] c"   total_exch_diff: %lf\0A\00", align 1
@.str.51.143 = private unnamed_addr constant [24 x i8] c"   total_apply_bc: %lf\0A\00", align 1
@.str.52.144 = private unnamed_addr constant [30 x i8] c"   total_face_exch_same: %lf\0A\00", align 1
@.str.53.145 = private unnamed_addr constant [30 x i8] c"   total_face_exch_diff: %lf\0A\00", align 1
@.str.54.146 = private unnamed_addr constant [29 x i8] c"   total_face_bc_apply: %lf\0A\00", align 1
@.str.55.147 = private unnamed_addr constant [16 x i8] c"   x_comm: %lf\0A\00", align 1
@.str.56.148 = private unnamed_addr constant [24 x i8] c"      x_exch_same: %lf\0A\00", align 1
@.str.57.149 = private unnamed_addr constant [24 x i8] c"      x_exch_diff: %lf\0A\00", align 1
@.str.58.150 = private unnamed_addr constant [23 x i8] c"      x_apply_bc: %lf\0A\00", align 1
@.str.59.151 = private unnamed_addr constant [29 x i8] c"      x_face_exch_same: %lf\0A\00", align 1
@.str.60.152 = private unnamed_addr constant [29 x i8] c"      x_face_exch_diff: %lf\0A\00", align 1
@.str.61.153 = private unnamed_addr constant [28 x i8] c"      x_face_bc_apply: %lf\0A\00", align 1
@.str.62.154 = private unnamed_addr constant [16 x i8] c"   y_comm: %lf\0A\00", align 1
@.str.63.155 = private unnamed_addr constant [24 x i8] c"      y_exch_same: %lf\0A\00", align 1
@.str.64.156 = private unnamed_addr constant [24 x i8] c"      y_exch_diff: %lf\0A\00", align 1
@.str.65.157 = private unnamed_addr constant [23 x i8] c"      y_apply_bc: %lf\0A\00", align 1
@.str.66.158 = private unnamed_addr constant [29 x i8] c"      y_face_exch_same: %lf\0A\00", align 1
@.str.67.159 = private unnamed_addr constant [29 x i8] c"      y_face_exch_diff: %lf\0A\00", align 1
@.str.68.160 = private unnamed_addr constant [28 x i8] c"      y_face_bc_apply: %lf\0A\00", align 1
@.str.69.161 = private unnamed_addr constant [16 x i8] c"   z_comm: %lf\0A\00", align 1
@.str.70.162 = private unnamed_addr constant [24 x i8] c"      z_exch_same: %lf\0A\00", align 1
@.str.71.163 = private unnamed_addr constant [24 x i8] c"      z_exch_diff: %lf\0A\00", align 1
@.str.72.164 = private unnamed_addr constant [23 x i8] c"      z_apply_bc: %lf\0A\00", align 1
@.str.73.165 = private unnamed_addr constant [29 x i8] c"      z_face_exch_same: %lf\0A\00", align 1
@.str.74.166 = private unnamed_addr constant [29 x i8] c"      z_face_exch_diff: %lf\0A\00", align 1
@.str.75.167 = private unnamed_addr constant [28 x i8] c"      z_face_bc_apply: %lf\0A\00", align 1
@.str.76.168 = private unnamed_addr constant [19 x i8] c"gridsum_time: %lf\0A\00", align 1
@.str.77.169 = private unnamed_addr constant [22 x i8] c"   gridsum_calc: %lf\0A\00", align 1
@.str.78.170 = private unnamed_addr constant [18 x i8] c"refine_time: %lf\0A\00", align 1
@.str.79.171 = private unnamed_addr constant [25 x i8] c"   total_blocks_ts: %lf\0A\00", align 1
@.str.80.172 = private unnamed_addr constant [28 x i8] c"   total_blocks_ts_min: %d\0A\00", align 1
@.str.81.173 = private unnamed_addr constant [28 x i8] c"   total_blocks_ts_max: %d\0A\00", align 1
@.str.82.174 = private unnamed_addr constant [22 x i8] c"   blocks_split: %lf\0A\00", align 1
@.str.83.175 = private unnamed_addr constant [25 x i8] c"   blocks_reformed: %lf\0A\00", align 1
@.str.84 = private unnamed_addr constant [26 x i8] c"   time_compare_obj: %lf\0A\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"   time_mark_refine: %lf\0A\00", align 1
@.str.86.176 = private unnamed_addr constant [26 x i8] c"   time_split_block: %lf\0A\00", align 1
@.str.87 = private unnamed_addr constant [28 x i8] c"   time_total_coarsen: %lf\0A\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"   time_misc: %lf\0A\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"plot_time: %lf\0A\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"results.txt\00", align 1
@.str.91 = private unnamed_addr constant [54 x i8] c"\0A ================ Start report ===================\0A\0A\00", align 1
@.str.92.177 = private unnamed_addr constant [27 x i8] c"          Mantevo miniAMR\0A\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"          version %s\0A\0A\00", align 1
@.str.94 = private unnamed_addr constant [22 x i8] c"serial run on 1 rank\0A\00", align 1
@.str.95 = private unnamed_addr constant [38 x i8] c"initial blocks per rank %d x %d x %d\0A\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"block size %d x %d x %d\0A\00", align 1
@.str.97 = private unnamed_addr constant [29 x i8] c"Order of exchanges permuted\0A\00", align 1
@.str.98 = private unnamed_addr constant [41 x i8] c"Maximum number of blocks per rank is %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [40 x i8] c"Target number of blocks per rank is %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [44 x i8] c"Target max number of blocks per rank is %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [44 x i8] c"Target min number of blocks per rank is %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"Code set to code %d\0A\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Number of levels of refinement is %d\0A\00", align 1
@.str.104 = private unnamed_addr constant [52 x i8] c"Blocks can change by %d levels per refinement step\0A\00", align 1
@.str.105 = private unnamed_addr constant [56 x i8] c"Ghost cells will be used determine is block is refined\0A\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"\0ABlocks will be uniformly refined\0A\00", align 1
@.str.107 = private unnamed_addr constant [40 x i8] c"\0ABlocks will be refined by %d objects\0A\0A\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c"Object %d is the surface of a rectangle\0A\00", align 1
@.str.109 = private unnamed_addr constant [40 x i8] c"Object %d is the volume of a rectangle\0A\00", align 1
@.str.110 = private unnamed_addr constant [40 x i8] c"Object %d is the surface of a spheroid\0A\00", align 1
@.str.111 = private unnamed_addr constant [39 x i8] c"Object %d is the volume of a spheroid\0A\00", align 1
@.str.112 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x+ hemispheroid\0A\00", align 1
@.str.113 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of x+ hemispheroid\0A\00", align 1
@.str.114 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x- hemispheroid\0A\00", align 1
@.str.115 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of x- hemispheroid\0A\00", align 1
@.str.116 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y+ hemispheroid\0A\00", align 1
@.str.117 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of y+ hemispheroid\0A\00", align 1
@.str.118 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y- hemispheroid\0A\00", align 1
@.str.119 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of y- hemispheroid\0A\00", align 1
@.str.120 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z+ hemispheroid\0A\00", align 1
@.str.121 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of z+ hemispheroid\0A\00", align 1
@.str.122 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z- hemispheroid\0A\00", align 1
@.str.123 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of z- hemispheroid\0A\00", align 1
@.str.124 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x axis cylinder\0A\00", align 1
@.str.125 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of x axis cylinder\0A\00", align 1
@.str.126 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y axis cylinder\0A\00", align 1
@.str.127 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of y axis cylinder\0A\00", align 1
@.str.128 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z axis cylinder\0A\00", align 1
@.str.129 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of z axis cylinder\0A\00", align 1
@.str.130 = private unnamed_addr constant [22 x i8] c"Oject may leave mesh\0A\00", align 1
@.str.131 = private unnamed_addr constant [39 x i8] c"Oject center will bounce off of walls\0A\00", align 1
@.str.132 = private unnamed_addr constant [32 x i8] c"Center starting at %lf %lf %lf\0A\00", align 1
@.str.133 = private unnamed_addr constant [27 x i8] c"Center end at %lf %lf %lf\0A\00", align 1
@.str.134 = private unnamed_addr constant [36 x i8] c"Moving at %lf %lf %lf per timestep\0A\00", align 1
@.str.135 = private unnamed_addr constant [52 x i8] c"   Rate relative to smallest cell size %lf %lf %lf\0A\00", align 1
@.str.136 = private unnamed_addr constant [26 x i8] c"Initial size %lf %lf %lf\0A\00", align 1
@.str.137 = private unnamed_addr constant [24 x i8] c"Final size %lf %lf %lf\0A\00", align 1
@.str.138 = private unnamed_addr constant [42 x i8] c"Size increasing %lf %lf %lf per timestep\0A\00", align 1
@.str.139 = private unnamed_addr constant [53 x i8] c"   Rate relative to smallest cell size %lf %lf %lf\0A\0A\00", align 1
@.str.140 = private unnamed_addr constant [28 x i8] c"\0ANumber of timesteps is %d\0A\00", align 1
@.str.141 = private unnamed_addr constant [52 x i8] c"Communicaion/computation stages per timestep is %d\0A\00", align 1
@.str.142 = private unnamed_addr constant [40 x i8] c"Will perform checksums every %d stages\0A\00", align 1
@.str.143 = private unnamed_addr constant [32 x i8] c"Will refine every %d timesteps\0A\00", align 1
@.str.144 = private unnamed_addr constant [38 x i8] c"Will plot results every %d timesteps\0A\00", align 1
@.str.145 = private unnamed_addr constant [23 x i8] c"Will not plot results\0A\00", align 1
@.str.146 = private unnamed_addr constant [49 x i8] c"Calculate on %d variables with %d point stencil\0A\00", align 1
@.str.147 = private unnamed_addr constant [36 x i8] c"Communicate %d variables at a time\0A\00", align 1
@.str.148 = private unnamed_addr constant [47 x i8] c"Error tolorance for variable sums is 10^(-%d)\0A\00", align 1
@.str.149 = private unnamed_addr constant [35 x i8] c"\0ATotal time for test: (sec): %lf\0A\0A\00", align 1
@.str.150 = private unnamed_addr constant [30 x i8] c"\0ANumber of malloc calls: %lf\0A\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"\0AAmount malloced: %lf\0A\00", align 1
@.str.152 = private unnamed_addr constant [47 x i8] c"---------------------------------------------\0A\00", align 1
@.str.153 = private unnamed_addr constant [37 x i8] c"          Computational Performance\0A\00", align 1
@.str.154 = private unnamed_addr constant [48 x i8] c"---------------------------------------------\0A\0A\00", align 1
@.str.155 = private unnamed_addr constant [46 x i8] c"     Time: ave, stddev, min, max (sec): %lf\0A\0A\00", align 1
@.str.156 = private unnamed_addr constant [36 x i8] c"     total GFLOPS:             %lf\0A\00", align 1
@.str.157 = private unnamed_addr constant [37 x i8] c"     Average GFLOPS per rank:  %lf\0A\0A\00", align 1
@.str.158 = private unnamed_addr constant [37 x i8] c"     Total floating point ops: %lf\0A\0A\00", align 1
@.str.159 = private unnamed_addr constant [36 x i8] c"        Adds:                  %lf\0A\00", align 1
@.str.160 = private unnamed_addr constant [37 x i8] c"        Divides:               %lf\0A\0A\00", align 1
@.str.161 = private unnamed_addr constant [37 x i8] c"           Interblock communication\0A\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"\0ATotal communication:\0A\0A\00", align 1
@.str.163 = private unnamed_addr constant [41 x i8] c"\0AX direction communication statistics:\0A\0A\00", align 1
@.str.164 = private unnamed_addr constant [41 x i8] c"\0AY direction communication statistics:\0A\0A\00", align 1
@.str.165 = private unnamed_addr constant [41 x i8] c"\0AZ direction communication statistics:\0A\0A\00", align 1
@.str.166 = private unnamed_addr constant [67 x i8] c"                              average    stddev  minimum  maximum\0A\00", align 1
@.str.167 = private unnamed_addr constant [35 x i8] c"     Total time             : %lf\0A\00", align 1
@.str.168 = private unnamed_addr constant [35 x i8] c"     Exchange same level    : %lf\0A\00", align 1
@.str.169 = private unnamed_addr constant [35 x i8] c"     Exchange diff level    : %lf\0A\00", align 1
@.str.170 = private unnamed_addr constant [35 x i8] c"     Apply BC               : %lf\0A\00", align 1
@.str.171 = private unnamed_addr constant [35 x i8] c"     Faces exchanged same   : %lf\0A\00", align 1
@.str.172 = private unnamed_addr constant [35 x i8] c"     Faces exchanged diff   : %lf\0A\00", align 1
@.str.173 = private unnamed_addr constant [35 x i8] c"     Faces with BC applied  : %lf\0A\00", align 1
@.str.174 = private unnamed_addr constant [48 x i8] c"\0A---------------------------------------------\0A\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"             Gridsum performance\0A\00", align 1
@.str.176 = private unnamed_addr constant [49 x i8] c"        calc: ave, stddev, min, max (sec): %lf\0A\0A\00", align 1
@.str.177 = private unnamed_addr constant [35 x i8] c"     total number:             %d\0A\00", align 1
@.str.178 = private unnamed_addr constant [36 x i8] c"     number per timestep:      %d\0A\0A\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"               Mesh Refinement\0A\00", align 1
@.str.180 = private unnamed_addr constant [38 x i8] c"     Number of refinement steps: %d\0A\0A\00", align 1
@.str.181 = private unnamed_addr constant [35 x i8] c"     Total blocks           : %ld\0A\00", align 1
@.str.182 = private unnamed_addr constant [48 x i8] c"     Blocks/timestep ave, min, max : %lf %d %d\0A\00", align 1
@.str.183 = private unnamed_addr constant [48 x i8] c"     Max blocks on a processor at any time: %d\0A\00", align 1
@.str.184 = private unnamed_addr constant [35 x i8] c"     total blocks split     : %lf\0A\00", align 1
@.str.185 = private unnamed_addr constant [36 x i8] c"     total blocks reformed  : %lf\0A\0A\00", align 1
@.str.186 = private unnamed_addr constant [12 x i8] c"     Time:\0A\00", align 1
@.str.187 = private unnamed_addr constant [35 x i8] c"        compare objects     : %lf\0A\00", align 1
@.str.188 = private unnamed_addr constant [35 x i8] c"        mark refine/coarsen : %lf\0A\00", align 1
@.str.189 = private unnamed_addr constant [35 x i8] c"        split blocks        : %lf\0A\00", align 1
@.str.190 = private unnamed_addr constant [35 x i8] c"        total coarsen blocks: %lf\0A\00", align 1
@.str.191 = private unnamed_addr constant [35 x i8] c"        misc time           : %lf\0A\00", align 1
@.str.192 = private unnamed_addr constant [35 x i8] c"        total target active : %lf\0A\00", align 1
@.str.193 = private unnamed_addr constant [35 x i8] c"          reduce blocks     : %lf\0A\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"            decide and comm : %lf\0A\00", align 1
@.str.195 = private unnamed_addr constant [35 x i8] c"            coarsen blocks  : %lf\0A\00", align 1
@.str.196 = private unnamed_addr constant [35 x i8] c"          add blocks        : %lf\0A\00", align 1
@.str.197 = private unnamed_addr constant [35 x i8] c"            split blocks    : %lf\0A\00", align 1
@.str.198 = private unnamed_addr constant [25 x i8] c"                   Plot\0A\00", align 1
@.str.199 = private unnamed_addr constant [31 x i8] c"     Number of plot steps: %d\0A\00", align 1
@.str.200 = private unnamed_addr constant [53 x i8] c"\0A ================== End report ===================\0A\00", align 1
@.str.201 = private unnamed_addr constant [53 x i8] c"Number of blocks at level %d before target %d is %d\0A\00", align 1
@.str.1.202 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2.203 = private unnamed_addr constant [51 x i8] c"Number of blocks at level %d at timestep %d is %d\0A\00", align 1
@.str.214 = private unnamed_addr constant [43 x i8] c"NULL pointer from malloc call in %s at %d\0A\00", align 1
@str = private unnamed_addr constant [25 x i8] c"ERROR: Need more parents\00"
@str.1 = private unnamed_addr constant [26 x i8] c"ERROR: misconnected block\00"
@str.2 = private unnamed_addr constant [39 x i8] c"object number greater than num_objects\00"
@str.3 = private unnamed_addr constant [48 x i8] c"(Optional) command line input is of the form: \0A\00"
@str.4 = private unnamed_addr constant [34 x i8] c"--nx - block size x (even && > 0)\00"
@str.5 = private unnamed_addr constant [34 x i8] c"--ny - block size y (even && > 0)\00"
@str.6 = private unnamed_addr constant [34 x i8] c"--nz - block size z (even && > 0)\00"
@str.7 = private unnamed_addr constant [37 x i8] c"--init_x - initial blocks in x (> 0)\00"
@str.8 = private unnamed_addr constant [37 x i8] c"--init_y - initial blocks in y (> 0)\00"
@str.9 = private unnamed_addr constant [37 x i8] c"--init_z - initial blocks in z (> 0)\00"
@str.10 = private unnamed_addr constant [53 x i8] c"--reorder - ordering of blocks if initial number > 1\00"
@str.11 = private unnamed_addr constant [49 x i8] c"--max_blocks - maximun number of blocks per core\00"
@str.12 = private unnamed_addr constant [53 x i8] c"--num_refine - (>= 0) number of levels of refinement\00"
@str.13 = private unnamed_addr constant [74 x i8] c"--block_change - (>= 0) number of levels a block can change in a timestep\00"
@str.14 = private unnamed_addr constant [56 x i8] c"--uniform_refine - if 1, then grid is uniformly refined\00"
@str.15 = private unnamed_addr constant [68 x i8] c"--refine_freq - frequency (in timesteps) of checking for refinement\00"
@str.16 = private unnamed_addr constant [69 x i8] c"--target_active - (>= 0) target number of blocks per core, none if 0\00"
@str.17 = private unnamed_addr constant [63 x i8] c"--target_max - (>= 0) max number of blocks per core, none if 0\00"
@str.18 = private unnamed_addr constant [63 x i8] c"--target_min - (>= 0) min number of blocks per core, none if 0\00"
@str.19 = private unnamed_addr constant [39 x i8] c"--num_vars - number of variables (> 0)\00"
@str.20 = private unnamed_addr constant [53 x i8] c"--comm_vars - number of vars to communicate together\00"
@str.21 = private unnamed_addr constant [41 x i8] c"--num_tsteps - number of timesteps (> 0)\00"
@str.22 = private unnamed_addr constant [58 x i8] c"--stages_per_ts - number of comm/calc stages per timestep\00"
@str.23 = private unnamed_addr constant [53 x i8] c"--checksum_freq - number of stages between checksums\00"
@str.24 = private unnamed_addr constant [78 x i8] c"--stencil - 7 or 27 point (27 will not work with refinement (except uniform))\00"
@str.25 = private unnamed_addr constant [39 x i8] c"--error_tol - (e^{-error_tol} ; >= 0) \00"
@str.26 = private unnamed_addr constant [38 x i8] c"--report_diffusion - (>= 0) none if 0\00"
@str.27 = private unnamed_addr constant [24 x i8] c"--report_perf - 0, 1, 2\00"
@str.28 = private unnamed_addr constant [63 x i8] c"--refine_freq - frequency (timesteps) of plotting (0 for none)\00"
@str.29 = private unnamed_addr constant [56 x i8] c"--code - closely minic communication of different codes\00"
@str.30 = private unnamed_addr constant [75 x i8] c"         0 minimal sends, 1 send ghosts, 2 send ghosts and process on send\00"
@str.31 = private unnamed_addr constant [50 x i8] c"--permute - altenates directions in communication\00"
@str.32 = private unnamed_addr constant [94 x i8] c"--refine_ghost - use full extent of block (including ghosts) to determine if block is refined\00"
@str.33 = private unnamed_addr constant [61 x i8] c"--num_objects - (>= 0) number of objects to cause refinement\00"
@str.34 = private unnamed_addr constant [63 x i8] c"--object - type, position, movement, size, size rate of change\00"
@str.35 = private unnamed_addr constant [56 x i8] c"All associated settings are integers except for objects\00"
@str.36 = private unnamed_addr constant [24 x i8] c"code must be 0, 1, or 2\00"
@str.37 = private unnamed_addr constant [75 x i8] c"WARNING: 27 point stencil with non-uniform refinement: answers may diverge\00"
@str.38 = private unnamed_addr constant [26 x i8] c"illegal value for stencil\00"
@str.39 = private unnamed_addr constant [58 x i8] c"number of processors used does not match number allocated\00"
@str.40 = private unnamed_addr constant [37 x i8] c"number of variables must be positive\00"
@str.41 = private unnamed_addr constant [49 x i8] c"number of refinement levels must be non-negative\00"
@str.42 = private unnamed_addr constant [49 x i8] c"number of refinement levels must be non-negative\00"
@str.43 = private unnamed_addr constant [29 x i8] c"illegal value for target_min\00"
@str.44 = private unnamed_addr constant [29 x i8] c"illegal value for target_max\00"
@str.45 = private unnamed_addr constant [32 x i8] c"illegal value for target_active\00"
@str.46 = private unnamed_addr constant [53 x i8] c"Only one of target_active and target_min can be used\00"
@str.47 = private unnamed_addr constant [53 x i8] c"Only one of target_active and target_max can be used\00"
@str.48 = private unnamed_addr constant [39 x i8] c"block size in z direction must be even\00"
@str.49 = private unnamed_addr constant [39 x i8] c"block size in y direction must be even\00"
@str.50 = private unnamed_addr constant [39 x i8] c"block size in x direction must be even\00"
@str.51 = private unnamed_addr constant [28 x i8] c"block size must be positive\00"
@str.52 = private unnamed_addr constant [32 x i8] c"max_num_blocks not large enough\00"
@str.53 = private unnamed_addr constant [45 x i8] c"initial blocks on processor must be positive\00"
@str.54 = private unnamed_addr constant [53 x i8] c"\0A ================ Start report ===================\0A\00"
@str.55 = private unnamed_addr constant [26 x i8] c"          Mantevo miniAMR\00"
@str.56 = private unnamed_addr constant [21 x i8] c"serial run on 1 rank\00"
@str.57 = private unnamed_addr constant [22 x i8] c"Will not plot results\00"
@str.58 = private unnamed_addr constant [38 x i8] c"Oject center will bounce off of walls\00"
@str.59 = private unnamed_addr constant [21 x i8] c"Oject may leave mesh\00"
@str.60 = private unnamed_addr constant [34 x i8] c"\0ABlocks will be uniformly refined\00"
@str.61 = private unnamed_addr constant [55 x i8] c"Ghost cells will be used determine is block is refined\00"
@str.62 = private unnamed_addr constant [28 x i8] c"Order of exchanges permuted\00"

; Function Attrs: noinline nounwind uwtable
define void @split_blocks() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca [8 x i32], align 16
  %25 = alloca %struct.block*, align 8
  %26 = alloca %struct.block*, align 8
  %27 = alloca %struct.parent*, align 8
  store i32 0, i32* %23, align 4
  store i32 0, i32* %4, align 4
  %.promoted326 = load i32, i32* %22, align 1
  %.promoted333 = load i32, i32* %4, align 1
  %.promoted340 = load i32, i32* %1, align 1
  %.promoted347 = load i32, i32* %2, align 1
  %.promoted354 = load i32, i32* %20, align 1
  %.promoted361 = load i32, i32* %3, align 1
  %.promoted = load i32, i32* %7, align 1
  %.promoted374 = load i32, i32* %15, align 1
  %.promoted381 = load i32, i32* %17, align 1
  %.promoted388 = load i32, i32* %19, align 1
  %.promoted395 = load i32, i32* %16, align 1
  %.promoted402 = load i32, i32* %18, align 1
  %.promoted409 = load i32, i32* %6, align 1
  %.promoted416 = load %struct.parent*, %struct.parent** %27, align 1
  %.promoted423 = load i32, i32* %11, align 1
  %.promoted430 = load i32, i32* %10, align 1
  %.promoted437 = load i32, i32* %9, align 1
  %.promoted444 = load i32, i32* %12, align 1
  %.promoted451 = load i32, i32* %14, align 1
  %.promoted458 = load i32, i32* %13, align 1
  %.promoted465 = load i32, i32* %21, align 1
  %.promoted472 = load i32, i32* %5, align 1
  %.promoted479 = load i32, i32* %8, align 1
  br label %28

; <label>:28:                                     ; preds = %861, %0
  %.lcssa316480 = phi i32 [ %34, %861 ], [ %.promoted479, %0 ]
  %storemerge.lcssa473 = phi i32 [ %storemerge, %861 ], [ %.promoted472, %0 ]
  %.lcssa129303.lcssa466 = phi i32 [ %.lcssa129303, %861 ], [ %.promoted465, %0 ]
  %.lcssa118294.lcssa459 = phi i32 [ %.lcssa118294, %861 ], [ %.promoted458, %0 ]
  %.lcssa7378.lcssa114.lcssa285.lcssa452 = phi i32 [ %.lcssa7378.lcssa114.lcssa285, %861 ], [ %.promoted451, %0 ]
  %storemerge4.lcssa276.lcssa445 = phi i32 [ %storemerge4.lcssa276, %861 ], [ %.promoted444, %0 ]
  %.lcssa267438 = phi i32 [ %35, %861 ], [ %.promoted437, %0 ]
  %.lcssa260431 = phi i32 [ %36, %861 ], [ %.promoted430, %0 ]
  %.lcssa253424 = phi i32 [ %37, %861 ], [ %.promoted423, %0 ]
  %.lcssa246417 = phi %struct.parent* [ %38, %861 ], [ %.promoted416, %0 ]
  %storemerge3.lcssa240.lcssa410 = phi i32 [ %storemerge3.lcssa240, %861 ], [ %.promoted409, %0 ]
  %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403 = phi i32 [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, %861 ], [ %.promoted402, %0 ]
  %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396 = phi i32 [ %storemerge13.lcssa39.lcssa63.lcssa224, %861 ], [ %.promoted395, %0 ]
  %.lcssa60216.lcssa389 = phi i32 [ %.lcssa60216, %861 ], [ %.promoted388, %0 ]
  %.lcssa57208.lcssa382 = phi i32 [ %.lcssa57208, %861 ], [ %.promoted381, %0 ]
  %.lcssa54200.lcssa375 = phi i32 [ %.lcssa54200, %861 ], [ %.promoted374, %0 ]
  %storemerge12.lcssa51.lcssa192.lcssa368 = phi i32 [ %storemerge12.lcssa51.lcssa192, %861 ], [ %.promoted, %0 ]
  %.lcssa7580.lcssa125.lcssa184.lcssa362 = phi i32 [ %.lcssa7580.lcssa125.lcssa184, %861 ], [ %.promoted361, %0 ]
  %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355 = phi i32 [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, %861 ], [ %.promoted354, %0 ]
  %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa169, %861 ], [ %.promoted347, %0 ]
  %storemerge9.lcssa103.lcssa157.lcssa341 = phi i32 [ %storemerge9.lcssa103.lcssa157, %861 ], [ %.promoted340, %0 ]
  %.lcssa1743.lcssa145.lcssa334 = phi i32 [ %.lcssa1743.lcssa145, %861 ], [ %.promoted333, %0 ]
  %storemerge2.lcssa16137.lcssa327 = phi i32 [ %storemerge2.lcssa16137, %861 ], [ %.promoted326, %0 ]
  %29 = load i32, i32* %23, align 4
  %30 = load i32, i32* @cur_max_level, align 4
  %31 = icmp sgt i32 %29, %30
  br i1 %31, label %864, label %32

; <label>:32:                                     ; preds = %28
  br label %33

; <label>:33:                                     ; preds = %854, %32
  %34 = phi i32 [ %.lcssa316480, %32 ], [ %855, %854 ]
  %.lcssa129303 = phi i32 [ %.lcssa129303.lcssa466, %32 ], [ %.lcssa129301, %854 ]
  %.lcssa118294 = phi i32 [ %.lcssa118294.lcssa459, %32 ], [ %.lcssa118292, %854 ]
  %.lcssa7378.lcssa114.lcssa285 = phi i32 [ %.lcssa7378.lcssa114.lcssa285.lcssa452, %32 ], [ %.lcssa7378.lcssa114.lcssa283, %854 ]
  %storemerge4.lcssa276 = phi i32 [ %storemerge4.lcssa276.lcssa445, %32 ], [ %storemerge4.lcssa274, %854 ]
  %35 = phi i32 [ %.lcssa267438, %32 ], [ %856, %854 ]
  %36 = phi i32 [ %.lcssa260431, %32 ], [ %857, %854 ]
  %37 = phi i32 [ %.lcssa253424, %32 ], [ %858, %854 ]
  %38 = phi %struct.parent* [ %.lcssa246417, %32 ], [ %859, %854 ]
  %storemerge3.lcssa240 = phi i32 [ %storemerge3.lcssa240.lcssa410, %32 ], [ %storemerge3.lcssa238, %854 ]
  %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232 = phi i32 [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, %32 ], [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa230, %854 ]
  %storemerge13.lcssa39.lcssa63.lcssa224 = phi i32 [ %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, %32 ], [ %storemerge13.lcssa39.lcssa63.lcssa222, %854 ]
  %.lcssa60216 = phi i32 [ %.lcssa60216.lcssa389, %32 ], [ %.lcssa60214, %854 ]
  %.lcssa57208 = phi i32 [ %.lcssa57208.lcssa382, %32 ], [ %.lcssa57206, %854 ]
  %.lcssa54200 = phi i32 [ %.lcssa54200.lcssa375, %32 ], [ %.lcssa54198, %854 ]
  %storemerge12.lcssa51.lcssa192 = phi i32 [ %storemerge12.lcssa51.lcssa192.lcssa368, %32 ], [ %storemerge12.lcssa51.lcssa190, %854 ]
  %.lcssa7580.lcssa125.lcssa184 = phi i32 [ %.lcssa7580.lcssa125.lcssa184.lcssa362, %32 ], [ %.lcssa7580.lcssa125.lcssa182, %854 ]
  %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177 = phi i32 [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, %32 ], [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa175, %854 ]
  %storemerge10.lcssa87.lcssa90.lcssa169 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, %32 ], [ %storemerge10.lcssa87.lcssa90.lcssa167, %854 ]
  %storemerge9.lcssa103.lcssa157 = phi i32 [ %storemerge9.lcssa103.lcssa157.lcssa341, %32 ], [ %storemerge9.lcssa103.lcssa155, %854 ]
  %.lcssa1743.lcssa145 = phi i32 [ %.lcssa1743.lcssa145.lcssa334, %32 ], [ %.lcssa1743.lcssa143, %854 ]
  %storemerge2.lcssa16137 = phi i32 [ %storemerge2.lcssa16137.lcssa327, %32 ], [ %storemerge2.lcssa16135, %854 ]
  %storemerge = phi i32 [ 0, %32 ], [ %860, %854 ]
  %39 = load i32, i32* @max_active_block, align 4
  %40 = icmp slt i32 %storemerge, %39
  br i1 %40, label %41, label %861

; <label>:41:                                     ; preds = %33
  %42 = load %struct.block*, %struct.block** @blocks, align 8
  %43 = sext i32 %storemerge to i64
  %44 = getelementptr inbounds %struct.block, %struct.block* %42, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp sgt i32 %45, -1
  br i1 %46, label %47, label %854

; <label>:47:                                     ; preds = %41
  %48 = load %struct.block*, %struct.block** @blocks, align 8
  %49 = sext i32 %storemerge to i64
  %50 = getelementptr inbounds %struct.block, %struct.block* %48, i64 %49, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %23, align 4
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %854

; <label>:54:                                     ; preds = %47
  %55 = load %struct.block*, %struct.block** @blocks, align 8
  %56 = sext i32 %storemerge to i64
  %57 = getelementptr inbounds %struct.block, %struct.block* %55, i64 %56
  store %struct.block* %57, %struct.block** %25, align 8
  %58 = getelementptr inbounds %struct.block, %struct.block* %55, i64 %56, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %854

; <label>:61:                                     ; preds = %54
  %62 = load %struct.block*, %struct.block** %25, align 8
  %63 = getelementptr inbounds %struct.block, %struct.block* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = load i32*, i32** @block_start, align 8
  %66 = load i32, i32* %23, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = sub nsw i32 %64, %69
  %71 = load i32*, i32** @p2, align 8
  %72 = load i32, i32* %23, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* @npx, align 4
  %77 = mul nsw i32 %75, %76
  %78 = load i32, i32* @init_block_x, align 4
  %79 = mul nsw i32 %77, %78
  %80 = load i32*, i32** @p2, align 8
  %81 = load i32, i32* %23, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %80, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* @npy, align 4
  %86 = mul nsw i32 %84, %85
  %87 = load i32, i32* @init_block_y, align 4
  %88 = mul nsw i32 %86, %87
  %89 = mul nsw i32 %79, %88
  %90 = sdiv i32 %70, %89
  %91 = load i32*, i32** @p2, align 8
  %92 = load i32, i32* %23, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %91, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* @npx, align 4
  %97 = mul nsw i32 %95, %96
  %98 = load i32, i32* @init_block_x, align 4
  %99 = mul nsw i32 %97, %98
  %100 = load i32*, i32** @p2, align 8
  %101 = load i32, i32* %23, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %100, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* @npy, align 4
  %106 = mul nsw i32 %104, %105
  %107 = load i32, i32* @init_block_y, align 4
  %108 = mul nsw i32 %106, %107
  %109 = mul nsw i32 %99, %108
  %110 = srem i32 %70, %109
  %111 = load i32*, i32** @p2, align 8
  %112 = load i32, i32* %23, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %111, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = load i32, i32* @npx, align 4
  %117 = mul nsw i32 %115, %116
  %118 = load i32, i32* @init_block_x, align 4
  %119 = mul nsw i32 %117, %118
  %120 = sdiv i32 %110, %119
  %121 = load i32*, i32** @p2, align 8
  %122 = load i32, i32* %23, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = load i32, i32* @npx, align 4
  %127 = mul nsw i32 %125, %126
  %128 = load i32, i32* @init_block_x, align 4
  %129 = mul nsw i32 %127, %128
  %130 = srem i32 %70, %129
  %131 = load i32, i32* @num_active, align 4
  %132 = add nsw i32 %131, 8
  %133 = load i32, i32* @max_num_blocks, align 4
  %134 = icmp sgt i32 %132, %133
  br i1 %134, label %135, label %140

; <label>:135:                                    ; preds = %61
  store i32 %storemerge2.lcssa16137.lcssa327, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145.lcssa334, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157.lcssa341, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184.lcssa362, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192.lcssa368, i32* %7, align 1
  store i32 %.lcssa54200.lcssa375, i32* %15, align 1
  store i32 %.lcssa57208.lcssa382, i32* %17, align 1
  store i32 %.lcssa60216.lcssa389, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, i32* %18, align 1
  store i32 %storemerge3.lcssa240.lcssa410, i32* %6, align 1
  store %struct.parent* %.lcssa246417, %struct.parent** %27, align 1
  store i32 %.lcssa253424, i32* %11, align 1
  store i32 %.lcssa260431, i32* %10, align 1
  store i32 %.lcssa267438, i32* %9, align 1
  store i32 %storemerge4.lcssa276.lcssa445, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285.lcssa452, i32* %14, align 1
  store i32 %.lcssa118294.lcssa459, i32* %13, align 1
  store i32 %.lcssa129303.lcssa466, i32* %21, align 1
  store i32 %storemerge.lcssa473, i32* %5, align 1
  store i32 %.lcssa316480, i32* %8, align 1
  store i32 %storemerge2.lcssa16137, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192, i32* %7, align 1
  store i32 %.lcssa54200, i32* %15, align 1
  store i32 %.lcssa57208, i32* %17, align 1
  store i32 %.lcssa60216, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, i32* %18, align 1
  store i32 %storemerge3.lcssa240, i32* %6, align 1
  store %struct.parent* %38, %struct.parent** %27, align 1
  store i32 %90, i32* %11, align 1
  store i32 %120, i32* %10, align 1
  store i32 %130, i32* %9, align 1
  store i32 %storemerge4.lcssa276, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285, i32* %14, align 1
  store i32 %.lcssa118294, i32* %13, align 1
  store i32 %.lcssa129303, i32* %21, align 1
  store i32 %storemerge, i32* %5, align 4
  store i32 %70, i32* %8, align 1
  %136 = load i32, i32* @num_active, align 4
  %137 = load i32, i32* @max_num_blocks, align 4
  %138 = load i32, i32* @my_pe, align 4
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 %136, i32 %137, i32 %138) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:140:                                    ; preds = %61
  %141 = load i32, i32* @num_active, align 4
  %142 = add nsw i32 %141, 8
  %143 = load i32, i32* @local_max_b, align 4
  %144 = icmp sgt i32 %142, %143
  br i1 %144, label %145, label %148

; <label>:145:                                    ; preds = %140
  %146 = load i32, i32* @num_active, align 4
  %147 = add nsw i32 %146, 8
  store i32 %147, i32* @local_max_b, align 4
  br label %148

; <label>:148:                                    ; preds = %145, %140
  %149 = load %struct.block*, %struct.block** %25, align 8
  %150 = getelementptr inbounds %struct.block, %struct.block* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = load i32, i32* %23, align 4
  call void @del_sorted_list(i32 %151, i32 %152)
  %153 = load i32, i32* @num_active, align 4
  %154 = add nsw i32 %153, 7
  store i32 %154, i32* @num_active, align 4
  %155 = load i32*, i32** @num_blocks, align 8
  %156 = load i32, i32* %23, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %155, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = add nsw i32 %159, -1
  store i32 %160, i32* %158, align 4
  %161 = load i32*, i32** @num_blocks, align 8
  %162 = load i32, i32* %23, align 4
  %163 = add nsw i32 %162, 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, i32* %161, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = add nsw i32 %166, 8
  store i32 %167, i32* %165, align 4
  %168 = load i32, i32* @max_active_parent, align 4
  %169 = load %struct.parent*, %struct.parent** @parents, align 8
  br label %170

; <label>:170:                                    ; preds = %177, %148
  %storemerge2 = phi i32 [ 0, %148 ], [ %178, %177 ]
  %171 = icmp slt i32 %storemerge2, %168
  br i1 %171, label %172, label %.loopexit1

; <label>:172:                                    ; preds = %170
  %173 = sext i32 %storemerge2 to i64
  %174 = getelementptr inbounds %struct.parent, %struct.parent* %169, i64 %173, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp slt i32 %175, 0
  br i1 %176, label %.loopexit1, label %177

; <label>:177:                                    ; preds = %172
  %178 = add nsw i32 %storemerge2, 1
  br label %170

.loopexit1:                                       ; preds = %170, %172
  %179 = load i32, i32* @max_num_parents, align 4
  %180 = icmp eq i32 %storemerge2, %179
  br i1 %180, label %181, label %182

; <label>:181:                                    ; preds = %.loopexit1
  store i32 %storemerge2.lcssa16137.lcssa327, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145.lcssa334, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157.lcssa341, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184.lcssa362, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192.lcssa368, i32* %7, align 1
  store i32 %.lcssa54200.lcssa375, i32* %15, align 1
  store i32 %.lcssa57208.lcssa382, i32* %17, align 1
  store i32 %.lcssa60216.lcssa389, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, i32* %18, align 1
  store i32 %storemerge3.lcssa240.lcssa410, i32* %6, align 1
  store %struct.parent* %.lcssa246417, %struct.parent** %27, align 1
  store i32 %.lcssa253424, i32* %11, align 1
  store i32 %.lcssa260431, i32* %10, align 1
  store i32 %.lcssa267438, i32* %9, align 1
  store i32 %storemerge4.lcssa276.lcssa445, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285.lcssa452, i32* %14, align 1
  store i32 %.lcssa118294.lcssa459, i32* %13, align 1
  store i32 %.lcssa129303.lcssa466, i32* %21, align 1
  store i32 %storemerge.lcssa473, i32* %5, align 1
  store i32 %.lcssa316480, i32* %8, align 1
  store i32 %storemerge2, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192, i32* %7, align 1
  store i32 %.lcssa54200, i32* %15, align 1
  store i32 %.lcssa57208, i32* %17, align 1
  store i32 %.lcssa60216, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, i32* %18, align 1
  store i32 %storemerge3.lcssa240, i32* %6, align 1
  store %struct.parent* %38, %struct.parent** %27, align 1
  store i32 %90, i32* %11, align 1
  store i32 %120, i32* %10, align 1
  store i32 %130, i32* %9, align 1
  store i32 %storemerge4.lcssa276, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285, i32* %14, align 1
  store i32 %.lcssa118294, i32* %13, align 1
  store i32 %.lcssa129303, i32* %21, align 1
  store i32 %storemerge, i32* %5, align 4
  store i32 %70, i32* %8, align 1
  %puts = call i32 @puts(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @str, i64 0, i64 0))
  call void @exit(i32 -1) #7
  unreachable

; <label>:182:                                    ; preds = %.loopexit1
  %183 = load i32, i32* @max_active_parent, align 4
  %184 = icmp eq i32 %storemerge2, %183
  br i1 %184, label %185, label %188

; <label>:185:                                    ; preds = %182
  %186 = load i32, i32* @max_active_parent, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* @max_active_parent, align 4
  br label %188

; <label>:188:                                    ; preds = %185, %182
  %189 = load i32, i32* @num_parents, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* @num_parents, align 4
  %191 = load i32, i32* @num_refined, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* @num_refined, align 4
  %193 = load %struct.parent*, %struct.parent** @parents, align 8
  %194 = sext i32 %storemerge2 to i64
  %195 = getelementptr inbounds %struct.parent, %struct.parent* %193, i64 %194
  %196 = load %struct.block*, %struct.block** %25, align 8
  %197 = getelementptr inbounds %struct.block, %struct.block* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 8
  %199 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 0
  store i32 %198, i32* %199, align 4
  %200 = load %struct.block*, %struct.block** %25, align 8
  %201 = getelementptr inbounds %struct.block, %struct.block* %200, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 1
  store i32 %202, i32* %203, align 4
  %204 = load %struct.block*, %struct.block** %25, align 8
  %205 = getelementptr inbounds %struct.block, %struct.block* %204, i64 0, i32 4
  %206 = load i32, i32* %205, align 8
  %207 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 2
  store i32 %206, i32* %207, align 4
  %208 = getelementptr inbounds %struct.block, %struct.block* %204, i64 0, i32 5
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 3
  store i32 %209, i32* %210, align 4
  %211 = load %struct.block*, %struct.block** %25, align 8
  %212 = getelementptr inbounds %struct.block, %struct.block* %211, i64 0, i32 6
  %213 = load i32, i32* %212, align 8
  %214 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 4
  store i32 %213, i32* %214, align 4
  %215 = xor i32 %storemerge2, -1
  %216 = load %struct.parent*, %struct.parent** @parents, align 8
  %217 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 4
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.parent, %struct.parent* %216, i64 %219, i32 6, i64 %222
  store i32 %215, i32* %223, align 4
  %224 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 5
  store i32 0, i32* %224, align 4
  %225 = load %struct.block*, %struct.block** %25, align 8
  %226 = getelementptr inbounds %struct.block, %struct.block* %225, i64 0, i32 10, i64 0
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 8, i64 0
  store i32 %227, i32* %228, align 4
  %229 = getelementptr inbounds %struct.block, %struct.block* %225, i64 0, i32 10, i64 1
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 8, i64 1
  store i32 %230, i32* %231, align 4
  %232 = load %struct.block*, %struct.block** %25, align 8
  %233 = getelementptr inbounds %struct.block, %struct.block* %232, i64 0, i32 10, i64 2
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 8, i64 2
  store i32 %234, i32* %235, align 4
  %236 = shl nsw i32 %90, 1
  %237 = shl nsw i32 %120, 1
  %238 = shl nsw i32 %130, 1
  br label %239

; <label>:239:                                    ; preds = %563, %188
  %storemerge10.lcssa87.lcssa90.lcssa163 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa169, %188 ], [ %storemerge10.lcssa87.lcssa90.lcssa164, %563 ]
  %storemerge9.lcssa103.lcssa152 = phi i32 [ %storemerge9.lcssa103.lcssa157, %188 ], [ %storemerge9.lcssa103.lcssa153, %563 ]
  %storemerge14.lcssa32.lcssa41.lcssa66 = phi i32 [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, %188 ], [ %storemerge14.lcssa32.lcssa41, %563 ]
  %storemerge13.lcssa39.lcssa63 = phi i32 [ %storemerge13.lcssa39.lcssa63.lcssa224, %188 ], [ %storemerge13.lcssa39, %563 ]
  %240 = phi i32 [ %.lcssa60216, %188 ], [ %392, %563 ]
  %241 = phi i32 [ %.lcssa57208, %188 ], [ %390, %563 ]
  %242 = phi i32 [ %.lcssa54200, %188 ], [ %388, %563 ]
  %storemerge12.lcssa51 = phi i32 [ %storemerge12.lcssa51.lcssa192, %188 ], [ %storemerge12, %563 ]
  %.lcssa2024.lcssa29.lcssa36.lcssa48 = phi i32 [ %.lcssa7580.lcssa125.lcssa184, %188 ], [ %.lcssa2024.lcssa29.lcssa36, %563 ]
  %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45 = phi i32 [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, %188 ], [ %storemerge15.lcssa22.lcssa27.lcssa34, %563 ]
  %.lcssa1743 = phi i32 [ %.lcssa1743.lcssa145, %188 ], [ %248, %563 ]
  %storemerge3 = phi i32 [ 0, %188 ], [ %564, %563 ]
  %243 = icmp slt i32 %storemerge3, 8
  br i1 %243, label %244, label %565

; <label>:244:                                    ; preds = %239
  %245 = load i32, i32* @max_num_blocks, align 4
  %246 = load %struct.block*, %struct.block** @blocks, align 8
  br label %247

; <label>:247:                                    ; preds = %255, %244
  %248 = phi i32 [ %256, %255 ], [ %.lcssa1743, %244 ]
  %249 = icmp slt i32 %248, %245
  br i1 %249, label %250, label %.loopexit

; <label>:250:                                    ; preds = %247
  %251 = sext i32 %248 to i64
  %252 = getelementptr inbounds %struct.block, %struct.block* %246, i64 %251, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = icmp slt i32 %253, 0
  br i1 %254, label %.loopexit, label %255

; <label>:255:                                    ; preds = %250
  %256 = add nsw i32 %248, 1
  br label %247

.loopexit:                                        ; preds = %247, %250
  %257 = load i32, i32* @max_num_blocks, align 4
  %258 = icmp eq i32 %248, %257
  br i1 %258, label %259, label %264

; <label>:259:                                    ; preds = %.loopexit
  store i32 %storemerge2.lcssa16137.lcssa327, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145.lcssa334, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157.lcssa341, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184.lcssa362, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192.lcssa368, i32* %7, align 1
  store i32 %.lcssa54200.lcssa375, i32* %15, align 1
  store i32 %.lcssa57208.lcssa382, i32* %17, align 1
  store i32 %.lcssa60216.lcssa389, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, i32* %18, align 1
  store i32 %storemerge3.lcssa240.lcssa410, i32* %6, align 1
  store %struct.parent* %.lcssa246417, %struct.parent** %27, align 1
  store i32 %.lcssa253424, i32* %11, align 1
  store i32 %.lcssa260431, i32* %10, align 1
  store i32 %.lcssa267438, i32* %9, align 1
  store i32 %storemerge4.lcssa276.lcssa445, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285.lcssa452, i32* %14, align 1
  store i32 %.lcssa118294.lcssa459, i32* %13, align 1
  store i32 %.lcssa129303.lcssa466, i32* %21, align 1
  store i32 %storemerge.lcssa473, i32* %5, align 1
  store i32 %.lcssa316480, i32* %8, align 1
  store i32 %storemerge2, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa152, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa163, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192, i32* %7, align 1
  store i32 %.lcssa54200, i32* %15, align 1
  store i32 %.lcssa57208, i32* %17, align 1
  store i32 %.lcssa60216, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, i32* %18, align 1
  store i32 %storemerge3.lcssa240, i32* %6, align 1
  store %struct.parent* %195, %struct.parent** %27, align 1
  store i32 %90, i32* %11, align 1
  store i32 %120, i32* %10, align 1
  store i32 %130, i32* %9, align 1
  store i32 %storemerge4.lcssa276, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285, i32* %14, align 1
  store i32 %.lcssa118294, i32* %13, align 1
  store i32 %.lcssa129303, i32* %21, align 1
  store i32 %storemerge, i32* %5, align 4
  store i32 %70, i32* %8, align 1
  store i32 %248, i32* %4, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45, i32* %20, align 1
  store i32 %.lcssa2024.lcssa29.lcssa36.lcssa48, i32* %3, align 1
  store i32 %storemerge12.lcssa51, i32* %7, align 1
  store i32 %242, i32* %15, align 1
  store i32 %241, i32* %17, align 1
  store i32 %240, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66, i32* %18, align 1
  store i32 %storemerge3, i32* %6, align 4
  %260 = load i32, i32* %4, align 4
  %261 = load i32, i32* @num_active, align 4
  %262 = load i32, i32* @max_num_blocks, align 4
  %263 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 %260, i32 %261, i32 %262) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:264:                                    ; preds = %.loopexit
  %265 = load i32, i32* @max_active_block, align 4
  %266 = icmp slt i32 %248, %265
  br i1 %266, label %269, label %267

; <label>:267:                                    ; preds = %264
  %268 = add nsw i32 %248, 1
  store i32 %268, i32* @max_active_block, align 4
  br label %269

; <label>:269:                                    ; preds = %264, %267
  %270 = load %struct.block*, %struct.block** @blocks, align 8
  %271 = sext i32 %248 to i64
  %272 = getelementptr inbounds %struct.block, %struct.block* %270, i64 %271
  store %struct.block* %272, %struct.block** %26, align 8
  %273 = sext i32 %storemerge3 to i64
  %274 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %273
  store i32 %248, i32* %274, align 4
  %275 = sext i32 %storemerge3 to i64
  %276 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 6, i64 %275
  store i32 %248, i32* %276, align 4
  %277 = load i32, i32* @my_pe, align 4
  %278 = sext i32 %storemerge3 to i64
  %279 = getelementptr inbounds %struct.parent, %struct.parent* %195, i64 0, i32 7, i64 %278
  store i32 %277, i32* %279, align 4
  %280 = load %struct.block*, %struct.block** %26, align 8
  %281 = getelementptr inbounds %struct.block, %struct.block* %280, i64 0, i32 2
  store i32 0, i32* %281, align 8
  %282 = load i32, i32* %23, align 4
  %283 = add nsw i32 %282, 1
  %284 = getelementptr inbounds %struct.block, %struct.block* %280, i64 0, i32 1
  store i32 %283, i32* %284, align 4
  %285 = load %struct.block*, %struct.block** %26, align 8
  %286 = getelementptr inbounds %struct.block, %struct.block* %285, i64 0, i32 4
  store i32 %storemerge2, i32* %286, align 8
  %287 = load i32, i32* @my_pe, align 4
  %288 = getelementptr inbounds %struct.block, %struct.block* %285, i64 0, i32 5
  store i32 %287, i32* %288, align 4
  %289 = load %struct.block*, %struct.block** %26, align 8
  %290 = getelementptr inbounds %struct.block, %struct.block* %289, i64 0, i32 6
  store i32 %storemerge3, i32* %290, align 8
  %291 = srem i32 %storemerge3, 2
  %292 = sdiv i32 %storemerge3, 2
  %293 = srem i32 %292, 2
  %294 = sdiv i32 %storemerge3, 4
  %295 = add nsw i32 %236, %294
  %296 = load i32*, i32** @p2, align 8
  %297 = load i32, i32* %23, align 4
  %298 = add nsw i32 %297, 1
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i32, i32* %296, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = load i32, i32* @npy, align 4
  %303 = mul nsw i32 %301, %302
  %304 = load i32, i32* @init_block_y, align 4
  %305 = mul nsw i32 %303, %304
  %306 = mul nsw i32 %295, %305
  %307 = add nsw i32 %237, %293
  %308 = add nsw i32 %306, %307
  %309 = load i32*, i32** @p2, align 8
  %310 = load i32, i32* %23, align 4
  %311 = add nsw i32 %310, 1
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i32, i32* %309, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = load i32, i32* @npx, align 4
  %316 = mul nsw i32 %314, %315
  %317 = load i32, i32* @init_block_x, align 4
  %318 = mul nsw i32 %316, %317
  %319 = mul nsw i32 %308, %318
  %320 = add nsw i32 %319, %238
  %321 = add nsw i32 %320, %291
  %322 = load i32*, i32** @block_start, align 8
  %323 = load i32, i32* %23, align 4
  %324 = add nsw i32 %323, 1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, i32* %322, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = add nsw i32 %321, %327
  %329 = load %struct.block*, %struct.block** %26, align 8
  %330 = getelementptr inbounds %struct.block, %struct.block* %329, i64 0, i32 0
  store i32 %328, i32* %330, align 8
  %331 = load %struct.block*, %struct.block** %26, align 8
  %332 = getelementptr inbounds %struct.block, %struct.block* %331, i64 0, i32 0
  %333 = load i32, i32* %332, align 8
  %334 = load i32, i32* %23, align 4
  %335 = add nsw i32 %334, 1
  call void @add_sorted_list(i32 %248, i32 %333, i32 %335)
  %336 = load %struct.block*, %struct.block** %25, align 8
  %337 = getelementptr inbounds %struct.block, %struct.block* %336, i64 0, i32 10, i64 0
  %338 = load i32, i32* %337, align 4
  %339 = shl nsw i32 %291, 1
  %340 = add nsw i32 %339, -1
  %341 = load i32*, i32** @p2, align 8
  %342 = load i32, i32* @num_refine, align 4
  %343 = load i32, i32* %23, align 4
  %344 = sub nsw i32 %342, %343
  %345 = add nsw i32 %344, -1
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i32, i32* %341, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = mul nsw i32 %340, %348
  %350 = add nsw i32 %338, %349
  %351 = load %struct.block*, %struct.block** %26, align 8
  %352 = getelementptr inbounds %struct.block, %struct.block* %351, i64 0, i32 10, i64 0
  store i32 %350, i32* %352, align 4
  %353 = load %struct.block*, %struct.block** %25, align 8
  %354 = getelementptr inbounds %struct.block, %struct.block* %353, i64 0, i32 10, i64 1
  %355 = load i32, i32* %354, align 4
  %356 = shl nsw i32 %293, 1
  %357 = add nsw i32 %356, -1
  %358 = load i32*, i32** @p2, align 8
  %359 = load i32, i32* @num_refine, align 4
  %360 = load i32, i32* %23, align 4
  %361 = sub nsw i32 %359, %360
  %362 = add nsw i32 %361, -1
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i32, i32* %358, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = mul nsw i32 %357, %365
  %367 = add nsw i32 %355, %366
  %368 = load %struct.block*, %struct.block** %26, align 8
  %369 = getelementptr inbounds %struct.block, %struct.block* %368, i64 0, i32 10, i64 1
  store i32 %367, i32* %369, align 4
  %370 = load %struct.block*, %struct.block** %25, align 8
  %371 = getelementptr inbounds %struct.block, %struct.block* %370, i64 0, i32 10, i64 2
  %372 = load i32, i32* %371, align 4
  %373 = shl nsw i32 %294, 1
  %374 = add nsw i32 %373, -1
  %375 = load i32*, i32** @p2, align 8
  %376 = load i32, i32* @num_refine, align 4
  %377 = load i32, i32* %23, align 4
  %378 = sub nsw i32 %376, %377
  %379 = add nsw i32 %378, -1
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i32, i32* %375, i64 %380
  %382 = load i32, i32* %381, align 4
  %383 = mul nsw i32 %374, %382
  %384 = add nsw i32 %372, %383
  %385 = load %struct.block*, %struct.block** %26, align 8
  %386 = getelementptr inbounds %struct.block, %struct.block* %385, i64 0, i32 10, i64 2
  store i32 %384, i32* %386, align 4
  %387 = load i32, i32* @x_block_half, align 4
  %388 = mul nsw i32 %291, %387
  %389 = load i32, i32* @y_block_half, align 4
  %390 = mul nsw i32 %293, %389
  %391 = load i32, i32* @z_block_half, align 4
  %392 = mul nsw i32 %294, %391
  br label %393

; <label>:393:                                    ; preds = %561, %269
  %storemerge10.lcssa87.lcssa90.lcssa164 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa163, %269 ], [ %storemerge10.lcssa87.lcssa90.lcssa165, %561 ]
  %storemerge9.lcssa103.lcssa153 = phi i32 [ %storemerge9.lcssa103.lcssa152, %269 ], [ %storemerge9.lcssa103.lcssa154, %561 ]
  %storemerge14.lcssa32.lcssa41 = phi i32 [ %storemerge14.lcssa32.lcssa41.lcssa66, %269 ], [ %storemerge14.lcssa32, %561 ]
  %storemerge13.lcssa39 = phi i32 [ %storemerge13.lcssa39.lcssa63, %269 ], [ %storemerge13, %561 ]
  %.lcssa2024.lcssa29.lcssa36 = phi i32 [ %.lcssa2024.lcssa29.lcssa36.lcssa48, %269 ], [ %.lcssa2024.lcssa29, %561 ]
  %storemerge15.lcssa22.lcssa27.lcssa34 = phi i32 [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45, %269 ], [ %storemerge15.lcssa22.lcssa27, %561 ]
  %storemerge12 = phi i32 [ 0, %269 ], [ %562, %561 ]
  %394 = load i32, i32* @num_vars, align 4
  %395 = icmp slt i32 %storemerge12, %394
  br i1 %395, label %396, label %563

; <label>:396:                                    ; preds = %393
  %397 = sext i32 %storemerge12 to i64
  %398 = sext i32 %storemerge12 to i64
  %399 = sext i32 %storemerge12 to i64
  %400 = sext i32 %storemerge12 to i64
  %401 = sext i32 %storemerge12 to i64
  %402 = sext i32 %storemerge12 to i64
  %403 = sext i32 %storemerge12 to i64
  %404 = sext i32 %storemerge12 to i64
  %405 = sext i32 %storemerge12 to i64
  br label %406

; <label>:406:                                    ; preds = %558, %396
  %storemerge10.lcssa87.lcssa90.lcssa165 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa164, %396 ], [ %storemerge10.lcssa87.lcssa90.lcssa166, %558 ]
  %storemerge9.lcssa103.lcssa154 = phi i32 [ 1, %396 ], [ %559, %558 ]
  %storemerge14.lcssa32 = phi i32 [ %storemerge14.lcssa32.lcssa41, %396 ], [ %storemerge14, %558 ]
  %.lcssa2024.lcssa29 = phi i32 [ %.lcssa2024.lcssa29.lcssa36, %396 ], [ %.lcssa2024, %558 ]
  %storemerge15.lcssa22.lcssa27 = phi i32 [ %storemerge15.lcssa22.lcssa27.lcssa34, %396 ], [ %storemerge15.lcssa22, %558 ]
  %storemerge13 = phi i32 [ 1, %396 ], [ %560, %558 ]
  %407 = load i32, i32* @x_block_half, align 4
  %408 = icmp sgt i32 %storemerge9.lcssa103.lcssa154, %407
  br i1 %408, label %561, label %409

; <label>:409:                                    ; preds = %406
  %410 = add nsw i32 %storemerge9.lcssa103.lcssa154, %388
  %411 = sext i32 %410 to i64
  %412 = add nsw i32 %storemerge13, 1
  %413 = sext i32 %412 to i64
  %414 = sext i32 %storemerge13 to i64
  %415 = add nsw i32 %storemerge13, 1
  %416 = sext i32 %415 to i64
  %417 = sext i32 %storemerge13 to i64
  %418 = add nsw i32 %storemerge13, 1
  %419 = sext i32 %418 to i64
  %420 = sext i32 %storemerge13 to i64
  %421 = add nsw i32 %storemerge13, 1
  %422 = sext i32 %421 to i64
  %423 = sext i32 %storemerge13 to i64
  br label %424

; <label>:424:                                    ; preds = %555, %409
  %storemerge10.lcssa87.lcssa90.lcssa166 = phi i32 [ 1, %409 ], [ %556, %555 ]
  %.lcssa2024 = phi i32 [ %.lcssa2024.lcssa29, %409 ], [ %443, %555 ]
  %storemerge15.lcssa22 = phi i32 [ %storemerge15.lcssa22.lcssa27, %409 ], [ %storemerge15, %555 ]
  %storemerge14 = phi i32 [ 1, %409 ], [ %557, %555 ]
  %425 = load i32, i32* @y_block_half, align 4
  %426 = icmp sgt i32 %storemerge10.lcssa87.lcssa90.lcssa166, %425
  br i1 %426, label %558, label %427

; <label>:427:                                    ; preds = %424
  %428 = add nsw i32 %storemerge10.lcssa87.lcssa90.lcssa166, %390
  %429 = sext i32 %428 to i64
  %430 = add nsw i32 %storemerge14, 1
  %431 = sext i32 %430 to i64
  %432 = add nsw i32 %storemerge14, 1
  %433 = sext i32 %432 to i64
  %434 = sext i32 %storemerge14 to i64
  %435 = sext i32 %storemerge14 to i64
  %436 = add nsw i32 %storemerge14, 1
  %437 = sext i32 %436 to i64
  %438 = add nsw i32 %storemerge14, 1
  %439 = sext i32 %438 to i64
  %440 = sext i32 %storemerge14 to i64
  %441 = sext i32 %storemerge14 to i64
  br label %442

; <label>:442:                                    ; preds = %446, %427
  %443 = phi i32 [ 1, %427 ], [ %553, %446 ]
  %storemerge15 = phi i32 [ 1, %427 ], [ %554, %446 ]
  %444 = load i32, i32* @z_block_half, align 4
  %445 = icmp sgt i32 %443, %444
  br i1 %445, label %555, label %446

; <label>:446:                                    ; preds = %442
  %447 = load %struct.block*, %struct.block** %25, align 8
  %448 = getelementptr inbounds %struct.block, %struct.block* %447, i64 0, i32 11
  %449 = load double****, double***** %448, align 8
  %450 = getelementptr inbounds double***, double**** %449, i64 %397
  %451 = load double***, double**** %450, align 8
  %452 = getelementptr inbounds double**, double*** %451, i64 %411
  %453 = load double**, double*** %452, align 8
  %454 = getelementptr inbounds double*, double** %453, i64 %429
  %455 = load double*, double** %454, align 8
  %456 = add nsw i32 %443, %392
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds double, double* %455, i64 %457
  %459 = load double, double* %458, align 8
  %460 = fmul double %459, 1.250000e-01
  %461 = load %struct.block*, %struct.block** %26, align 8
  %462 = getelementptr inbounds %struct.block, %struct.block* %461, i64 0, i32 11
  %463 = load double****, double***** %462, align 8
  %464 = getelementptr inbounds double***, double**** %463, i64 %398
  %465 = load double***, double**** %464, align 8
  %466 = getelementptr inbounds double**, double*** %465, i64 %413
  %467 = load double**, double*** %466, align 8
  %468 = getelementptr inbounds double*, double** %467, i64 %431
  %469 = load double*, double** %468, align 8
  %470 = add nsw i32 %storemerge15, 1
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds double, double* %469, i64 %471
  store double %460, double* %472, align 8
  %473 = load %struct.block*, %struct.block** %26, align 8
  %474 = getelementptr inbounds %struct.block, %struct.block* %473, i64 0, i32 11
  %475 = load double****, double***** %474, align 8
  %476 = getelementptr inbounds double***, double**** %475, i64 %399
  %477 = load double***, double**** %476, align 8
  %478 = getelementptr inbounds double**, double*** %477, i64 %414
  %479 = load double**, double*** %478, align 8
  %480 = getelementptr inbounds double*, double** %479, i64 %433
  %481 = load double*, double** %480, align 8
  %482 = add nsw i32 %storemerge15, 1
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds double, double* %481, i64 %483
  store double %460, double* %484, align 8
  %485 = load %struct.block*, %struct.block** %26, align 8
  %486 = getelementptr inbounds %struct.block, %struct.block* %485, i64 0, i32 11
  %487 = load double****, double***** %486, align 8
  %488 = getelementptr inbounds double***, double**** %487, i64 %400
  %489 = load double***, double**** %488, align 8
  %490 = getelementptr inbounds double**, double*** %489, i64 %416
  %491 = load double**, double*** %490, align 8
  %492 = getelementptr inbounds double*, double** %491, i64 %434
  %493 = load double*, double** %492, align 8
  %494 = add nsw i32 %storemerge15, 1
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds double, double* %493, i64 %495
  store double %460, double* %496, align 8
  %497 = load %struct.block*, %struct.block** %26, align 8
  %498 = getelementptr inbounds %struct.block, %struct.block* %497, i64 0, i32 11
  %499 = load double****, double***** %498, align 8
  %500 = getelementptr inbounds double***, double**** %499, i64 %401
  %501 = load double***, double**** %500, align 8
  %502 = getelementptr inbounds double**, double*** %501, i64 %417
  %503 = load double**, double*** %502, align 8
  %504 = getelementptr inbounds double*, double** %503, i64 %435
  %505 = load double*, double** %504, align 8
  %506 = add nsw i32 %storemerge15, 1
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds double, double* %505, i64 %507
  store double %460, double* %508, align 8
  %509 = load %struct.block*, %struct.block** %26, align 8
  %510 = getelementptr inbounds %struct.block, %struct.block* %509, i64 0, i32 11
  %511 = load double****, double***** %510, align 8
  %512 = getelementptr inbounds double***, double**** %511, i64 %402
  %513 = load double***, double**** %512, align 8
  %514 = getelementptr inbounds double**, double*** %513, i64 %419
  %515 = load double**, double*** %514, align 8
  %516 = getelementptr inbounds double*, double** %515, i64 %437
  %517 = load double*, double** %516, align 8
  %518 = sext i32 %storemerge15 to i64
  %519 = getelementptr inbounds double, double* %517, i64 %518
  store double %460, double* %519, align 8
  %520 = load %struct.block*, %struct.block** %26, align 8
  %521 = getelementptr inbounds %struct.block, %struct.block* %520, i64 0, i32 11
  %522 = load double****, double***** %521, align 8
  %523 = getelementptr inbounds double***, double**** %522, i64 %403
  %524 = load double***, double**** %523, align 8
  %525 = getelementptr inbounds double**, double*** %524, i64 %420
  %526 = load double**, double*** %525, align 8
  %527 = getelementptr inbounds double*, double** %526, i64 %439
  %528 = load double*, double** %527, align 8
  %529 = sext i32 %storemerge15 to i64
  %530 = getelementptr inbounds double, double* %528, i64 %529
  store double %460, double* %530, align 8
  %531 = load %struct.block*, %struct.block** %26, align 8
  %532 = getelementptr inbounds %struct.block, %struct.block* %531, i64 0, i32 11
  %533 = load double****, double***** %532, align 8
  %534 = getelementptr inbounds double***, double**** %533, i64 %404
  %535 = load double***, double**** %534, align 8
  %536 = getelementptr inbounds double**, double*** %535, i64 %422
  %537 = load double**, double*** %536, align 8
  %538 = getelementptr inbounds double*, double** %537, i64 %440
  %539 = load double*, double** %538, align 8
  %540 = sext i32 %storemerge15 to i64
  %541 = getelementptr inbounds double, double* %539, i64 %540
  store double %460, double* %541, align 8
  %542 = load %struct.block*, %struct.block** %26, align 8
  %543 = getelementptr inbounds %struct.block, %struct.block* %542, i64 0, i32 11
  %544 = load double****, double***** %543, align 8
  %545 = getelementptr inbounds double***, double**** %544, i64 %405
  %546 = load double***, double**** %545, align 8
  %547 = getelementptr inbounds double**, double*** %546, i64 %423
  %548 = load double**, double*** %547, align 8
  %549 = getelementptr inbounds double*, double** %548, i64 %441
  %550 = load double*, double** %549, align 8
  %551 = sext i32 %storemerge15 to i64
  %552 = getelementptr inbounds double, double* %550, i64 %551
  store double %460, double* %552, align 8
  %553 = add nsw i32 %443, 1
  %554 = add nsw i32 %storemerge15, 2
  br label %442

; <label>:555:                                    ; preds = %442
  %556 = add nsw i32 %storemerge10.lcssa87.lcssa90.lcssa166, 1
  %557 = add nsw i32 %storemerge14, 2
  br label %424

; <label>:558:                                    ; preds = %424
  %559 = add nsw i32 %storemerge9.lcssa103.lcssa154, 1
  %560 = add nsw i32 %storemerge13, 2
  br label %406

; <label>:561:                                    ; preds = %406
  %562 = add nsw i32 %storemerge12, 1
  br label %393

; <label>:563:                                    ; preds = %393
  %564 = add nsw i32 %storemerge3, 1
  br label %239

; <label>:565:                                    ; preds = %239
  %566 = load i32, i32* %23, align 4
  %567 = add nsw i32 %566, 1
  %568 = load %struct.block*, %struct.block** @blocks, align 8
  %569 = load %struct.block*, %struct.block** @blocks, align 8
  %570 = load %struct.block*, %struct.block** %25, align 8
  %571 = load %struct.block*, %struct.block** @blocks, align 8
  %572 = load %struct.block*, %struct.block** @blocks, align 8
  %573 = load %struct.block*, %struct.block** %25, align 8
  %574 = load i32, i32* %23, align 4
  %575 = add nsw i32 %574, -1
  %576 = load %struct.block*, %struct.block** %25, align 8
  %577 = load %struct.block*, %struct.block** %25, align 8
  %578 = load i32, i32* %23, align 4
  %579 = load %struct.block*, %struct.block** %25, align 8
  %580 = load %struct.block*, %struct.block** %25, align 8
  %581 = load i32, i32* %23, align 4
  %582 = add nsw i32 %581, 1
  %583 = load %struct.block*, %struct.block** %25, align 8
  %584 = load i32, i32* %23, align 4
  %585 = add nsw i32 %584, 1
  %586 = load %struct.block*, %struct.block** @blocks, align 8
  %587 = load %struct.block*, %struct.block** @blocks, align 8
  %588 = load i32, i32* %23, align 4
  %589 = load %struct.block*, %struct.block** @blocks, align 8
  %590 = load %struct.block*, %struct.block** %25, align 8
  %591 = load %struct.block*, %struct.block** %25, align 8
  %592 = load %struct.block*, %struct.block** @blocks, align 8
  %593 = load i32, i32* %23, align 4
  %594 = add nsw i32 %593, 1
  %595 = load i32, i32* %23, align 4
  %596 = add nsw i32 %595, 1
  %597 = load %struct.block*, %struct.block** @blocks, align 8
  %598 = load %struct.block*, %struct.block** @blocks, align 8
  br label %599

; <label>:599:                                    ; preds = %846, %565
  %600 = phi i32 [ %.lcssa129303, %565 ], [ %847, %846 ]
  %.lcssa7580.lcssa125 = phi i32 [ %.lcssa2024.lcssa29.lcssa36.lcssa48, %565 ], [ %.lcssa7580.lcssa122, %846 ]
  %601 = phi i32 [ %.lcssa118294, %565 ], [ %848, %846 ]
  %.lcssa7378.lcssa114 = phi i32 [ %.lcssa7378.lcssa114.lcssa285, %565 ], [ %.lcssa7378.lcssa110, %846 ]
  %storemerge9.lcssa103 = phi i32 [ %storemerge9.lcssa103.lcssa152, %565 ], [ %storemerge9.lcssa104, %846 ]
  %storemerge10.lcssa87.lcssa90 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa163, %565 ], [ %storemerge10.lcssa87.lcssa91, %846 ]
  %storemerge4 = phi i32 [ 0, %565 ], [ %849, %846 ]
  %602 = icmp slt i32 %storemerge4, 6
  br i1 %602, label %603, label %850

; <label>:603:                                    ; preds = %599
  %604 = sext i32 %storemerge4 to i64
  %605 = sext i32 %storemerge4 to i64
  %606 = getelementptr inbounds [6 x i32], [6 x i32]* @split_blocks.off, i64 0, i64 %605
  %607 = sext i32 %storemerge4 to i64
  %608 = sext i32 %storemerge4 to i64
  %609 = sext i32 %storemerge4 to i64
  %610 = sext i32 %storemerge4 to i64
  %611 = getelementptr inbounds [6 x i32], [6 x i32]* @split_blocks.off, i64 0, i64 %610
  %612 = sext i32 %storemerge4 to i64
  br label %613

; <label>:613:                                    ; preds = %649, %603
  %storemerge10.lcssa87.lcssa96 = phi i32 [ %storemerge10.lcssa87.lcssa90, %603 ], [ %storemerge11, %649 ]
  %storemerge5 = phi i32 [ 0, %603 ], [ %650, %649 ]
  %614 = icmp slt i32 %storemerge5, 2
  br i1 %614, label %615, label %651

; <label>:615:                                    ; preds = %613
  %616 = sext i32 %storemerge5 to i64
  %617 = sext i32 %storemerge5 to i64
  %618 = sext i32 %storemerge5 to i64
  br label %619

; <label>:619:                                    ; preds = %621, %615
  %storemerge11 = phi i32 [ 0, %615 ], [ %648, %621 ]
  %620 = icmp slt i32 %storemerge11, 2
  br i1 %620, label %621, label %649

; <label>:621:                                    ; preds = %619
  %622 = sext i32 %storemerge11 to i64
  %623 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %604, i64 %616, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = load i32, i32* %606, align 4
  %626 = add nsw i32 %624, %625
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds %struct.block, %struct.block* %568, i64 %630, i32 8, i64 %607
  store i32 %567, i32* %631, align 4
  %632 = sext i32 %storemerge11 to i64
  %633 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %608, i64 %617, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %635
  %637 = load i32, i32* %636, align 4
  %638 = sext i32 %storemerge11 to i64
  %639 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %609, i64 %618, i64 %638
  %640 = load i32, i32* %639, align 4
  %641 = load i32, i32* %611, align 4
  %642 = add nsw i32 %640, %641
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %643
  %645 = load i32, i32* %644, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds %struct.block, %struct.block* %569, i64 %646, i32 9, i64 %612, i64 0, i64 0
  store i32 %637, i32* %647, align 4
  %648 = add nsw i32 %storemerge11, 1
  br label %619

; <label>:649:                                    ; preds = %619
  %650 = add nsw i32 %storemerge5, 1
  br label %613

; <label>:651:                                    ; preds = %613
  %652 = sext i32 %storemerge4 to i64
  %653 = getelementptr inbounds %struct.block, %struct.block* %570, i64 0, i32 8, i64 %652
  %654 = load i32, i32* %653, align 4
  %655 = icmp eq i32 %654, -2
  %656 = sext i32 %storemerge4 to i64
  br i1 %655, label %657, label %688

; <label>:657:                                    ; preds = %651
  %658 = sext i32 %storemerge4 to i64
  %659 = sext i32 %storemerge4 to i64
  %660 = sext i32 %storemerge4 to i64
  br label %661

; <label>:661:                                    ; preds = %686, %657
  %storemerge10.lcssa87 = phi i32 [ %storemerge10.lcssa87.lcssa96, %657 ], [ %storemerge10, %686 ]
  %storemerge9 = phi i32 [ 0, %657 ], [ %687, %686 ]
  %662 = icmp slt i32 %storemerge9, 2
  br i1 %662, label %663, label %846

; <label>:663:                                    ; preds = %661
  %664 = sext i32 %storemerge9 to i64
  %665 = sext i32 %storemerge9 to i64
  br label %666

; <label>:666:                                    ; preds = %668, %663
  %storemerge10 = phi i32 [ 0, %663 ], [ %685, %668 ]
  %667 = icmp slt i32 %storemerge10, 2
  br i1 %667, label %668, label %686

; <label>:668:                                    ; preds = %666
  %669 = sext i32 %storemerge10 to i64
  %670 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %656, i64 %664, i64 %669
  %671 = load i32, i32* %670, align 4
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %672
  %674 = load i32, i32* %673, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds %struct.block, %struct.block* %571, i64 %675, i32 8, i64 %658
  store i32 -2, i32* %676, align 4
  %677 = sext i32 %storemerge10 to i64
  %678 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %659, i64 %665, i64 %677
  %679 = load i32, i32* %678, align 4
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %680
  %682 = load i32, i32* %681, align 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds %struct.block, %struct.block* %572, i64 %683, i32 9, i64 %660, i64 0, i64 0
  store i32 0, i32* %684, align 4
  %685 = add nsw i32 %storemerge10, 1
  br label %666

; <label>:686:                                    ; preds = %666
  %687 = add nsw i32 %storemerge9, 1
  br label %661

; <label>:688:                                    ; preds = %651
  %689 = getelementptr inbounds %struct.block, %struct.block* %573, i64 0, i32 8, i64 %656
  %690 = load i32, i32* %689, align 4
  %691 = icmp eq i32 %690, %575
  %692 = sext i32 %storemerge4 to i64
  br i1 %691, label %693, label %708

; <label>:693:                                    ; preds = %688
  %694 = getelementptr inbounds %struct.block, %struct.block* %576, i64 0, i32 9, i64 %692, i64 0, i64 0
  %695 = load i32, i32* %694, align 4
  %696 = icmp sgt i32 %695, -1
  br i1 %696, label %697, label %846

; <label>:697:                                    ; preds = %693
  store i32 %storemerge2.lcssa16137.lcssa327, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145.lcssa334, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157.lcssa341, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184.lcssa362, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192.lcssa368, i32* %7, align 1
  store i32 %.lcssa54200.lcssa375, i32* %15, align 1
  store i32 %.lcssa57208.lcssa382, i32* %17, align 1
  store i32 %.lcssa60216.lcssa389, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, i32* %18, align 1
  store i32 %storemerge3.lcssa240.lcssa410, i32* %6, align 1
  store %struct.parent* %.lcssa246417, %struct.parent** %27, align 1
  store i32 %.lcssa253424, i32* %11, align 1
  store i32 %.lcssa260431, i32* %10, align 1
  store i32 %.lcssa267438, i32* %9, align 1
  store i32 %storemerge4.lcssa276.lcssa445, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285.lcssa452, i32* %14, align 1
  store i32 %.lcssa118294.lcssa459, i32* %13, align 1
  store i32 %.lcssa129303.lcssa466, i32* %21, align 1
  store i32 %storemerge.lcssa473, i32* %5, align 1
  store i32 %.lcssa316480, i32* %8, align 1
  store i32 %storemerge2, i32* %22, align 1
  store i32 %.lcssa1743, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa152, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa163, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45, i32* %20, align 1
  store i32 %.lcssa2024.lcssa29.lcssa36.lcssa48, i32* %3, align 1
  store i32 %storemerge12.lcssa51, i32* %7, align 1
  store i32 %242, i32* %15, align 1
  store i32 %241, i32* %17, align 1
  store i32 %240, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66, i32* %18, align 1
  store i32 %storemerge3, i32* %6, align 1
  store %struct.parent* %195, %struct.parent** %27, align 1
  store i32 %90, i32* %11, align 1
  store i32 %120, i32* %10, align 1
  store i32 %130, i32* %9, align 1
  store i32 %storemerge4.lcssa276, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285, i32* %14, align 1
  store i32 %.lcssa118294, i32* %13, align 1
  store i32 %.lcssa129303, i32* %21, align 1
  store i32 %storemerge, i32* %5, align 4
  store i32 %70, i32* %8, align 1
  store i32 %storemerge10.lcssa87.lcssa96, i32* %2, align 1
  store i32 %storemerge4, i32* %12, align 4
  store i32 %storemerge5, i32* %1, align 1
  store i32 %.lcssa7378.lcssa114, i32* %14, align 1
  store i32 %601, i32* %13, align 1
  store i32 %.lcssa7580.lcssa125, i32* %3, align 1
  store i32 %600, i32* %21, align 1
  %698 = load i32, i32* @my_pe, align 4
  %699 = load i32, i32* %5, align 4
  %700 = load %struct.block*, %struct.block** %25, align 8
  %701 = getelementptr inbounds %struct.block, %struct.block* %700, i64 0, i32 0
  %702 = load i32, i32* %701, align 8
  %703 = load i32, i32* %12, align 4
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds %struct.block, %struct.block* %700, i64 0, i32 9, i64 %704, i64 0, i64 0
  %706 = load i32, i32* %705, align 4
  %707 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 %698, i32 %699, i32 %702, i32 %703, i32 %706) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:708:                                    ; preds = %688
  %709 = getelementptr inbounds %struct.block, %struct.block* %577, i64 0, i32 8, i64 %692
  %710 = load i32, i32* %709, align 4
  %711 = icmp eq i32 %710, %578
  %712 = sext i32 %storemerge4 to i64
  br i1 %711, label %713, label %766

; <label>:713:                                    ; preds = %708
  %714 = getelementptr inbounds %struct.block, %struct.block* %579, i64 0, i32 9, i64 %712, i64 0, i64 0
  %715 = load i32, i32* %714, align 4
  %716 = icmp sgt i32 %715, -1
  br i1 %716, label %717, label %846

; <label>:717:                                    ; preds = %713
  %718 = sext i32 %storemerge4 to i64
  %719 = getelementptr inbounds %struct.block, %struct.block* %583, i64 0, i32 9, i64 %718, i64 0, i64 0
  %720 = load i32, i32* %719, align 4
  %721 = sdiv i32 %storemerge4, 2
  %722 = shl nsw i32 %721, 1
  %723 = add nsw i32 %storemerge4, 1
  %724 = srem i32 %723, 2
  %725 = add nsw i32 %722, %724
  %726 = sext i32 %720 to i64
  %727 = sext i32 %725 to i64
  %728 = getelementptr inbounds %struct.block, %struct.block* %586, i64 %726, i32 8, i64 %727
  store i32 %585, i32* %728, align 4
  %729 = sext i32 %storemerge4 to i64
  %730 = sext i32 %storemerge4 to i64
  %731 = sext i32 %storemerge4 to i64
  %732 = sext i32 %storemerge4 to i64
  %733 = sext i32 %720 to i64
  %734 = sext i32 %725 to i64
  br label %735

; <label>:735:                                    ; preds = %764, %717
  %storemerge8.lcssa83 = phi i32 [ %storemerge10.lcssa87.lcssa96, %717 ], [ %storemerge8, %764 ]
  %storemerge7 = phi i32 [ 0, %717 ], [ %765, %764 ]
  %736 = icmp slt i32 %storemerge7, 2
  br i1 %736, label %737, label %846

; <label>:737:                                    ; preds = %735
  %738 = sext i32 %storemerge7 to i64
  %739 = sext i32 %storemerge7 to i64
  %740 = sext i32 %storemerge7 to i64
  br label %741

; <label>:741:                                    ; preds = %743, %737
  %storemerge8 = phi i32 [ 0, %737 ], [ %763, %743 ]
  %742 = icmp slt i32 %storemerge8, 2
  br i1 %742, label %743, label %764

; <label>:743:                                    ; preds = %741
  %744 = sext i32 %storemerge8 to i64
  %745 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %729, i64 %738, i64 %744
  %746 = load i32, i32* %745, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %747
  %749 = load i32, i32* %748, align 4
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds %struct.block, %struct.block* %587, i64 %750
  store %struct.block* %751, %struct.block** %26, align 8
  %752 = getelementptr inbounds %struct.block, %struct.block* %587, i64 %750, i32 8, i64 %730
  store i32 %588, i32* %752, align 4
  %753 = load %struct.block*, %struct.block** %26, align 8
  %754 = getelementptr inbounds %struct.block, %struct.block* %753, i64 0, i32 9, i64 %731, i64 0, i64 0
  store i32 %720, i32* %754, align 4
  %755 = sext i32 %storemerge8 to i64
  %756 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %732, i64 %739, i64 %755
  %757 = load i32, i32* %756, align 4
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %758
  %760 = load i32, i32* %759, align 4
  %761 = sext i32 %storemerge8 to i64
  %762 = getelementptr inbounds %struct.block, %struct.block* %589, i64 %733, i32 9, i64 %734, i64 %740, i64 %761
  store i32 %760, i32* %762, align 4
  %763 = add nsw i32 %storemerge8, 1
  br label %741

; <label>:764:                                    ; preds = %741
  %765 = add nsw i32 %storemerge7, 1
  br label %735

; <label>:766:                                    ; preds = %708
  %767 = getelementptr inbounds %struct.block, %struct.block* %580, i64 0, i32 8, i64 %712
  %768 = load i32, i32* %767, align 4
  %769 = icmp eq i32 %768, %582
  br i1 %769, label %770, label %834

; <label>:770:                                    ; preds = %766
  %771 = srem i32 %storemerge4, 2
  %772 = mul nsw i32 %771, 10
  %773 = sdiv i32 %storemerge4, 2
  %774 = shl nsw i32 %773, 1
  %775 = add nsw i32 %storemerge4, 1
  %776 = srem i32 %775, 2
  %777 = add nsw i32 %774, %776
  %778 = add nsw i32 %772, 6
  %779 = sext i32 %storemerge4 to i64
  %780 = sext i32 %storemerge4 to i64
  %781 = sext i32 %storemerge4 to i64
  %782 = sext i32 %storemerge4 to i64
  %783 = sext i32 %storemerge4 to i64
  %784 = sext i32 %777 to i64
  %785 = sext i32 %storemerge4 to i64
  %786 = sext i32 %777 to i64
  br label %787

; <label>:787:                                    ; preds = %832, %770
  %storemerge10.lcssa87.lcssa94 = phi i32 [ %storemerge10.lcssa87.lcssa96, %770 ], [ %storemerge10.lcssa87.lcssa97, %832 ]
  %.lcssa7580 = phi i32 [ %778, %770 ], [ %795, %832 ]
  %.lcssa7378 = phi i32 [ %.lcssa7378.lcssa114, %770 ], [ %796, %832 ]
  %storemerge6 = phi i32 [ 0, %770 ], [ %833, %832 ]
  %788 = icmp slt i32 %storemerge6, 2
  br i1 %788, label %789, label %846

; <label>:789:                                    ; preds = %787
  %790 = sext i32 %storemerge6 to i64
  %791 = sext i32 %storemerge6 to i64
  %792 = sext i32 %storemerge6 to i64
  %793 = sext i32 %storemerge6 to i64
  br label %794

; <label>:794:                                    ; preds = %828, %789
  %storemerge10.lcssa87.lcssa97 = phi i32 [ %830, %828 ], [ 0, %789 ]
  %795 = phi i32 [ %831, %828 ], [ %.lcssa7580, %789 ]
  %796 = phi i32 [ %829, %828 ], [ %.lcssa7378, %789 ]
  %797 = icmp slt i32 %storemerge10.lcssa87.lcssa97, 2
  br i1 %797, label %798, label %832

; <label>:798:                                    ; preds = %794
  %799 = sext i32 %storemerge10.lcssa87.lcssa97 to i64
  %800 = getelementptr inbounds %struct.block, %struct.block* %590, i64 0, i32 9, i64 %779, i64 %790, i64 %799
  %801 = load i32, i32* %800, align 4
  %802 = icmp sgt i32 %801, -1
  br i1 %802, label %803, label %828

; <label>:803:                                    ; preds = %798
  %804 = sext i32 %storemerge10.lcssa87.lcssa97 to i64
  %805 = getelementptr inbounds %struct.block, %struct.block* %591, i64 0, i32 9, i64 %780, i64 %791, i64 %804
  %806 = load i32, i32* %805, align 4
  %807 = sext i32 %storemerge10.lcssa87.lcssa97 to i64
  %808 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %781, i64 %792, i64 %807
  %809 = load i32, i32* %808, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %810
  %812 = load i32, i32* %811, align 4
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds %struct.block, %struct.block* %592, i64 %813
  store %struct.block* %814, %struct.block** %26, align 8
  %815 = getelementptr inbounds %struct.block, %struct.block* %592, i64 %813, i32 8, i64 %782
  store i32 %594, i32* %815, align 4
  %816 = load %struct.block*, %struct.block** %26, align 8
  %817 = getelementptr inbounds %struct.block, %struct.block* %816, i64 0, i32 9, i64 %783, i64 0, i64 0
  store i32 %806, i32* %817, align 4
  %818 = sext i32 %806 to i64
  %819 = getelementptr inbounds %struct.block, %struct.block* %597, i64 %818, i32 8, i64 %784
  store i32 %596, i32* %819, align 4
  %820 = sext i32 %storemerge10.lcssa87.lcssa97 to i64
  %821 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %785, i64 %793, i64 %820
  %822 = load i32, i32* %821, align 4
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds [8 x i32], [8 x i32]* %24, i64 0, i64 %823
  %825 = load i32, i32* %824, align 4
  %826 = sext i32 %806 to i64
  %827 = getelementptr inbounds %struct.block, %struct.block* %598, i64 %826, i32 9, i64 %786, i64 0, i64 0
  store i32 %825, i32* %827, align 4
  br label %828

; <label>:828:                                    ; preds = %798, %803
  %829 = phi i32 [ %806, %803 ], [ %796, %798 ]
  %830 = add nsw i32 %storemerge10.lcssa87.lcssa97, 1
  %831 = add nsw i32 %795, 1
  br label %794

; <label>:832:                                    ; preds = %794
  %833 = add nsw i32 %storemerge6, 1
  br label %787

; <label>:834:                                    ; preds = %766
  store i32 %storemerge2.lcssa16137.lcssa327, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145.lcssa334, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157.lcssa341, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184.lcssa362, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192.lcssa368, i32* %7, align 1
  store i32 %.lcssa54200.lcssa375, i32* %15, align 1
  store i32 %.lcssa57208.lcssa382, i32* %17, align 1
  store i32 %.lcssa60216.lcssa389, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, i32* %18, align 1
  store i32 %storemerge3.lcssa240.lcssa410, i32* %6, align 1
  store %struct.parent* %.lcssa246417, %struct.parent** %27, align 1
  store i32 %.lcssa253424, i32* %11, align 1
  store i32 %.lcssa260431, i32* %10, align 1
  store i32 %.lcssa267438, i32* %9, align 1
  store i32 %storemerge4.lcssa276.lcssa445, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285.lcssa452, i32* %14, align 1
  store i32 %.lcssa118294.lcssa459, i32* %13, align 1
  store i32 %.lcssa129303.lcssa466, i32* %21, align 1
  store i32 %storemerge.lcssa473, i32* %5, align 1
  store i32 %.lcssa316480, i32* %8, align 1
  store i32 %storemerge2, i32* %22, align 1
  store i32 %.lcssa1743, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa152, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa163, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45, i32* %20, align 1
  store i32 %.lcssa2024.lcssa29.lcssa36.lcssa48, i32* %3, align 1
  store i32 %storemerge12.lcssa51, i32* %7, align 1
  store i32 %242, i32* %15, align 1
  store i32 %241, i32* %17, align 1
  store i32 %240, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66, i32* %18, align 1
  store i32 %storemerge3, i32* %6, align 1
  store %struct.parent* %195, %struct.parent** %27, align 1
  store i32 %90, i32* %11, align 1
  store i32 %120, i32* %10, align 1
  store i32 %130, i32* %9, align 1
  store i32 %storemerge4.lcssa276, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285, i32* %14, align 1
  store i32 %.lcssa118294, i32* %13, align 1
  store i32 %.lcssa129303, i32* %21, align 1
  store i32 %storemerge, i32* %5, align 4
  store i32 %70, i32* %8, align 1
  store i32 %storemerge10.lcssa87.lcssa96, i32* %2, align 1
  store i32 %storemerge4, i32* %12, align 4
  store i32 %storemerge5, i32* %1, align 1
  store i32 %.lcssa7378.lcssa114, i32* %14, align 1
  store i32 %601, i32* %13, align 1
  store i32 %.lcssa7580.lcssa125, i32* %3, align 1
  store i32 %600, i32* %21, align 1
  %835 = load i32, i32* @my_pe, align 4
  %836 = load i32, i32* %5, align 4
  %837 = load %struct.block*, %struct.block** %25, align 8
  %838 = getelementptr inbounds %struct.block, %struct.block* %837, i64 0, i32 0
  %839 = load i32, i32* %838, align 8
  %840 = load i32, i32* %23, align 4
  %841 = load i32, i32* %12, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds %struct.block, %struct.block* %837, i64 0, i32 8, i64 %842
  %844 = load i32, i32* %843, align 4
  %845 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i32 %835, i32 %836, i32 %839, i32 %840, i32 %841, i32 %844) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:846:                                    ; preds = %661, %735, %713, %787, %693
  %847 = phi i32 [ %600, %661 ], [ %600, %693 ], [ %600, %735 ], [ %600, %713 ], [ %772, %787 ]
  %.lcssa7580.lcssa122 = phi i32 [ %.lcssa7580.lcssa125, %661 ], [ %.lcssa7580.lcssa125, %693 ], [ %.lcssa7580.lcssa125, %735 ], [ %.lcssa7580.lcssa125, %713 ], [ %.lcssa7580, %787 ]
  %848 = phi i32 [ %601, %661 ], [ %601, %693 ], [ %601, %713 ], [ %725, %735 ], [ %777, %787 ]
  %.lcssa7378.lcssa110 = phi i32 [ %.lcssa7378.lcssa114, %661 ], [ %.lcssa7378.lcssa114, %693 ], [ %.lcssa7378.lcssa114, %713 ], [ %720, %735 ], [ %.lcssa7378, %787 ]
  %storemerge9.lcssa104 = phi i32 [ %storemerge9, %661 ], [ %storemerge5, %693 ], [ %storemerge5, %713 ], [ %storemerge7, %735 ], [ %storemerge6, %787 ]
  %storemerge10.lcssa87.lcssa91 = phi i32 [ %storemerge10.lcssa87, %661 ], [ %storemerge10.lcssa87.lcssa96, %693 ], [ %storemerge10.lcssa87.lcssa96, %713 ], [ %storemerge8.lcssa83, %735 ], [ %storemerge10.lcssa87.lcssa94, %787 ]
  %849 = add nsw i32 %storemerge4, 1
  br label %599

; <label>:850:                                    ; preds = %599
  %851 = load %struct.block*, %struct.block** %25, align 8
  %852 = getelementptr inbounds %struct.block, %struct.block* %851, i64 0, i32 0
  store i32 -1, i32* %852, align 8
  %853 = icmp slt i32 %storemerge, %.lcssa1743
  %spec.select = select i1 %853, i32 %storemerge, i32 %.lcssa1743
  br label %854

; <label>:854:                                    ; preds = %41, %47, %850, %54
  %855 = phi i32 [ %34, %47 ], [ %34, %41 ], [ %70, %850 ], [ %34, %54 ]
  %.lcssa129301 = phi i32 [ %.lcssa129303, %47 ], [ %.lcssa129303, %41 ], [ %600, %850 ], [ %.lcssa129303, %54 ]
  %.lcssa118292 = phi i32 [ %.lcssa118294, %47 ], [ %.lcssa118294, %41 ], [ %601, %850 ], [ %.lcssa118294, %54 ]
  %.lcssa7378.lcssa114.lcssa283 = phi i32 [ %.lcssa7378.lcssa114.lcssa285, %47 ], [ %.lcssa7378.lcssa114.lcssa285, %41 ], [ %.lcssa7378.lcssa114, %850 ], [ %.lcssa7378.lcssa114.lcssa285, %54 ]
  %storemerge4.lcssa274 = phi i32 [ %storemerge4.lcssa276, %47 ], [ %storemerge4.lcssa276, %41 ], [ %storemerge4, %850 ], [ %storemerge4.lcssa276, %54 ]
  %856 = phi i32 [ %35, %47 ], [ %35, %41 ], [ %130, %850 ], [ %35, %54 ]
  %857 = phi i32 [ %36, %47 ], [ %36, %41 ], [ %120, %850 ], [ %36, %54 ]
  %858 = phi i32 [ %37, %47 ], [ %37, %41 ], [ %90, %850 ], [ %37, %54 ]
  %859 = phi %struct.parent* [ %38, %47 ], [ %38, %41 ], [ %195, %850 ], [ %38, %54 ]
  %storemerge3.lcssa238 = phi i32 [ %storemerge3.lcssa240, %47 ], [ %storemerge3.lcssa240, %41 ], [ %storemerge3, %850 ], [ %storemerge3.lcssa240, %54 ]
  %storemerge14.lcssa32.lcssa41.lcssa66.lcssa230 = phi i32 [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, %47 ], [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, %41 ], [ %storemerge14.lcssa32.lcssa41.lcssa66, %850 ], [ %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232, %54 ]
  %storemerge13.lcssa39.lcssa63.lcssa222 = phi i32 [ %storemerge13.lcssa39.lcssa63.lcssa224, %47 ], [ %storemerge13.lcssa39.lcssa63.lcssa224, %41 ], [ %storemerge13.lcssa39.lcssa63, %850 ], [ %storemerge13.lcssa39.lcssa63.lcssa224, %54 ]
  %.lcssa60214 = phi i32 [ %.lcssa60216, %47 ], [ %.lcssa60216, %41 ], [ %240, %850 ], [ %.lcssa60216, %54 ]
  %.lcssa57206 = phi i32 [ %.lcssa57208, %47 ], [ %.lcssa57208, %41 ], [ %241, %850 ], [ %.lcssa57208, %54 ]
  %.lcssa54198 = phi i32 [ %.lcssa54200, %47 ], [ %.lcssa54200, %41 ], [ %242, %850 ], [ %.lcssa54200, %54 ]
  %storemerge12.lcssa51.lcssa190 = phi i32 [ %storemerge12.lcssa51.lcssa192, %47 ], [ %storemerge12.lcssa51.lcssa192, %41 ], [ %storemerge12.lcssa51, %850 ], [ %storemerge12.lcssa51.lcssa192, %54 ]
  %.lcssa7580.lcssa125.lcssa182 = phi i32 [ %.lcssa7580.lcssa125.lcssa184, %47 ], [ %.lcssa7580.lcssa125.lcssa184, %41 ], [ %.lcssa7580.lcssa125, %850 ], [ %.lcssa7580.lcssa125.lcssa184, %54 ]
  %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa175 = phi i32 [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, %47 ], [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, %41 ], [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45, %850 ], [ %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177, %54 ]
  %storemerge10.lcssa87.lcssa90.lcssa167 = phi i32 [ %storemerge10.lcssa87.lcssa90.lcssa169, %47 ], [ %storemerge10.lcssa87.lcssa90.lcssa169, %41 ], [ %storemerge10.lcssa87.lcssa90, %850 ], [ %storemerge10.lcssa87.lcssa90.lcssa169, %54 ]
  %storemerge9.lcssa103.lcssa155 = phi i32 [ %storemerge9.lcssa103.lcssa157, %47 ], [ %storemerge9.lcssa103.lcssa157, %41 ], [ %storemerge9.lcssa103, %850 ], [ %storemerge9.lcssa103.lcssa157, %54 ]
  %.lcssa1743.lcssa143 = phi i32 [ %.lcssa1743.lcssa145, %47 ], [ %.lcssa1743.lcssa145, %41 ], [ %spec.select, %850 ], [ %.lcssa1743.lcssa145, %54 ]
  %storemerge2.lcssa16135 = phi i32 [ %storemerge2.lcssa16137, %47 ], [ %storemerge2.lcssa16137, %41 ], [ %storemerge2, %850 ], [ %storemerge2.lcssa16137, %54 ]
  %860 = add nsw i32 %storemerge, 1
  br label %33

; <label>:861:                                    ; preds = %33
  %862 = load i32, i32* %23, align 4
  %863 = add nsw i32 %862, 1
  store i32 %863, i32* %23, align 4
  br label %28

; <label>:864:                                    ; preds = %28
  store i32 %storemerge2.lcssa16137.lcssa327, i32* %22, align 1
  store i32 %.lcssa1743.lcssa145.lcssa334, i32* %4, align 1
  store i32 %storemerge9.lcssa103.lcssa157.lcssa341, i32* %1, align 1
  store i32 %storemerge10.lcssa87.lcssa90.lcssa169.lcssa348, i32* %2, align 1
  store i32 %storemerge15.lcssa22.lcssa27.lcssa34.lcssa45.lcssa177.lcssa355, i32* %20, align 1
  store i32 %.lcssa7580.lcssa125.lcssa184.lcssa362, i32* %3, align 1
  store i32 %storemerge12.lcssa51.lcssa192.lcssa368, i32* %7, align 1
  store i32 %.lcssa54200.lcssa375, i32* %15, align 1
  store i32 %.lcssa57208.lcssa382, i32* %17, align 1
  store i32 %.lcssa60216.lcssa389, i32* %19, align 1
  store i32 %storemerge13.lcssa39.lcssa63.lcssa224.lcssa396, i32* %16, align 1
  store i32 %storemerge14.lcssa32.lcssa41.lcssa66.lcssa232.lcssa403, i32* %18, align 1
  store i32 %storemerge3.lcssa240.lcssa410, i32* %6, align 1
  store %struct.parent* %.lcssa246417, %struct.parent** %27, align 1
  store i32 %.lcssa253424, i32* %11, align 1
  store i32 %.lcssa260431, i32* %10, align 1
  store i32 %.lcssa267438, i32* %9, align 1
  store i32 %storemerge4.lcssa276.lcssa445, i32* %12, align 1
  store i32 %.lcssa7378.lcssa114.lcssa285.lcssa452, i32* %14, align 1
  store i32 %.lcssa118294.lcssa459, i32* %13, align 1
  store i32 %.lcssa129303.lcssa466, i32* %21, align 1
  store i32 %storemerge.lcssa473, i32* %5, align 1
  store i32 %.lcssa316480, i32* %8, align 1
  ret void
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #2

; Function Attrs: noinline nounwind uwtable
define void @del_sorted_list(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %7 = load i32*, i32** @sorted_index, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds i32, i32* %7, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = load i32*, i32** @sorted_index, align 8
  %12 = load i32, i32* %4, align 4
  %13 = add nsw i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %11, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* %3, align 4
  %18 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  br label %19

; <label>:19:                                     ; preds = %27, %2
  %storemerge = phi i32 [ %10, %2 ], [ %28, %27 ]
  %20 = icmp slt i32 %storemerge, %16
  br i1 %20, label %21, label %.loopexit

; <label>:21:                                     ; preds = %19
  %22 = sext i32 %storemerge to i64
  %23 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %18, i64 %22, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %17, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %21
  store i32 %storemerge, i32* %5, align 4
  br label %29

; <label>:27:                                     ; preds = %21
  %28 = add nsw i32 %storemerge, 1
  br label %19

.loopexit:                                        ; preds = %19
  store i32 %storemerge, i32* %5, align 4
  br label %29

; <label>:29:                                     ; preds = %.loopexit, %26
  %30 = load i32, i32* %3, align 4
  %31 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %32 = load i32, i32* %5, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %31, i64 %33, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %30, %35
  br i1 %36, label %41, label %37

; <label>:37:                                     ; preds = %29
  %38 = load i32, i32* @my_pe, align 4
  %39 = load i32, i32* %3, align 4
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i32 %38, i32 %39) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:41:                                     ; preds = %29
  %42 = load i32, i32* %4, align 4
  br label %43

; <label>:43:                                     ; preds = %46, %41
  %storemerge1.in = phi i32 [ %42, %41 ], [ %storemerge1, %46 ]
  %storemerge1 = add nsw i32 %storemerge1.in, 1
  %44 = load i32, i32* @num_refine, align 4
  %45 = icmp sgt i32 %storemerge1.in, %44
  br i1 %45, label %52, label %46

; <label>:46:                                     ; preds = %43
  %47 = load i32*, i32** @sorted_index, align 8
  %48 = sext i32 %storemerge1 to i64
  %49 = getelementptr inbounds i32, i32* %47, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %49, align 4
  br label %43

; <label>:52:                                     ; preds = %43
  store i32 %storemerge1, i32* %6, align 4
  %53 = load i32, i32* %5, align 4
  br label %54

; <label>:54:                                     ; preds = %62, %52
  %storemerge2 = phi i32 [ %53, %52 ], [ %77, %62 ]
  %55 = load i32*, i32** @sorted_index, align 8
  %56 = load i32, i32* @num_refine, align 4
  %57 = add nsw i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %55, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %storemerge2, %60
  br i1 %61, label %62, label %78

; <label>:62:                                     ; preds = %54
  %63 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %64 = add nsw i32 %storemerge2, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %63, i64 %65, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %storemerge2 to i64
  %69 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %63, i64 %68, i32 0
  store i32 %67, i32* %69, align 4
  %70 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %71 = add nsw i32 %storemerge2, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %70, i64 %72, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %storemerge2 to i64
  %76 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %70, i64 %75, i32 1
  store i32 %74, i32* %76, align 4
  %77 = add nsw i32 %storemerge2, 1
  br label %54

; <label>:78:                                     ; preds = %54
  store i32 %storemerge2, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @add_sorted_list(i32, i32, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = load i32*, i32** @sorted_index, align 8
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = load i32*, i32** @sorted_index, align 8
  %14 = load i32, i32* %6, align 4
  %15 = add nsw i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %13, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %5, align 4
  %20 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  br label %21

; <label>:21:                                     ; preds = %29, %3
  %storemerge = phi i32 [ %12, %3 ], [ %30, %29 ]
  %22 = icmp slt i32 %storemerge, %18
  br i1 %22, label %23, label %.loopexit

; <label>:23:                                     ; preds = %21
  %24 = sext i32 %storemerge to i64
  %25 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %20, i64 %24, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %19, %26
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %23
  store i32 %storemerge, i32* %7, align 4
  br label %31

; <label>:29:                                     ; preds = %23
  %30 = add nsw i32 %storemerge, 1
  br label %21

.loopexit:                                        ; preds = %21
  store i32 %storemerge, i32* %7, align 4
  br label %31

; <label>:31:                                     ; preds = %.loopexit, %28
  %32 = load i32*, i32** @sorted_index, align 8
  %33 = load i32, i32* @num_refine, align 4
  %34 = add nsw i32 %33, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %32, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %7, align 4
  br label %39

; <label>:39:                                     ; preds = %41, %31
  %storemerge1 = phi i32 [ %37, %31 ], [ %56, %41 ]
  %40 = icmp sgt i32 %storemerge1, %38
  br i1 %40, label %41, label %57

; <label>:41:                                     ; preds = %39
  %42 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %43 = add nsw i32 %storemerge1, -1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %42, i64 %44, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %storemerge1 to i64
  %48 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %42, i64 %47, i32 0
  store i32 %46, i32* %48, align 4
  %49 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %50 = add nsw i32 %storemerge1, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %49, i64 %51, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %storemerge1 to i64
  %55 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %49, i64 %54, i32 1
  store i32 %53, i32* %55, align 4
  %56 = add nsw i32 %storemerge1, -1
  br label %39

; <label>:57:                                     ; preds = %39
  store i32 %storemerge1, i32* %8, align 4
  %58 = load i32, i32* %5, align 4
  %59 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %59, i64 %61, i32 0
  store i32 %58, i32* %62, align 4
  %63 = load i32, i32* %4, align 4
  %64 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %65 = sext i32 %60 to i64
  %66 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %64, i64 %65, i32 1
  store i32 %63, i32* %66, align 4
  %67 = load i32, i32* %6, align 4
  br label %68

; <label>:68:                                     ; preds = %71, %57
  %storemerge2.in = phi i32 [ %67, %57 ], [ %storemerge2, %71 ]
  %storemerge2 = add nsw i32 %storemerge2.in, 1
  %69 = load i32, i32* @num_refine, align 4
  %70 = icmp sgt i32 %storemerge2.in, %69
  br i1 %70, label %77, label %71

; <label>:71:                                     ; preds = %68
  %72 = load i32*, i32** @sorted_index, align 8
  %73 = sext i32 %storemerge2 to i64
  %74 = getelementptr inbounds i32, i32* %72, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 4
  br label %68

; <label>:77:                                     ; preds = %68
  store i32 %storemerge2, i32* %7, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @consolidate_blocks() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.block*, align 8
  %19 = alloca %struct.block*, align 8
  %20 = alloca %struct.parent*, align 8
  %21 = load i32, i32* @cur_max_level, align 4
  %.promoted192 = load i32, i32* %1, align 1
  %.promoted196 = load i32, i32* %11, align 1
  %.promoted200 = load i32, i32* %5, align 1
  %.promoted204 = load %struct.block*, %struct.block** %19, align 1
  %.promoted = load i32, i32* %14, align 1
  %.promoted211 = load i32, i32* %9, align 1
  %.promoted215 = load i32, i32* %10, align 1
  %.promoted219 = load %struct.block*, %struct.block** %18, align 1
  %.promoted223 = load i32, i32* %3, align 1
  %.promoted227 = load i32, i32* %6, align 1
  %.promoted231 = load i32, i32* %4, align 1
  %.promoted235 = load i32, i32* %7, align 1
  %.promoted239 = load i32, i32* %8, align 1
  %.promoted243 = load i32, i32* %13, align 1
  %.promoted247 = load %struct.parent*, %struct.parent** %20, align 1
  %.promoted254 = load i32, i32* %15, align 1
  %.promoted258 = load i32, i32* %16, align 1
  %.promoted262 = load i32, i32* %17, align 1
  %.promoted266 = load i32, i32* %2, align 1
  br label %22

; <label>:22:                                     ; preds = %508, %0
  %storemerge1.lcssa267 = phi i32 [ %.promoted266, %0 ], [ %storemerge1, %508 ]
  %.lcssa6881.lcssa107.lcssa186.lcssa263 = phi i32 [ %.promoted262, %0 ], [ %.lcssa6881.lcssa107.lcssa186, %508 ]
  %.lcssa6578.lcssa99.lcssa181.lcssa259 = phi i32 [ %.promoted258, %0 ], [ %.lcssa6578.lcssa99.lcssa181, %508 ]
  %storemerge4.lcssa176.lcssa255 = phi i32 [ %.promoted254, %0 ], [ %storemerge4.lcssa176, %508 ]
  %.lcssa171248 = phi %struct.parent* [ %.promoted247, %0 ], [ %32, %508 ]
  %storemerge3.lcssa168.lcssa244 = phi i32 [ %.promoted243, %0 ], [ %storemerge3.lcssa168, %508 ]
  %.lcssa59164.lcssa240 = phi i32 [ %.promoted239, %0 ], [ %.lcssa59164, %508 ]
  %.lcssa57160.lcssa236 = phi i32 [ %.promoted235, %0 ], [ %.lcssa57160, %508 ]
  %.lcssa6274.lcssa89.lcssa156.lcssa232 = phi i32 [ %.promoted231, %0 ], [ %.lcssa6274.lcssa89.lcssa156, %508 ]
  %.lcssa53152.lcssa228 = phi i32 [ %.promoted227, %0 ], [ %.lcssa53152, %508 ]
  %storemerge5.lcssa96.lcssa148.lcssa224 = phi i32 [ %.promoted223, %0 ], [ %storemerge5.lcssa96.lcssa148, %508 ]
  %.lcssa143220 = phi %struct.block* [ %.promoted219, %0 ], [ %33, %508 ]
  %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140.lcssa216 = phi i32 [ %.promoted215, %0 ], [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140, %508 ]
  %storemerge7.lcssa32.lcssa47.lcssa136.lcssa212 = phi i32 [ %.promoted211, %0 ], [ %storemerge7.lcssa32.lcssa47.lcssa136, %508 ]
  %storemerge6.lcssa45.lcssa132.lcssa208 = phi i32 [ %.promoted, %0 ], [ %storemerge6.lcssa45.lcssa132, %508 ]
  %.lcssa43128.lcssa205 = phi %struct.block* [ %.promoted204, %0 ], [ %.lcssa43128, %508 ]
  %.lcssa7184.lcssa112.lcssa125.lcssa201 = phi i32 [ %.promoted200, %0 ], [ %.lcssa7184.lcssa112.lcssa125, %508 ]
  %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121.lcssa197 = phi i32 [ %.promoted196, %0 ], [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121, %508 ]
  %storemerge2.lcssa10117.lcssa193 = phi i32 [ %.promoted192, %0 ], [ %storemerge2.lcssa10117, %508 ]
  %storemerge = phi i32 [ %21, %0 ], [ %509, %508 ]
  %23 = icmp sgt i32 %storemerge, -1
  br i1 %23, label %24, label %510

; <label>:24:                                     ; preds = %22
  %25 = sext i32 %storemerge to i64
  %26 = add nsw i32 %storemerge, 1
  %27 = sext i32 %26 to i64
  %28 = add nsw i32 %storemerge, 1
  %29 = add nsw i32 %storemerge, 2
  %30 = add nsw i32 %storemerge, 1
  br label %31

; <label>:31:                                     ; preds = %505, %24
  %.lcssa6881.lcssa107.lcssa186 = phi i32 [ %.lcssa6881.lcssa107.lcssa186.lcssa263, %24 ], [ %.lcssa6881.lcssa107.lcssa185, %505 ]
  %.lcssa6578.lcssa99.lcssa181 = phi i32 [ %.lcssa6578.lcssa99.lcssa181.lcssa259, %24 ], [ %.lcssa6578.lcssa99.lcssa180, %505 ]
  %storemerge4.lcssa176 = phi i32 [ %storemerge4.lcssa176.lcssa255, %24 ], [ %storemerge4.lcssa175, %505 ]
  %32 = phi %struct.parent* [ %.lcssa171248, %24 ], [ %39, %505 ]
  %storemerge3.lcssa168 = phi i32 [ %storemerge3.lcssa168.lcssa244, %24 ], [ %storemerge3.lcssa167, %505 ]
  %.lcssa59164 = phi i32 [ %.lcssa59164.lcssa240, %24 ], [ %.lcssa59163, %505 ]
  %.lcssa57160 = phi i32 [ %.lcssa57160.lcssa236, %24 ], [ %.lcssa57159, %505 ]
  %.lcssa6274.lcssa89.lcssa156 = phi i32 [ %.lcssa6274.lcssa89.lcssa156.lcssa232, %24 ], [ %.lcssa6274.lcssa89.lcssa155, %505 ]
  %.lcssa53152 = phi i32 [ %.lcssa53152.lcssa228, %24 ], [ %.lcssa53151, %505 ]
  %storemerge5.lcssa96.lcssa148 = phi i32 [ %storemerge5.lcssa96.lcssa148.lcssa224, %24 ], [ %storemerge5.lcssa96.lcssa147, %505 ]
  %33 = phi %struct.block* [ %.lcssa143220, %24 ], [ %506, %505 ]
  %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140 = phi i32 [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140.lcssa216, %24 ], [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa139, %505 ]
  %storemerge7.lcssa32.lcssa47.lcssa136 = phi i32 [ %storemerge7.lcssa32.lcssa47.lcssa136.lcssa212, %24 ], [ %storemerge7.lcssa32.lcssa47.lcssa135, %505 ]
  %storemerge6.lcssa45.lcssa132 = phi i32 [ %storemerge6.lcssa45.lcssa132.lcssa208, %24 ], [ %storemerge6.lcssa45.lcssa131, %505 ]
  %.lcssa43128 = phi %struct.block* [ %.lcssa43128.lcssa205, %24 ], [ %.lcssa43127, %505 ]
  %.lcssa7184.lcssa112.lcssa125 = phi i32 [ %.lcssa7184.lcssa112.lcssa125.lcssa201, %24 ], [ %.lcssa7184.lcssa112.lcssa124, %505 ]
  %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121 = phi i32 [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121.lcssa197, %24 ], [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa120, %505 ]
  %storemerge2.lcssa10117 = phi i32 [ %storemerge2.lcssa10117.lcssa193, %24 ], [ %storemerge2.lcssa10116, %505 ]
  %storemerge1 = phi i32 [ 0, %24 ], [ %507, %505 ]
  %34 = load i32, i32* @max_active_parent, align 4
  %35 = icmp slt i32 %storemerge1, %34
  br i1 %35, label %36, label %508

; <label>:36:                                     ; preds = %31
  %37 = load %struct.parent*, %struct.parent** @parents, align 8
  %38 = sext i32 %storemerge1 to i64
  %39 = getelementptr inbounds %struct.parent, %struct.parent* %37, i64 %38
  %40 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %43, label %505

; <label>:43:                                     ; preds = %36
  %44 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %storemerge
  br i1 %46, label %47, label %505

; <label>:47:                                     ; preds = %43
  %48 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %505

; <label>:51:                                     ; preds = %47
  %52 = load i32, i32* @max_num_blocks, align 4
  %53 = load %struct.block*, %struct.block** @blocks, align 8
  br label %54

; <label>:54:                                     ; preds = %61, %51
  %storemerge2 = phi i32 [ 0, %51 ], [ %62, %61 ]
  %55 = icmp slt i32 %storemerge2, %52
  br i1 %55, label %56, label %.loopexit

; <label>:56:                                     ; preds = %54
  %57 = sext i32 %storemerge2 to i64
  %58 = getelementptr inbounds %struct.block, %struct.block* %53, i64 %57, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %.loopexit, label %61

; <label>:61:                                     ; preds = %56
  %62 = add nsw i32 %storemerge2, 1
  br label %54

.loopexit:                                        ; preds = %54, %56
  %63 = load i32, i32* @max_num_blocks, align 4
  %64 = icmp eq i32 %storemerge2, %63
  br i1 %64, label %65, label %68

; <label>:65:                                     ; preds = %.loopexit
  store i32 %storemerge2.lcssa10117.lcssa193, i32* %1, align 1
  store i32 %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121.lcssa197, i32* %11, align 1
  store i32 %.lcssa7184.lcssa112.lcssa125.lcssa201, i32* %5, align 1
  store %struct.block* %.lcssa43128.lcssa205, %struct.block** %19, align 1
  store i32 %storemerge6.lcssa45.lcssa132.lcssa208, i32* %14, align 1
  store i32 %storemerge7.lcssa32.lcssa47.lcssa136.lcssa212, i32* %9, align 1
  store i32 %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140.lcssa216, i32* %10, align 1
  store %struct.block* %.lcssa143220, %struct.block** %18, align 1
  store i32 %storemerge5.lcssa96.lcssa148.lcssa224, i32* %3, align 1
  store i32 %.lcssa53152.lcssa228, i32* %6, align 1
  store i32 %.lcssa6274.lcssa89.lcssa156.lcssa232, i32* %4, align 1
  store i32 %.lcssa57160.lcssa236, i32* %7, align 1
  store i32 %.lcssa59164.lcssa240, i32* %8, align 1
  store i32 %storemerge3.lcssa168.lcssa244, i32* %13, align 1
  store %struct.parent* %.lcssa171248, %struct.parent** %20, align 1
  store i32 %storemerge, i32* %12, align 4
  store i32 %storemerge4.lcssa176.lcssa255, i32* %15, align 1
  store i32 %.lcssa6578.lcssa99.lcssa181.lcssa259, i32* %16, align 1
  store i32 %.lcssa6881.lcssa107.lcssa186.lcssa263, i32* %17, align 1
  store i32 %storemerge1.lcssa267, i32* %2, align 1
  store i32 %storemerge2, i32* %1, align 1
  store i32 %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121, i32* %11, align 1
  store i32 %.lcssa7184.lcssa112.lcssa125, i32* %5, align 1
  store %struct.block* %.lcssa43128, %struct.block** %19, align 1
  store i32 %storemerge6.lcssa45.lcssa132, i32* %14, align 1
  store i32 %storemerge7.lcssa32.lcssa47.lcssa136, i32* %9, align 1
  store i32 %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140, i32* %10, align 1
  store %struct.block* %33, %struct.block** %18, align 1
  store i32 %storemerge5.lcssa96.lcssa148, i32* %3, align 1
  store i32 %.lcssa53152, i32* %6, align 1
  store i32 %.lcssa6274.lcssa89.lcssa156, i32* %4, align 1
  store i32 %.lcssa57160, i32* %7, align 1
  store i32 %.lcssa59164, i32* %8, align 1
  store i32 %storemerge3.lcssa168, i32* %13, align 1
  store %struct.parent* %39, %struct.parent** %20, align 1
  store i32 %storemerge4.lcssa176, i32* %15, align 1
  store i32 %.lcssa6578.lcssa99.lcssa181, i32* %16, align 1
  store i32 %.lcssa6881.lcssa107.lcssa186, i32* %17, align 1
  store i32 %storemerge1, i32* %2, align 4
  %66 = load i32, i32* @my_pe, align 4
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 %66) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:68:                                     ; preds = %.loopexit
  %69 = load %struct.block*, %struct.block** @blocks, align 8
  %70 = sext i32 %storemerge2 to i64
  %71 = getelementptr inbounds %struct.block, %struct.block* %69, i64 %70
  %72 = load i32, i32* @max_active_block, align 4
  %73 = icmp slt i32 %storemerge2, %72
  br i1 %73, label %76, label %74

; <label>:74:                                     ; preds = %68
  %75 = add nsw i32 %storemerge2, 1
  store i32 %75, i32* @max_active_block, align 4
  br label %76

; <label>:76:                                     ; preds = %68, %74
  %77 = load i32, i32* @num_active, align 4
  %78 = load i32, i32* @local_max_b, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %83, label %80

; <label>:80:                                     ; preds = %76
  %81 = load i32, i32* @num_active, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* @local_max_b, align 4
  br label %83

; <label>:83:                                     ; preds = %76, %80
  %84 = load i32, i32* @num_active, align 4
  %85 = add nsw i32 %84, -7
  store i32 %85, i32* @num_active, align 4
  %86 = load i32, i32* @num_reformed, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* @num_reformed, align 4
  %88 = load i32*, i32** @num_blocks, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %25
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 4
  %92 = load i32*, i32** @num_blocks, align 8
  %93 = getelementptr inbounds i32, i32* %92, i64 %27
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %94, -8
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 0
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 0
  store i32 -1, i32* %99, align 4
  %100 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 1
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 4
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 5
  store i32 %107, i32* %108, align 4
  %109 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 6
  store i32 %110, i32* %111, align 8
  %112 = load %struct.parent*, %struct.parent** @parents, align 8
  %113 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 4
  %114 = load i32, i32* %113, align 8
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 6
  %117 = load i32, i32* %116, align 8
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %struct.parent, %struct.parent* %112, i64 %115, i32 6, i64 %118
  store i32 %storemerge2, i32* %119, align 4
  %120 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  call void @add_sorted_list(i32 %storemerge2, i32 %121, i32 %storemerge)
  %122 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 2
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 8, i64 0
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 10, i64 0
  store i32 %124, i32* %125, align 4
  %126 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 8, i64 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 10, i64 1
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 8, i64 2
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 10, i64 2
  store i32 %130, i32* %131, align 4
  %132 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 11
  br label %133

; <label>:133:                                    ; preds = %334, %83
  %134 = phi i32 [ %.lcssa59164, %83 ], [ %158, %334 ]
  %135 = phi i32 [ %.lcssa57160, %83 ], [ %155, %334 ]
  %.lcssa1526.lcssa38.lcssa55 = phi i32 [ %.lcssa6274.lcssa89.lcssa156, %83 ], [ %.lcssa1526.lcssa38, %334 ]
  %136 = phi i32 [ %.lcssa53152, %83 ], [ %151, %334 ]
  %.lcssa2436.lcssa51 = phi i32 [ %storemerge5.lcssa96.lcssa148, %83 ], [ %.lcssa2436, %334 ]
  %storemerge8.lcssa22.lcssa34.lcssa49 = phi i32 [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140, %83 ], [ %storemerge8.lcssa22.lcssa34, %334 ]
  %storemerge7.lcssa32.lcssa47 = phi i32 [ %storemerge7.lcssa32.lcssa47.lcssa136, %83 ], [ %storemerge7.lcssa32, %334 ]
  %storemerge6.lcssa45 = phi i32 [ %storemerge6.lcssa45.lcssa132, %83 ], [ %storemerge6, %334 ]
  %137 = phi %struct.block* [ %.lcssa43128, %83 ], [ %145, %334 ]
  %.lcssa14.lcssa19.lcssa29.lcssa41 = phi i32 [ %.lcssa7184.lcssa112.lcssa125, %83 ], [ %.lcssa14.lcssa19.lcssa29, %334 ]
  %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40 = phi i32 [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121, %83 ], [ %storemerge9.lcssa12.lcssa17.lcssa27, %334 ]
  %storemerge3 = phi i32 [ 0, %83 ], [ %335, %334 ]
  %138 = icmp slt i32 %storemerge3, 8
  %139 = load %struct.block*, %struct.block** @blocks, align 8
  br i1 %138, label %140, label %336

; <label>:140:                                    ; preds = %133
  %141 = sext i32 %storemerge3 to i64
  %142 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %struct.block, %struct.block* %139, i64 %144
  %146 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  call void @del_sorted_list(i32 %147, i32 %28)
  %148 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 0
  store i32 -1, i32* %148, align 8
  %149 = srem i32 %storemerge3, 2
  %150 = load i32, i32* @x_block_half, align 4
  %151 = mul nsw i32 %149, %150
  %152 = sdiv i32 %storemerge3, 2
  %153 = srem i32 %152, 2
  %154 = load i32, i32* @y_block_half, align 4
  %155 = mul nsw i32 %153, %154
  %156 = sdiv i32 %storemerge3, 4
  %157 = load i32, i32* @z_block_half, align 4
  %158 = mul nsw i32 %156, %157
  %159 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %160 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %161 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %162 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %163 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %164 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %165 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %166 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  br label %167

; <label>:167:                                    ; preds = %332, %140
  %.lcssa1526.lcssa38 = phi i32 [ %.lcssa1526.lcssa38.lcssa55, %140 ], [ %.lcssa1526, %332 ]
  %.lcssa2436 = phi i32 [ %.lcssa2436.lcssa51, %140 ], [ %181, %332 ]
  %storemerge8.lcssa22.lcssa34 = phi i32 [ %storemerge8.lcssa22.lcssa34.lcssa49, %140 ], [ %storemerge8.lcssa22, %332 ]
  %storemerge7.lcssa32 = phi i32 [ %storemerge7.lcssa32.lcssa47, %140 ], [ %storemerge7, %332 ]
  %.lcssa14.lcssa19.lcssa29 = phi i32 [ %.lcssa14.lcssa19.lcssa29.lcssa41, %140 ], [ %.lcssa14.lcssa19, %332 ]
  %storemerge9.lcssa12.lcssa17.lcssa27 = phi i32 [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40, %140 ], [ %storemerge9.lcssa12.lcssa17, %332 ]
  %storemerge6 = phi i32 [ 0, %140 ], [ %333, %332 ]
  %168 = load i32, i32* @num_vars, align 4
  %169 = icmp slt i32 %storemerge6, %168
  br i1 %169, label %170, label %334

; <label>:170:                                    ; preds = %167
  %171 = sext i32 %storemerge6 to i64
  %172 = sext i32 %storemerge6 to i64
  %173 = sext i32 %storemerge6 to i64
  %174 = sext i32 %storemerge6 to i64
  %175 = sext i32 %storemerge6 to i64
  %176 = sext i32 %storemerge6 to i64
  %177 = sext i32 %storemerge6 to i64
  %178 = sext i32 %storemerge6 to i64
  %179 = sext i32 %storemerge6 to i64
  br label %180

; <label>:180:                                    ; preds = %329, %170
  %.lcssa1526 = phi i32 [ %.lcssa1526.lcssa38, %170 ], [ %200, %329 ]
  %181 = phi i32 [ 1, %170 ], [ %330, %329 ]
  %storemerge8.lcssa22 = phi i32 [ %storemerge8.lcssa22.lcssa34, %170 ], [ %storemerge8, %329 ]
  %.lcssa14.lcssa19 = phi i32 [ %.lcssa14.lcssa19.lcssa29, %170 ], [ %.lcssa14, %329 ]
  %storemerge9.lcssa12.lcssa17 = phi i32 [ %storemerge9.lcssa12.lcssa17.lcssa27, %170 ], [ %storemerge9.lcssa12, %329 ]
  %storemerge7 = phi i32 [ 1, %170 ], [ %331, %329 ]
  %182 = load i32, i32* @x_block_half, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %332, label %184

; <label>:184:                                    ; preds = %180
  %185 = sext i32 %storemerge7 to i64
  %186 = add nsw i32 %storemerge7, 1
  %187 = sext i32 %186 to i64
  %188 = sext i32 %storemerge7 to i64
  %189 = add nsw i32 %storemerge7, 1
  %190 = sext i32 %189 to i64
  %191 = sext i32 %storemerge7 to i64
  %192 = add nsw i32 %storemerge7, 1
  %193 = sext i32 %192 to i64
  %194 = sext i32 %storemerge7 to i64
  %195 = add nsw i32 %storemerge7, 1
  %196 = sext i32 %195 to i64
  %197 = add nsw i32 %181, %151
  %198 = sext i32 %197 to i64
  br label %199

; <label>:199:                                    ; preds = %326, %184
  %200 = phi i32 [ 1, %184 ], [ %327, %326 ]
  %.lcssa14 = phi i32 [ %.lcssa14.lcssa19, %184 ], [ %219, %326 ]
  %storemerge9.lcssa12 = phi i32 [ %storemerge9.lcssa12.lcssa17, %184 ], [ %storemerge9, %326 ]
  %storemerge8 = phi i32 [ 1, %184 ], [ %328, %326 ]
  %201 = load i32, i32* @y_block_half, align 4
  %202 = icmp sgt i32 %200, %201
  br i1 %202, label %329, label %203

; <label>:203:                                    ; preds = %199
  %204 = sext i32 %storemerge8 to i64
  %205 = sext i32 %storemerge8 to i64
  %206 = add nsw i32 %storemerge8, 1
  %207 = sext i32 %206 to i64
  %208 = add nsw i32 %storemerge8, 1
  %209 = sext i32 %208 to i64
  %210 = sext i32 %storemerge8 to i64
  %211 = sext i32 %storemerge8 to i64
  %212 = add nsw i32 %storemerge8, 1
  %213 = sext i32 %212 to i64
  %214 = add nsw i32 %storemerge8, 1
  %215 = sext i32 %214 to i64
  %216 = add nsw i32 %200, %155
  %217 = sext i32 %216 to i64
  br label %218

; <label>:218:                                    ; preds = %222, %203
  %219 = phi i32 [ 1, %203 ], [ %324, %222 ]
  %storemerge9 = phi i32 [ 1, %203 ], [ %325, %222 ]
  %220 = load i32, i32* @z_block_half, align 4
  %221 = icmp sgt i32 %219, %220
  br i1 %221, label %326, label %222

; <label>:222:                                    ; preds = %218
  %223 = load double****, double***** %159, align 8
  %224 = getelementptr inbounds double***, double**** %223, i64 %171
  %225 = load double***, double**** %224, align 8
  %226 = getelementptr inbounds double**, double*** %225, i64 %185
  %227 = load double**, double*** %226, align 8
  %228 = getelementptr inbounds double*, double** %227, i64 %204
  %229 = load double*, double** %228, align 8
  %230 = sext i32 %storemerge9 to i64
  %231 = getelementptr inbounds double, double* %229, i64 %230
  %232 = load double, double* %231, align 8
  %233 = load double****, double***** %160, align 8
  %234 = getelementptr inbounds double***, double**** %233, i64 %172
  %235 = load double***, double**** %234, align 8
  %236 = getelementptr inbounds double**, double*** %235, i64 %187
  %237 = load double**, double*** %236, align 8
  %238 = getelementptr inbounds double*, double** %237, i64 %205
  %239 = load double*, double** %238, align 8
  %240 = sext i32 %storemerge9 to i64
  %241 = getelementptr inbounds double, double* %239, i64 %240
  %242 = load double, double* %241, align 8
  %243 = fadd double %232, %242
  %244 = load double****, double***** %161, align 8
  %245 = getelementptr inbounds double***, double**** %244, i64 %173
  %246 = load double***, double**** %245, align 8
  %247 = getelementptr inbounds double**, double*** %246, i64 %188
  %248 = load double**, double*** %247, align 8
  %249 = getelementptr inbounds double*, double** %248, i64 %207
  %250 = load double*, double** %249, align 8
  %251 = sext i32 %storemerge9 to i64
  %252 = getelementptr inbounds double, double* %250, i64 %251
  %253 = load double, double* %252, align 8
  %254 = fadd double %243, %253
  %255 = load double****, double***** %162, align 8
  %256 = getelementptr inbounds double***, double**** %255, i64 %174
  %257 = load double***, double**** %256, align 8
  %258 = getelementptr inbounds double**, double*** %257, i64 %190
  %259 = load double**, double*** %258, align 8
  %260 = getelementptr inbounds double*, double** %259, i64 %209
  %261 = load double*, double** %260, align 8
  %262 = sext i32 %storemerge9 to i64
  %263 = getelementptr inbounds double, double* %261, i64 %262
  %264 = load double, double* %263, align 8
  %265 = fadd double %254, %264
  %266 = load double****, double***** %163, align 8
  %267 = getelementptr inbounds double***, double**** %266, i64 %175
  %268 = load double***, double**** %267, align 8
  %269 = getelementptr inbounds double**, double*** %268, i64 %191
  %270 = load double**, double*** %269, align 8
  %271 = getelementptr inbounds double*, double** %270, i64 %210
  %272 = load double*, double** %271, align 8
  %273 = add nsw i32 %storemerge9, 1
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds double, double* %272, i64 %274
  %276 = load double, double* %275, align 8
  %277 = fadd double %265, %276
  %278 = load double****, double***** %164, align 8
  %279 = getelementptr inbounds double***, double**** %278, i64 %176
  %280 = load double***, double**** %279, align 8
  %281 = getelementptr inbounds double**, double*** %280, i64 %193
  %282 = load double**, double*** %281, align 8
  %283 = getelementptr inbounds double*, double** %282, i64 %211
  %284 = load double*, double** %283, align 8
  %285 = add nsw i32 %storemerge9, 1
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds double, double* %284, i64 %286
  %288 = load double, double* %287, align 8
  %289 = fadd double %277, %288
  %290 = load double****, double***** %165, align 8
  %291 = getelementptr inbounds double***, double**** %290, i64 %177
  %292 = load double***, double**** %291, align 8
  %293 = getelementptr inbounds double**, double*** %292, i64 %194
  %294 = load double**, double*** %293, align 8
  %295 = getelementptr inbounds double*, double** %294, i64 %213
  %296 = load double*, double** %295, align 8
  %297 = add nsw i32 %storemerge9, 1
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds double, double* %296, i64 %298
  %300 = load double, double* %299, align 8
  %301 = fadd double %289, %300
  %302 = load double****, double***** %166, align 8
  %303 = getelementptr inbounds double***, double**** %302, i64 %178
  %304 = load double***, double**** %303, align 8
  %305 = getelementptr inbounds double**, double*** %304, i64 %196
  %306 = load double**, double*** %305, align 8
  %307 = getelementptr inbounds double*, double** %306, i64 %215
  %308 = load double*, double** %307, align 8
  %309 = add nsw i32 %storemerge9, 1
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds double, double* %308, i64 %310
  %312 = load double, double* %311, align 8
  %313 = fadd double %301, %312
  %314 = load double****, double***** %132, align 8
  %315 = getelementptr inbounds double***, double**** %314, i64 %179
  %316 = load double***, double**** %315, align 8
  %317 = getelementptr inbounds double**, double*** %316, i64 %198
  %318 = load double**, double*** %317, align 8
  %319 = getelementptr inbounds double*, double** %318, i64 %217
  %320 = load double*, double** %319, align 8
  %321 = add nsw i32 %219, %158
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds double, double* %320, i64 %322
  store double %313, double* %323, align 8
  %324 = add nsw i32 %219, 1
  %325 = add nsw i32 %storemerge9, 2
  br label %218

; <label>:326:                                    ; preds = %218
  %327 = add nsw i32 %200, 1
  %328 = add nsw i32 %storemerge8, 2
  br label %199

; <label>:329:                                    ; preds = %199
  %330 = add nsw i32 %181, 1
  %331 = add nsw i32 %storemerge7, 2
  br label %180

; <label>:332:                                    ; preds = %180
  %333 = add nsw i32 %storemerge6, 1
  br label %167

; <label>:334:                                    ; preds = %167
  %335 = add nsw i32 %storemerge3, 1
  br label %133

; <label>:336:                                    ; preds = %133
  %337 = load %struct.block*, %struct.block** @blocks, align 8
  %338 = load %struct.block*, %struct.block** @blocks, align 8
  %339 = load %struct.block*, %struct.block** @blocks, align 8
  %340 = load %struct.block*, %struct.block** @blocks, align 8
  %341 = load %struct.block*, %struct.block** @blocks, align 8
  %342 = load %struct.block*, %struct.block** @blocks, align 8
  %343 = load %struct.block*, %struct.block** @blocks, align 8
  %344 = load %struct.block*, %struct.block** @blocks, align 8
  %345 = load %struct.block*, %struct.block** @blocks, align 8
  %346 = load %struct.block*, %struct.block** @blocks, align 8
  %347 = load %struct.block*, %struct.block** @blocks, align 8
  %348 = load %struct.block*, %struct.block** @blocks, align 8
  br label %349

; <label>:349:                                    ; preds = %503, %336
  %.lcssa7184.lcssa112 = phi i32 [ %.lcssa14.lcssa19.lcssa29.lcssa41, %336 ], [ %.lcssa7184.lcssa110, %503 ]
  %.lcssa6881.lcssa107 = phi i32 [ %.lcssa6881.lcssa107.lcssa186, %336 ], [ %.lcssa6881.lcssa104, %503 ]
  %.lcssa6578.lcssa99 = phi i32 [ %.lcssa6578.lcssa99.lcssa181, %336 ], [ %.lcssa6578.lcssa100, %503 ]
  %storemerge5.lcssa96 = phi i32 [ %.lcssa2436.lcssa51, %336 ], [ %storemerge5.lcssa94, %503 ]
  %.lcssa6274.lcssa89 = phi i32 [ %.lcssa1526.lcssa38.lcssa55, %336 ], [ %.lcssa6274.lcssa87, %503 ]
  %storemerge4 = phi i32 [ 0, %336 ], [ %504, %503 ]
  %350 = icmp slt i32 %storemerge4, 6
  br i1 %350, label %351, label %505

; <label>:351:                                    ; preds = %349
  %352 = sext i32 %storemerge4 to i64
  %353 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @consolidate_blocks.side, i64 0, i64 %352, i64 0, i64 0
  %354 = load i32, i32* %353, align 16
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %355
  %357 = load i32, i32* %356, align 4
  %358 = sext i32 %357 to i64
  %359 = sext i32 %storemerge4 to i64
  %360 = getelementptr inbounds %struct.block, %struct.block* %139, i64 %358, i32 8, i64 %359
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, -2
  br i1 %362, label %363, label %368

; <label>:363:                                    ; preds = %351
  %364 = sext i32 %storemerge4 to i64
  %365 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 8, i64 %364
  store i32 -2, i32* %365, align 4
  %366 = sext i32 %storemerge4 to i64
  %367 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 7, i64 %366
  store i32 0, i32* %367, align 4
  br label %503

; <label>:368:                                    ; preds = %351
  %369 = sext i32 %357 to i64
  %370 = sext i32 %storemerge4 to i64
  %371 = getelementptr inbounds %struct.block, %struct.block* %337, i64 %369, i32 8, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = icmp eq i32 %372, %storemerge
  br i1 %373, label %374, label %417

; <label>:374:                                    ; preds = %368
  %375 = sext i32 %357 to i64
  %376 = sext i32 %storemerge4 to i64
  %377 = getelementptr inbounds %struct.block, %struct.block* %338, i64 %375, i32 9, i64 %376, i64 0, i64 0
  %378 = load i32, i32* %377, align 4
  %379 = icmp sgt i32 %378, -1
  br i1 %379, label %380, label %503

; <label>:380:                                    ; preds = %374
  %381 = sdiv i32 %storemerge4, 2
  %382 = shl nsw i32 %381, 1
  %383 = add nsw i32 %storemerge4, 1
  %384 = srem i32 %383, 2
  %385 = add nsw i32 %382, %384
  %386 = sext i32 %357 to i64
  %387 = sext i32 %storemerge4 to i64
  %388 = getelementptr inbounds %struct.block, %struct.block* %345, i64 %386, i32 9, i64 %387, i64 0, i64 0
  %389 = load i32, i32* %388, align 4
  %390 = sext i32 %storemerge4 to i64
  %391 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 9, i64 %390, i64 0, i64 0
  store i32 %389, i32* %391, align 4
  %392 = sext i32 %storemerge4 to i64
  %393 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 8, i64 %392
  store i32 %storemerge, i32* %393, align 4
  %394 = sext i32 %storemerge4 to i64
  %395 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 7, i64 %394
  store i32 0, i32* %395, align 4
  %396 = sext i32 %357 to i64
  %397 = sext i32 %storemerge4 to i64
  %398 = getelementptr inbounds %struct.block, %struct.block* %346, i64 %396, i32 9, i64 %397, i64 0, i64 0
  %399 = load i32, i32* %398, align 4
  %400 = sext i32 %399 to i64
  %401 = sext i32 %385 to i64
  %402 = getelementptr inbounds %struct.block, %struct.block* %346, i64 %400, i32 9, i64 %401, i64 0, i64 0
  store i32 %storemerge2, i32* %402, align 4
  %403 = sext i32 %357 to i64
  %404 = sext i32 %storemerge4 to i64
  %405 = getelementptr inbounds %struct.block, %struct.block* %347, i64 %403, i32 9, i64 %404, i64 0, i64 0
  %406 = load i32, i32* %405, align 4
  %407 = sext i32 %406 to i64
  %408 = sext i32 %385 to i64
  %409 = getelementptr inbounds %struct.block, %struct.block* %347, i64 %407, i32 8, i64 %408
  store i32 %storemerge, i32* %409, align 4
  %410 = sext i32 %357 to i64
  %411 = sext i32 %storemerge4 to i64
  %412 = getelementptr inbounds %struct.block, %struct.block* %348, i64 %410, i32 9, i64 %411, i64 0, i64 0
  %413 = load i32, i32* %412, align 4
  %414 = sext i32 %413 to i64
  %415 = sext i32 %385 to i64
  %416 = getelementptr inbounds %struct.block, %struct.block* %348, i64 %414, i32 7, i64 %415
  store i32 0, i32* %416, align 4
  br label %503

; <label>:417:                                    ; preds = %368
  %418 = srem i32 %storemerge4, 2
  %419 = mul nsw i32 %418, 10
  %420 = add nsw i32 %419, 6
  %421 = sext i32 %storemerge4 to i64
  %422 = sext i32 %storemerge4 to i64
  %423 = sext i32 %storemerge4 to i64
  %424 = sdiv i32 %storemerge4, 2
  %425 = shl nsw i32 %424, 1
  %426 = add nsw i32 %storemerge4, 1
  %427 = srem i32 %426, 2
  %428 = add nsw i32 %425, %427
  %429 = sext i32 %storemerge4 to i64
  %430 = sext i32 %storemerge4 to i64
  %431 = sext i32 %storemerge4 to i64
  %432 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 8, i64 %431
  %433 = sext i32 %storemerge4 to i64
  %434 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 7, i64 %433
  %435 = sext i32 %storemerge4 to i64
  %436 = sext i32 %storemerge4 to i64
  %437 = sext i32 %storemerge4 to i64
  br label %438

; <label>:438:                                    ; preds = %501, %417
  %.lcssa7184 = phi i32 [ %420, %417 ], [ %444, %501 ]
  %.lcssa6881 = phi i32 [ %.lcssa6881.lcssa107, %417 ], [ %445, %501 ]
  %.lcssa6578 = phi i32 [ %357, %417 ], [ %446, %501 ]
  %.lcssa6274 = phi i32 [ %.lcssa6274.lcssa89, %417 ], [ %447, %501 ]
  %storemerge5 = phi i32 [ 0, %417 ], [ %502, %501 ]
  %439 = icmp slt i32 %storemerge5, 2
  br i1 %439, label %440, label %503

; <label>:440:                                    ; preds = %438
  %441 = sext i32 %storemerge5 to i64
  %442 = sext i32 %storemerge5 to i64
  br label %443

; <label>:443:                                    ; preds = %497, %440
  %444 = phi i32 [ %500, %497 ], [ %.lcssa7184, %440 ]
  %445 = phi i32 [ %498, %497 ], [ %.lcssa6881, %440 ]
  %446 = phi i32 [ %455, %497 ], [ %.lcssa6578, %440 ]
  %447 = phi i32 [ %499, %497 ], [ 0, %440 ]
  %448 = icmp slt i32 %447, 2
  br i1 %448, label %449, label %501

; <label>:449:                                    ; preds = %443
  %450 = sext i32 %447 to i64
  %451 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @consolidate_blocks.side, i64 0, i64 %421, i64 %441, i64 %450
  %452 = load i32, i32* %451, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds %struct.block, %struct.block* %339, i64 %456, i32 9, i64 %422, i64 0, i64 0
  %458 = load i32, i32* %457, align 4
  %459 = icmp sgt i32 %458, -1
  br i1 %459, label %460, label %497

; <label>:460:                                    ; preds = %449
  %461 = sext i32 %455 to i64
  %462 = getelementptr inbounds %struct.block, %struct.block* %340, i64 %461, i32 8, i64 %423
  %463 = load i32, i32* %462, align 4
  %464 = icmp eq i32 %463, %29
  br i1 %464, label %465, label %473

; <label>:465:                                    ; preds = %460
  store i32 %storemerge2.lcssa10117.lcssa193, i32* %1, align 1
  store i32 %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121.lcssa197, i32* %11, align 1
  store i32 %.lcssa7184.lcssa112.lcssa125.lcssa201, i32* %5, align 1
  store %struct.block* %.lcssa43128.lcssa205, %struct.block** %19, align 1
  store i32 %storemerge6.lcssa45.lcssa132.lcssa208, i32* %14, align 1
  store i32 %storemerge7.lcssa32.lcssa47.lcssa136.lcssa212, i32* %9, align 1
  store i32 %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140.lcssa216, i32* %10, align 1
  store %struct.block* %.lcssa143220, %struct.block** %18, align 1
  store i32 %storemerge5.lcssa96.lcssa148.lcssa224, i32* %3, align 1
  store i32 %.lcssa53152.lcssa228, i32* %6, align 1
  store i32 %.lcssa6274.lcssa89.lcssa156.lcssa232, i32* %4, align 1
  store i32 %.lcssa57160.lcssa236, i32* %7, align 1
  store i32 %.lcssa59164.lcssa240, i32* %8, align 1
  store i32 %storemerge3.lcssa168.lcssa244, i32* %13, align 1
  store %struct.parent* %.lcssa171248, %struct.parent** %20, align 1
  store i32 %storemerge, i32* %12, align 4
  store i32 %storemerge4.lcssa176.lcssa255, i32* %15, align 1
  store i32 %.lcssa6578.lcssa99.lcssa181.lcssa259, i32* %16, align 1
  store i32 %.lcssa6881.lcssa107.lcssa186.lcssa263, i32* %17, align 1
  store i32 %storemerge1.lcssa267, i32* %2, align 1
  store i32 %storemerge2, i32* %1, align 1
  store i32 %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40, i32* %11, align 1
  store i32 %.lcssa14.lcssa19.lcssa29.lcssa41, i32* %5, align 1
  store %struct.block* %137, %struct.block** %19, align 1
  store i32 %storemerge6.lcssa45, i32* %14, align 1
  store i32 %storemerge7.lcssa32.lcssa47, i32* %9, align 1
  store i32 %storemerge8.lcssa22.lcssa34.lcssa49, i32* %10, align 1
  store %struct.block* %71, %struct.block** %18, align 1
  store i32 %.lcssa2436.lcssa51, i32* %3, align 1
  store i32 %136, i32* %6, align 1
  store i32 %.lcssa1526.lcssa38.lcssa55, i32* %4, align 1
  store i32 %135, i32* %7, align 1
  store i32 %134, i32* %8, align 1
  store i32 %storemerge3, i32* %13, align 1
  store %struct.parent* %39, %struct.parent** %20, align 1
  store i32 %storemerge4.lcssa176, i32* %15, align 1
  store i32 %.lcssa6578.lcssa99.lcssa181, i32* %16, align 1
  store i32 %.lcssa6881.lcssa107.lcssa186, i32* %17, align 1
  store i32 %storemerge1, i32* %2, align 4
  store i32 %.lcssa6274.lcssa89, i32* %4, align 1
  store i32 %storemerge4, i32* %15, align 4
  store i32 %storemerge5.lcssa96, i32* %3, align 1
  store i32 %357, i32* %16, align 1
  store i32 %.lcssa6881.lcssa107, i32* %17, align 1
  store i32 %420, i32* %5, align 1
  store i32 0, i32* %4, align 1
  store i32 %storemerge5, i32* %3, align 4
  store i32 %.lcssa6578, i32* %16, align 1
  store i32 %.lcssa6881, i32* %17, align 1
  store i32 %.lcssa7184, i32* %5, align 1
  store i32 %447, i32* %4, align 1
  store i32 %455, i32* %16, align 1
  store i32 %445, i32* %17, align 1
  store i32 %444, i32* %5, align 1
  %466 = load i32, i32* @my_pe, align 4
  %467 = load i32, i32* %2, align 4
  %468 = load i32, i32* %1, align 4
  %469 = load i32, i32* %16, align 4
  %470 = load i32, i32* %15, align 4
  %471 = load i32, i32* %12, align 4
  %472 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i32 %466, i32 %467, i32 %468, i32 %469, i32 %470, i32 %471) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:473:                                    ; preds = %460
  %474 = sext i32 %455 to i64
  %475 = getelementptr inbounds %struct.block, %struct.block* %341, i64 %474, i32 9, i64 %429, i64 0, i64 0
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %447 to i64
  %478 = getelementptr inbounds %struct.block, %struct.block* %71, i64 0, i32 9, i64 %430, i64 %442, i64 %477
  store i32 %476, i32* %478, align 4
  store i32 %30, i32* %432, align 4
  store i32 0, i32* %434, align 4
  %479 = sext i32 %455 to i64
  %480 = getelementptr inbounds %struct.block, %struct.block* %342, i64 %479, i32 9, i64 %435, i64 0, i64 0
  %481 = load i32, i32* %480, align 4
  %482 = sext i32 %481 to i64
  %483 = sext i32 %428 to i64
  %484 = getelementptr inbounds %struct.block, %struct.block* %342, i64 %482, i32 9, i64 %483, i64 0, i64 0
  store i32 %storemerge2, i32* %484, align 4
  %485 = sext i32 %455 to i64
  %486 = getelementptr inbounds %struct.block, %struct.block* %343, i64 %485, i32 9, i64 %436, i64 0, i64 0
  %487 = load i32, i32* %486, align 4
  %488 = sext i32 %487 to i64
  %489 = sext i32 %428 to i64
  %490 = getelementptr inbounds %struct.block, %struct.block* %343, i64 %488, i32 8, i64 %489
  store i32 %storemerge, i32* %490, align 4
  %491 = sext i32 %455 to i64
  %492 = getelementptr inbounds %struct.block, %struct.block* %344, i64 %491, i32 9, i64 %437, i64 0, i64 0
  %493 = load i32, i32* %492, align 4
  %494 = sext i32 %493 to i64
  %495 = sext i32 %428 to i64
  %496 = getelementptr inbounds %struct.block, %struct.block* %344, i64 %494, i32 7, i64 %495
  store i32 0, i32* %496, align 4
  br label %497

; <label>:497:                                    ; preds = %449, %473
  %498 = phi i32 [ %428, %473 ], [ %445, %449 ]
  %499 = add nsw i32 %447, 1
  %500 = add nsw i32 %444, 1
  br label %443

; <label>:501:                                    ; preds = %443
  %502 = add nsw i32 %storemerge5, 1
  br label %438

; <label>:503:                                    ; preds = %363, %438, %374, %380
  %.lcssa7184.lcssa110 = phi i32 [ %.lcssa7184.lcssa112, %363 ], [ %.lcssa7184.lcssa112, %380 ], [ %.lcssa7184.lcssa112, %374 ], [ %.lcssa7184, %438 ]
  %.lcssa6881.lcssa104 = phi i32 [ %.lcssa6881.lcssa107, %363 ], [ %385, %380 ], [ %.lcssa6881.lcssa107, %374 ], [ %.lcssa6881, %438 ]
  %.lcssa6578.lcssa100 = phi i32 [ %357, %363 ], [ %357, %380 ], [ %357, %374 ], [ %.lcssa6578, %438 ]
  %storemerge5.lcssa94 = phi i32 [ %storemerge5.lcssa96, %363 ], [ %storemerge5.lcssa96, %380 ], [ %storemerge5.lcssa96, %374 ], [ %storemerge5, %438 ]
  %.lcssa6274.lcssa87 = phi i32 [ %.lcssa6274.lcssa89, %363 ], [ %.lcssa6274.lcssa89, %380 ], [ %.lcssa6274.lcssa89, %374 ], [ %.lcssa6274, %438 ]
  %504 = add nsw i32 %storemerge4, 1
  br label %349

; <label>:505:                                    ; preds = %36, %43, %47, %349
  %.lcssa6881.lcssa107.lcssa185 = phi i32 [ %.lcssa6881.lcssa107.lcssa186, %47 ], [ %.lcssa6881.lcssa107.lcssa186, %43 ], [ %.lcssa6881.lcssa107.lcssa186, %36 ], [ %.lcssa6881.lcssa107, %349 ]
  %.lcssa6578.lcssa99.lcssa180 = phi i32 [ %.lcssa6578.lcssa99.lcssa181, %47 ], [ %.lcssa6578.lcssa99.lcssa181, %43 ], [ %.lcssa6578.lcssa99.lcssa181, %36 ], [ %.lcssa6578.lcssa99, %349 ]
  %storemerge4.lcssa175 = phi i32 [ %storemerge4.lcssa176, %47 ], [ %storemerge4.lcssa176, %43 ], [ %storemerge4.lcssa176, %36 ], [ %storemerge4, %349 ]
  %storemerge3.lcssa167 = phi i32 [ %storemerge3.lcssa168, %47 ], [ %storemerge3.lcssa168, %43 ], [ %storemerge3.lcssa168, %36 ], [ %storemerge3, %349 ]
  %.lcssa59163 = phi i32 [ %.lcssa59164, %47 ], [ %.lcssa59164, %43 ], [ %.lcssa59164, %36 ], [ %134, %349 ]
  %.lcssa57159 = phi i32 [ %.lcssa57160, %47 ], [ %.lcssa57160, %43 ], [ %.lcssa57160, %36 ], [ %135, %349 ]
  %.lcssa6274.lcssa89.lcssa155 = phi i32 [ %.lcssa6274.lcssa89.lcssa156, %47 ], [ %.lcssa6274.lcssa89.lcssa156, %43 ], [ %.lcssa6274.lcssa89.lcssa156, %36 ], [ %.lcssa6274.lcssa89, %349 ]
  %.lcssa53151 = phi i32 [ %.lcssa53152, %47 ], [ %.lcssa53152, %43 ], [ %.lcssa53152, %36 ], [ %136, %349 ]
  %storemerge5.lcssa96.lcssa147 = phi i32 [ %storemerge5.lcssa96.lcssa148, %47 ], [ %storemerge5.lcssa96.lcssa148, %43 ], [ %storemerge5.lcssa96.lcssa148, %36 ], [ %storemerge5.lcssa96, %349 ]
  %506 = phi %struct.block* [ %33, %47 ], [ %33, %43 ], [ %33, %36 ], [ %71, %349 ]
  %storemerge8.lcssa22.lcssa34.lcssa49.lcssa139 = phi i32 [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140, %47 ], [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140, %43 ], [ %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140, %36 ], [ %storemerge8.lcssa22.lcssa34.lcssa49, %349 ]
  %storemerge7.lcssa32.lcssa47.lcssa135 = phi i32 [ %storemerge7.lcssa32.lcssa47.lcssa136, %47 ], [ %storemerge7.lcssa32.lcssa47.lcssa136, %43 ], [ %storemerge7.lcssa32.lcssa47.lcssa136, %36 ], [ %storemerge7.lcssa32.lcssa47, %349 ]
  %storemerge6.lcssa45.lcssa131 = phi i32 [ %storemerge6.lcssa45.lcssa132, %47 ], [ %storemerge6.lcssa45.lcssa132, %43 ], [ %storemerge6.lcssa45.lcssa132, %36 ], [ %storemerge6.lcssa45, %349 ]
  %.lcssa43127 = phi %struct.block* [ %.lcssa43128, %47 ], [ %.lcssa43128, %43 ], [ %.lcssa43128, %36 ], [ %137, %349 ]
  %.lcssa7184.lcssa112.lcssa124 = phi i32 [ %.lcssa7184.lcssa112.lcssa125, %47 ], [ %.lcssa7184.lcssa112.lcssa125, %43 ], [ %.lcssa7184.lcssa112.lcssa125, %36 ], [ %.lcssa7184.lcssa112, %349 ]
  %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa120 = phi i32 [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121, %47 ], [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121, %43 ], [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121, %36 ], [ %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40, %349 ]
  %storemerge2.lcssa10116 = phi i32 [ %storemerge2.lcssa10117, %47 ], [ %storemerge2.lcssa10117, %43 ], [ %storemerge2.lcssa10117, %36 ], [ %storemerge2, %349 ]
  %507 = add nsw i32 %storemerge1, 1
  br label %31

; <label>:508:                                    ; preds = %31
  %509 = add nsw i32 %storemerge, -1
  br label %22

; <label>:510:                                    ; preds = %22
  store i32 %storemerge2.lcssa10117.lcssa193, i32* %1, align 1
  store i32 %storemerge9.lcssa12.lcssa17.lcssa27.lcssa40.lcssa121.lcssa197, i32* %11, align 1
  store i32 %.lcssa7184.lcssa112.lcssa125.lcssa201, i32* %5, align 1
  store %struct.block* %.lcssa43128.lcssa205, %struct.block** %19, align 1
  store i32 %storemerge6.lcssa45.lcssa132.lcssa208, i32* %14, align 1
  store i32 %storemerge7.lcssa32.lcssa47.lcssa136.lcssa212, i32* %9, align 1
  store i32 %storemerge8.lcssa22.lcssa34.lcssa49.lcssa140.lcssa216, i32* %10, align 1
  store %struct.block* %.lcssa143220, %struct.block** %18, align 1
  store i32 %storemerge5.lcssa96.lcssa148.lcssa224, i32* %3, align 1
  store i32 %.lcssa53152.lcssa228, i32* %6, align 1
  store i32 %.lcssa6274.lcssa89.lcssa156.lcssa232, i32* %4, align 1
  store i32 %.lcssa57160.lcssa236, i32* %7, align 1
  store i32 %.lcssa59164.lcssa240, i32* %8, align 1
  store i32 %storemerge3.lcssa168.lcssa244, i32* %13, align 1
  store %struct.parent* %.lcssa171248, %struct.parent** %20, align 1
  store i32 %storemerge, i32* %12, align 4
  store i32 %storemerge4.lcssa176.lcssa255, i32* %15, align 1
  store i32 %.lcssa6578.lcssa99.lcssa181.lcssa259, i32* %16, align 1
  store i32 %.lcssa6881.lcssa107.lcssa186.lcssa263, i32* %17, align 1
  store i32 %storemerge1.lcssa267, i32* %2, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @find_sorted_list(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %6 = load i32*, i32** @sorted_index, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds i32, i32* %6, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** @sorted_index, align 8
  %11 = load i32, i32* %4, align 4
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i32, i32* %10, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %3, align 4
  %17 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  br label %18

; <label>:18:                                     ; preds = %31, %2
  %storemerge = phi i32 [ %9, %2 ], [ %32, %31 ]
  %19 = icmp slt i32 %storemerge, %15
  br i1 %19, label %20, label %33

; <label>:20:                                     ; preds = %18
  %21 = sext i32 %storemerge to i64
  %22 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %17, i64 %21, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %16, %23
  br i1 %24, label %25, label %31

; <label>:25:                                     ; preds = %20
  store i32 %storemerge, i32* %5, align 4
  %26 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %26, i64 %28, i32 1
  %30 = load i32, i32* %29, align 4
  ret i32 %30

; <label>:31:                                     ; preds = %20
  %32 = add nsw i32 %storemerge, 1
  br label %18

; <label>:33:                                     ; preds = %18
  store i32 %storemerge, i32* %5, align 4
  %34 = load i32, i32* @my_pe, align 4
  %35 = load i32, i32* %3, align 4
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 %34, i32 %35) #6
  call void @exit(i32 -1) #7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define double @check_sum(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca %struct.block*, align 8
  store i32 %0, i32* %2, align 4
  %11 = call double @timer()
  store double %11, double* %9, align 8
  store double 0.000000e+00, double* %7, align 8
  %12 = load i32*, i32** @sorted_index, align 8
  %13 = load i32, i32* @num_refine, align 4
  %14 = add nsw i32 %13, 1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %12, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %19 = load %struct.block*, %struct.block** @blocks, align 8
  %20 = load i32, i32* @x_block_size, align 4
  %21 = load i32, i32* @y_block_size, align 4
  %22 = load i32, i32* @z_block_size, align 4
  %23 = load i32, i32* %2, align 4
  %24 = sext i32 %23 to i64
  %.promoted15 = load i32, i32* %6, align 1
  %.promoted = load %struct.block*, %struct.block** %10, align 1
  %.promoted19 = load i32, i32* %4, align 1
  %.promoted22 = load i32, i32* %5, align 1
  %.promoted25 = load double, double* %8, align 1
  %.promoted29 = load double, double* %7, align 1
  br label %25

; <label>:25:                                     ; preds = %70, %1
  %26 = phi double [ %.promoted29, %1 ], [ %71, %70 ]
  %.lcssa8.lcssa14.lcssa27 = phi double [ %.promoted25, %1 ], [ %.lcssa8.lcssa14.lcssa26, %70 ]
  %storemerge2.lcssa12.lcssa24 = phi i32 [ %.promoted22, %1 ], [ %storemerge2.lcssa12.lcssa23, %70 ]
  %storemerge1.lcssa21 = phi i32 [ %.promoted19, %1 ], [ %storemerge1.lcssa20, %70 ]
  %27 = phi %struct.block* [ %.promoted, %1 ], [ %34, %70 ]
  %storemerge3.lcssa5.lcssa9.lcssa17 = phi i32 [ %.promoted15, %1 ], [ %storemerge3.lcssa5.lcssa9.lcssa16, %70 ]
  %storemerge = phi i32 [ 0, %1 ], [ %72, %70 ]
  %28 = icmp slt i32 %storemerge, %17
  br i1 %28, label %29, label %73

; <label>:29:                                     ; preds = %25
  %30 = sext i32 %storemerge to i64
  %31 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %18, i64 %30, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.block, %struct.block* %19, i64 %33
  %35 = getelementptr inbounds %struct.block, %struct.block* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %70

; <label>:38:                                     ; preds = %29
  %39 = getelementptr inbounds %struct.block, %struct.block* %34, i64 0, i32 11
  br label %40

; <label>:40:                                     ; preds = %66, %38
  %.lcssa8.lcssa14 = phi double [ 0.000000e+00, %38 ], [ %.lcssa8, %66 ]
  %storemerge2.lcssa12 = phi i32 [ %storemerge2.lcssa12.lcssa24, %38 ], [ %storemerge2, %66 ]
  %storemerge3.lcssa5.lcssa9 = phi i32 [ %storemerge3.lcssa5.lcssa9.lcssa17, %38 ], [ %storemerge3.lcssa5, %66 ]
  %storemerge1 = phi i32 [ 1, %38 ], [ %67, %66 ]
  %41 = icmp sgt i32 %storemerge1, %20
  br i1 %41, label %68, label %42

; <label>:42:                                     ; preds = %40
  %43 = sext i32 %storemerge1 to i64
  br label %44

; <label>:44:                                     ; preds = %64, %42
  %.lcssa8 = phi double [ %.lcssa8.lcssa14, %42 ], [ %49, %64 ]
  %storemerge3.lcssa5 = phi i32 [ %storemerge3.lcssa5.lcssa9, %42 ], [ %storemerge3, %64 ]
  %storemerge2 = phi i32 [ 1, %42 ], [ %65, %64 ]
  %45 = icmp sgt i32 %storemerge2, %21
  br i1 %45, label %66, label %46

; <label>:46:                                     ; preds = %44
  %47 = sext i32 %storemerge2 to i64
  br label %48

; <label>:48:                                     ; preds = %51, %46
  %49 = phi double [ %.lcssa8, %46 ], [ %62, %51 ]
  %storemerge3 = phi i32 [ 1, %46 ], [ %63, %51 ]
  %50 = icmp sgt i32 %storemerge3, %22
  br i1 %50, label %64, label %51

; <label>:51:                                     ; preds = %48
  %52 = load double****, double***** %39, align 8
  %53 = getelementptr inbounds double***, double**** %52, i64 %24
  %54 = load double***, double**** %53, align 8
  %55 = getelementptr inbounds double**, double*** %54, i64 %43
  %56 = load double**, double*** %55, align 8
  %57 = getelementptr inbounds double*, double** %56, i64 %47
  %58 = load double*, double** %57, align 8
  %59 = sext i32 %storemerge3 to i64
  %60 = getelementptr inbounds double, double* %58, i64 %59
  %61 = load double, double* %60, align 8
  %62 = fadd double %49, %61
  %63 = add nsw i32 %storemerge3, 1
  br label %48

; <label>:64:                                     ; preds = %48
  %65 = add nsw i32 %storemerge2, 1
  br label %44

; <label>:66:                                     ; preds = %44
  %67 = add nsw i32 %storemerge1, 1
  br label %40

; <label>:68:                                     ; preds = %40
  %69 = fadd double %26, %.lcssa8.lcssa14
  br label %70

; <label>:70:                                     ; preds = %29, %68
  %71 = phi double [ %69, %68 ], [ %26, %29 ]
  %.lcssa8.lcssa14.lcssa26 = phi double [ %.lcssa8.lcssa14, %68 ], [ %.lcssa8.lcssa14.lcssa27, %29 ]
  %storemerge2.lcssa12.lcssa23 = phi i32 [ %storemerge2.lcssa12, %68 ], [ %storemerge2.lcssa12.lcssa24, %29 ]
  %storemerge1.lcssa20 = phi i32 [ %storemerge1, %68 ], [ %storemerge1.lcssa21, %29 ]
  %storemerge3.lcssa5.lcssa9.lcssa16 = phi i32 [ %storemerge3.lcssa5.lcssa9, %68 ], [ %storemerge3.lcssa5.lcssa9.lcssa17, %29 ]
  %72 = add nsw i32 %storemerge, 1
  br label %25

; <label>:73:                                     ; preds = %25
  store i32 %storemerge3.lcssa5.lcssa9.lcssa17, i32* %6, align 1
  store %struct.block* %27, %struct.block** %10, align 1
  store i32 %storemerge1.lcssa21, i32* %4, align 1
  store i32 %storemerge2.lcssa12.lcssa24, i32* %5, align 1
  store double %.lcssa8.lcssa14.lcssa27, double* %8, align 1
  store i32 %storemerge, i32* %3, align 4
  store double %26, double* %7, align 1
  %74 = call double @timer()
  %75 = load double, double* %9, align 8
  %76 = fsub double %74, %75
  %77 = load double, double* @timer_cs_calc, align 8
  %78 = fadd double %77, %76
  store double %78, double* @timer_cs_calc, align 8
  %79 = load i32, i32* @total_red, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* @total_red, align 4
  %81 = load double, double* %7, align 8
  ret double %81
}

; Function Attrs: noinline nounwind uwtable
define void @comm(i32, i32, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca %struct.block*, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %19 = load i32, i32* %6, align 4
  %20 = srem i32 %19, 6
  %21 = sext i32 %20 to i64
  %22 = load i32, i32* %4, align 4
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %4, align 4
  %25 = load i32, i32* %5, align 4
  %26 = load i32, i32* %4, align 4
  %27 = load i32, i32* %5, align 4
  %28 = load i32, i32* %4, align 4
  %29 = load i32, i32* %5, align 4
  %.promoted75 = load i32, i32* %8, align 1
  %.promoted78 = load i32, i32* %11, align 1
  %.promoted81 = load i32, i32* %9, align 1
  %.promoted = load i32, i32* %7, align 1
  %.promoted86 = load i32, i32* %12, align 1
  %.promoted89 = load i32, i32* %13, align 1
  %.promoted91 = load %struct.block*, %struct.block** %18, align 1
  %.promoted94 = load i32, i32* %10, align 1
  %.promoted97 = load double, double* %17, align 1
  %.promoted100 = load i32, i32* %15, align 1
  %.promoted105 = load double, double* %16, align 1
  br label %30

; <label>:30:                                     ; preds = %209, %3
  %31 = phi double [ %.promoted105, %3 ], [ %41, %209 ]
  %storemerge2.lcssa101 = phi i32 [ %.promoted100, %3 ], [ %storemerge2, %209 ]
  %.lcssa4271.lcssa98 = phi double [ %.promoted97, %3 ], [ %.lcssa4271, %209 ]
  %storemerge3.lcssa67.lcssa95 = phi i32 [ %.promoted94, %3 ], [ %storemerge3.lcssa67, %209 ]
  %.lcssa6392 = phi %struct.block* [ %.promoted91, %3 ], [ %64, %209 ]
  %storemerge190 = phi i32 [ %.promoted89, %3 ], [ %storemerge1, %209 ]
  %.lcssa6087 = phi i32 [ %.promoted86, %3 ], [ %65, %209 ]
  %storemerge6.lcssa37.lcssa57.lcssa84 = phi i32 [ %.promoted, %3 ], [ %storemerge6.lcssa37.lcssa57, %209 ]
  %.lcssa3053.lcssa82 = phi i32 [ %.promoted81, %3 ], [ %.lcssa3053, %209 ]
  %.lcssa16.lcssa27.lcssa50.lcssa79 = phi i32 [ %.promoted78, %3 ], [ %.lcssa16.lcssa27.lcssa50, %209 ]
  %storemerge7.lcssa13.lcssa22.lcssa46.lcssa76 = phi i32 [ %.promoted75, %3 ], [ %storemerge7.lcssa13.lcssa22.lcssa46, %209 ]
  %storemerge = phi i32 [ 0, %3 ], [ %216, %209 ]
  %32 = icmp slt i32 %storemerge, 3
  br i1 %32, label %33, label %217

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* @permute, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

; <label>:36:                                     ; preds = %33
  %37 = sext i32 %storemerge to i64
  %38 = getelementptr inbounds [6 x [3 x i32]], [6 x [3 x i32]]* @comm.permutations, i64 0, i64 %21, i64 %37
  %39 = load i32, i32* %38, align 4
  br label %40

; <label>:40:                                     ; preds = %33, %36
  %storemerge1 = phi i32 [ %39, %36 ], [ %storemerge, %33 ]
  %41 = call double @timer()
  %42 = shl nsw i32 %storemerge1, 1
  %43 = shl nsw i32 %storemerge1, 1
  %44 = add nsw i32 %43, 2
  %45 = sext i32 %storemerge1 to i64
  %46 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %45
  %47 = sext i32 %storemerge1 to i64
  %48 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %47
  %49 = sext i32 %storemerge1 to i64
  %50 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %49
  %51 = sext i32 %storemerge1 to i64
  %52 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %51
  %53 = shl nsw i32 %storemerge1, 1
  %54 = or i32 %53, 1
  %55 = sext i32 %storemerge1 to i64
  %56 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %55
  %57 = sext i32 %storemerge1 to i64
  %58 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %57
  %59 = sext i32 %storemerge1 to i64
  %60 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %59
  %61 = sext i32 %storemerge1 to i64
  %62 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %61
  br label %63

; <label>:63:                                     ; preds = %207, %40
  %.lcssa4271 = phi double [ %.lcssa4271.lcssa98, %40 ], [ %.lcssa4270, %207 ]
  %storemerge3.lcssa67 = phi i32 [ %storemerge3.lcssa67.lcssa95, %40 ], [ %storemerge3.lcssa66, %207 ]
  %64 = phi %struct.block* [ %.lcssa6392, %40 ], [ %80, %207 ]
  %65 = phi i32 [ %.lcssa6087, %40 ], [ %77, %207 ]
  %storemerge6.lcssa37.lcssa57 = phi i32 [ %storemerge6.lcssa37.lcssa57.lcssa84, %40 ], [ %storemerge6.lcssa37.lcssa56, %207 ]
  %.lcssa3053 = phi i32 [ %.lcssa3053.lcssa82, %40 ], [ %.lcssa3052, %207 ]
  %.lcssa16.lcssa27.lcssa50 = phi i32 [ %.lcssa16.lcssa27.lcssa50.lcssa79, %40 ], [ %.lcssa16.lcssa27.lcssa49, %207 ]
  %storemerge7.lcssa13.lcssa22.lcssa46 = phi i32 [ %storemerge7.lcssa13.lcssa22.lcssa46.lcssa76, %40 ], [ %storemerge7.lcssa13.lcssa22.lcssa45, %207 ]
  %storemerge2 = phi i32 [ 0, %40 ], [ %208, %207 ]
  %66 = load i32*, i32** @sorted_index, align 8
  %67 = load i32, i32* @num_refine, align 4
  %68 = add nsw i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %storemerge2, %71
  br i1 %72, label %73, label %209

; <label>:73:                                     ; preds = %63
  %74 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %75 = sext i32 %storemerge2 to i64
  %76 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %74, i64 %75, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = load %struct.block*, %struct.block** @blocks, align 8
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds %struct.block, %struct.block* %78, i64 %79
  %81 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = icmp sgt i32 %82, -1
  br i1 %83, label %84, label %207

; <label>:84:                                     ; preds = %73
  %85 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 1
  %86 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 1
  %87 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 1
  br label %88

; <label>:88:                                     ; preds = %203, %84
  %89 = phi double [ %.lcssa4271, %84 ], [ %204, %203 ]
  %storemerge6.lcssa37 = phi i32 [ %storemerge6.lcssa37.lcssa57, %84 ], [ %storemerge6.lcssa33, %203 ]
  %90 = phi i32 [ %.lcssa3053, %84 ], [ %205, %203 ]
  %.lcssa16.lcssa27 = phi i32 [ %.lcssa16.lcssa27.lcssa50, %84 ], [ %.lcssa16.lcssa24, %203 ]
  %storemerge7.lcssa13.lcssa22 = phi i32 [ %storemerge7.lcssa13.lcssa22.lcssa46, %84 ], [ %storemerge7.lcssa13.lcssa18, %203 ]
  %storemerge3 = phi i32 [ %42, %84 ], [ %206, %203 ]
  %91 = icmp slt i32 %storemerge3, %44
  br i1 %91, label %92, label %207

; <label>:92:                                     ; preds = %88
  %93 = sext i32 %storemerge3 to i64
  %94 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 8, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %85, align 4
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %112

; <label>:98:                                     ; preds = %92
  %99 = call double @timer()
  %100 = sext i32 %storemerge3 to i64
  %101 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 9, i64 %100, i64 0, i64 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, %77
  br i1 %103, label %104, label %107

; <label>:104:                                    ; preds = %98
  call void @on_proc_comm(i32 %77, i32 %102, i32 %storemerge3, i32 %22, i32 %23)
  %105 = load i32, i32* %46, align 4
  %106 = add nsw i32 %105, 2
  store i32 %106, i32* %46, align 4
  br label %107

; <label>:107:                                    ; preds = %104, %98
  %108 = call double @timer()
  %109 = fsub double %108, %99
  %110 = load double, double* %48, align 8
  %111 = fadd double %110, %109
  store double %111, double* %48, align 8
  br label %203

; <label>:112:                                    ; preds = %92
  %113 = sext i32 %storemerge3 to i64
  %114 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 8, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = load i32, i32* %86, align 4
  %117 = add nsw i32 %116, 1
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %146

; <label>:119:                                    ; preds = %112
  %120 = call double @timer()
  %121 = sext i32 %storemerge3 to i64
  br label %122

; <label>:122:                                    ; preds = %139, %119
  %.lcssa16 = phi i32 [ %.lcssa16.lcssa27, %119 ], [ %127, %139 ]
  %storemerge7.lcssa13 = phi i32 [ %storemerge7.lcssa13.lcssa22, %119 ], [ %storemerge7, %139 ]
  %storemerge6 = phi i32 [ 0, %119 ], [ %140, %139 ]
  %123 = icmp slt i32 %storemerge6, 2
  br i1 %123, label %124, label %141

; <label>:124:                                    ; preds = %122
  %125 = sext i32 %storemerge6 to i64
  br label %126

; <label>:126:                                    ; preds = %137, %124
  %127 = phi i32 [ %.lcssa16, %124 ], [ %132, %137 ]
  %storemerge7 = phi i32 [ 0, %124 ], [ %138, %137 ]
  %128 = icmp slt i32 %storemerge7, 2
  br i1 %128, label %129, label %139

; <label>:129:                                    ; preds = %126
  %130 = sext i32 %storemerge7 to i64
  %131 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 9, i64 %121, i64 %125, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, %77
  br i1 %133, label %134, label %137

; <label>:134:                                    ; preds = %129
  call void @on_proc_comm_diff(i32 %77, i32 %132, i32 %storemerge3, i32 %storemerge6, i32 %storemerge7, i32 %24, i32 %25)
  %135 = load i32, i32* %50, align 4
  %136 = add nsw i32 %135, 2
  store i32 %136, i32* %50, align 4
  br label %137

; <label>:137:                                    ; preds = %129, %134
  %138 = add nsw i32 %storemerge7, 1
  br label %126

; <label>:139:                                    ; preds = %126
  %140 = add nsw i32 %storemerge6, 1
  br label %122

; <label>:141:                                    ; preds = %122
  %142 = call double @timer()
  %143 = fsub double %142, %120
  %144 = load double, double* %52, align 8
  %145 = fadd double %144, %143
  store double %145, double* %52, align 8
  br label %203

; <label>:146:                                    ; preds = %112
  %147 = sext i32 %storemerge3 to i64
  %148 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 8, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = load i32, i32* %87, align 4
  %151 = add nsw i32 %150, -1
  %152 = icmp eq i32 %149, %151
  br i1 %152, label %153, label %189

; <label>:153:                                    ; preds = %146
  %154 = call double @timer()
  %155 = sext i32 %storemerge3 to i64
  %156 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 9, i64 %155, i64 0, i64 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %157, %77
  br i1 %158, label %159, label %183

; <label>:159:                                    ; preds = %153
  %160 = srem i32 %storemerge3, 2
  %161 = sub nsw i32 %54, %160
  %162 = sext i32 %157 to i64
  %163 = sext i32 %161 to i64
  br label %164

; <label>:164:                                    ; preds = %181, %159
  %storemerge5.lcssa8 = phi i32 [ %storemerge7.lcssa13.lcssa22, %159 ], [ %storemerge5, %181 ]
  %storemerge4 = phi i32 [ 0, %159 ], [ %182, %181 ]
  %165 = icmp slt i32 %storemerge4, 2
  br i1 %165, label %166, label %183

; <label>:166:                                    ; preds = %164
  %167 = sext i32 %storemerge4 to i64
  br label %168

; <label>:168:                                    ; preds = %179, %166
  %storemerge5 = phi i32 [ 0, %166 ], [ %180, %179 ]
  %169 = icmp slt i32 %storemerge5, 2
  br i1 %169, label %170, label %181

; <label>:170:                                    ; preds = %168
  %171 = load %struct.block*, %struct.block** @blocks, align 8
  %172 = sext i32 %storemerge5 to i64
  %173 = getelementptr inbounds %struct.block, %struct.block* %171, i64 %162, i32 9, i64 %163, i64 %167, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, %77
  br i1 %175, label %176, label %179

; <label>:176:                                    ; preds = %170
  call void @on_proc_comm_diff(i32 %157, i32 %77, i32 %161, i32 %storemerge4, i32 %storemerge5, i32 %26, i32 %27)
  %177 = load i32, i32* %56, align 4
  %178 = add nsw i32 %177, 2
  store i32 %178, i32* %56, align 4
  br label %179

; <label>:179:                                    ; preds = %170, %176
  %180 = add nsw i32 %storemerge5, 1
  br label %168

; <label>:181:                                    ; preds = %168
  %182 = add nsw i32 %storemerge4, 1
  br label %164

; <label>:183:                                    ; preds = %164, %153
  %storemerge6.lcssa36 = phi i32 [ %storemerge6.lcssa37, %153 ], [ %storemerge4, %164 ]
  %184 = phi i32 [ %90, %153 ], [ %161, %164 ]
  %storemerge7.lcssa13.lcssa21 = phi i32 [ %storemerge7.lcssa13.lcssa22, %153 ], [ %storemerge5.lcssa8, %164 ]
  %185 = call double @timer()
  %186 = fsub double %185, %154
  %187 = load double, double* %58, align 8
  %188 = fadd double %187, %186
  store double %188, double* %58, align 8
  br label %203

; <label>:189:                                    ; preds = %146
  %190 = sext i32 %storemerge3 to i64
  %191 = getelementptr inbounds %struct.block, %struct.block* %80, i64 0, i32 8, i64 %190
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, -2
  br i1 %193, label %194, label %202

; <label>:194:                                    ; preds = %189
  %195 = call double @timer()
  call void @apply_bc(i32 %storemerge3, %struct.block* %80, i32 %28, i32 %29)
  %196 = load i32, i32* %60, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %60, align 4
  %198 = call double @timer()
  %199 = fsub double %198, %195
  %200 = load double, double* %62, align 8
  %201 = fadd double %200, %199
  store double %201, double* %62, align 8
  br label %203

; <label>:202:                                    ; preds = %189
  store i32 %storemerge7.lcssa13.lcssa22.lcssa46.lcssa76, i32* %8, align 1
  store i32 %.lcssa16.lcssa27.lcssa50.lcssa79, i32* %11, align 1
  store i32 %.lcssa3053.lcssa82, i32* %9, align 1
  store i32 %storemerge6.lcssa37.lcssa57.lcssa84, i32* %7, align 1
  store i32 %.lcssa6087, i32* %12, align 1
  store i32 %storemerge1, i32* %13, align 1
  store %struct.block* %.lcssa6392, %struct.block** %18, align 1
  store i32 %storemerge3.lcssa67.lcssa95, i32* %10, align 1
  store double %.lcssa4271.lcssa98, double* %17, align 1
  store i32 %storemerge2.lcssa101, i32* %15, align 1
  store i32 %storemerge, i32* %14, align 4
  store double %41, double* %16, align 1
  store i32 %storemerge7.lcssa13.lcssa22.lcssa46, i32* %8, align 1
  store i32 %.lcssa16.lcssa27.lcssa50, i32* %11, align 1
  store i32 %.lcssa3053, i32* %9, align 1
  store i32 %storemerge6.lcssa37.lcssa57, i32* %7, align 1
  store i32 %77, i32* %12, align 1
  store %struct.block* %80, %struct.block** %18, align 1
  store i32 %storemerge3.lcssa67, i32* %10, align 1
  store double %.lcssa4271, double* %17, align 1
  store i32 %storemerge2, i32* %15, align 4
  store i32 %storemerge7.lcssa13.lcssa22, i32* %8, align 1
  store i32 %.lcssa16.lcssa27, i32* %11, align 1
  store i32 %90, i32* %9, align 1
  store i32 %storemerge6.lcssa37, i32* %7, align 1
  store i32 %storemerge3, i32* %10, align 4
  store double %89, double* %17, align 1
  %puts = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.1, i64 0, i64 0))
  call void @exit(i32 -1) #7
  unreachable

; <label>:203:                                    ; preds = %107, %183, %194, %141
  %204 = phi double [ %99, %107 ], [ %120, %141 ], [ %195, %194 ], [ %154, %183 ]
  %storemerge6.lcssa33 = phi i32 [ %storemerge6.lcssa37, %107 ], [ %storemerge6, %141 ], [ %storemerge6.lcssa37, %194 ], [ %storemerge6.lcssa36, %183 ]
  %205 = phi i32 [ %90, %107 ], [ %90, %141 ], [ %90, %194 ], [ %184, %183 ]
  %.lcssa16.lcssa24 = phi i32 [ %102, %107 ], [ %.lcssa16, %141 ], [ %.lcssa16.lcssa27, %194 ], [ %157, %183 ]
  %storemerge7.lcssa13.lcssa18 = phi i32 [ %storemerge7.lcssa13.lcssa22, %107 ], [ %storemerge7.lcssa13, %141 ], [ %storemerge7.lcssa13.lcssa22, %194 ], [ %storemerge7.lcssa13.lcssa21, %183 ]
  %206 = add nsw i32 %storemerge3, 1
  br label %88

; <label>:207:                                    ; preds = %73, %88
  %.lcssa4270 = phi double [ %.lcssa4271, %73 ], [ %89, %88 ]
  %storemerge3.lcssa66 = phi i32 [ %storemerge3.lcssa67, %73 ], [ %storemerge3, %88 ]
  %storemerge6.lcssa37.lcssa56 = phi i32 [ %storemerge6.lcssa37.lcssa57, %73 ], [ %storemerge6.lcssa37, %88 ]
  %.lcssa3052 = phi i32 [ %.lcssa3053, %73 ], [ %90, %88 ]
  %.lcssa16.lcssa27.lcssa49 = phi i32 [ %.lcssa16.lcssa27.lcssa50, %73 ], [ %.lcssa16.lcssa27, %88 ]
  %storemerge7.lcssa13.lcssa22.lcssa45 = phi i32 [ %storemerge7.lcssa13.lcssa22.lcssa46, %73 ], [ %storemerge7.lcssa13.lcssa22, %88 ]
  %208 = add nsw i32 %storemerge2, 1
  br label %63

; <label>:209:                                    ; preds = %63
  %210 = call double @timer()
  %211 = fsub double %210, %41
  %212 = sext i32 %storemerge1 to i64
  %213 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %212
  %214 = load double, double* %213, align 8
  %215 = fadd double %214, %211
  store double %215, double* %213, align 8
  %216 = add nsw i32 %storemerge, 1
  br label %30

; <label>:217:                                    ; preds = %30
  store i32 %storemerge7.lcssa13.lcssa22.lcssa46.lcssa76, i32* %8, align 1
  store i32 %.lcssa16.lcssa27.lcssa50.lcssa79, i32* %11, align 1
  store i32 %.lcssa3053.lcssa82, i32* %9, align 1
  store i32 %storemerge6.lcssa37.lcssa57.lcssa84, i32* %7, align 1
  store i32 %.lcssa6087, i32* %12, align 1
  store i32 %storemerge190, i32* %13, align 1
  store %struct.block* %.lcssa6392, %struct.block** %18, align 1
  store i32 %storemerge3.lcssa67.lcssa95, i32* %10, align 1
  store double %.lcssa4271.lcssa98, double* %17, align 1
  store i32 %storemerge2.lcssa101, i32* %15, align 1
  store i32 %storemerge, i32* %14, align 4
  store double %31, double* %16, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @on_proc_comm(i32, i32, i32, i32, i32) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.block*, align 8
  %20 = alloca %struct.block*, align 8
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %21 = load i32, i32* @code, align 4
  %22 = icmp eq i32 %21, 0
  %23 = load i32, i32* %8, align 4
  %.off = add i32 %23, 1
  %24 = icmp ult i32 %.off, 3
  %25 = load i32, i32* %8, align 4
  br i1 %22, label %26, label %354

; <label>:26:                                     ; preds = %5
  br i1 %24, label %27, label %126

; <label>:27:                                     ; preds = %26
  %28 = and i32 %25, 1
  %29 = icmp eq i32 %28, 0
  %30 = load %struct.block*, %struct.block** @blocks, align 8
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.block, %struct.block* %30, i64 %32
  br i1 %29, label %34, label %38

; <label>:34:                                     ; preds = %27
  store %struct.block* %33, %struct.block** %19, align 8
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.block, %struct.block* %30, i64 %36
  store %struct.block* %37, %struct.block** %20, align 8
  br label %42

; <label>:38:                                     ; preds = %27
  store %struct.block* %33, %struct.block** %20, align 8
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.block, %struct.block* %30, i64 %40
  store %struct.block* %41, %struct.block** %19, align 8
  br label %42

; <label>:42:                                     ; preds = %38, %34
  %43 = load i32, i32* %9, align 4
  %44 = load i32, i32* %9, align 4
  %45 = load i32, i32* %10, align 4
  %46 = add nsw i32 %44, %45
  %.promoted52 = load i32, i32* %13, align 1
  %.promoted55 = load i32, i32* %12, align 1
  br label %47

; <label>:47:                                     ; preds = %123, %42
  %storemerge11.lcssa56 = phi i32 [ %.promoted55, %42 ], [ %storemerge11, %123 ]
  %storemerge12.lcssa50.lcssa53 = phi i32 [ %.promoted52, %42 ], [ %storemerge12.lcssa50, %123 ]
  %storemerge10 = phi i32 [ %43, %42 ], [ %124, %123 ]
  %48 = icmp slt i32 %storemerge10, %46
  br i1 %48, label %49, label %125

; <label>:49:                                     ; preds = %47
  %50 = sext i32 %storemerge10 to i64
  %51 = sext i32 %storemerge10 to i64
  %52 = sext i32 %storemerge10 to i64
  %53 = sext i32 %storemerge10 to i64
  br label %54

; <label>:54:                                     ; preds = %121, %49
  %storemerge12.lcssa50 = phi i32 [ %storemerge12.lcssa50.lcssa53, %49 ], [ %storemerge12, %121 ]
  %storemerge11 = phi i32 [ 1, %49 ], [ %122, %121 ]
  %55 = load i32, i32* @y_block_size, align 4
  %56 = icmp sgt i32 %storemerge11, %55
  br i1 %56, label %123, label %57

; <label>:57:                                     ; preds = %54
  %58 = sext i32 %storemerge11 to i64
  %59 = sext i32 %storemerge11 to i64
  %60 = sext i32 %storemerge11 to i64
  %61 = sext i32 %storemerge11 to i64
  br label %62

; <label>:62:                                     ; preds = %65, %57
  %storemerge12 = phi i32 [ 1, %57 ], [ %120, %65 ]
  %63 = load i32, i32* @z_block_size, align 4
  %64 = icmp sgt i32 %storemerge12, %63
  br i1 %64, label %121, label %65

; <label>:65:                                     ; preds = %62
  %66 = load %struct.block*, %struct.block** %19, align 8
  %67 = getelementptr inbounds %struct.block, %struct.block* %66, i64 0, i32 11
  %68 = load double****, double***** %67, align 8
  %69 = getelementptr inbounds double***, double**** %68, i64 %50
  %70 = load double***, double**** %69, align 8
  %71 = getelementptr inbounds double**, double*** %70, i64 1
  %72 = load double**, double*** %71, align 8
  %73 = getelementptr inbounds double*, double** %72, i64 %58
  %74 = load double*, double** %73, align 8
  %75 = sext i32 %storemerge12 to i64
  %76 = getelementptr inbounds double, double* %74, i64 %75
  %77 = bitcast double* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load %struct.block*, %struct.block** %20, align 8
  %80 = getelementptr inbounds %struct.block, %struct.block* %79, i64 0, i32 11
  %81 = load double****, double***** %80, align 8
  %82 = getelementptr inbounds double***, double**** %81, i64 %51
  %83 = load double***, double**** %82, align 8
  %84 = load i32, i32* @x_block_size, align 4
  %85 = add nsw i32 %84, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds double**, double*** %83, i64 %86
  %88 = load double**, double*** %87, align 8
  %89 = getelementptr inbounds double*, double** %88, i64 %59
  %90 = load double*, double** %89, align 8
  %91 = sext i32 %storemerge12 to i64
  %92 = getelementptr inbounds double, double* %90, i64 %91
  %93 = bitcast double* %92 to i64*
  store i64 %78, i64* %93, align 8
  %94 = load %struct.block*, %struct.block** %20, align 8
  %95 = getelementptr inbounds %struct.block, %struct.block* %94, i64 0, i32 11
  %96 = load double****, double***** %95, align 8
  %97 = getelementptr inbounds double***, double**** %96, i64 %52
  %98 = load double***, double**** %97, align 8
  %99 = load i32, i32* @x_block_size, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds double**, double*** %98, i64 %100
  %102 = load double**, double*** %101, align 8
  %103 = getelementptr inbounds double*, double** %102, i64 %60
  %104 = load double*, double** %103, align 8
  %105 = sext i32 %storemerge12 to i64
  %106 = getelementptr inbounds double, double* %104, i64 %105
  %107 = bitcast double* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = load %struct.block*, %struct.block** %19, align 8
  %110 = getelementptr inbounds %struct.block, %struct.block* %109, i64 0, i32 11
  %111 = load double****, double***** %110, align 8
  %112 = getelementptr inbounds double***, double**** %111, i64 %53
  %113 = load double***, double**** %112, align 8
  %114 = load double**, double*** %113, align 8
  %115 = getelementptr inbounds double*, double** %114, i64 %61
  %116 = load double*, double** %115, align 8
  %117 = sext i32 %storemerge12 to i64
  %118 = getelementptr inbounds double, double* %116, i64 %117
  %119 = bitcast double* %118 to i64*
  store i64 %108, i64* %119, align 8
  %120 = add nsw i32 %storemerge12, 1
  br label %62

; <label>:121:                                    ; preds = %62
  %122 = add nsw i32 %storemerge11, 1
  br label %54

; <label>:123:                                    ; preds = %54
  %124 = add nsw i32 %storemerge10, 1
  br label %47

; <label>:125:                                    ; preds = %47
  store i32 %storemerge12.lcssa50.lcssa53, i32* %13, align 1
  store i32 %storemerge10, i32* %14, align 4
  store i32 %storemerge11.lcssa56, i32* %12, align 1
  br label %666

; <label>:126:                                    ; preds = %26
  %127 = and i32 %25, -2
  %128 = icmp eq i32 %127, 2
  %129 = load i32, i32* %8, align 4
  br i1 %128, label %130, label %238

; <label>:130:                                    ; preds = %126
  %131 = and i32 %129, 1
  %132 = icmp eq i32 %131, 0
  %133 = load %struct.block*, %struct.block** @blocks, align 8
  %134 = load i32, i32* %6, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.block, %struct.block* %133, i64 %135
  br i1 %132, label %137, label %141

; <label>:137:                                    ; preds = %130
  store %struct.block* %136, %struct.block** %19, align 8
  %138 = load i32, i32* %7, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %struct.block, %struct.block* %133, i64 %139
  store %struct.block* %140, %struct.block** %20, align 8
  br label %145

; <label>:141:                                    ; preds = %130
  store %struct.block* %136, %struct.block** %20, align 8
  %142 = load i32, i32* %7, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.block, %struct.block* %133, i64 %143
  store %struct.block* %144, %struct.block** %19, align 8
  br label %145

; <label>:145:                                    ; preds = %141, %137
  %146 = load i32, i32* @stencil, align 4
  %147 = icmp eq i32 %146, 7
  br i1 %147, label %148, label %150

; <label>:148:                                    ; preds = %145
  store i32 1, i32* %15, align 4
  %149 = load i32, i32* @x_block_size, align 4
  br label %153

; <label>:150:                                    ; preds = %145
  store i32 0, i32* %15, align 4
  %151 = load i32, i32* @x_block_size, align 4
  %152 = add nsw i32 %151, 1
  br label %153

; <label>:153:                                    ; preds = %150, %148
  %storemerge6 = phi i32 [ %152, %150 ], [ %149, %148 ]
  store i32 %storemerge6, i32* %16, align 4
  %154 = load i32, i32* %9, align 4
  %155 = load i32, i32* %9, align 4
  %156 = load i32, i32* %10, align 4
  %157 = add nsw i32 %155, %156
  %158 = load i32, i32* %15, align 4
  %159 = load i32, i32* %16, align 4
  %.promoted61 = load i32, i32* %13, align 1
  %.promoted64 = load i32, i32* %11, align 1
  br label %160

; <label>:160:                                    ; preds = %235, %153
  %storemerge8.lcssa65 = phi i32 [ %.promoted64, %153 ], [ %storemerge8, %235 ]
  %storemerge9.lcssa59.lcssa62 = phi i32 [ %.promoted61, %153 ], [ %storemerge9.lcssa59, %235 ]
  %storemerge7 = phi i32 [ %154, %153 ], [ %236, %235 ]
  %161 = icmp slt i32 %storemerge7, %157
  br i1 %161, label %162, label %237

; <label>:162:                                    ; preds = %160
  %163 = sext i32 %storemerge7 to i64
  %164 = sext i32 %storemerge7 to i64
  %165 = sext i32 %storemerge7 to i64
  %166 = sext i32 %storemerge7 to i64
  br label %167

; <label>:167:                                    ; preds = %233, %162
  %storemerge9.lcssa59 = phi i32 [ %storemerge9.lcssa59.lcssa62, %162 ], [ %storemerge9, %233 ]
  %storemerge8 = phi i32 [ %158, %162 ], [ %234, %233 ]
  %168 = icmp sgt i32 %storemerge8, %159
  br i1 %168, label %235, label %169

; <label>:169:                                    ; preds = %167
  %170 = sext i32 %storemerge8 to i64
  %171 = sext i32 %storemerge8 to i64
  %172 = sext i32 %storemerge8 to i64
  %173 = sext i32 %storemerge8 to i64
  br label %174

; <label>:174:                                    ; preds = %177, %169
  %storemerge9 = phi i32 [ 1, %169 ], [ %232, %177 ]
  %175 = load i32, i32* @z_block_size, align 4
  %176 = icmp sgt i32 %storemerge9, %175
  br i1 %176, label %233, label %177

; <label>:177:                                    ; preds = %174
  %178 = load %struct.block*, %struct.block** %19, align 8
  %179 = getelementptr inbounds %struct.block, %struct.block* %178, i64 0, i32 11
  %180 = load double****, double***** %179, align 8
  %181 = getelementptr inbounds double***, double**** %180, i64 %163
  %182 = load double***, double**** %181, align 8
  %183 = getelementptr inbounds double**, double*** %182, i64 %170
  %184 = load double**, double*** %183, align 8
  %185 = getelementptr inbounds double*, double** %184, i64 1
  %186 = load double*, double** %185, align 8
  %187 = sext i32 %storemerge9 to i64
  %188 = getelementptr inbounds double, double* %186, i64 %187
  %189 = bitcast double* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = load %struct.block*, %struct.block** %20, align 8
  %192 = getelementptr inbounds %struct.block, %struct.block* %191, i64 0, i32 11
  %193 = load double****, double***** %192, align 8
  %194 = getelementptr inbounds double***, double**** %193, i64 %164
  %195 = load double***, double**** %194, align 8
  %196 = getelementptr inbounds double**, double*** %195, i64 %171
  %197 = load double**, double*** %196, align 8
  %198 = load i32, i32* @y_block_size, align 4
  %199 = add nsw i32 %198, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds double*, double** %197, i64 %200
  %202 = load double*, double** %201, align 8
  %203 = sext i32 %storemerge9 to i64
  %204 = getelementptr inbounds double, double* %202, i64 %203
  %205 = bitcast double* %204 to i64*
  store i64 %190, i64* %205, align 8
  %206 = load %struct.block*, %struct.block** %20, align 8
  %207 = getelementptr inbounds %struct.block, %struct.block* %206, i64 0, i32 11
  %208 = load double****, double***** %207, align 8
  %209 = getelementptr inbounds double***, double**** %208, i64 %165
  %210 = load double***, double**** %209, align 8
  %211 = getelementptr inbounds double**, double*** %210, i64 %172
  %212 = load double**, double*** %211, align 8
  %213 = load i32, i32* @y_block_size, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds double*, double** %212, i64 %214
  %216 = load double*, double** %215, align 8
  %217 = sext i32 %storemerge9 to i64
  %218 = getelementptr inbounds double, double* %216, i64 %217
  %219 = bitcast double* %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = load %struct.block*, %struct.block** %19, align 8
  %222 = getelementptr inbounds %struct.block, %struct.block* %221, i64 0, i32 11
  %223 = load double****, double***** %222, align 8
  %224 = getelementptr inbounds double***, double**** %223, i64 %166
  %225 = load double***, double**** %224, align 8
  %226 = getelementptr inbounds double**, double*** %225, i64 %173
  %227 = load double**, double*** %226, align 8
  %228 = load double*, double** %227, align 8
  %229 = sext i32 %storemerge9 to i64
  %230 = getelementptr inbounds double, double* %228, i64 %229
  %231 = bitcast double* %230 to i64*
  store i64 %220, i64* %231, align 8
  %232 = add nsw i32 %storemerge9, 1
  br label %174

; <label>:233:                                    ; preds = %174
  %234 = add nsw i32 %storemerge8, 1
  br label %167

; <label>:235:                                    ; preds = %167
  %236 = add nsw i32 %storemerge7, 1
  br label %160

; <label>:237:                                    ; preds = %160
  store i32 %storemerge9.lcssa59.lcssa62, i32* %13, align 1
  store i32 %storemerge7, i32* %14, align 4
  store i32 %storemerge8.lcssa65, i32* %11, align 1
  br label %666

; <label>:238:                                    ; preds = %126
  %239 = and i32 %129, -2
  %240 = icmp eq i32 %239, 4
  br i1 %240, label %241, label %666

; <label>:241:                                    ; preds = %238
  %242 = load i32, i32* %8, align 4
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = load %struct.block*, %struct.block** @blocks, align 8
  %246 = load i32, i32* %6, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.block, %struct.block* %245, i64 %247
  br i1 %244, label %249, label %253

; <label>:249:                                    ; preds = %241
  store %struct.block* %248, %struct.block** %19, align 8
  %250 = load i32, i32* %7, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds %struct.block, %struct.block* %245, i64 %251
  store %struct.block* %252, %struct.block** %20, align 8
  br label %257

; <label>:253:                                    ; preds = %241
  store %struct.block* %248, %struct.block** %20, align 8
  %254 = load i32, i32* %7, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %struct.block, %struct.block* %245, i64 %255
  store %struct.block* %256, %struct.block** %19, align 8
  br label %257

; <label>:257:                                    ; preds = %253, %249
  %258 = load i32, i32* @stencil, align 4
  %259 = icmp eq i32 %258, 7
  br i1 %259, label %260, label %263

; <label>:260:                                    ; preds = %257
  store i32 1, i32* %15, align 4
  %261 = load i32, i32* @x_block_size, align 4
  store i32 %261, i32* %16, align 4
  store i32 1, i32* %17, align 4
  %262 = load i32, i32* @y_block_size, align 4
  br label %268

; <label>:263:                                    ; preds = %257
  store i32 0, i32* %15, align 4
  %264 = load i32, i32* @x_block_size, align 4
  %265 = add nsw i32 %264, 1
  store i32 %265, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %266 = load i32, i32* @y_block_size, align 4
  %267 = add nsw i32 %266, 1
  br label %268

; <label>:268:                                    ; preds = %263, %260
  %storemerge = phi i32 [ %267, %263 ], [ %262, %260 ]
  store i32 %storemerge, i32* %18, align 4
  %269 = load i32, i32* %9, align 4
  %270 = load i32, i32* %9, align 4
  %271 = load i32, i32* %10, align 4
  %272 = add nsw i32 %270, %271
  %273 = load i32, i32* %15, align 4
  %274 = load i32, i32* %16, align 4
  %275 = load i32, i32* %17, align 4
  %276 = load i32, i32* %18, align 4
  %.promoted70 = load i32, i32* %12, align 1
  %.promoted73 = load i32, i32* %11, align 1
  br label %277

; <label>:277:                                    ; preds = %351, %268
  %storemerge4.lcssa74 = phi i32 [ %.promoted73, %268 ], [ %storemerge4, %351 ]
  %storemerge5.lcssa68.lcssa71 = phi i32 [ %.promoted70, %268 ], [ %storemerge5.lcssa68, %351 ]
  %storemerge3 = phi i32 [ %269, %268 ], [ %352, %351 ]
  %278 = icmp slt i32 %storemerge3, %272
  br i1 %278, label %279, label %353

; <label>:279:                                    ; preds = %277
  %280 = sext i32 %storemerge3 to i64
  %281 = sext i32 %storemerge3 to i64
  %282 = sext i32 %storemerge3 to i64
  %283 = sext i32 %storemerge3 to i64
  br label %284

; <label>:284:                                    ; preds = %349, %279
  %storemerge5.lcssa68 = phi i32 [ %storemerge5.lcssa68.lcssa71, %279 ], [ %storemerge5, %349 ]
  %storemerge4 = phi i32 [ %273, %279 ], [ %350, %349 ]
  %285 = icmp sgt i32 %storemerge4, %274
  br i1 %285, label %351, label %286

; <label>:286:                                    ; preds = %284
  %287 = sext i32 %storemerge4 to i64
  %288 = sext i32 %storemerge4 to i64
  %289 = sext i32 %storemerge4 to i64
  %290 = sext i32 %storemerge4 to i64
  br label %291

; <label>:291:                                    ; preds = %293, %286
  %storemerge5 = phi i32 [ %275, %286 ], [ %348, %293 ]
  %292 = icmp sgt i32 %storemerge5, %276
  br i1 %292, label %349, label %293

; <label>:293:                                    ; preds = %291
  %294 = load %struct.block*, %struct.block** %19, align 8
  %295 = getelementptr inbounds %struct.block, %struct.block* %294, i64 0, i32 11
  %296 = load double****, double***** %295, align 8
  %297 = getelementptr inbounds double***, double**** %296, i64 %280
  %298 = load double***, double**** %297, align 8
  %299 = getelementptr inbounds double**, double*** %298, i64 %287
  %300 = load double**, double*** %299, align 8
  %301 = sext i32 %storemerge5 to i64
  %302 = getelementptr inbounds double*, double** %300, i64 %301
  %303 = load double*, double** %302, align 8
  %304 = getelementptr inbounds double, double* %303, i64 1
  %305 = bitcast double* %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = load %struct.block*, %struct.block** %20, align 8
  %308 = getelementptr inbounds %struct.block, %struct.block* %307, i64 0, i32 11
  %309 = load double****, double***** %308, align 8
  %310 = getelementptr inbounds double***, double**** %309, i64 %281
  %311 = load double***, double**** %310, align 8
  %312 = getelementptr inbounds double**, double*** %311, i64 %288
  %313 = load double**, double*** %312, align 8
  %314 = sext i32 %storemerge5 to i64
  %315 = getelementptr inbounds double*, double** %313, i64 %314
  %316 = load double*, double** %315, align 8
  %317 = load i32, i32* @z_block_size, align 4
  %318 = add nsw i32 %317, 1
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds double, double* %316, i64 %319
  %321 = bitcast double* %320 to i64*
  store i64 %306, i64* %321, align 8
  %322 = load %struct.block*, %struct.block** %20, align 8
  %323 = getelementptr inbounds %struct.block, %struct.block* %322, i64 0, i32 11
  %324 = load double****, double***** %323, align 8
  %325 = getelementptr inbounds double***, double**** %324, i64 %282
  %326 = load double***, double**** %325, align 8
  %327 = getelementptr inbounds double**, double*** %326, i64 %289
  %328 = load double**, double*** %327, align 8
  %329 = sext i32 %storemerge5 to i64
  %330 = getelementptr inbounds double*, double** %328, i64 %329
  %331 = load double*, double** %330, align 8
  %332 = load i32, i32* @z_block_size, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds double, double* %331, i64 %333
  %335 = bitcast double* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = load %struct.block*, %struct.block** %19, align 8
  %338 = getelementptr inbounds %struct.block, %struct.block* %337, i64 0, i32 11
  %339 = load double****, double***** %338, align 8
  %340 = getelementptr inbounds double***, double**** %339, i64 %283
  %341 = load double***, double**** %340, align 8
  %342 = getelementptr inbounds double**, double*** %341, i64 %290
  %343 = load double**, double*** %342, align 8
  %344 = sext i32 %storemerge5 to i64
  %345 = getelementptr inbounds double*, double** %343, i64 %344
  %346 = bitcast double** %345 to i64**
  %347 = load i64*, i64** %346, align 8
  store i64 %336, i64* %347, align 8
  %348 = add nsw i32 %storemerge5, 1
  br label %291

; <label>:349:                                    ; preds = %291
  %350 = add nsw i32 %storemerge4, 1
  br label %284

; <label>:351:                                    ; preds = %284
  %352 = add nsw i32 %storemerge3, 1
  br label %277

; <label>:353:                                    ; preds = %277
  store i32 %storemerge5.lcssa68.lcssa71, i32* %12, align 1
  store i32 %storemerge3, i32* %14, align 4
  store i32 %storemerge4.lcssa74, i32* %11, align 1
  br label %666

; <label>:354:                                    ; preds = %5
  br i1 %24, label %355, label %456

; <label>:355:                                    ; preds = %354
  %356 = and i32 %25, 1
  %357 = icmp eq i32 %356, 0
  %358 = load %struct.block*, %struct.block** @blocks, align 8
  %359 = load i32, i32* %6, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds %struct.block, %struct.block* %358, i64 %360
  br i1 %357, label %362, label %366

; <label>:362:                                    ; preds = %355
  store %struct.block* %361, %struct.block** %19, align 8
  %363 = load i32, i32* %7, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds %struct.block, %struct.block* %358, i64 %364
  store %struct.block* %365, %struct.block** %20, align 8
  br label %370

; <label>:366:                                    ; preds = %355
  store %struct.block* %361, %struct.block** %20, align 8
  %367 = load i32, i32* %7, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds %struct.block, %struct.block* %358, i64 %368
  store %struct.block* %369, %struct.block** %19, align 8
  br label %370

; <label>:370:                                    ; preds = %366, %362
  %371 = load i32, i32* %9, align 4
  %372 = load i32, i32* %9, align 4
  %373 = load i32, i32* %10, align 4
  %374 = add nsw i32 %372, %373
  %.promoted27 = load i32, i32* %13, align 1
  %.promoted = load i32, i32* %12, align 1
  br label %375

; <label>:375:                                    ; preds = %453, %370
  %storemerge23.lcssa29 = phi i32 [ %.promoted, %370 ], [ %storemerge23, %453 ]
  %storemerge24.lcssa25.lcssa28 = phi i32 [ %.promoted27, %370 ], [ %storemerge24.lcssa25, %453 ]
  %storemerge22 = phi i32 [ %371, %370 ], [ %454, %453 ]
  %376 = icmp slt i32 %storemerge22, %374
  br i1 %376, label %377, label %455

; <label>:377:                                    ; preds = %375
  %378 = sext i32 %storemerge22 to i64
  %379 = sext i32 %storemerge22 to i64
  %380 = sext i32 %storemerge22 to i64
  %381 = sext i32 %storemerge22 to i64
  br label %382

; <label>:382:                                    ; preds = %451, %377
  %storemerge24.lcssa25 = phi i32 [ %storemerge24.lcssa25.lcssa28, %377 ], [ %storemerge24, %451 ]
  %storemerge23 = phi i32 [ 0, %377 ], [ %452, %451 ]
  %383 = load i32, i32* @y_block_size, align 4
  %384 = add nsw i32 %383, 1
  %385 = icmp sgt i32 %storemerge23, %384
  br i1 %385, label %453, label %386

; <label>:386:                                    ; preds = %382
  %387 = sext i32 %storemerge23 to i64
  %388 = sext i32 %storemerge23 to i64
  %389 = sext i32 %storemerge23 to i64
  %390 = sext i32 %storemerge23 to i64
  br label %391

; <label>:391:                                    ; preds = %395, %386
  %storemerge24 = phi i32 [ 0, %386 ], [ %450, %395 ]
  %392 = load i32, i32* @z_block_size, align 4
  %393 = add nsw i32 %392, 1
  %394 = icmp sgt i32 %storemerge24, %393
  br i1 %394, label %451, label %395

; <label>:395:                                    ; preds = %391
  %396 = load %struct.block*, %struct.block** %19, align 8
  %397 = getelementptr inbounds %struct.block, %struct.block* %396, i64 0, i32 11
  %398 = load double****, double***** %397, align 8
  %399 = getelementptr inbounds double***, double**** %398, i64 %378
  %400 = load double***, double**** %399, align 8
  %401 = getelementptr inbounds double**, double*** %400, i64 1
  %402 = load double**, double*** %401, align 8
  %403 = getelementptr inbounds double*, double** %402, i64 %387
  %404 = load double*, double** %403, align 8
  %405 = sext i32 %storemerge24 to i64
  %406 = getelementptr inbounds double, double* %404, i64 %405
  %407 = bitcast double* %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = load %struct.block*, %struct.block** %20, align 8
  %410 = getelementptr inbounds %struct.block, %struct.block* %409, i64 0, i32 11
  %411 = load double****, double***** %410, align 8
  %412 = getelementptr inbounds double***, double**** %411, i64 %379
  %413 = load double***, double**** %412, align 8
  %414 = load i32, i32* @x_block_size, align 4
  %415 = add nsw i32 %414, 1
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds double**, double*** %413, i64 %416
  %418 = load double**, double*** %417, align 8
  %419 = getelementptr inbounds double*, double** %418, i64 %388
  %420 = load double*, double** %419, align 8
  %421 = sext i32 %storemerge24 to i64
  %422 = getelementptr inbounds double, double* %420, i64 %421
  %423 = bitcast double* %422 to i64*
  store i64 %408, i64* %423, align 8
  %424 = load %struct.block*, %struct.block** %20, align 8
  %425 = getelementptr inbounds %struct.block, %struct.block* %424, i64 0, i32 11
  %426 = load double****, double***** %425, align 8
  %427 = getelementptr inbounds double***, double**** %426, i64 %380
  %428 = load double***, double**** %427, align 8
  %429 = load i32, i32* @x_block_size, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds double**, double*** %428, i64 %430
  %432 = load double**, double*** %431, align 8
  %433 = getelementptr inbounds double*, double** %432, i64 %389
  %434 = load double*, double** %433, align 8
  %435 = sext i32 %storemerge24 to i64
  %436 = getelementptr inbounds double, double* %434, i64 %435
  %437 = bitcast double* %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = load %struct.block*, %struct.block** %19, align 8
  %440 = getelementptr inbounds %struct.block, %struct.block* %439, i64 0, i32 11
  %441 = load double****, double***** %440, align 8
  %442 = getelementptr inbounds double***, double**** %441, i64 %381
  %443 = load double***, double**** %442, align 8
  %444 = load double**, double*** %443, align 8
  %445 = getelementptr inbounds double*, double** %444, i64 %390
  %446 = load double*, double** %445, align 8
  %447 = sext i32 %storemerge24 to i64
  %448 = getelementptr inbounds double, double* %446, i64 %447
  %449 = bitcast double* %448 to i64*
  store i64 %438, i64* %449, align 8
  %450 = add nsw i32 %storemerge24, 1
  br label %391

; <label>:451:                                    ; preds = %391
  %452 = add nsw i32 %storemerge23, 1
  br label %382

; <label>:453:                                    ; preds = %382
  %454 = add nsw i32 %storemerge22, 1
  br label %375

; <label>:455:                                    ; preds = %375
  store i32 %storemerge24.lcssa25.lcssa28, i32* %13, align 1
  store i32 %storemerge22, i32* %14, align 4
  store i32 %storemerge23.lcssa29, i32* %12, align 1
  br label %666

; <label>:456:                                    ; preds = %354
  %457 = and i32 %25, -2
  %458 = icmp eq i32 %457, 2
  %459 = load i32, i32* %8, align 4
  br i1 %458, label %460, label %561

; <label>:460:                                    ; preds = %456
  %461 = and i32 %459, 1
  %462 = icmp eq i32 %461, 0
  %463 = load %struct.block*, %struct.block** @blocks, align 8
  %464 = load i32, i32* %6, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds %struct.block, %struct.block* %463, i64 %465
  br i1 %462, label %467, label %471

; <label>:467:                                    ; preds = %460
  store %struct.block* %466, %struct.block** %19, align 8
  %468 = load i32, i32* %7, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.block, %struct.block* %463, i64 %469
  store %struct.block* %470, %struct.block** %20, align 8
  br label %475

; <label>:471:                                    ; preds = %460
  store %struct.block* %466, %struct.block** %20, align 8
  %472 = load i32, i32* %7, align 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds %struct.block, %struct.block* %463, i64 %473
  store %struct.block* %474, %struct.block** %19, align 8
  br label %475

; <label>:475:                                    ; preds = %471, %467
  %476 = load i32, i32* %9, align 4
  %477 = load i32, i32* %9, align 4
  %478 = load i32, i32* %10, align 4
  %479 = add nsw i32 %477, %478
  %.promoted34 = load i32, i32* %13, align 1
  %.promoted37 = load i32, i32* %11, align 1
  br label %480

; <label>:480:                                    ; preds = %558, %475
  %storemerge20.lcssa38 = phi i32 [ %.promoted37, %475 ], [ %storemerge20, %558 ]
  %storemerge21.lcssa32.lcssa35 = phi i32 [ %.promoted34, %475 ], [ %storemerge21.lcssa32, %558 ]
  %storemerge19 = phi i32 [ %476, %475 ], [ %559, %558 ]
  %481 = icmp slt i32 %storemerge19, %479
  br i1 %481, label %482, label %560

; <label>:482:                                    ; preds = %480
  %483 = sext i32 %storemerge19 to i64
  %484 = sext i32 %storemerge19 to i64
  %485 = sext i32 %storemerge19 to i64
  %486 = sext i32 %storemerge19 to i64
  br label %487

; <label>:487:                                    ; preds = %556, %482
  %storemerge21.lcssa32 = phi i32 [ %storemerge21.lcssa32.lcssa35, %482 ], [ %storemerge21, %556 ]
  %storemerge20 = phi i32 [ 0, %482 ], [ %557, %556 ]
  %488 = load i32, i32* @x_block_size, align 4
  %489 = add nsw i32 %488, 1
  %490 = icmp sgt i32 %storemerge20, %489
  br i1 %490, label %558, label %491

; <label>:491:                                    ; preds = %487
  %492 = sext i32 %storemerge20 to i64
  %493 = sext i32 %storemerge20 to i64
  %494 = sext i32 %storemerge20 to i64
  %495 = sext i32 %storemerge20 to i64
  br label %496

; <label>:496:                                    ; preds = %500, %491
  %storemerge21 = phi i32 [ 0, %491 ], [ %555, %500 ]
  %497 = load i32, i32* @z_block_size, align 4
  %498 = add nsw i32 %497, 1
  %499 = icmp sgt i32 %storemerge21, %498
  br i1 %499, label %556, label %500

; <label>:500:                                    ; preds = %496
  %501 = load %struct.block*, %struct.block** %19, align 8
  %502 = getelementptr inbounds %struct.block, %struct.block* %501, i64 0, i32 11
  %503 = load double****, double***** %502, align 8
  %504 = getelementptr inbounds double***, double**** %503, i64 %483
  %505 = load double***, double**** %504, align 8
  %506 = getelementptr inbounds double**, double*** %505, i64 %492
  %507 = load double**, double*** %506, align 8
  %508 = getelementptr inbounds double*, double** %507, i64 1
  %509 = load double*, double** %508, align 8
  %510 = sext i32 %storemerge21 to i64
  %511 = getelementptr inbounds double, double* %509, i64 %510
  %512 = bitcast double* %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = load %struct.block*, %struct.block** %20, align 8
  %515 = getelementptr inbounds %struct.block, %struct.block* %514, i64 0, i32 11
  %516 = load double****, double***** %515, align 8
  %517 = getelementptr inbounds double***, double**** %516, i64 %484
  %518 = load double***, double**** %517, align 8
  %519 = getelementptr inbounds double**, double*** %518, i64 %493
  %520 = load double**, double*** %519, align 8
  %521 = load i32, i32* @y_block_size, align 4
  %522 = add nsw i32 %521, 1
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds double*, double** %520, i64 %523
  %525 = load double*, double** %524, align 8
  %526 = sext i32 %storemerge21 to i64
  %527 = getelementptr inbounds double, double* %525, i64 %526
  %528 = bitcast double* %527 to i64*
  store i64 %513, i64* %528, align 8
  %529 = load %struct.block*, %struct.block** %20, align 8
  %530 = getelementptr inbounds %struct.block, %struct.block* %529, i64 0, i32 11
  %531 = load double****, double***** %530, align 8
  %532 = getelementptr inbounds double***, double**** %531, i64 %485
  %533 = load double***, double**** %532, align 8
  %534 = getelementptr inbounds double**, double*** %533, i64 %494
  %535 = load double**, double*** %534, align 8
  %536 = load i32, i32* @y_block_size, align 4
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds double*, double** %535, i64 %537
  %539 = load double*, double** %538, align 8
  %540 = sext i32 %storemerge21 to i64
  %541 = getelementptr inbounds double, double* %539, i64 %540
  %542 = bitcast double* %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = load %struct.block*, %struct.block** %19, align 8
  %545 = getelementptr inbounds %struct.block, %struct.block* %544, i64 0, i32 11
  %546 = load double****, double***** %545, align 8
  %547 = getelementptr inbounds double***, double**** %546, i64 %486
  %548 = load double***, double**** %547, align 8
  %549 = getelementptr inbounds double**, double*** %548, i64 %495
  %550 = load double**, double*** %549, align 8
  %551 = load double*, double** %550, align 8
  %552 = sext i32 %storemerge21 to i64
  %553 = getelementptr inbounds double, double* %551, i64 %552
  %554 = bitcast double* %553 to i64*
  store i64 %543, i64* %554, align 8
  %555 = add nsw i32 %storemerge21, 1
  br label %496

; <label>:556:                                    ; preds = %496
  %557 = add nsw i32 %storemerge20, 1
  br label %487

; <label>:558:                                    ; preds = %487
  %559 = add nsw i32 %storemerge19, 1
  br label %480

; <label>:560:                                    ; preds = %480
  store i32 %storemerge21.lcssa32.lcssa35, i32* %13, align 1
  store i32 %storemerge19, i32* %14, align 4
  store i32 %storemerge20.lcssa38, i32* %11, align 1
  br label %666

; <label>:561:                                    ; preds = %456
  %562 = and i32 %459, -2
  %563 = icmp eq i32 %562, 4
  br i1 %563, label %564, label %666

; <label>:564:                                    ; preds = %561
  %565 = load i32, i32* %8, align 4
  %566 = and i32 %565, 1
  %567 = icmp eq i32 %566, 0
  %568 = load %struct.block*, %struct.block** @blocks, align 8
  %569 = load i32, i32* %6, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds %struct.block, %struct.block* %568, i64 %570
  br i1 %567, label %572, label %576

; <label>:572:                                    ; preds = %564
  store %struct.block* %571, %struct.block** %19, align 8
  %573 = load i32, i32* %7, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds %struct.block, %struct.block* %568, i64 %574
  store %struct.block* %575, %struct.block** %20, align 8
  br label %580

; <label>:576:                                    ; preds = %564
  store %struct.block* %571, %struct.block** %20, align 8
  %577 = load i32, i32* %7, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds %struct.block, %struct.block* %568, i64 %578
  store %struct.block* %579, %struct.block** %19, align 8
  br label %580

; <label>:580:                                    ; preds = %576, %572
  %581 = load i32, i32* %9, align 4
  %582 = load i32, i32* %9, align 4
  %583 = load i32, i32* %10, align 4
  %584 = add nsw i32 %582, %583
  %.promoted43 = load i32, i32* %12, align 1
  %.promoted46 = load i32, i32* %11, align 1
  br label %585

; <label>:585:                                    ; preds = %663, %580
  %storemerge17.lcssa47 = phi i32 [ %.promoted46, %580 ], [ %storemerge17, %663 ]
  %storemerge18.lcssa41.lcssa44 = phi i32 [ %.promoted43, %580 ], [ %storemerge18.lcssa41, %663 ]
  %storemerge16 = phi i32 [ %581, %580 ], [ %664, %663 ]
  %586 = icmp slt i32 %storemerge16, %584
  br i1 %586, label %587, label %665

; <label>:587:                                    ; preds = %585
  %588 = sext i32 %storemerge16 to i64
  %589 = sext i32 %storemerge16 to i64
  %590 = sext i32 %storemerge16 to i64
  %591 = sext i32 %storemerge16 to i64
  br label %592

; <label>:592:                                    ; preds = %661, %587
  %storemerge18.lcssa41 = phi i32 [ %storemerge18.lcssa41.lcssa44, %587 ], [ %storemerge18, %661 ]
  %storemerge17 = phi i32 [ 0, %587 ], [ %662, %661 ]
  %593 = load i32, i32* @x_block_size, align 4
  %594 = add nsw i32 %593, 1
  %595 = icmp sgt i32 %storemerge17, %594
  br i1 %595, label %663, label %596

; <label>:596:                                    ; preds = %592
  %597 = sext i32 %storemerge17 to i64
  %598 = sext i32 %storemerge17 to i64
  %599 = sext i32 %storemerge17 to i64
  %600 = sext i32 %storemerge17 to i64
  br label %601

; <label>:601:                                    ; preds = %605, %596
  %storemerge18 = phi i32 [ 0, %596 ], [ %660, %605 ]
  %602 = load i32, i32* @y_block_size, align 4
  %603 = add nsw i32 %602, 1
  %604 = icmp sgt i32 %storemerge18, %603
  br i1 %604, label %661, label %605

; <label>:605:                                    ; preds = %601
  %606 = load %struct.block*, %struct.block** %19, align 8
  %607 = getelementptr inbounds %struct.block, %struct.block* %606, i64 0, i32 11
  %608 = load double****, double***** %607, align 8
  %609 = getelementptr inbounds double***, double**** %608, i64 %588
  %610 = load double***, double**** %609, align 8
  %611 = getelementptr inbounds double**, double*** %610, i64 %597
  %612 = load double**, double*** %611, align 8
  %613 = sext i32 %storemerge18 to i64
  %614 = getelementptr inbounds double*, double** %612, i64 %613
  %615 = load double*, double** %614, align 8
  %616 = getelementptr inbounds double, double* %615, i64 1
  %617 = bitcast double* %616 to i64*
  %618 = load i64, i64* %617, align 8
  %619 = load %struct.block*, %struct.block** %20, align 8
  %620 = getelementptr inbounds %struct.block, %struct.block* %619, i64 0, i32 11
  %621 = load double****, double***** %620, align 8
  %622 = getelementptr inbounds double***, double**** %621, i64 %589
  %623 = load double***, double**** %622, align 8
  %624 = getelementptr inbounds double**, double*** %623, i64 %598
  %625 = load double**, double*** %624, align 8
  %626 = sext i32 %storemerge18 to i64
  %627 = getelementptr inbounds double*, double** %625, i64 %626
  %628 = load double*, double** %627, align 8
  %629 = load i32, i32* @z_block_size, align 4
  %630 = add nsw i32 %629, 1
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds double, double* %628, i64 %631
  %633 = bitcast double* %632 to i64*
  store i64 %618, i64* %633, align 8
  %634 = load %struct.block*, %struct.block** %20, align 8
  %635 = getelementptr inbounds %struct.block, %struct.block* %634, i64 0, i32 11
  %636 = load double****, double***** %635, align 8
  %637 = getelementptr inbounds double***, double**** %636, i64 %590
  %638 = load double***, double**** %637, align 8
  %639 = getelementptr inbounds double**, double*** %638, i64 %599
  %640 = load double**, double*** %639, align 8
  %641 = sext i32 %storemerge18 to i64
  %642 = getelementptr inbounds double*, double** %640, i64 %641
  %643 = load double*, double** %642, align 8
  %644 = load i32, i32* @z_block_size, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds double, double* %643, i64 %645
  %647 = bitcast double* %646 to i64*
  %648 = load i64, i64* %647, align 8
  %649 = load %struct.block*, %struct.block** %19, align 8
  %650 = getelementptr inbounds %struct.block, %struct.block* %649, i64 0, i32 11
  %651 = load double****, double***** %650, align 8
  %652 = getelementptr inbounds double***, double**** %651, i64 %591
  %653 = load double***, double**** %652, align 8
  %654 = getelementptr inbounds double**, double*** %653, i64 %600
  %655 = load double**, double*** %654, align 8
  %656 = sext i32 %storemerge18 to i64
  %657 = getelementptr inbounds double*, double** %655, i64 %656
  %658 = bitcast double** %657 to i64**
  %659 = load i64*, i64** %658, align 8
  store i64 %648, i64* %659, align 8
  %660 = add nsw i32 %storemerge18, 1
  br label %601

; <label>:661:                                    ; preds = %601
  %662 = add nsw i32 %storemerge17, 1
  br label %592

; <label>:663:                                    ; preds = %592
  %664 = add nsw i32 %storemerge16, 1
  br label %585

; <label>:665:                                    ; preds = %585
  store i32 %storemerge18.lcssa41.lcssa44, i32* %12, align 1
  store i32 %storemerge16, i32* %14, align 4
  store i32 %storemerge17.lcssa47, i32* %11, align 1
  br label %666

; <label>:666:                                    ; preds = %455, %561, %665, %560, %125, %238, %353, %237
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @on_proc_comm_diff(i32, i32, i32, i32, i32, i32, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %struct.block*, align 8
  %32 = alloca %struct.block*, align 8
  store i32 %0, i32* %8, align 4
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  %33 = load %struct.block*, %struct.block** @blocks, align 8
  %34 = load i32, i32* %8, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.block, %struct.block* %33, i64 %35
  store %struct.block* %36, %struct.block** %31, align 8
  %37 = load i32, i32* %9, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.block, %struct.block* %33, i64 %38
  store %struct.block* %39, %struct.block** %32, align 8
  %40 = load i32, i32* @code, align 4
  %41 = icmp eq i32 %40, 0
  %42 = load i32, i32* %10, align 4
  %.off = add i32 %42, 1
  %43 = icmp ult i32 %.off, 3
  %44 = load i32, i32* %10, align 4
  br i1 %41, label %45, label %735

; <label>:45:                                     ; preds = %7
  br i1 %43, label %46, label %273

; <label>:46:                                     ; preds = %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %48, label %51

; <label>:48:                                     ; preds = %46
  store i32 0, i32* %19, align 4
  store i32 1, i32* %20, align 4
  %49 = load i32, i32* @x_block_size, align 4
  %50 = add nsw i32 %49, 1
  br label %54

; <label>:51:                                     ; preds = %46
  %52 = load i32, i32* @x_block_size, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %19, align 4
  store i32 %52, i32* %20, align 4
  br label %54

; <label>:54:                                     ; preds = %51, %48
  %storemerge46 = phi i32 [ 0, %51 ], [ %50, %48 ]
  %storemerge10 = phi i32 [ 1, %51 ], [ %49, %48 ]
  store i32 %storemerge46, i32* %21, align 4
  store i32 %storemerge10, i32* %22, align 4
  %55 = load i32, i32* %12, align 4
  %56 = load i32, i32* @y_block_half, align 4
  %57 = mul nsw i32 %55, %56
  store i32 %57, i32* %24, align 4
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* @z_block_half, align 4
  %60 = mul nsw i32 %58, %59
  store i32 %60, i32* %28, align 4
  %61 = load i32, i32* %13, align 4
  %62 = load i32, i32* %13, align 4
  %63 = load i32, i32* %14, align 4
  %64 = add nsw i32 %62, %63
  %65 = load i32, i32* %20, align 4
  %66 = sext i32 %65 to i64
  %67 = load i32, i32* %24, align 4
  %68 = load i32, i32* %28, align 4
  %69 = load i32, i32* %21, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32, i32* %21, align 4
  %72 = sext i32 %71 to i64
  %73 = load i32, i32* %21, align 4
  %74 = sext i32 %73 to i64
  %75 = load i32, i32* %21, align 4
  %76 = sext i32 %75 to i64
  %77 = load i32, i32* %22, align 4
  %78 = sext i32 %77 to i64
  %79 = load i32, i32* %22, align 4
  %80 = sext i32 %79 to i64
  %81 = load i32, i32* %22, align 4
  %82 = sext i32 %81 to i64
  %83 = load i32, i32* %22, align 4
  %84 = sext i32 %83 to i64
  %85 = load i32, i32* %19, align 4
  %86 = sext i32 %85 to i64
  %87 = load i32, i32* %24, align 4
  %88 = load i32, i32* %28, align 4
  %.promoted = load i32, i32* %16, align 1
  br label %89

; <label>:89:                                     ; preds = %270, %54
  %storemerge12.lcssa47 = phi i32 [ %.promoted, %54 ], [ %storemerge12, %270 ]
  %storemerge11 = phi i32 [ %61, %54 ], [ %271, %270 ]
  %90 = icmp slt i32 %storemerge11, %64
  br i1 %90, label %91, label %272

; <label>:91:                                     ; preds = %89
  %92 = sext i32 %storemerge11 to i64
  %93 = sext i32 %storemerge11 to i64
  %94 = sext i32 %storemerge11 to i64
  %95 = sext i32 %storemerge11 to i64
  %96 = sext i32 %storemerge11 to i64
  %97 = sext i32 %storemerge11 to i64
  %98 = sext i32 %storemerge11 to i64
  %99 = sext i32 %storemerge11 to i64
  %100 = sext i32 %storemerge11 to i64
  %101 = sext i32 %storemerge11 to i64
  br label %102

; <label>:102:                                    ; preds = %268, %91
  %storemerge12 = phi i32 [ 1, %91 ], [ %269, %268 ]
  %103 = load i32, i32* @y_block_half, align 4
  %104 = icmp sgt i32 %storemerge12, %103
  br i1 %104, label %270, label %105

; <label>:105:                                    ; preds = %102
  %106 = add nsw i32 %storemerge12, %67
  %107 = sext i32 %106 to i64
  %108 = shl nsw i32 %storemerge12, 1
  %109 = sext i32 %108 to i64
  %110 = shl nsw i32 %storemerge12, 1
  %111 = sext i32 %110 to i64
  %112 = shl nsw i32 %storemerge12, 1
  %113 = add nsw i32 %112, -1
  %114 = sext i32 %113 to i64
  %115 = shl nsw i32 %storemerge12, 1
  %116 = add nsw i32 %115, -1
  %117 = sext i32 %116 to i64
  %118 = shl nsw i32 %storemerge12, 1
  %119 = add nsw i32 %118, -1
  %120 = sext i32 %119 to i64
  %121 = shl nsw i32 %storemerge12, 1
  %122 = add nsw i32 %121, -1
  %123 = sext i32 %122 to i64
  %124 = shl nsw i32 %storemerge12, 1
  %125 = sext i32 %124 to i64
  %126 = shl nsw i32 %storemerge12, 1
  %127 = sext i32 %126 to i64
  %128 = add nsw i32 %storemerge12, %87
  %129 = sext i32 %128 to i64
  br label %130

; <label>:130:                                    ; preds = %133, %105
  %storemerge13 = phi i32 [ 1, %105 ], [ %267, %133 ]
  %131 = load i32, i32* @z_block_half, align 4
  %132 = icmp sgt i32 %storemerge13, %131
  br i1 %132, label %268, label %133

; <label>:133:                                    ; preds = %130
  %134 = load %struct.block*, %struct.block** %31, align 8
  %135 = getelementptr inbounds %struct.block, %struct.block* %134, i64 0, i32 11
  %136 = load double****, double***** %135, align 8
  %137 = getelementptr inbounds double***, double**** %136, i64 %92
  %138 = load double***, double**** %137, align 8
  %139 = getelementptr inbounds double**, double*** %138, i64 %66
  %140 = load double**, double*** %139, align 8
  %141 = getelementptr inbounds double*, double** %140, i64 %107
  %142 = load double*, double** %141, align 8
  %143 = add nsw i32 %storemerge13, %68
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds double, double* %142, i64 %144
  %146 = load double, double* %145, align 8
  %147 = fmul double %146, 2.500000e-01
  %148 = load %struct.block*, %struct.block** %32, align 8
  %149 = getelementptr inbounds %struct.block, %struct.block* %148, i64 0, i32 11
  %150 = load double****, double***** %149, align 8
  %151 = getelementptr inbounds double***, double**** %150, i64 %93
  %152 = load double***, double**** %151, align 8
  %153 = getelementptr inbounds double**, double*** %152, i64 %70
  %154 = load double**, double*** %153, align 8
  %155 = getelementptr inbounds double*, double** %154, i64 %109
  %156 = load double*, double** %155, align 8
  %157 = shl nsw i32 %storemerge13, 1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds double, double* %156, i64 %158
  store double %147, double* %159, align 8
  %160 = load %struct.block*, %struct.block** %32, align 8
  %161 = getelementptr inbounds %struct.block, %struct.block* %160, i64 0, i32 11
  %162 = load double****, double***** %161, align 8
  %163 = getelementptr inbounds double***, double**** %162, i64 %94
  %164 = load double***, double**** %163, align 8
  %165 = getelementptr inbounds double**, double*** %164, i64 %72
  %166 = load double**, double*** %165, align 8
  %167 = getelementptr inbounds double*, double** %166, i64 %111
  %168 = load double*, double** %167, align 8
  %169 = shl nsw i32 %storemerge13, 1
  %170 = add nsw i32 %169, -1
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds double, double* %168, i64 %171
  store double %147, double* %172, align 8
  %173 = load %struct.block*, %struct.block** %32, align 8
  %174 = getelementptr inbounds %struct.block, %struct.block* %173, i64 0, i32 11
  %175 = load double****, double***** %174, align 8
  %176 = getelementptr inbounds double***, double**** %175, i64 %95
  %177 = load double***, double**** %176, align 8
  %178 = getelementptr inbounds double**, double*** %177, i64 %74
  %179 = load double**, double*** %178, align 8
  %180 = getelementptr inbounds double*, double** %179, i64 %114
  %181 = load double*, double** %180, align 8
  %182 = shl nsw i32 %storemerge13, 1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds double, double* %181, i64 %183
  store double %147, double* %184, align 8
  %185 = load %struct.block*, %struct.block** %32, align 8
  %186 = getelementptr inbounds %struct.block, %struct.block* %185, i64 0, i32 11
  %187 = load double****, double***** %186, align 8
  %188 = getelementptr inbounds double***, double**** %187, i64 %96
  %189 = load double***, double**** %188, align 8
  %190 = getelementptr inbounds double**, double*** %189, i64 %76
  %191 = load double**, double*** %190, align 8
  %192 = getelementptr inbounds double*, double** %191, i64 %117
  %193 = load double*, double** %192, align 8
  %194 = shl nsw i32 %storemerge13, 1
  %195 = add nsw i32 %194, -1
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds double, double* %193, i64 %196
  store double %147, double* %197, align 8
  %198 = load %struct.block*, %struct.block** %32, align 8
  %199 = getelementptr inbounds %struct.block, %struct.block* %198, i64 0, i32 11
  %200 = load double****, double***** %199, align 8
  %201 = getelementptr inbounds double***, double**** %200, i64 %97
  %202 = load double***, double**** %201, align 8
  %203 = getelementptr inbounds double**, double*** %202, i64 %78
  %204 = load double**, double*** %203, align 8
  %205 = getelementptr inbounds double*, double** %204, i64 %120
  %206 = load double*, double** %205, align 8
  %207 = shl nsw i32 %storemerge13, 1
  %208 = add nsw i32 %207, -1
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds double, double* %206, i64 %209
  %211 = load double, double* %210, align 8
  %212 = load %struct.block*, %struct.block** %32, align 8
  %213 = getelementptr inbounds %struct.block, %struct.block* %212, i64 0, i32 11
  %214 = load double****, double***** %213, align 8
  %215 = getelementptr inbounds double***, double**** %214, i64 %98
  %216 = load double***, double**** %215, align 8
  %217 = getelementptr inbounds double**, double*** %216, i64 %80
  %218 = load double**, double*** %217, align 8
  %219 = getelementptr inbounds double*, double** %218, i64 %123
  %220 = load double*, double** %219, align 8
  %221 = shl nsw i32 %storemerge13, 1
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds double, double* %220, i64 %222
  %224 = load double, double* %223, align 8
  %225 = fadd double %211, %224
  %226 = load %struct.block*, %struct.block** %32, align 8
  %227 = getelementptr inbounds %struct.block, %struct.block* %226, i64 0, i32 11
  %228 = load double****, double***** %227, align 8
  %229 = getelementptr inbounds double***, double**** %228, i64 %99
  %230 = load double***, double**** %229, align 8
  %231 = getelementptr inbounds double**, double*** %230, i64 %82
  %232 = load double**, double*** %231, align 8
  %233 = getelementptr inbounds double*, double** %232, i64 %125
  %234 = load double*, double** %233, align 8
  %235 = shl nsw i32 %storemerge13, 1
  %236 = add nsw i32 %235, -1
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds double, double* %234, i64 %237
  %239 = load double, double* %238, align 8
  %240 = fadd double %225, %239
  %241 = load %struct.block*, %struct.block** %32, align 8
  %242 = getelementptr inbounds %struct.block, %struct.block* %241, i64 0, i32 11
  %243 = load double****, double***** %242, align 8
  %244 = getelementptr inbounds double***, double**** %243, i64 %100
  %245 = load double***, double**** %244, align 8
  %246 = getelementptr inbounds double**, double*** %245, i64 %84
  %247 = load double**, double*** %246, align 8
  %248 = getelementptr inbounds double*, double** %247, i64 %127
  %249 = load double*, double** %248, align 8
  %250 = shl nsw i32 %storemerge13, 1
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds double, double* %249, i64 %251
  %253 = load double, double* %252, align 8
  %254 = fadd double %240, %253
  %255 = load %struct.block*, %struct.block** %31, align 8
  %256 = getelementptr inbounds %struct.block, %struct.block* %255, i64 0, i32 11
  %257 = load double****, double***** %256, align 8
  %258 = getelementptr inbounds double***, double**** %257, i64 %101
  %259 = load double***, double**** %258, align 8
  %260 = getelementptr inbounds double**, double*** %259, i64 %86
  %261 = load double**, double*** %260, align 8
  %262 = getelementptr inbounds double*, double** %261, i64 %129
  %263 = load double*, double** %262, align 8
  %264 = add nsw i32 %storemerge13, %88
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds double, double* %263, i64 %265
  store double %254, double* %266, align 8
  %267 = add nsw i32 %storemerge13, 1
  br label %130

; <label>:268:                                    ; preds = %130
  store i32 %storemerge13, i32* %17, align 4
  %269 = add nsw i32 %storemerge12, 1
  br label %102

; <label>:270:                                    ; preds = %102
  %271 = add nsw i32 %storemerge11, 1
  br label %89

; <label>:272:                                    ; preds = %89
  store i32 %storemerge11, i32* %18, align 4
  store i32 %storemerge12.lcssa47, i32* %16, align 1
  br label %3709

; <label>:273:                                    ; preds = %45
  %274 = and i32 %44, -2
  %275 = icmp eq i32 %274, 2
  %276 = load i32, i32* %10, align 4
  br i1 %275, label %277, label %504

; <label>:277:                                    ; preds = %273
  %278 = icmp eq i32 %276, 2
  br i1 %278, label %279, label %282

; <label>:279:                                    ; preds = %277
  store i32 0, i32* %23, align 4
  store i32 1, i32* %24, align 4
  %280 = load i32, i32* @y_block_size, align 4
  %281 = add nsw i32 %280, 1
  br label %285

; <label>:282:                                    ; preds = %277
  %283 = load i32, i32* @y_block_size, align 4
  %284 = add nsw i32 %283, 1
  store i32 %284, i32* %23, align 4
  store i32 %283, i32* %24, align 4
  br label %285

; <label>:285:                                    ; preds = %282, %279
  %storemerge45 = phi i32 [ 0, %282 ], [ %281, %279 ]
  %storemerge6 = phi i32 [ 1, %282 ], [ %280, %279 ]
  store i32 %storemerge45, i32* %25, align 4
  store i32 %storemerge6, i32* %26, align 4
  %286 = load i32, i32* %12, align 4
  %287 = load i32, i32* @x_block_half, align 4
  %288 = mul nsw i32 %286, %287
  store i32 %288, i32* %20, align 4
  %289 = load i32, i32* %11, align 4
  %290 = load i32, i32* @z_block_half, align 4
  %291 = mul nsw i32 %289, %290
  store i32 %291, i32* %28, align 4
  %292 = load i32, i32* %13, align 4
  %293 = load i32, i32* %13, align 4
  %294 = load i32, i32* %14, align 4
  %295 = add nsw i32 %293, %294
  %296 = load i32, i32* %20, align 4
  %297 = load i32, i32* %24, align 4
  %298 = sext i32 %297 to i64
  %299 = load i32, i32* %28, align 4
  %300 = load i32, i32* %25, align 4
  %301 = sext i32 %300 to i64
  %302 = load i32, i32* %25, align 4
  %303 = sext i32 %302 to i64
  %304 = load i32, i32* %25, align 4
  %305 = sext i32 %304 to i64
  %306 = load i32, i32* %25, align 4
  %307 = sext i32 %306 to i64
  %308 = load i32, i32* %26, align 4
  %309 = sext i32 %308 to i64
  %310 = load i32, i32* %26, align 4
  %311 = sext i32 %310 to i64
  %312 = load i32, i32* %26, align 4
  %313 = sext i32 %312 to i64
  %314 = load i32, i32* %26, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32, i32* %20, align 4
  %317 = load i32, i32* %23, align 4
  %318 = sext i32 %317 to i64
  %319 = load i32, i32* %28, align 4
  %.promoted52 = load i32, i32* %17, align 1
  %.promoted55 = load i32, i32* %15, align 1
  br label %320

; <label>:320:                                    ; preds = %501, %285
  %storemerge8.lcssa56 = phi i32 [ %.promoted55, %285 ], [ %storemerge8, %501 ]
  %storemerge9.lcssa50.lcssa53 = phi i32 [ %.promoted52, %285 ], [ %storemerge9.lcssa50, %501 ]
  %storemerge7 = phi i32 [ %292, %285 ], [ %502, %501 ]
  %321 = icmp slt i32 %storemerge7, %295
  br i1 %321, label %322, label %503

; <label>:322:                                    ; preds = %320
  %323 = sext i32 %storemerge7 to i64
  %324 = sext i32 %storemerge7 to i64
  %325 = sext i32 %storemerge7 to i64
  %326 = sext i32 %storemerge7 to i64
  %327 = sext i32 %storemerge7 to i64
  %328 = sext i32 %storemerge7 to i64
  %329 = sext i32 %storemerge7 to i64
  %330 = sext i32 %storemerge7 to i64
  %331 = sext i32 %storemerge7 to i64
  %332 = sext i32 %storemerge7 to i64
  br label %333

; <label>:333:                                    ; preds = %499, %322
  %storemerge9.lcssa50 = phi i32 [ %storemerge9.lcssa50.lcssa53, %322 ], [ %storemerge9, %499 ]
  %storemerge8 = phi i32 [ 1, %322 ], [ %500, %499 ]
  %334 = load i32, i32* @x_block_half, align 4
  %335 = icmp sgt i32 %storemerge8, %334
  br i1 %335, label %501, label %336

; <label>:336:                                    ; preds = %333
  %337 = add nsw i32 %storemerge8, %296
  %338 = sext i32 %337 to i64
  %339 = shl nsw i32 %storemerge8, 1
  %340 = sext i32 %339 to i64
  %341 = shl nsw i32 %storemerge8, 1
  %342 = sext i32 %341 to i64
  %343 = shl nsw i32 %storemerge8, 1
  %344 = add nsw i32 %343, -1
  %345 = sext i32 %344 to i64
  %346 = shl nsw i32 %storemerge8, 1
  %347 = add nsw i32 %346, -1
  %348 = sext i32 %347 to i64
  %349 = shl nsw i32 %storemerge8, 1
  %350 = add nsw i32 %349, -1
  %351 = sext i32 %350 to i64
  %352 = shl nsw i32 %storemerge8, 1
  %353 = add nsw i32 %352, -1
  %354 = sext i32 %353 to i64
  %355 = shl nsw i32 %storemerge8, 1
  %356 = sext i32 %355 to i64
  %357 = shl nsw i32 %storemerge8, 1
  %358 = sext i32 %357 to i64
  %359 = add nsw i32 %storemerge8, %316
  %360 = sext i32 %359 to i64
  br label %361

; <label>:361:                                    ; preds = %364, %336
  %storemerge9 = phi i32 [ 1, %336 ], [ %498, %364 ]
  %362 = load i32, i32* @z_block_half, align 4
  %363 = icmp sgt i32 %storemerge9, %362
  br i1 %363, label %499, label %364

; <label>:364:                                    ; preds = %361
  %365 = load %struct.block*, %struct.block** %31, align 8
  %366 = getelementptr inbounds %struct.block, %struct.block* %365, i64 0, i32 11
  %367 = load double****, double***** %366, align 8
  %368 = getelementptr inbounds double***, double**** %367, i64 %323
  %369 = load double***, double**** %368, align 8
  %370 = getelementptr inbounds double**, double*** %369, i64 %338
  %371 = load double**, double*** %370, align 8
  %372 = getelementptr inbounds double*, double** %371, i64 %298
  %373 = load double*, double** %372, align 8
  %374 = add nsw i32 %storemerge9, %299
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds double, double* %373, i64 %375
  %377 = load double, double* %376, align 8
  %378 = fmul double %377, 2.500000e-01
  %379 = load %struct.block*, %struct.block** %32, align 8
  %380 = getelementptr inbounds %struct.block, %struct.block* %379, i64 0, i32 11
  %381 = load double****, double***** %380, align 8
  %382 = getelementptr inbounds double***, double**** %381, i64 %324
  %383 = load double***, double**** %382, align 8
  %384 = getelementptr inbounds double**, double*** %383, i64 %340
  %385 = load double**, double*** %384, align 8
  %386 = getelementptr inbounds double*, double** %385, i64 %301
  %387 = load double*, double** %386, align 8
  %388 = shl nsw i32 %storemerge9, 1
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds double, double* %387, i64 %389
  store double %378, double* %390, align 8
  %391 = load %struct.block*, %struct.block** %32, align 8
  %392 = getelementptr inbounds %struct.block, %struct.block* %391, i64 0, i32 11
  %393 = load double****, double***** %392, align 8
  %394 = getelementptr inbounds double***, double**** %393, i64 %325
  %395 = load double***, double**** %394, align 8
  %396 = getelementptr inbounds double**, double*** %395, i64 %342
  %397 = load double**, double*** %396, align 8
  %398 = getelementptr inbounds double*, double** %397, i64 %303
  %399 = load double*, double** %398, align 8
  %400 = shl nsw i32 %storemerge9, 1
  %401 = add nsw i32 %400, -1
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds double, double* %399, i64 %402
  store double %378, double* %403, align 8
  %404 = load %struct.block*, %struct.block** %32, align 8
  %405 = getelementptr inbounds %struct.block, %struct.block* %404, i64 0, i32 11
  %406 = load double****, double***** %405, align 8
  %407 = getelementptr inbounds double***, double**** %406, i64 %326
  %408 = load double***, double**** %407, align 8
  %409 = getelementptr inbounds double**, double*** %408, i64 %345
  %410 = load double**, double*** %409, align 8
  %411 = getelementptr inbounds double*, double** %410, i64 %305
  %412 = load double*, double** %411, align 8
  %413 = shl nsw i32 %storemerge9, 1
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds double, double* %412, i64 %414
  store double %378, double* %415, align 8
  %416 = load %struct.block*, %struct.block** %32, align 8
  %417 = getelementptr inbounds %struct.block, %struct.block* %416, i64 0, i32 11
  %418 = load double****, double***** %417, align 8
  %419 = getelementptr inbounds double***, double**** %418, i64 %327
  %420 = load double***, double**** %419, align 8
  %421 = getelementptr inbounds double**, double*** %420, i64 %348
  %422 = load double**, double*** %421, align 8
  %423 = getelementptr inbounds double*, double** %422, i64 %307
  %424 = load double*, double** %423, align 8
  %425 = shl nsw i32 %storemerge9, 1
  %426 = add nsw i32 %425, -1
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds double, double* %424, i64 %427
  store double %378, double* %428, align 8
  %429 = load %struct.block*, %struct.block** %32, align 8
  %430 = getelementptr inbounds %struct.block, %struct.block* %429, i64 0, i32 11
  %431 = load double****, double***** %430, align 8
  %432 = getelementptr inbounds double***, double**** %431, i64 %328
  %433 = load double***, double**** %432, align 8
  %434 = getelementptr inbounds double**, double*** %433, i64 %351
  %435 = load double**, double*** %434, align 8
  %436 = getelementptr inbounds double*, double** %435, i64 %309
  %437 = load double*, double** %436, align 8
  %438 = shl nsw i32 %storemerge9, 1
  %439 = add nsw i32 %438, -1
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds double, double* %437, i64 %440
  %442 = load double, double* %441, align 8
  %443 = load %struct.block*, %struct.block** %32, align 8
  %444 = getelementptr inbounds %struct.block, %struct.block* %443, i64 0, i32 11
  %445 = load double****, double***** %444, align 8
  %446 = getelementptr inbounds double***, double**** %445, i64 %329
  %447 = load double***, double**** %446, align 8
  %448 = getelementptr inbounds double**, double*** %447, i64 %354
  %449 = load double**, double*** %448, align 8
  %450 = getelementptr inbounds double*, double** %449, i64 %311
  %451 = load double*, double** %450, align 8
  %452 = shl nsw i32 %storemerge9, 1
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds double, double* %451, i64 %453
  %455 = load double, double* %454, align 8
  %456 = fadd double %442, %455
  %457 = load %struct.block*, %struct.block** %32, align 8
  %458 = getelementptr inbounds %struct.block, %struct.block* %457, i64 0, i32 11
  %459 = load double****, double***** %458, align 8
  %460 = getelementptr inbounds double***, double**** %459, i64 %330
  %461 = load double***, double**** %460, align 8
  %462 = getelementptr inbounds double**, double*** %461, i64 %356
  %463 = load double**, double*** %462, align 8
  %464 = getelementptr inbounds double*, double** %463, i64 %313
  %465 = load double*, double** %464, align 8
  %466 = shl nsw i32 %storemerge9, 1
  %467 = add nsw i32 %466, -1
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds double, double* %465, i64 %468
  %470 = load double, double* %469, align 8
  %471 = fadd double %456, %470
  %472 = load %struct.block*, %struct.block** %32, align 8
  %473 = getelementptr inbounds %struct.block, %struct.block* %472, i64 0, i32 11
  %474 = load double****, double***** %473, align 8
  %475 = getelementptr inbounds double***, double**** %474, i64 %331
  %476 = load double***, double**** %475, align 8
  %477 = getelementptr inbounds double**, double*** %476, i64 %358
  %478 = load double**, double*** %477, align 8
  %479 = getelementptr inbounds double*, double** %478, i64 %315
  %480 = load double*, double** %479, align 8
  %481 = shl nsw i32 %storemerge9, 1
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds double, double* %480, i64 %482
  %484 = load double, double* %483, align 8
  %485 = fadd double %471, %484
  %486 = load %struct.block*, %struct.block** %31, align 8
  %487 = getelementptr inbounds %struct.block, %struct.block* %486, i64 0, i32 11
  %488 = load double****, double***** %487, align 8
  %489 = getelementptr inbounds double***, double**** %488, i64 %332
  %490 = load double***, double**** %489, align 8
  %491 = getelementptr inbounds double**, double*** %490, i64 %360
  %492 = load double**, double*** %491, align 8
  %493 = getelementptr inbounds double*, double** %492, i64 %318
  %494 = load double*, double** %493, align 8
  %495 = add nsw i32 %storemerge9, %319
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds double, double* %494, i64 %496
  store double %485, double* %497, align 8
  %498 = add nsw i32 %storemerge9, 1
  br label %361

; <label>:499:                                    ; preds = %361
  %500 = add nsw i32 %storemerge8, 1
  br label %333

; <label>:501:                                    ; preds = %333
  %502 = add nsw i32 %storemerge7, 1
  br label %320

; <label>:503:                                    ; preds = %320
  store i32 %storemerge9.lcssa50.lcssa53, i32* %17, align 1
  store i32 %storemerge7, i32* %18, align 4
  store i32 %storemerge8.lcssa56, i32* %15, align 1
  br label %3709

; <label>:504:                                    ; preds = %273
  %505 = and i32 %276, -2
  %506 = icmp eq i32 %505, 4
  br i1 %506, label %507, label %3709

; <label>:507:                                    ; preds = %504
  %508 = load i32, i32* %10, align 4
  %509 = icmp eq i32 %508, 4
  br i1 %509, label %510, label %513

; <label>:510:                                    ; preds = %507
  store i32 0, i32* %27, align 4
  store i32 1, i32* %28, align 4
  %511 = load i32, i32* @z_block_size, align 4
  %512 = add nsw i32 %511, 1
  br label %516

; <label>:513:                                    ; preds = %507
  %514 = load i32, i32* @z_block_size, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, i32* %27, align 4
  store i32 %514, i32* %28, align 4
  br label %516

; <label>:516:                                    ; preds = %513, %510
  %storemerge44 = phi i32 [ 0, %513 ], [ %512, %510 ]
  %storemerge = phi i32 [ 1, %513 ], [ %511, %510 ]
  store i32 %storemerge44, i32* %29, align 4
  store i32 %storemerge, i32* %30, align 4
  %517 = load i32, i32* %12, align 4
  %518 = load i32, i32* @x_block_half, align 4
  %519 = mul nsw i32 %517, %518
  store i32 %519, i32* %20, align 4
  %520 = load i32, i32* %11, align 4
  %521 = load i32, i32* @y_block_half, align 4
  %522 = mul nsw i32 %520, %521
  store i32 %522, i32* %24, align 4
  %523 = load i32, i32* %13, align 4
  %524 = load i32, i32* %13, align 4
  %525 = load i32, i32* %14, align 4
  %526 = add nsw i32 %524, %525
  %527 = load i32, i32* %20, align 4
  %528 = load i32, i32* %24, align 4
  %529 = load i32, i32* %28, align 4
  %530 = sext i32 %529 to i64
  %531 = load i32, i32* %29, align 4
  %532 = sext i32 %531 to i64
  %533 = load i32, i32* %29, align 4
  %534 = sext i32 %533 to i64
  %535 = load i32, i32* %29, align 4
  %536 = sext i32 %535 to i64
  %537 = load i32, i32* %29, align 4
  %538 = sext i32 %537 to i64
  %539 = load i32, i32* %30, align 4
  %540 = sext i32 %539 to i64
  %541 = load i32, i32* %30, align 4
  %542 = sext i32 %541 to i64
  %543 = load i32, i32* %30, align 4
  %544 = sext i32 %543 to i64
  %545 = load i32, i32* %30, align 4
  %546 = sext i32 %545 to i64
  %547 = load i32, i32* %20, align 4
  %548 = load i32, i32* %24, align 4
  %549 = load i32, i32* %27, align 4
  %550 = sext i32 %549 to i64
  %.promoted61 = load i32, i32* %16, align 1
  %.promoted64 = load i32, i32* %15, align 1
  br label %551

; <label>:551:                                    ; preds = %732, %516
  %storemerge4.lcssa65 = phi i32 [ %.promoted64, %516 ], [ %storemerge4, %732 ]
  %storemerge5.lcssa59.lcssa62 = phi i32 [ %.promoted61, %516 ], [ %storemerge5.lcssa59, %732 ]
  %storemerge3 = phi i32 [ %523, %516 ], [ %733, %732 ]
  %552 = icmp slt i32 %storemerge3, %526
  br i1 %552, label %553, label %734

; <label>:553:                                    ; preds = %551
  %554 = sext i32 %storemerge3 to i64
  %555 = sext i32 %storemerge3 to i64
  %556 = sext i32 %storemerge3 to i64
  %557 = sext i32 %storemerge3 to i64
  %558 = sext i32 %storemerge3 to i64
  %559 = sext i32 %storemerge3 to i64
  %560 = sext i32 %storemerge3 to i64
  %561 = sext i32 %storemerge3 to i64
  %562 = sext i32 %storemerge3 to i64
  %563 = sext i32 %storemerge3 to i64
  br label %564

; <label>:564:                                    ; preds = %730, %553
  %storemerge5.lcssa59 = phi i32 [ %storemerge5.lcssa59.lcssa62, %553 ], [ %storemerge5, %730 ]
  %storemerge4 = phi i32 [ 1, %553 ], [ %731, %730 ]
  %565 = load i32, i32* @x_block_half, align 4
  %566 = icmp sgt i32 %storemerge4, %565
  br i1 %566, label %732, label %567

; <label>:567:                                    ; preds = %564
  %568 = add nsw i32 %storemerge4, %527
  %569 = sext i32 %568 to i64
  %570 = shl nsw i32 %storemerge4, 1
  %571 = sext i32 %570 to i64
  %572 = shl nsw i32 %storemerge4, 1
  %573 = sext i32 %572 to i64
  %574 = shl nsw i32 %storemerge4, 1
  %575 = add nsw i32 %574, -1
  %576 = sext i32 %575 to i64
  %577 = shl nsw i32 %storemerge4, 1
  %578 = add nsw i32 %577, -1
  %579 = sext i32 %578 to i64
  %580 = shl nsw i32 %storemerge4, 1
  %581 = add nsw i32 %580, -1
  %582 = sext i32 %581 to i64
  %583 = shl nsw i32 %storemerge4, 1
  %584 = add nsw i32 %583, -1
  %585 = sext i32 %584 to i64
  %586 = shl nsw i32 %storemerge4, 1
  %587 = sext i32 %586 to i64
  %588 = shl nsw i32 %storemerge4, 1
  %589 = sext i32 %588 to i64
  %590 = add nsw i32 %storemerge4, %547
  %591 = sext i32 %590 to i64
  br label %592

; <label>:592:                                    ; preds = %595, %567
  %storemerge5 = phi i32 [ 1, %567 ], [ %729, %595 ]
  %593 = load i32, i32* @y_block_half, align 4
  %594 = icmp sgt i32 %storemerge5, %593
  br i1 %594, label %730, label %595

; <label>:595:                                    ; preds = %592
  %596 = load %struct.block*, %struct.block** %31, align 8
  %597 = getelementptr inbounds %struct.block, %struct.block* %596, i64 0, i32 11
  %598 = load double****, double***** %597, align 8
  %599 = getelementptr inbounds double***, double**** %598, i64 %554
  %600 = load double***, double**** %599, align 8
  %601 = getelementptr inbounds double**, double*** %600, i64 %569
  %602 = load double**, double*** %601, align 8
  %603 = add nsw i32 %storemerge5, %528
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds double*, double** %602, i64 %604
  %606 = load double*, double** %605, align 8
  %607 = getelementptr inbounds double, double* %606, i64 %530
  %608 = load double, double* %607, align 8
  %609 = fmul double %608, 2.500000e-01
  %610 = load %struct.block*, %struct.block** %32, align 8
  %611 = getelementptr inbounds %struct.block, %struct.block* %610, i64 0, i32 11
  %612 = load double****, double***** %611, align 8
  %613 = getelementptr inbounds double***, double**** %612, i64 %555
  %614 = load double***, double**** %613, align 8
  %615 = getelementptr inbounds double**, double*** %614, i64 %571
  %616 = load double**, double*** %615, align 8
  %617 = shl nsw i32 %storemerge5, 1
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds double*, double** %616, i64 %618
  %620 = load double*, double** %619, align 8
  %621 = getelementptr inbounds double, double* %620, i64 %532
  store double %609, double* %621, align 8
  %622 = load %struct.block*, %struct.block** %32, align 8
  %623 = getelementptr inbounds %struct.block, %struct.block* %622, i64 0, i32 11
  %624 = load double****, double***** %623, align 8
  %625 = getelementptr inbounds double***, double**** %624, i64 %556
  %626 = load double***, double**** %625, align 8
  %627 = getelementptr inbounds double**, double*** %626, i64 %573
  %628 = load double**, double*** %627, align 8
  %629 = shl nsw i32 %storemerge5, 1
  %630 = add nsw i32 %629, -1
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds double*, double** %628, i64 %631
  %633 = load double*, double** %632, align 8
  %634 = getelementptr inbounds double, double* %633, i64 %534
  store double %609, double* %634, align 8
  %635 = load %struct.block*, %struct.block** %32, align 8
  %636 = getelementptr inbounds %struct.block, %struct.block* %635, i64 0, i32 11
  %637 = load double****, double***** %636, align 8
  %638 = getelementptr inbounds double***, double**** %637, i64 %557
  %639 = load double***, double**** %638, align 8
  %640 = getelementptr inbounds double**, double*** %639, i64 %576
  %641 = load double**, double*** %640, align 8
  %642 = shl nsw i32 %storemerge5, 1
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds double*, double** %641, i64 %643
  %645 = load double*, double** %644, align 8
  %646 = getelementptr inbounds double, double* %645, i64 %536
  store double %609, double* %646, align 8
  %647 = load %struct.block*, %struct.block** %32, align 8
  %648 = getelementptr inbounds %struct.block, %struct.block* %647, i64 0, i32 11
  %649 = load double****, double***** %648, align 8
  %650 = getelementptr inbounds double***, double**** %649, i64 %558
  %651 = load double***, double**** %650, align 8
  %652 = getelementptr inbounds double**, double*** %651, i64 %579
  %653 = load double**, double*** %652, align 8
  %654 = shl nsw i32 %storemerge5, 1
  %655 = add nsw i32 %654, -1
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds double*, double** %653, i64 %656
  %658 = load double*, double** %657, align 8
  %659 = getelementptr inbounds double, double* %658, i64 %538
  store double %609, double* %659, align 8
  %660 = load %struct.block*, %struct.block** %32, align 8
  %661 = getelementptr inbounds %struct.block, %struct.block* %660, i64 0, i32 11
  %662 = load double****, double***** %661, align 8
  %663 = getelementptr inbounds double***, double**** %662, i64 %559
  %664 = load double***, double**** %663, align 8
  %665 = getelementptr inbounds double**, double*** %664, i64 %582
  %666 = load double**, double*** %665, align 8
  %667 = shl nsw i32 %storemerge5, 1
  %668 = add nsw i32 %667, -1
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds double*, double** %666, i64 %669
  %671 = load double*, double** %670, align 8
  %672 = getelementptr inbounds double, double* %671, i64 %540
  %673 = load double, double* %672, align 8
  %674 = load %struct.block*, %struct.block** %32, align 8
  %675 = getelementptr inbounds %struct.block, %struct.block* %674, i64 0, i32 11
  %676 = load double****, double***** %675, align 8
  %677 = getelementptr inbounds double***, double**** %676, i64 %560
  %678 = load double***, double**** %677, align 8
  %679 = getelementptr inbounds double**, double*** %678, i64 %585
  %680 = load double**, double*** %679, align 8
  %681 = shl nsw i32 %storemerge5, 1
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds double*, double** %680, i64 %682
  %684 = load double*, double** %683, align 8
  %685 = getelementptr inbounds double, double* %684, i64 %542
  %686 = load double, double* %685, align 8
  %687 = fadd double %673, %686
  %688 = load %struct.block*, %struct.block** %32, align 8
  %689 = getelementptr inbounds %struct.block, %struct.block* %688, i64 0, i32 11
  %690 = load double****, double***** %689, align 8
  %691 = getelementptr inbounds double***, double**** %690, i64 %561
  %692 = load double***, double**** %691, align 8
  %693 = getelementptr inbounds double**, double*** %692, i64 %587
  %694 = load double**, double*** %693, align 8
  %695 = shl nsw i32 %storemerge5, 1
  %696 = add nsw i32 %695, -1
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds double*, double** %694, i64 %697
  %699 = load double*, double** %698, align 8
  %700 = getelementptr inbounds double, double* %699, i64 %544
  %701 = load double, double* %700, align 8
  %702 = fadd double %687, %701
  %703 = load %struct.block*, %struct.block** %32, align 8
  %704 = getelementptr inbounds %struct.block, %struct.block* %703, i64 0, i32 11
  %705 = load double****, double***** %704, align 8
  %706 = getelementptr inbounds double***, double**** %705, i64 %562
  %707 = load double***, double**** %706, align 8
  %708 = getelementptr inbounds double**, double*** %707, i64 %589
  %709 = load double**, double*** %708, align 8
  %710 = shl nsw i32 %storemerge5, 1
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds double*, double** %709, i64 %711
  %713 = load double*, double** %712, align 8
  %714 = getelementptr inbounds double, double* %713, i64 %546
  %715 = load double, double* %714, align 8
  %716 = fadd double %702, %715
  %717 = load %struct.block*, %struct.block** %31, align 8
  %718 = getelementptr inbounds %struct.block, %struct.block* %717, i64 0, i32 11
  %719 = load double****, double***** %718, align 8
  %720 = getelementptr inbounds double***, double**** %719, i64 %563
  %721 = load double***, double**** %720, align 8
  %722 = getelementptr inbounds double**, double*** %721, i64 %591
  %723 = load double**, double*** %722, align 8
  %724 = add nsw i32 %storemerge5, %548
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds double*, double** %723, i64 %725
  %727 = load double*, double** %726, align 8
  %728 = getelementptr inbounds double, double* %727, i64 %550
  store double %716, double* %728, align 8
  %729 = add nsw i32 %storemerge5, 1
  br label %592

; <label>:730:                                    ; preds = %592
  %731 = add nsw i32 %storemerge4, 1
  br label %564

; <label>:732:                                    ; preds = %564
  %733 = add nsw i32 %storemerge3, 1
  br label %551

; <label>:734:                                    ; preds = %551
  store i32 %storemerge5.lcssa59.lcssa62, i32* %16, align 1
  store i32 %storemerge3, i32* %18, align 4
  store i32 %storemerge4.lcssa65, i32* %15, align 1
  br label %3709

; <label>:735:                                    ; preds = %7
  br i1 %43, label %736, label %1723

; <label>:736:                                    ; preds = %735
  %737 = icmp eq i32 %44, 0
  br i1 %737, label %738, label %741

; <label>:738:                                    ; preds = %736
  store i32 0, i32* %19, align 4
  store i32 1, i32* %20, align 4
  %739 = load i32, i32* @x_block_size, align 4
  %740 = add nsw i32 %739, 1
  br label %744

; <label>:741:                                    ; preds = %736
  %742 = load i32, i32* @x_block_size, align 4
  %743 = add nsw i32 %742, 1
  store i32 %743, i32* %19, align 4
  store i32 %742, i32* %20, align 4
  br label %744

; <label>:744:                                    ; preds = %741, %738
  %storemerge43 = phi i32 [ 0, %741 ], [ %740, %738 ]
  %storemerge33 = phi i32 [ 1, %741 ], [ %739, %738 ]
  store i32 %storemerge43, i32* %21, align 4
  store i32 %storemerge33, i32* %22, align 4
  %745 = load i32, i32* %12, align 4
  %746 = load i32, i32* @y_block_half, align 4
  %747 = mul nsw i32 %745, %746
  store i32 %747, i32* %24, align 4
  %748 = load i32, i32* %11, align 4
  %749 = load i32, i32* @z_block_half, align 4
  %750 = mul nsw i32 %748, %749
  store i32 %750, i32* %28, align 4
  %751 = load i32, i32* @y_block_size, align 4
  %752 = add nsw i32 %751, 1
  store i32 %752, i32* %25, align 4
  %753 = load i32, i32* @y_block_half, align 4
  %754 = add nsw i32 %753, 1
  store i32 %754, i32* %26, align 4
  %755 = load i32, i32* @z_block_size, align 4
  %756 = add nsw i32 %755, 1
  store i32 %756, i32* %29, align 4
  %757 = load i32, i32* @z_block_half, align 4
  %758 = add nsw i32 %757, 1
  store i32 %758, i32* %30, align 4
  %759 = load i32, i32* %13, align 4
  br label %760

; <label>:760:                                    ; preds = %1720, %744
  %storemerge34 = phi i32 [ %759, %744 ], [ %1722, %1720 ]
  store i32 %storemerge34, i32* %18, align 4
  %761 = load i32, i32* %13, align 4
  %762 = load i32, i32* %14, align 4
  %763 = add nsw i32 %761, %762
  %764 = icmp slt i32 %storemerge34, %763
  br i1 %764, label %765, label %3709

; <label>:765:                                    ; preds = %760
  %766 = load %struct.block*, %struct.block** %31, align 8
  %767 = getelementptr inbounds %struct.block, %struct.block* %766, i64 0, i32 11
  %768 = load double****, double***** %767, align 8
  %769 = load i32, i32* %18, align 4
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds double***, double**** %768, i64 %770
  %772 = load double***, double**** %771, align 8
  %773 = load i32, i32* %20, align 4
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds double**, double*** %772, i64 %774
  %776 = load double**, double*** %775, align 8
  %777 = load i32, i32* %24, align 4
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds double*, double** %776, i64 %778
  %780 = load double*, double** %779, align 8
  %781 = load i32, i32* %28, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds double, double* %780, i64 %782
  %784 = load double, double* %783, align 8
  %785 = fmul double %784, 2.500000e-01
  %786 = load %struct.block*, %struct.block** %32, align 8
  %787 = getelementptr inbounds %struct.block, %struct.block* %786, i64 0, i32 11
  %788 = load double****, double***** %787, align 8
  %789 = load i32, i32* %18, align 4
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds double***, double**** %788, i64 %790
  %792 = load double***, double**** %791, align 8
  %793 = load i32, i32* %21, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds double**, double*** %792, i64 %794
  %796 = load double**, double*** %795, align 8
  %797 = load double*, double** %796, align 8
  store double %785, double* %797, align 8
  %798 = load i32, i32* %18, align 4
  %799 = sext i32 %798 to i64
  %800 = load i32, i32* %20, align 4
  %801 = sext i32 %800 to i64
  %802 = load i32, i32* %24, align 4
  %803 = sext i32 %802 to i64
  %804 = load i32, i32* %28, align 4
  %805 = load i32, i32* %18, align 4
  %806 = sext i32 %805 to i64
  %807 = load i32, i32* %21, align 4
  %808 = sext i32 %807 to i64
  %809 = load i32, i32* %18, align 4
  %810 = sext i32 %809 to i64
  %811 = load i32, i32* %21, align 4
  %812 = sext i32 %811 to i64
  br label %813

; <label>:813:                                    ; preds = %816, %765
  %storemerge35 = phi i32 [ 1, %765 ], [ %854, %816 ]
  %814 = load i32, i32* @z_block_half, align 4
  %815 = icmp sgt i32 %storemerge35, %814
  br i1 %815, label %855, label %816

; <label>:816:                                    ; preds = %813
  %817 = load %struct.block*, %struct.block** %31, align 8
  %818 = getelementptr inbounds %struct.block, %struct.block* %817, i64 0, i32 11
  %819 = load double****, double***** %818, align 8
  %820 = getelementptr inbounds double***, double**** %819, i64 %799
  %821 = load double***, double**** %820, align 8
  %822 = getelementptr inbounds double**, double*** %821, i64 %801
  %823 = load double**, double*** %822, align 8
  %824 = getelementptr inbounds double*, double** %823, i64 %803
  %825 = load double*, double** %824, align 8
  %826 = add nsw i32 %storemerge35, %804
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds double, double* %825, i64 %827
  %829 = load double, double* %828, align 8
  %830 = fmul double %829, 2.500000e-01
  %831 = load %struct.block*, %struct.block** %32, align 8
  %832 = getelementptr inbounds %struct.block, %struct.block* %831, i64 0, i32 11
  %833 = load double****, double***** %832, align 8
  %834 = getelementptr inbounds double***, double**** %833, i64 %806
  %835 = load double***, double**** %834, align 8
  %836 = getelementptr inbounds double**, double*** %835, i64 %808
  %837 = load double**, double*** %836, align 8
  %838 = load double*, double** %837, align 8
  %839 = shl nsw i32 %storemerge35, 1
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds double, double* %838, i64 %840
  store double %830, double* %841, align 8
  %842 = load %struct.block*, %struct.block** %32, align 8
  %843 = getelementptr inbounds %struct.block, %struct.block* %842, i64 0, i32 11
  %844 = load double****, double***** %843, align 8
  %845 = getelementptr inbounds double***, double**** %844, i64 %810
  %846 = load double***, double**** %845, align 8
  %847 = getelementptr inbounds double**, double*** %846, i64 %812
  %848 = load double**, double*** %847, align 8
  %849 = load double*, double** %848, align 8
  %850 = shl nsw i32 %storemerge35, 1
  %851 = add nsw i32 %850, -1
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds double, double* %849, i64 %852
  store double %830, double* %853, align 8
  %854 = add nsw i32 %storemerge35, 1
  br label %813

; <label>:855:                                    ; preds = %813
  store i32 %storemerge35, i32* %17, align 4
  %856 = load %struct.block*, %struct.block** %31, align 8
  %857 = getelementptr inbounds %struct.block, %struct.block* %856, i64 0, i32 11
  %858 = load double****, double***** %857, align 8
  %859 = load i32, i32* %18, align 4
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds double***, double**** %858, i64 %860
  %862 = load double***, double**** %861, align 8
  %863 = load i32, i32* %20, align 4
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds double**, double*** %862, i64 %864
  %866 = load double**, double*** %865, align 8
  %867 = load i32, i32* %24, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds double*, double** %866, i64 %868
  %870 = load double*, double** %869, align 8
  %871 = load i32, i32* %30, align 4
  %872 = load i32, i32* %28, align 4
  %873 = add nsw i32 %871, %872
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds double, double* %870, i64 %874
  %876 = load double, double* %875, align 8
  %877 = fmul double %876, 2.500000e-01
  %878 = load %struct.block*, %struct.block** %32, align 8
  %879 = getelementptr inbounds %struct.block, %struct.block* %878, i64 0, i32 11
  %880 = load double****, double***** %879, align 8
  %881 = load i32, i32* %18, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds double***, double**** %880, i64 %882
  %884 = load double***, double**** %883, align 8
  %885 = load i32, i32* %21, align 4
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds double**, double*** %884, i64 %886
  %888 = load double**, double*** %887, align 8
  %889 = load double*, double** %888, align 8
  %890 = load i32, i32* %29, align 4
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds double, double* %889, i64 %891
  store double %877, double* %892, align 8
  %893 = load i32, i32* %12, align 4
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %895, label %1007

; <label>:895:                                    ; preds = %855
  %896 = load i32, i32* %11, align 4
  %897 = icmp eq i32 %896, 0
  %898 = load %struct.block*, %struct.block** %32, align 8
  %899 = getelementptr inbounds %struct.block, %struct.block* %898, i64 0, i32 11
  %900 = load double****, double***** %899, align 8
  %901 = load i32, i32* %18, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds double***, double**** %900, i64 %902
  %904 = load double***, double**** %903, align 8
  %905 = load i32, i32* %22, align 4
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds double**, double*** %904, i64 %906
  br i1 %897, label %908, label %926

; <label>:908:                                    ; preds = %895
  %909 = bitcast double*** %907 to i64***
  %910 = load i64**, i64*** %909, align 8
  %911 = load i64*, i64** %910, align 8
  %912 = load i64, i64* %911, align 8
  %913 = load %struct.block*, %struct.block** %31, align 8
  %914 = getelementptr inbounds %struct.block, %struct.block* %913, i64 0, i32 11
  %915 = load double****, double***** %914, align 8
  %916 = load i32, i32* %18, align 4
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds double***, double**** %915, i64 %917
  %919 = load double***, double**** %918, align 8
  %920 = load i32, i32* %19, align 4
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds double**, double*** %919, i64 %921
  %923 = bitcast double*** %922 to i64***
  %924 = load i64**, i64*** %923, align 8
  %925 = load i64*, i64** %924, align 8
  store i64 %912, i64* %925, align 8
  br label %950

; <label>:926:                                    ; preds = %895
  %927 = load double**, double*** %907, align 8
  %928 = load double*, double** %927, align 8
  %929 = load i32, i32* %29, align 4
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds double, double* %928, i64 %930
  %932 = bitcast double* %931 to i64*
  %933 = load i64, i64* %932, align 8
  %934 = load %struct.block*, %struct.block** %31, align 8
  %935 = getelementptr inbounds %struct.block, %struct.block* %934, i64 0, i32 11
  %936 = load double****, double***** %935, align 8
  %937 = load i32, i32* %18, align 4
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds double***, double**** %936, i64 %938
  %940 = load double***, double**** %939, align 8
  %941 = load i32, i32* %19, align 4
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds double**, double*** %940, i64 %942
  %944 = load double**, double*** %943, align 8
  %945 = load double*, double** %944, align 8
  %946 = load i32, i32* %29, align 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds double, double* %945, i64 %947
  %949 = bitcast double* %948 to i64*
  store i64 %933, i64* %949, align 8
  br label %950

; <label>:950:                                    ; preds = %926, %908
  %951 = load i32, i32* %18, align 4
  %952 = sext i32 %951 to i64
  %953 = load i32, i32* %22, align 4
  %954 = sext i32 %953 to i64
  %955 = load i32, i32* %18, align 4
  %956 = sext i32 %955 to i64
  %957 = load i32, i32* %22, align 4
  %958 = sext i32 %957 to i64
  %959 = load i32, i32* %18, align 4
  %960 = sext i32 %959 to i64
  %961 = load i32, i32* %19, align 4
  %962 = sext i32 %961 to i64
  %963 = load i32, i32* %28, align 4
  br label %964

; <label>:964:                                    ; preds = %967, %950
  %storemerge40 = phi i32 [ 1, %950 ], [ %1005, %967 ]
  %965 = load i32, i32* @z_block_half, align 4
  %966 = icmp sgt i32 %storemerge40, %965
  br i1 %966, label %1006, label %967

; <label>:967:                                    ; preds = %964
  %968 = load %struct.block*, %struct.block** %32, align 8
  %969 = getelementptr inbounds %struct.block, %struct.block* %968, i64 0, i32 11
  %970 = load double****, double***** %969, align 8
  %971 = getelementptr inbounds double***, double**** %970, i64 %952
  %972 = load double***, double**** %971, align 8
  %973 = getelementptr inbounds double**, double*** %972, i64 %954
  %974 = load double**, double*** %973, align 8
  %975 = load double*, double** %974, align 8
  %976 = shl nsw i32 %storemerge40, 1
  %977 = add nsw i32 %976, -1
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds double, double* %975, i64 %978
  %980 = load double, double* %979, align 8
  %981 = load %struct.block*, %struct.block** %32, align 8
  %982 = getelementptr inbounds %struct.block, %struct.block* %981, i64 0, i32 11
  %983 = load double****, double***** %982, align 8
  %984 = getelementptr inbounds double***, double**** %983, i64 %956
  %985 = load double***, double**** %984, align 8
  %986 = getelementptr inbounds double**, double*** %985, i64 %958
  %987 = load double**, double*** %986, align 8
  %988 = load double*, double** %987, align 8
  %989 = shl nsw i32 %storemerge40, 1
  %990 = sext i32 %989 to i64
  %991 = getelementptr inbounds double, double* %988, i64 %990
  %992 = load double, double* %991, align 8
  %993 = fadd double %980, %992
  %994 = load %struct.block*, %struct.block** %31, align 8
  %995 = getelementptr inbounds %struct.block, %struct.block* %994, i64 0, i32 11
  %996 = load double****, double***** %995, align 8
  %997 = getelementptr inbounds double***, double**** %996, i64 %960
  %998 = load double***, double**** %997, align 8
  %999 = getelementptr inbounds double**, double*** %998, i64 %962
  %1000 = load double**, double*** %999, align 8
  %1001 = load double*, double** %1000, align 8
  %1002 = add nsw i32 %storemerge40, %963
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds double, double* %1001, i64 %1003
  store double %993, double* %1004, align 8
  %1005 = add nsw i32 %storemerge40, 1
  br label %964

; <label>:1006:                                   ; preds = %964
  store i32 %storemerge40, i32* %17, align 4
  br label %1007

; <label>:1007:                                   ; preds = %1006, %855
  %1008 = load i32, i32* %18, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = load i32, i32* %20, align 4
  %1011 = sext i32 %1010 to i64
  %1012 = load i32, i32* %24, align 4
  %1013 = load i32, i32* %28, align 4
  %1014 = sext i32 %1013 to i64
  %1015 = load i32, i32* %18, align 4
  %1016 = sext i32 %1015 to i64
  %1017 = load i32, i32* %21, align 4
  %1018 = sext i32 %1017 to i64
  %1019 = load i32, i32* %18, align 4
  %1020 = sext i32 %1019 to i64
  %1021 = load i32, i32* %21, align 4
  %1022 = sext i32 %1021 to i64
  %1023 = load i32, i32* %11, align 4
  %1024 = icmp eq i32 %1023, 0
  %1025 = load i32, i32* %18, align 4
  %1026 = sext i32 %1025 to i64
  %1027 = load i32, i32* %22, align 4
  %1028 = sext i32 %1027 to i64
  %1029 = load i32, i32* %18, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = load i32, i32* %22, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = load i32, i32* %18, align 4
  %1034 = sext i32 %1033 to i64
  %1035 = load i32, i32* %19, align 4
  %1036 = sext i32 %1035 to i64
  %1037 = load i32, i32* %24, align 4
  %1038 = load i32, i32* %18, align 4
  %1039 = sext i32 %1038 to i64
  %1040 = load i32, i32* %20, align 4
  %1041 = sext i32 %1040 to i64
  %1042 = load i32, i32* %24, align 4
  %1043 = load i32, i32* %28, align 4
  %1044 = load i32, i32* %18, align 4
  %1045 = sext i32 %1044 to i64
  %1046 = load i32, i32* %21, align 4
  %1047 = sext i32 %1046 to i64
  %1048 = load i32, i32* %18, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = load i32, i32* %21, align 4
  %1051 = sext i32 %1050 to i64
  %1052 = load i32, i32* %18, align 4
  %1053 = sext i32 %1052 to i64
  %1054 = load i32, i32* %21, align 4
  %1055 = sext i32 %1054 to i64
  %1056 = load i32, i32* %18, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = load i32, i32* %21, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = load i32, i32* %18, align 4
  %1061 = sext i32 %1060 to i64
  %1062 = load i32, i32* %22, align 4
  %1063 = sext i32 %1062 to i64
  %1064 = load i32, i32* %18, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = load i32, i32* %22, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = load i32, i32* %18, align 4
  %1069 = sext i32 %1068 to i64
  %1070 = load i32, i32* %22, align 4
  %1071 = sext i32 %1070 to i64
  %1072 = load i32, i32* %18, align 4
  %1073 = sext i32 %1072 to i64
  %1074 = load i32, i32* %22, align 4
  %1075 = sext i32 %1074 to i64
  %1076 = load i32, i32* %18, align 4
  %1077 = sext i32 %1076 to i64
  %1078 = load i32, i32* %19, align 4
  %1079 = sext i32 %1078 to i64
  %1080 = load i32, i32* %24, align 4
  %1081 = load i32, i32* %28, align 4
  %1082 = load i32, i32* %18, align 4
  %1083 = sext i32 %1082 to i64
  %1084 = load i32, i32* %22, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = load i32, i32* %29, align 4
  %1087 = sext i32 %1086 to i64
  %1088 = load i32, i32* %18, align 4
  %1089 = sext i32 %1088 to i64
  %1090 = load i32, i32* %22, align 4
  %1091 = sext i32 %1090 to i64
  %1092 = load i32, i32* %29, align 4
  %1093 = sext i32 %1092 to i64
  %1094 = load i32, i32* %18, align 4
  %1095 = sext i32 %1094 to i64
  %1096 = load i32, i32* %19, align 4
  %1097 = sext i32 %1096 to i64
  %1098 = load i32, i32* %24, align 4
  %1099 = load i32, i32* %29, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = load i32, i32* %18, align 4
  %1102 = sext i32 %1101 to i64
  %1103 = load i32, i32* %20, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = load i32, i32* %24, align 4
  %1106 = load i32, i32* %30, align 4
  %1107 = load i32, i32* %28, align 4
  %1108 = add nsw i32 %1106, %1107
  %1109 = sext i32 %1108 to i64
  %1110 = load i32, i32* %18, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = load i32, i32* %21, align 4
  %1113 = sext i32 %1112 to i64
  %1114 = load i32, i32* %29, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = load i32, i32* %18, align 4
  %1117 = sext i32 %1116 to i64
  %1118 = load i32, i32* %21, align 4
  %1119 = sext i32 %1118 to i64
  %1120 = load i32, i32* %29, align 4
  %1121 = sext i32 %1120 to i64
  br label %1122

; <label>:1122:                                   ; preds = %1402, %1007
  %storemerge36 = phi i32 [ 1, %1007 ], [ %1442, %1402 ]
  %1123 = load i32, i32* @y_block_half, align 4
  %1124 = icmp sgt i32 %storemerge36, %1123
  br i1 %1124, label %1443, label %1125

; <label>:1125:                                   ; preds = %1122
  %1126 = load %struct.block*, %struct.block** %31, align 8
  %1127 = getelementptr inbounds %struct.block, %struct.block* %1126, i64 0, i32 11
  %1128 = load double****, double***** %1127, align 8
  %1129 = getelementptr inbounds double***, double**** %1128, i64 %1009
  %1130 = load double***, double**** %1129, align 8
  %1131 = getelementptr inbounds double**, double*** %1130, i64 %1011
  %1132 = load double**, double*** %1131, align 8
  %1133 = add nsw i32 %storemerge36, %1012
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds double*, double** %1132, i64 %1134
  %1136 = load double*, double** %1135, align 8
  %1137 = getelementptr inbounds double, double* %1136, i64 %1014
  %1138 = load double, double* %1137, align 8
  %1139 = fmul double %1138, 2.500000e-01
  %1140 = load %struct.block*, %struct.block** %32, align 8
  %1141 = getelementptr inbounds %struct.block, %struct.block* %1140, i64 0, i32 11
  %1142 = load double****, double***** %1141, align 8
  %1143 = getelementptr inbounds double***, double**** %1142, i64 %1016
  %1144 = load double***, double**** %1143, align 8
  %1145 = getelementptr inbounds double**, double*** %1144, i64 %1018
  %1146 = load double**, double*** %1145, align 8
  %1147 = shl nsw i32 %storemerge36, 1
  %1148 = sext i32 %1147 to i64
  %1149 = getelementptr inbounds double*, double** %1146, i64 %1148
  %1150 = load double*, double** %1149, align 8
  store double %1139, double* %1150, align 8
  %1151 = load %struct.block*, %struct.block** %32, align 8
  %1152 = getelementptr inbounds %struct.block, %struct.block* %1151, i64 0, i32 11
  %1153 = load double****, double***** %1152, align 8
  %1154 = getelementptr inbounds double***, double**** %1153, i64 %1020
  %1155 = load double***, double**** %1154, align 8
  %1156 = getelementptr inbounds double**, double*** %1155, i64 %1022
  %1157 = load double**, double*** %1156, align 8
  %1158 = shl nsw i32 %storemerge36, 1
  %1159 = add nsw i32 %1158, -1
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds double*, double** %1157, i64 %1160
  %1162 = load double*, double** %1161, align 8
  store double %1139, double* %1162, align 8
  %1163 = load %struct.block*, %struct.block** %32, align 8
  %1164 = getelementptr inbounds %struct.block, %struct.block* %1163, i64 0, i32 11
  %1165 = load double****, double***** %1164, align 8
  br i1 %1024, label %1166, label %1201

; <label>:1166:                                   ; preds = %1125
  %1167 = getelementptr inbounds double***, double**** %1165, i64 %1026
  %1168 = load double***, double**** %1167, align 8
  %1169 = getelementptr inbounds double**, double*** %1168, i64 %1028
  %1170 = load double**, double*** %1169, align 8
  %1171 = shl nsw i32 %storemerge36, 1
  %1172 = add nsw i32 %1171, -1
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds double*, double** %1170, i64 %1173
  %1175 = load double*, double** %1174, align 8
  %1176 = load double, double* %1175, align 8
  %1177 = load %struct.block*, %struct.block** %32, align 8
  %1178 = getelementptr inbounds %struct.block, %struct.block* %1177, i64 0, i32 11
  %1179 = load double****, double***** %1178, align 8
  %1180 = getelementptr inbounds double***, double**** %1179, i64 %1030
  %1181 = load double***, double**** %1180, align 8
  %1182 = getelementptr inbounds double**, double*** %1181, i64 %1032
  %1183 = load double**, double*** %1182, align 8
  %1184 = shl nsw i32 %storemerge36, 1
  %1185 = sext i32 %1184 to i64
  %1186 = getelementptr inbounds double*, double** %1183, i64 %1185
  %1187 = load double*, double** %1186, align 8
  %1188 = load double, double* %1187, align 8
  %1189 = fadd double %1176, %1188
  %1190 = load %struct.block*, %struct.block** %31, align 8
  %1191 = getelementptr inbounds %struct.block, %struct.block* %1190, i64 0, i32 11
  %1192 = load double****, double***** %1191, align 8
  %1193 = getelementptr inbounds double***, double**** %1192, i64 %1034
  %1194 = load double***, double**** %1193, align 8
  %1195 = getelementptr inbounds double**, double*** %1194, i64 %1036
  %1196 = load double**, double*** %1195, align 8
  %1197 = add nsw i32 %storemerge36, %1037
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds double*, double** %1196, i64 %1198
  %1200 = load double*, double** %1199, align 8
  store double %1189, double* %1200, align 8
  br label %1239

; <label>:1201:                                   ; preds = %1125
  %1202 = getelementptr inbounds double***, double**** %1165, i64 %1083
  %1203 = load double***, double**** %1202, align 8
  %1204 = getelementptr inbounds double**, double*** %1203, i64 %1085
  %1205 = load double**, double*** %1204, align 8
  %1206 = shl nsw i32 %storemerge36, 1
  %1207 = add nsw i32 %1206, -1
  %1208 = sext i32 %1207 to i64
  %1209 = getelementptr inbounds double*, double** %1205, i64 %1208
  %1210 = load double*, double** %1209, align 8
  %1211 = getelementptr inbounds double, double* %1210, i64 %1087
  %1212 = load double, double* %1211, align 8
  %1213 = load %struct.block*, %struct.block** %32, align 8
  %1214 = getelementptr inbounds %struct.block, %struct.block* %1213, i64 0, i32 11
  %1215 = load double****, double***** %1214, align 8
  %1216 = getelementptr inbounds double***, double**** %1215, i64 %1089
  %1217 = load double***, double**** %1216, align 8
  %1218 = getelementptr inbounds double**, double*** %1217, i64 %1091
  %1219 = load double**, double*** %1218, align 8
  %1220 = shl nsw i32 %storemerge36, 1
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds double*, double** %1219, i64 %1221
  %1223 = load double*, double** %1222, align 8
  %1224 = getelementptr inbounds double, double* %1223, i64 %1093
  %1225 = load double, double* %1224, align 8
  %1226 = fadd double %1212, %1225
  %1227 = load %struct.block*, %struct.block** %31, align 8
  %1228 = getelementptr inbounds %struct.block, %struct.block* %1227, i64 0, i32 11
  %1229 = load double****, double***** %1228, align 8
  %1230 = getelementptr inbounds double***, double**** %1229, i64 %1095
  %1231 = load double***, double**** %1230, align 8
  %1232 = getelementptr inbounds double**, double*** %1231, i64 %1097
  %1233 = load double**, double*** %1232, align 8
  %1234 = add nsw i32 %storemerge36, %1098
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds double*, double** %1233, i64 %1235
  %1237 = load double*, double** %1236, align 8
  %1238 = getelementptr inbounds double, double* %1237, i64 %1100
  store double %1226, double* %1238, align 8
  br label %1239

; <label>:1239:                                   ; preds = %1201, %1166
  %1240 = add nsw i32 %storemerge36, %1042
  %1241 = sext i32 %1240 to i64
  %1242 = shl nsw i32 %storemerge36, 1
  %1243 = sext i32 %1242 to i64
  %1244 = shl nsw i32 %storemerge36, 1
  %1245 = sext i32 %1244 to i64
  %1246 = shl nsw i32 %storemerge36, 1
  %1247 = add nsw i32 %1246, -1
  %1248 = sext i32 %1247 to i64
  %1249 = shl nsw i32 %storemerge36, 1
  %1250 = add nsw i32 %1249, -1
  %1251 = sext i32 %1250 to i64
  %1252 = shl nsw i32 %storemerge36, 1
  %1253 = add nsw i32 %1252, -1
  %1254 = sext i32 %1253 to i64
  %1255 = shl nsw i32 %storemerge36, 1
  %1256 = add nsw i32 %1255, -1
  %1257 = sext i32 %1256 to i64
  %1258 = shl nsw i32 %storemerge36, 1
  %1259 = sext i32 %1258 to i64
  %1260 = shl nsw i32 %storemerge36, 1
  %1261 = sext i32 %1260 to i64
  %1262 = add nsw i32 %storemerge36, %1080
  %1263 = sext i32 %1262 to i64
  br label %1264

; <label>:1264:                                   ; preds = %1267, %1239
  %storemerge39 = phi i32 [ 1, %1239 ], [ %1401, %1267 ]
  %1265 = load i32, i32* @z_block_half, align 4
  %1266 = icmp sgt i32 %storemerge39, %1265
  br i1 %1266, label %1402, label %1267

; <label>:1267:                                   ; preds = %1264
  %1268 = load %struct.block*, %struct.block** %31, align 8
  %1269 = getelementptr inbounds %struct.block, %struct.block* %1268, i64 0, i32 11
  %1270 = load double****, double***** %1269, align 8
  %1271 = getelementptr inbounds double***, double**** %1270, i64 %1039
  %1272 = load double***, double**** %1271, align 8
  %1273 = getelementptr inbounds double**, double*** %1272, i64 %1041
  %1274 = load double**, double*** %1273, align 8
  %1275 = getelementptr inbounds double*, double** %1274, i64 %1241
  %1276 = load double*, double** %1275, align 8
  %1277 = add nsw i32 %storemerge39, %1043
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds double, double* %1276, i64 %1278
  %1280 = load double, double* %1279, align 8
  %1281 = fmul double %1280, 2.500000e-01
  %1282 = load %struct.block*, %struct.block** %32, align 8
  %1283 = getelementptr inbounds %struct.block, %struct.block* %1282, i64 0, i32 11
  %1284 = load double****, double***** %1283, align 8
  %1285 = getelementptr inbounds double***, double**** %1284, i64 %1045
  %1286 = load double***, double**** %1285, align 8
  %1287 = getelementptr inbounds double**, double*** %1286, i64 %1047
  %1288 = load double**, double*** %1287, align 8
  %1289 = getelementptr inbounds double*, double** %1288, i64 %1243
  %1290 = load double*, double** %1289, align 8
  %1291 = shl nsw i32 %storemerge39, 1
  %1292 = sext i32 %1291 to i64
  %1293 = getelementptr inbounds double, double* %1290, i64 %1292
  store double %1281, double* %1293, align 8
  %1294 = load %struct.block*, %struct.block** %32, align 8
  %1295 = getelementptr inbounds %struct.block, %struct.block* %1294, i64 0, i32 11
  %1296 = load double****, double***** %1295, align 8
  %1297 = getelementptr inbounds double***, double**** %1296, i64 %1049
  %1298 = load double***, double**** %1297, align 8
  %1299 = getelementptr inbounds double**, double*** %1298, i64 %1051
  %1300 = load double**, double*** %1299, align 8
  %1301 = getelementptr inbounds double*, double** %1300, i64 %1245
  %1302 = load double*, double** %1301, align 8
  %1303 = shl nsw i32 %storemerge39, 1
  %1304 = add nsw i32 %1303, -1
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds double, double* %1302, i64 %1305
  store double %1281, double* %1306, align 8
  %1307 = load %struct.block*, %struct.block** %32, align 8
  %1308 = getelementptr inbounds %struct.block, %struct.block* %1307, i64 0, i32 11
  %1309 = load double****, double***** %1308, align 8
  %1310 = getelementptr inbounds double***, double**** %1309, i64 %1053
  %1311 = load double***, double**** %1310, align 8
  %1312 = getelementptr inbounds double**, double*** %1311, i64 %1055
  %1313 = load double**, double*** %1312, align 8
  %1314 = getelementptr inbounds double*, double** %1313, i64 %1248
  %1315 = load double*, double** %1314, align 8
  %1316 = shl nsw i32 %storemerge39, 1
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds double, double* %1315, i64 %1317
  store double %1281, double* %1318, align 8
  %1319 = load %struct.block*, %struct.block** %32, align 8
  %1320 = getelementptr inbounds %struct.block, %struct.block* %1319, i64 0, i32 11
  %1321 = load double****, double***** %1320, align 8
  %1322 = getelementptr inbounds double***, double**** %1321, i64 %1057
  %1323 = load double***, double**** %1322, align 8
  %1324 = getelementptr inbounds double**, double*** %1323, i64 %1059
  %1325 = load double**, double*** %1324, align 8
  %1326 = getelementptr inbounds double*, double** %1325, i64 %1251
  %1327 = load double*, double** %1326, align 8
  %1328 = shl nsw i32 %storemerge39, 1
  %1329 = add nsw i32 %1328, -1
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds double, double* %1327, i64 %1330
  store double %1281, double* %1331, align 8
  %1332 = load %struct.block*, %struct.block** %32, align 8
  %1333 = getelementptr inbounds %struct.block, %struct.block* %1332, i64 0, i32 11
  %1334 = load double****, double***** %1333, align 8
  %1335 = getelementptr inbounds double***, double**** %1334, i64 %1061
  %1336 = load double***, double**** %1335, align 8
  %1337 = getelementptr inbounds double**, double*** %1336, i64 %1063
  %1338 = load double**, double*** %1337, align 8
  %1339 = getelementptr inbounds double*, double** %1338, i64 %1254
  %1340 = load double*, double** %1339, align 8
  %1341 = shl nsw i32 %storemerge39, 1
  %1342 = add nsw i32 %1341, -1
  %1343 = sext i32 %1342 to i64
  %1344 = getelementptr inbounds double, double* %1340, i64 %1343
  %1345 = load double, double* %1344, align 8
  %1346 = load %struct.block*, %struct.block** %32, align 8
  %1347 = getelementptr inbounds %struct.block, %struct.block* %1346, i64 0, i32 11
  %1348 = load double****, double***** %1347, align 8
  %1349 = getelementptr inbounds double***, double**** %1348, i64 %1065
  %1350 = load double***, double**** %1349, align 8
  %1351 = getelementptr inbounds double**, double*** %1350, i64 %1067
  %1352 = load double**, double*** %1351, align 8
  %1353 = getelementptr inbounds double*, double** %1352, i64 %1257
  %1354 = load double*, double** %1353, align 8
  %1355 = shl nsw i32 %storemerge39, 1
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds double, double* %1354, i64 %1356
  %1358 = load double, double* %1357, align 8
  %1359 = fadd double %1345, %1358
  %1360 = load %struct.block*, %struct.block** %32, align 8
  %1361 = getelementptr inbounds %struct.block, %struct.block* %1360, i64 0, i32 11
  %1362 = load double****, double***** %1361, align 8
  %1363 = getelementptr inbounds double***, double**** %1362, i64 %1069
  %1364 = load double***, double**** %1363, align 8
  %1365 = getelementptr inbounds double**, double*** %1364, i64 %1071
  %1366 = load double**, double*** %1365, align 8
  %1367 = getelementptr inbounds double*, double** %1366, i64 %1259
  %1368 = load double*, double** %1367, align 8
  %1369 = shl nsw i32 %storemerge39, 1
  %1370 = add nsw i32 %1369, -1
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds double, double* %1368, i64 %1371
  %1373 = load double, double* %1372, align 8
  %1374 = fadd double %1359, %1373
  %1375 = load %struct.block*, %struct.block** %32, align 8
  %1376 = getelementptr inbounds %struct.block, %struct.block* %1375, i64 0, i32 11
  %1377 = load double****, double***** %1376, align 8
  %1378 = getelementptr inbounds double***, double**** %1377, i64 %1073
  %1379 = load double***, double**** %1378, align 8
  %1380 = getelementptr inbounds double**, double*** %1379, i64 %1075
  %1381 = load double**, double*** %1380, align 8
  %1382 = getelementptr inbounds double*, double** %1381, i64 %1261
  %1383 = load double*, double** %1382, align 8
  %1384 = shl nsw i32 %storemerge39, 1
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds double, double* %1383, i64 %1385
  %1387 = load double, double* %1386, align 8
  %1388 = fadd double %1374, %1387
  %1389 = load %struct.block*, %struct.block** %31, align 8
  %1390 = getelementptr inbounds %struct.block, %struct.block* %1389, i64 0, i32 11
  %1391 = load double****, double***** %1390, align 8
  %1392 = getelementptr inbounds double***, double**** %1391, i64 %1077
  %1393 = load double***, double**** %1392, align 8
  %1394 = getelementptr inbounds double**, double*** %1393, i64 %1079
  %1395 = load double**, double*** %1394, align 8
  %1396 = getelementptr inbounds double*, double** %1395, i64 %1263
  %1397 = load double*, double** %1396, align 8
  %1398 = add nsw i32 %storemerge39, %1081
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds double, double* %1397, i64 %1399
  store double %1388, double* %1400, align 8
  %1401 = add nsw i32 %storemerge39, 1
  br label %1264

; <label>:1402:                                   ; preds = %1264
  store i32 %storemerge39, i32* %17, align 4
  %1403 = load %struct.block*, %struct.block** %31, align 8
  %1404 = getelementptr inbounds %struct.block, %struct.block* %1403, i64 0, i32 11
  %1405 = load double****, double***** %1404, align 8
  %1406 = getelementptr inbounds double***, double**** %1405, i64 %1102
  %1407 = load double***, double**** %1406, align 8
  %1408 = getelementptr inbounds double**, double*** %1407, i64 %1104
  %1409 = load double**, double*** %1408, align 8
  %1410 = add nsw i32 %storemerge36, %1105
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds double*, double** %1409, i64 %1411
  %1413 = load double*, double** %1412, align 8
  %1414 = getelementptr inbounds double, double* %1413, i64 %1109
  %1415 = load double, double* %1414, align 8
  %1416 = fmul double %1415, 2.500000e-01
  %1417 = load %struct.block*, %struct.block** %32, align 8
  %1418 = getelementptr inbounds %struct.block, %struct.block* %1417, i64 0, i32 11
  %1419 = load double****, double***** %1418, align 8
  %1420 = getelementptr inbounds double***, double**** %1419, i64 %1111
  %1421 = load double***, double**** %1420, align 8
  %1422 = getelementptr inbounds double**, double*** %1421, i64 %1113
  %1423 = load double**, double*** %1422, align 8
  %1424 = shl nsw i32 %storemerge36, 1
  %1425 = sext i32 %1424 to i64
  %1426 = getelementptr inbounds double*, double** %1423, i64 %1425
  %1427 = load double*, double** %1426, align 8
  %1428 = getelementptr inbounds double, double* %1427, i64 %1115
  store double %1416, double* %1428, align 8
  %1429 = load %struct.block*, %struct.block** %32, align 8
  %1430 = getelementptr inbounds %struct.block, %struct.block* %1429, i64 0, i32 11
  %1431 = load double****, double***** %1430, align 8
  %1432 = getelementptr inbounds double***, double**** %1431, i64 %1117
  %1433 = load double***, double**** %1432, align 8
  %1434 = getelementptr inbounds double**, double*** %1433, i64 %1119
  %1435 = load double**, double*** %1434, align 8
  %1436 = shl nsw i32 %storemerge36, 1
  %1437 = add nsw i32 %1436, -1
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds double*, double** %1435, i64 %1438
  %1440 = load double*, double** %1439, align 8
  %1441 = getelementptr inbounds double, double* %1440, i64 %1121
  store double %1416, double* %1441, align 8
  %1442 = add nsw i32 %storemerge36, 1
  br label %1122

; <label>:1443:                                   ; preds = %1122
  store i32 %storemerge36, i32* %16, align 4
  %1444 = load %struct.block*, %struct.block** %31, align 8
  %1445 = getelementptr inbounds %struct.block, %struct.block* %1444, i64 0, i32 11
  %1446 = load double****, double***** %1445, align 8
  %1447 = load i32, i32* %18, align 4
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds double***, double**** %1446, i64 %1448
  %1450 = load double***, double**** %1449, align 8
  %1451 = load i32, i32* %20, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = getelementptr inbounds double**, double*** %1450, i64 %1452
  %1454 = load double**, double*** %1453, align 8
  %1455 = load i32, i32* %26, align 4
  %1456 = load i32, i32* %24, align 4
  %1457 = add nsw i32 %1455, %1456
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds double*, double** %1454, i64 %1458
  %1460 = load double*, double** %1459, align 8
  %1461 = load i32, i32* %28, align 4
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds double, double* %1460, i64 %1462
  %1464 = load double, double* %1463, align 8
  %1465 = fmul double %1464, 2.500000e-01
  %1466 = load %struct.block*, %struct.block** %32, align 8
  %1467 = getelementptr inbounds %struct.block, %struct.block* %1466, i64 0, i32 11
  %1468 = load double****, double***** %1467, align 8
  %1469 = load i32, i32* %18, align 4
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds double***, double**** %1468, i64 %1470
  %1472 = load double***, double**** %1471, align 8
  %1473 = load i32, i32* %21, align 4
  %1474 = sext i32 %1473 to i64
  %1475 = getelementptr inbounds double**, double*** %1472, i64 %1474
  %1476 = load double**, double*** %1475, align 8
  %1477 = load i32, i32* %25, align 4
  %1478 = sext i32 %1477 to i64
  %1479 = getelementptr inbounds double*, double** %1476, i64 %1478
  %1480 = load double*, double** %1479, align 8
  store double %1465, double* %1480, align 8
  %1481 = load i32, i32* %18, align 4
  %1482 = sext i32 %1481 to i64
  %1483 = load i32, i32* %20, align 4
  %1484 = sext i32 %1483 to i64
  %1485 = load i32, i32* %26, align 4
  %1486 = load i32, i32* %24, align 4
  %1487 = add nsw i32 %1485, %1486
  %1488 = sext i32 %1487 to i64
  %1489 = load i32, i32* %28, align 4
  %1490 = load i32, i32* %18, align 4
  %1491 = sext i32 %1490 to i64
  %1492 = load i32, i32* %21, align 4
  %1493 = sext i32 %1492 to i64
  %1494 = load i32, i32* %25, align 4
  %1495 = sext i32 %1494 to i64
  %1496 = load i32, i32* %18, align 4
  %1497 = sext i32 %1496 to i64
  %1498 = load i32, i32* %21, align 4
  %1499 = sext i32 %1498 to i64
  %1500 = load i32, i32* %25, align 4
  %1501 = sext i32 %1500 to i64
  br label %1502

; <label>:1502:                                   ; preds = %1505, %1443
  %storemerge37 = phi i32 [ 1, %1443 ], [ %1545, %1505 ]
  %1503 = load i32, i32* @z_block_half, align 4
  %1504 = icmp sgt i32 %storemerge37, %1503
  br i1 %1504, label %1546, label %1505

; <label>:1505:                                   ; preds = %1502
  %1506 = load %struct.block*, %struct.block** %31, align 8
  %1507 = getelementptr inbounds %struct.block, %struct.block* %1506, i64 0, i32 11
  %1508 = load double****, double***** %1507, align 8
  %1509 = getelementptr inbounds double***, double**** %1508, i64 %1482
  %1510 = load double***, double**** %1509, align 8
  %1511 = getelementptr inbounds double**, double*** %1510, i64 %1484
  %1512 = load double**, double*** %1511, align 8
  %1513 = getelementptr inbounds double*, double** %1512, i64 %1488
  %1514 = load double*, double** %1513, align 8
  %1515 = add nsw i32 %storemerge37, %1489
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds double, double* %1514, i64 %1516
  %1518 = load double, double* %1517, align 8
  %1519 = fmul double %1518, 2.500000e-01
  %1520 = load %struct.block*, %struct.block** %32, align 8
  %1521 = getelementptr inbounds %struct.block, %struct.block* %1520, i64 0, i32 11
  %1522 = load double****, double***** %1521, align 8
  %1523 = getelementptr inbounds double***, double**** %1522, i64 %1491
  %1524 = load double***, double**** %1523, align 8
  %1525 = getelementptr inbounds double**, double*** %1524, i64 %1493
  %1526 = load double**, double*** %1525, align 8
  %1527 = getelementptr inbounds double*, double** %1526, i64 %1495
  %1528 = load double*, double** %1527, align 8
  %1529 = shl nsw i32 %storemerge37, 1
  %1530 = sext i32 %1529 to i64
  %1531 = getelementptr inbounds double, double* %1528, i64 %1530
  store double %1519, double* %1531, align 8
  %1532 = load %struct.block*, %struct.block** %32, align 8
  %1533 = getelementptr inbounds %struct.block, %struct.block* %1532, i64 0, i32 11
  %1534 = load double****, double***** %1533, align 8
  %1535 = getelementptr inbounds double***, double**** %1534, i64 %1497
  %1536 = load double***, double**** %1535, align 8
  %1537 = getelementptr inbounds double**, double*** %1536, i64 %1499
  %1538 = load double**, double*** %1537, align 8
  %1539 = getelementptr inbounds double*, double** %1538, i64 %1501
  %1540 = load double*, double** %1539, align 8
  %1541 = shl nsw i32 %storemerge37, 1
  %1542 = add nsw i32 %1541, -1
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds double, double* %1540, i64 %1543
  store double %1519, double* %1544, align 8
  %1545 = add nsw i32 %storemerge37, 1
  br label %1502

; <label>:1546:                                   ; preds = %1502
  store i32 %storemerge37, i32* %17, align 4
  %1547 = load %struct.block*, %struct.block** %31, align 8
  %1548 = getelementptr inbounds %struct.block, %struct.block* %1547, i64 0, i32 11
  %1549 = load double****, double***** %1548, align 8
  %1550 = load i32, i32* %18, align 4
  %1551 = sext i32 %1550 to i64
  %1552 = getelementptr inbounds double***, double**** %1549, i64 %1551
  %1553 = load double***, double**** %1552, align 8
  %1554 = load i32, i32* %20, align 4
  %1555 = sext i32 %1554 to i64
  %1556 = getelementptr inbounds double**, double*** %1553, i64 %1555
  %1557 = load double**, double*** %1556, align 8
  %1558 = load i32, i32* %26, align 4
  %1559 = load i32, i32* %24, align 4
  %1560 = add nsw i32 %1558, %1559
  %1561 = sext i32 %1560 to i64
  %1562 = getelementptr inbounds double*, double** %1557, i64 %1561
  %1563 = load double*, double** %1562, align 8
  %1564 = load i32, i32* %30, align 4
  %1565 = load i32, i32* %28, align 4
  %1566 = add nsw i32 %1564, %1565
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds double, double* %1563, i64 %1567
  %1569 = load double, double* %1568, align 8
  %1570 = fmul double %1569, 2.500000e-01
  %1571 = load %struct.block*, %struct.block** %32, align 8
  %1572 = getelementptr inbounds %struct.block, %struct.block* %1571, i64 0, i32 11
  %1573 = load double****, double***** %1572, align 8
  %1574 = load i32, i32* %18, align 4
  %1575 = sext i32 %1574 to i64
  %1576 = getelementptr inbounds double***, double**** %1573, i64 %1575
  %1577 = load double***, double**** %1576, align 8
  %1578 = load i32, i32* %21, align 4
  %1579 = sext i32 %1578 to i64
  %1580 = getelementptr inbounds double**, double*** %1577, i64 %1579
  %1581 = load double**, double*** %1580, align 8
  %1582 = load i32, i32* %25, align 4
  %1583 = sext i32 %1582 to i64
  %1584 = getelementptr inbounds double*, double** %1581, i64 %1583
  %1585 = load double*, double** %1584, align 8
  %1586 = load i32, i32* %29, align 4
  %1587 = sext i32 %1586 to i64
  %1588 = getelementptr inbounds double, double* %1585, i64 %1587
  store double %1570, double* %1588, align 8
  %1589 = load i32, i32* %12, align 4
  %1590 = icmp eq i32 %1589, 1
  br i1 %1590, label %1591, label %1720

; <label>:1591:                                   ; preds = %1546
  %1592 = load i32, i32* %11, align 4
  %1593 = icmp eq i32 %1592, 0
  %1594 = load %struct.block*, %struct.block** %32, align 8
  %1595 = getelementptr inbounds %struct.block, %struct.block* %1594, i64 0, i32 11
  %1596 = load double****, double***** %1595, align 8
  %1597 = load i32, i32* %18, align 4
  %1598 = sext i32 %1597 to i64
  %1599 = getelementptr inbounds double***, double**** %1596, i64 %1598
  %1600 = load double***, double**** %1599, align 8
  %1601 = load i32, i32* %22, align 4
  %1602 = sext i32 %1601 to i64
  %1603 = getelementptr inbounds double**, double*** %1600, i64 %1602
  %1604 = load double**, double*** %1603, align 8
  %1605 = load i32, i32* %25, align 4
  %1606 = sext i32 %1605 to i64
  %1607 = getelementptr inbounds double*, double** %1604, i64 %1606
  br i1 %1593, label %1608, label %1628

; <label>:1608:                                   ; preds = %1591
  %1609 = bitcast double** %1607 to i64**
  %1610 = load i64*, i64** %1609, align 8
  %1611 = load i64, i64* %1610, align 8
  %1612 = load %struct.block*, %struct.block** %31, align 8
  %1613 = getelementptr inbounds %struct.block, %struct.block* %1612, i64 0, i32 11
  %1614 = load double****, double***** %1613, align 8
  %1615 = load i32, i32* %18, align 4
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds double***, double**** %1614, i64 %1616
  %1618 = load double***, double**** %1617, align 8
  %1619 = load i32, i32* %19, align 4
  %1620 = sext i32 %1619 to i64
  %1621 = getelementptr inbounds double**, double*** %1618, i64 %1620
  %1622 = load double**, double*** %1621, align 8
  %1623 = load i32, i32* %25, align 4
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds double*, double** %1622, i64 %1624
  %1626 = bitcast double** %1625 to i64**
  %1627 = load i64*, i64** %1626, align 8
  store i64 %1611, i64* %1627, align 8
  br label %1654

; <label>:1628:                                   ; preds = %1591
  %1629 = load double*, double** %1607, align 8
  %1630 = load i32, i32* %29, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds double, double* %1629, i64 %1631
  %1633 = bitcast double* %1632 to i64*
  %1634 = load i64, i64* %1633, align 8
  %1635 = load %struct.block*, %struct.block** %31, align 8
  %1636 = getelementptr inbounds %struct.block, %struct.block* %1635, i64 0, i32 11
  %1637 = load double****, double***** %1636, align 8
  %1638 = load i32, i32* %18, align 4
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds double***, double**** %1637, i64 %1639
  %1641 = load double***, double**** %1640, align 8
  %1642 = load i32, i32* %19, align 4
  %1643 = sext i32 %1642 to i64
  %1644 = getelementptr inbounds double**, double*** %1641, i64 %1643
  %1645 = load double**, double*** %1644, align 8
  %1646 = load i32, i32* %25, align 4
  %1647 = sext i32 %1646 to i64
  %1648 = getelementptr inbounds double*, double** %1645, i64 %1647
  %1649 = load double*, double** %1648, align 8
  %1650 = load i32, i32* %29, align 4
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds double, double* %1649, i64 %1651
  %1653 = bitcast double* %1652 to i64*
  store i64 %1634, i64* %1653, align 8
  br label %1654

; <label>:1654:                                   ; preds = %1628, %1608
  %1655 = load i32, i32* %18, align 4
  %1656 = sext i32 %1655 to i64
  %1657 = load i32, i32* %22, align 4
  %1658 = sext i32 %1657 to i64
  %1659 = load i32, i32* %25, align 4
  %1660 = sext i32 %1659 to i64
  %1661 = load i32, i32* %18, align 4
  %1662 = sext i32 %1661 to i64
  %1663 = load i32, i32* %22, align 4
  %1664 = sext i32 %1663 to i64
  %1665 = load i32, i32* %25, align 4
  %1666 = sext i32 %1665 to i64
  %1667 = load i32, i32* %18, align 4
  %1668 = sext i32 %1667 to i64
  %1669 = load i32, i32* %19, align 4
  %1670 = sext i32 %1669 to i64
  %1671 = load i32, i32* %25, align 4
  %1672 = sext i32 %1671 to i64
  %1673 = load i32, i32* %28, align 4
  br label %1674

; <label>:1674:                                   ; preds = %1677, %1654
  %storemerge38 = phi i32 [ 1, %1654 ], [ %1718, %1677 ]
  %1675 = load i32, i32* @z_block_half, align 4
  %1676 = icmp sgt i32 %storemerge38, %1675
  br i1 %1676, label %1719, label %1677

; <label>:1677:                                   ; preds = %1674
  %1678 = load %struct.block*, %struct.block** %32, align 8
  %1679 = getelementptr inbounds %struct.block, %struct.block* %1678, i64 0, i32 11
  %1680 = load double****, double***** %1679, align 8
  %1681 = getelementptr inbounds double***, double**** %1680, i64 %1656
  %1682 = load double***, double**** %1681, align 8
  %1683 = getelementptr inbounds double**, double*** %1682, i64 %1658
  %1684 = load double**, double*** %1683, align 8
  %1685 = getelementptr inbounds double*, double** %1684, i64 %1660
  %1686 = load double*, double** %1685, align 8
  %1687 = shl nsw i32 %storemerge38, 1
  %1688 = add nsw i32 %1687, -1
  %1689 = sext i32 %1688 to i64
  %1690 = getelementptr inbounds double, double* %1686, i64 %1689
  %1691 = load double, double* %1690, align 8
  %1692 = load %struct.block*, %struct.block** %32, align 8
  %1693 = getelementptr inbounds %struct.block, %struct.block* %1692, i64 0, i32 11
  %1694 = load double****, double***** %1693, align 8
  %1695 = getelementptr inbounds double***, double**** %1694, i64 %1662
  %1696 = load double***, double**** %1695, align 8
  %1697 = getelementptr inbounds double**, double*** %1696, i64 %1664
  %1698 = load double**, double*** %1697, align 8
  %1699 = getelementptr inbounds double*, double** %1698, i64 %1666
  %1700 = load double*, double** %1699, align 8
  %1701 = shl nsw i32 %storemerge38, 1
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds double, double* %1700, i64 %1702
  %1704 = load double, double* %1703, align 8
  %1705 = fadd double %1691, %1704
  %1706 = load %struct.block*, %struct.block** %31, align 8
  %1707 = getelementptr inbounds %struct.block, %struct.block* %1706, i64 0, i32 11
  %1708 = load double****, double***** %1707, align 8
  %1709 = getelementptr inbounds double***, double**** %1708, i64 %1668
  %1710 = load double***, double**** %1709, align 8
  %1711 = getelementptr inbounds double**, double*** %1710, i64 %1670
  %1712 = load double**, double*** %1711, align 8
  %1713 = getelementptr inbounds double*, double** %1712, i64 %1672
  %1714 = load double*, double** %1713, align 8
  %1715 = add nsw i32 %storemerge38, %1673
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds double, double* %1714, i64 %1716
  store double %1705, double* %1717, align 8
  %1718 = add nsw i32 %storemerge38, 1
  br label %1674

; <label>:1719:                                   ; preds = %1674
  store i32 %storemerge38, i32* %17, align 4
  br label %1720

; <label>:1720:                                   ; preds = %1546, %1719
  %1721 = load i32, i32* %18, align 4
  %1722 = add nsw i32 %1721, 1
  br label %760

; <label>:1723:                                   ; preds = %735
  %1724 = and i32 %44, -2
  %1725 = icmp eq i32 %1724, 2
  %1726 = load i32, i32* %10, align 4
  br i1 %1725, label %1727, label %2713

; <label>:1727:                                   ; preds = %1723
  %1728 = icmp eq i32 %1726, 2
  br i1 %1728, label %1729, label %1732

; <label>:1729:                                   ; preds = %1727
  store i32 0, i32* %23, align 4
  store i32 1, i32* %24, align 4
  %1730 = load i32, i32* @y_block_size, align 4
  %1731 = add nsw i32 %1730, 1
  br label %1735

; <label>:1732:                                   ; preds = %1727
  %1733 = load i32, i32* @y_block_size, align 4
  %1734 = add nsw i32 %1733, 1
  store i32 %1734, i32* %23, align 4
  store i32 %1733, i32* %24, align 4
  br label %1735

; <label>:1735:                                   ; preds = %1732, %1729
  %storemerge42 = phi i32 [ 0, %1732 ], [ %1731, %1729 ]
  %storemerge25 = phi i32 [ 1, %1732 ], [ %1730, %1729 ]
  store i32 %storemerge42, i32* %25, align 4
  store i32 %storemerge25, i32* %26, align 4
  %1736 = load i32, i32* %12, align 4
  %1737 = load i32, i32* @x_block_half, align 4
  %1738 = mul nsw i32 %1736, %1737
  store i32 %1738, i32* %20, align 4
  %1739 = load i32, i32* %11, align 4
  %1740 = load i32, i32* @z_block_half, align 4
  %1741 = mul nsw i32 %1739, %1740
  store i32 %1741, i32* %28, align 4
  %1742 = load i32, i32* @x_block_size, align 4
  %1743 = add nsw i32 %1742, 1
  store i32 %1743, i32* %21, align 4
  %1744 = load i32, i32* @x_block_half, align 4
  %1745 = add nsw i32 %1744, 1
  store i32 %1745, i32* %22, align 4
  %1746 = load i32, i32* @z_block_size, align 4
  %1747 = add nsw i32 %1746, 1
  store i32 %1747, i32* %29, align 4
  %1748 = load i32, i32* @z_block_half, align 4
  %1749 = add nsw i32 %1748, 1
  store i32 %1749, i32* %30, align 4
  %1750 = load i32, i32* %13, align 4
  br label %1751

; <label>:1751:                                   ; preds = %2710, %1735
  %storemerge26 = phi i32 [ %1750, %1735 ], [ %2712, %2710 ]
  store i32 %storemerge26, i32* %18, align 4
  %1752 = load i32, i32* %13, align 4
  %1753 = load i32, i32* %14, align 4
  %1754 = add nsw i32 %1752, %1753
  %1755 = icmp slt i32 %storemerge26, %1754
  br i1 %1755, label %1756, label %3709

; <label>:1756:                                   ; preds = %1751
  %1757 = load %struct.block*, %struct.block** %31, align 8
  %1758 = getelementptr inbounds %struct.block, %struct.block* %1757, i64 0, i32 11
  %1759 = load double****, double***** %1758, align 8
  %1760 = load i32, i32* %18, align 4
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds double***, double**** %1759, i64 %1761
  %1763 = load double***, double**** %1762, align 8
  %1764 = load i32, i32* %20, align 4
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds double**, double*** %1763, i64 %1765
  %1767 = load double**, double*** %1766, align 8
  %1768 = load i32, i32* %24, align 4
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds double*, double** %1767, i64 %1769
  %1771 = load double*, double** %1770, align 8
  %1772 = load i32, i32* %28, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = getelementptr inbounds double, double* %1771, i64 %1773
  %1775 = load double, double* %1774, align 8
  %1776 = fmul double %1775, 2.500000e-01
  %1777 = load %struct.block*, %struct.block** %32, align 8
  %1778 = getelementptr inbounds %struct.block, %struct.block* %1777, i64 0, i32 11
  %1779 = load double****, double***** %1778, align 8
  %1780 = load i32, i32* %18, align 4
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds double***, double**** %1779, i64 %1781
  %1783 = load double***, double**** %1782, align 8
  %1784 = load double**, double*** %1783, align 8
  %1785 = load i32, i32* %25, align 4
  %1786 = sext i32 %1785 to i64
  %1787 = getelementptr inbounds double*, double** %1784, i64 %1786
  %1788 = load double*, double** %1787, align 8
  store double %1776, double* %1788, align 8
  %1789 = load i32, i32* %18, align 4
  %1790 = sext i32 %1789 to i64
  %1791 = load i32, i32* %20, align 4
  %1792 = sext i32 %1791 to i64
  %1793 = load i32, i32* %24, align 4
  %1794 = sext i32 %1793 to i64
  %1795 = load i32, i32* %28, align 4
  %1796 = load i32, i32* %18, align 4
  %1797 = sext i32 %1796 to i64
  %1798 = load i32, i32* %25, align 4
  %1799 = sext i32 %1798 to i64
  %1800 = load i32, i32* %18, align 4
  %1801 = sext i32 %1800 to i64
  %1802 = load i32, i32* %25, align 4
  %1803 = sext i32 %1802 to i64
  br label %1804

; <label>:1804:                                   ; preds = %1807, %1756
  %storemerge27 = phi i32 [ 1, %1756 ], [ %1845, %1807 ]
  %1805 = load i32, i32* @z_block_half, align 4
  %1806 = icmp sgt i32 %storemerge27, %1805
  br i1 %1806, label %1846, label %1807

; <label>:1807:                                   ; preds = %1804
  %1808 = load %struct.block*, %struct.block** %31, align 8
  %1809 = getelementptr inbounds %struct.block, %struct.block* %1808, i64 0, i32 11
  %1810 = load double****, double***** %1809, align 8
  %1811 = getelementptr inbounds double***, double**** %1810, i64 %1790
  %1812 = load double***, double**** %1811, align 8
  %1813 = getelementptr inbounds double**, double*** %1812, i64 %1792
  %1814 = load double**, double*** %1813, align 8
  %1815 = getelementptr inbounds double*, double** %1814, i64 %1794
  %1816 = load double*, double** %1815, align 8
  %1817 = add nsw i32 %storemerge27, %1795
  %1818 = sext i32 %1817 to i64
  %1819 = getelementptr inbounds double, double* %1816, i64 %1818
  %1820 = load double, double* %1819, align 8
  %1821 = fmul double %1820, 2.500000e-01
  %1822 = load %struct.block*, %struct.block** %32, align 8
  %1823 = getelementptr inbounds %struct.block, %struct.block* %1822, i64 0, i32 11
  %1824 = load double****, double***** %1823, align 8
  %1825 = getelementptr inbounds double***, double**** %1824, i64 %1797
  %1826 = load double***, double**** %1825, align 8
  %1827 = load double**, double*** %1826, align 8
  %1828 = getelementptr inbounds double*, double** %1827, i64 %1799
  %1829 = load double*, double** %1828, align 8
  %1830 = shl nsw i32 %storemerge27, 1
  %1831 = sext i32 %1830 to i64
  %1832 = getelementptr inbounds double, double* %1829, i64 %1831
  store double %1821, double* %1832, align 8
  %1833 = load %struct.block*, %struct.block** %32, align 8
  %1834 = getelementptr inbounds %struct.block, %struct.block* %1833, i64 0, i32 11
  %1835 = load double****, double***** %1834, align 8
  %1836 = getelementptr inbounds double***, double**** %1835, i64 %1801
  %1837 = load double***, double**** %1836, align 8
  %1838 = load double**, double*** %1837, align 8
  %1839 = getelementptr inbounds double*, double** %1838, i64 %1803
  %1840 = load double*, double** %1839, align 8
  %1841 = shl nsw i32 %storemerge27, 1
  %1842 = add nsw i32 %1841, -1
  %1843 = sext i32 %1842 to i64
  %1844 = getelementptr inbounds double, double* %1840, i64 %1843
  store double %1821, double* %1844, align 8
  %1845 = add nsw i32 %storemerge27, 1
  br label %1804

; <label>:1846:                                   ; preds = %1804
  store i32 %storemerge27, i32* %17, align 4
  %1847 = load %struct.block*, %struct.block** %31, align 8
  %1848 = getelementptr inbounds %struct.block, %struct.block* %1847, i64 0, i32 11
  %1849 = load double****, double***** %1848, align 8
  %1850 = load i32, i32* %18, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = getelementptr inbounds double***, double**** %1849, i64 %1851
  %1853 = load double***, double**** %1852, align 8
  %1854 = load i32, i32* %20, align 4
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds double**, double*** %1853, i64 %1855
  %1857 = load double**, double*** %1856, align 8
  %1858 = load i32, i32* %24, align 4
  %1859 = sext i32 %1858 to i64
  %1860 = getelementptr inbounds double*, double** %1857, i64 %1859
  %1861 = load double*, double** %1860, align 8
  %1862 = load i32, i32* %30, align 4
  %1863 = load i32, i32* %28, align 4
  %1864 = add nsw i32 %1862, %1863
  %1865 = sext i32 %1864 to i64
  %1866 = getelementptr inbounds double, double* %1861, i64 %1865
  %1867 = load double, double* %1866, align 8
  %1868 = fmul double %1867, 2.500000e-01
  %1869 = load %struct.block*, %struct.block** %32, align 8
  %1870 = getelementptr inbounds %struct.block, %struct.block* %1869, i64 0, i32 11
  %1871 = load double****, double***** %1870, align 8
  %1872 = load i32, i32* %18, align 4
  %1873 = sext i32 %1872 to i64
  %1874 = getelementptr inbounds double***, double**** %1871, i64 %1873
  %1875 = load double***, double**** %1874, align 8
  %1876 = load double**, double*** %1875, align 8
  %1877 = load i32, i32* %25, align 4
  %1878 = sext i32 %1877 to i64
  %1879 = getelementptr inbounds double*, double** %1876, i64 %1878
  %1880 = load double*, double** %1879, align 8
  %1881 = load i32, i32* %29, align 4
  %1882 = sext i32 %1881 to i64
  %1883 = getelementptr inbounds double, double* %1880, i64 %1882
  store double %1868, double* %1883, align 8
  %1884 = load i32, i32* %12, align 4
  %1885 = icmp eq i32 %1884, 0
  br i1 %1885, label %1886, label %1997

; <label>:1886:                                   ; preds = %1846
  %1887 = load i32, i32* %11, align 4
  %1888 = icmp eq i32 %1887, 0
  %1889 = load %struct.block*, %struct.block** %32, align 8
  %1890 = getelementptr inbounds %struct.block, %struct.block* %1889, i64 0, i32 11
  %1891 = load double****, double***** %1890, align 8
  %1892 = load i32, i32* %18, align 4
  %1893 = sext i32 %1892 to i64
  %1894 = getelementptr inbounds double***, double**** %1891, i64 %1893
  %1895 = load double***, double**** %1894, align 8
  %1896 = load double**, double*** %1895, align 8
  %1897 = load i32, i32* %26, align 4
  %1898 = sext i32 %1897 to i64
  %1899 = getelementptr inbounds double*, double** %1896, i64 %1898
  br i1 %1888, label %1900, label %1917

; <label>:1900:                                   ; preds = %1886
  %1901 = bitcast double** %1899 to i64**
  %1902 = load i64*, i64** %1901, align 8
  %1903 = load i64, i64* %1902, align 8
  %1904 = load %struct.block*, %struct.block** %31, align 8
  %1905 = getelementptr inbounds %struct.block, %struct.block* %1904, i64 0, i32 11
  %1906 = load double****, double***** %1905, align 8
  %1907 = load i32, i32* %18, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = getelementptr inbounds double***, double**** %1906, i64 %1908
  %1910 = load double***, double**** %1909, align 8
  %1911 = load double**, double*** %1910, align 8
  %1912 = load i32, i32* %23, align 4
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds double*, double** %1911, i64 %1913
  %1915 = bitcast double** %1914 to i64**
  %1916 = load i64*, i64** %1915, align 8
  store i64 %1903, i64* %1916, align 8
  br label %1940

; <label>:1917:                                   ; preds = %1886
  %1918 = load double*, double** %1899, align 8
  %1919 = load i32, i32* %29, align 4
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds double, double* %1918, i64 %1920
  %1922 = bitcast double* %1921 to i64*
  %1923 = load i64, i64* %1922, align 8
  %1924 = load %struct.block*, %struct.block** %31, align 8
  %1925 = getelementptr inbounds %struct.block, %struct.block* %1924, i64 0, i32 11
  %1926 = load double****, double***** %1925, align 8
  %1927 = load i32, i32* %18, align 4
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds double***, double**** %1926, i64 %1928
  %1930 = load double***, double**** %1929, align 8
  %1931 = load double**, double*** %1930, align 8
  %1932 = load i32, i32* %23, align 4
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds double*, double** %1931, i64 %1933
  %1935 = load double*, double** %1934, align 8
  %1936 = load i32, i32* %29, align 4
  %1937 = sext i32 %1936 to i64
  %1938 = getelementptr inbounds double, double* %1935, i64 %1937
  %1939 = bitcast double* %1938 to i64*
  store i64 %1923, i64* %1939, align 8
  br label %1940

; <label>:1940:                                   ; preds = %1917, %1900
  %1941 = load i32, i32* %18, align 4
  %1942 = sext i32 %1941 to i64
  %1943 = load i32, i32* %26, align 4
  %1944 = sext i32 %1943 to i64
  %1945 = load i32, i32* %18, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = load i32, i32* %26, align 4
  %1948 = sext i32 %1947 to i64
  %1949 = load i32, i32* %18, align 4
  %1950 = sext i32 %1949 to i64
  %1951 = load i32, i32* %23, align 4
  %1952 = sext i32 %1951 to i64
  %1953 = load i32, i32* %28, align 4
  br label %1954

; <label>:1954:                                   ; preds = %1957, %1940
  %storemerge32 = phi i32 [ 1, %1940 ], [ %1995, %1957 ]
  %1955 = load i32, i32* @z_block_half, align 4
  %1956 = icmp sgt i32 %storemerge32, %1955
  br i1 %1956, label %1996, label %1957

; <label>:1957:                                   ; preds = %1954
  %1958 = load %struct.block*, %struct.block** %32, align 8
  %1959 = getelementptr inbounds %struct.block, %struct.block* %1958, i64 0, i32 11
  %1960 = load double****, double***** %1959, align 8
  %1961 = getelementptr inbounds double***, double**** %1960, i64 %1942
  %1962 = load double***, double**** %1961, align 8
  %1963 = load double**, double*** %1962, align 8
  %1964 = getelementptr inbounds double*, double** %1963, i64 %1944
  %1965 = load double*, double** %1964, align 8
  %1966 = shl nsw i32 %storemerge32, 1
  %1967 = add nsw i32 %1966, -1
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds double, double* %1965, i64 %1968
  %1970 = load double, double* %1969, align 8
  %1971 = load %struct.block*, %struct.block** %32, align 8
  %1972 = getelementptr inbounds %struct.block, %struct.block* %1971, i64 0, i32 11
  %1973 = load double****, double***** %1972, align 8
  %1974 = getelementptr inbounds double***, double**** %1973, i64 %1946
  %1975 = load double***, double**** %1974, align 8
  %1976 = load double**, double*** %1975, align 8
  %1977 = getelementptr inbounds double*, double** %1976, i64 %1948
  %1978 = load double*, double** %1977, align 8
  %1979 = shl nsw i32 %storemerge32, 1
  %1980 = sext i32 %1979 to i64
  %1981 = getelementptr inbounds double, double* %1978, i64 %1980
  %1982 = load double, double* %1981, align 8
  %1983 = fadd double %1970, %1982
  %1984 = load %struct.block*, %struct.block** %31, align 8
  %1985 = getelementptr inbounds %struct.block, %struct.block* %1984, i64 0, i32 11
  %1986 = load double****, double***** %1985, align 8
  %1987 = getelementptr inbounds double***, double**** %1986, i64 %1950
  %1988 = load double***, double**** %1987, align 8
  %1989 = load double**, double*** %1988, align 8
  %1990 = getelementptr inbounds double*, double** %1989, i64 %1952
  %1991 = load double*, double** %1990, align 8
  %1992 = add nsw i32 %storemerge32, %1953
  %1993 = sext i32 %1992 to i64
  %1994 = getelementptr inbounds double, double* %1991, i64 %1993
  store double %1983, double* %1994, align 8
  %1995 = add nsw i32 %storemerge32, 1
  br label %1954

; <label>:1996:                                   ; preds = %1954
  store i32 %storemerge32, i32* %17, align 4
  br label %1997

; <label>:1997:                                   ; preds = %1996, %1846
  %1998 = load i32, i32* %18, align 4
  %1999 = sext i32 %1998 to i64
  %2000 = load i32, i32* %20, align 4
  %2001 = load i32, i32* %24, align 4
  %2002 = sext i32 %2001 to i64
  %2003 = load i32, i32* %28, align 4
  %2004 = sext i32 %2003 to i64
  %2005 = load i32, i32* %18, align 4
  %2006 = sext i32 %2005 to i64
  %2007 = load i32, i32* %25, align 4
  %2008 = sext i32 %2007 to i64
  %2009 = load i32, i32* %18, align 4
  %2010 = sext i32 %2009 to i64
  %2011 = load i32, i32* %25, align 4
  %2012 = sext i32 %2011 to i64
  %2013 = load i32, i32* %11, align 4
  %2014 = icmp eq i32 %2013, 0
  %2015 = load i32, i32* %18, align 4
  %2016 = sext i32 %2015 to i64
  %2017 = load i32, i32* %26, align 4
  %2018 = sext i32 %2017 to i64
  %2019 = load i32, i32* %18, align 4
  %2020 = sext i32 %2019 to i64
  %2021 = load i32, i32* %26, align 4
  %2022 = sext i32 %2021 to i64
  %2023 = load i32, i32* %18, align 4
  %2024 = sext i32 %2023 to i64
  %2025 = load i32, i32* %20, align 4
  %2026 = load i32, i32* %23, align 4
  %2027 = sext i32 %2026 to i64
  %2028 = load i32, i32* %18, align 4
  %2029 = sext i32 %2028 to i64
  %2030 = load i32, i32* %20, align 4
  %2031 = load i32, i32* %24, align 4
  %2032 = sext i32 %2031 to i64
  %2033 = load i32, i32* %28, align 4
  %2034 = load i32, i32* %18, align 4
  %2035 = sext i32 %2034 to i64
  %2036 = load i32, i32* %25, align 4
  %2037 = sext i32 %2036 to i64
  %2038 = load i32, i32* %18, align 4
  %2039 = sext i32 %2038 to i64
  %2040 = load i32, i32* %25, align 4
  %2041 = sext i32 %2040 to i64
  %2042 = load i32, i32* %18, align 4
  %2043 = sext i32 %2042 to i64
  %2044 = load i32, i32* %25, align 4
  %2045 = sext i32 %2044 to i64
  %2046 = load i32, i32* %18, align 4
  %2047 = sext i32 %2046 to i64
  %2048 = load i32, i32* %25, align 4
  %2049 = sext i32 %2048 to i64
  %2050 = load i32, i32* %18, align 4
  %2051 = sext i32 %2050 to i64
  %2052 = load i32, i32* %26, align 4
  %2053 = sext i32 %2052 to i64
  %2054 = load i32, i32* %18, align 4
  %2055 = sext i32 %2054 to i64
  %2056 = load i32, i32* %26, align 4
  %2057 = sext i32 %2056 to i64
  %2058 = load i32, i32* %18, align 4
  %2059 = sext i32 %2058 to i64
  %2060 = load i32, i32* %26, align 4
  %2061 = sext i32 %2060 to i64
  %2062 = load i32, i32* %18, align 4
  %2063 = sext i32 %2062 to i64
  %2064 = load i32, i32* %26, align 4
  %2065 = sext i32 %2064 to i64
  %2066 = load i32, i32* %18, align 4
  %2067 = sext i32 %2066 to i64
  %2068 = load i32, i32* %20, align 4
  %2069 = load i32, i32* %23, align 4
  %2070 = sext i32 %2069 to i64
  %2071 = load i32, i32* %28, align 4
  %2072 = load i32, i32* %18, align 4
  %2073 = sext i32 %2072 to i64
  %2074 = load i32, i32* %26, align 4
  %2075 = sext i32 %2074 to i64
  %2076 = load i32, i32* %29, align 4
  %2077 = sext i32 %2076 to i64
  %2078 = load i32, i32* %18, align 4
  %2079 = sext i32 %2078 to i64
  %2080 = load i32, i32* %26, align 4
  %2081 = sext i32 %2080 to i64
  %2082 = load i32, i32* %29, align 4
  %2083 = sext i32 %2082 to i64
  %2084 = load i32, i32* %18, align 4
  %2085 = sext i32 %2084 to i64
  %2086 = load i32, i32* %20, align 4
  %2087 = load i32, i32* %23, align 4
  %2088 = sext i32 %2087 to i64
  %2089 = load i32, i32* %29, align 4
  %2090 = sext i32 %2089 to i64
  %2091 = load i32, i32* %18, align 4
  %2092 = sext i32 %2091 to i64
  %2093 = load i32, i32* %20, align 4
  %2094 = load i32, i32* %24, align 4
  %2095 = sext i32 %2094 to i64
  %2096 = load i32, i32* %30, align 4
  %2097 = load i32, i32* %28, align 4
  %2098 = add nsw i32 %2096, %2097
  %2099 = sext i32 %2098 to i64
  %2100 = load i32, i32* %18, align 4
  %2101 = sext i32 %2100 to i64
  %2102 = load i32, i32* %25, align 4
  %2103 = sext i32 %2102 to i64
  %2104 = load i32, i32* %29, align 4
  %2105 = sext i32 %2104 to i64
  %2106 = load i32, i32* %18, align 4
  %2107 = sext i32 %2106 to i64
  %2108 = load i32, i32* %25, align 4
  %2109 = sext i32 %2108 to i64
  %2110 = load i32, i32* %29, align 4
  %2111 = sext i32 %2110 to i64
  br label %2112

; <label>:2112:                                   ; preds = %2392, %1997
  %storemerge28 = phi i32 [ 1, %1997 ], [ %2432, %2392 ]
  %2113 = load i32, i32* @x_block_half, align 4
  %2114 = icmp sgt i32 %storemerge28, %2113
  br i1 %2114, label %2433, label %2115

; <label>:2115:                                   ; preds = %2112
  %2116 = load %struct.block*, %struct.block** %31, align 8
  %2117 = getelementptr inbounds %struct.block, %struct.block* %2116, i64 0, i32 11
  %2118 = load double****, double***** %2117, align 8
  %2119 = getelementptr inbounds double***, double**** %2118, i64 %1999
  %2120 = load double***, double**** %2119, align 8
  %2121 = add nsw i32 %storemerge28, %2000
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds double**, double*** %2120, i64 %2122
  %2124 = load double**, double*** %2123, align 8
  %2125 = getelementptr inbounds double*, double** %2124, i64 %2002
  %2126 = load double*, double** %2125, align 8
  %2127 = getelementptr inbounds double, double* %2126, i64 %2004
  %2128 = load double, double* %2127, align 8
  %2129 = fmul double %2128, 2.500000e-01
  %2130 = load %struct.block*, %struct.block** %32, align 8
  %2131 = getelementptr inbounds %struct.block, %struct.block* %2130, i64 0, i32 11
  %2132 = load double****, double***** %2131, align 8
  %2133 = getelementptr inbounds double***, double**** %2132, i64 %2006
  %2134 = load double***, double**** %2133, align 8
  %2135 = shl nsw i32 %storemerge28, 1
  %2136 = sext i32 %2135 to i64
  %2137 = getelementptr inbounds double**, double*** %2134, i64 %2136
  %2138 = load double**, double*** %2137, align 8
  %2139 = getelementptr inbounds double*, double** %2138, i64 %2008
  %2140 = load double*, double** %2139, align 8
  store double %2129, double* %2140, align 8
  %2141 = load %struct.block*, %struct.block** %32, align 8
  %2142 = getelementptr inbounds %struct.block, %struct.block* %2141, i64 0, i32 11
  %2143 = load double****, double***** %2142, align 8
  %2144 = getelementptr inbounds double***, double**** %2143, i64 %2010
  %2145 = load double***, double**** %2144, align 8
  %2146 = shl nsw i32 %storemerge28, 1
  %2147 = add nsw i32 %2146, -1
  %2148 = sext i32 %2147 to i64
  %2149 = getelementptr inbounds double**, double*** %2145, i64 %2148
  %2150 = load double**, double*** %2149, align 8
  %2151 = getelementptr inbounds double*, double** %2150, i64 %2012
  %2152 = load double*, double** %2151, align 8
  store double %2129, double* %2152, align 8
  %2153 = load %struct.block*, %struct.block** %32, align 8
  %2154 = getelementptr inbounds %struct.block, %struct.block* %2153, i64 0, i32 11
  %2155 = load double****, double***** %2154, align 8
  br i1 %2014, label %2156, label %2191

; <label>:2156:                                   ; preds = %2115
  %2157 = getelementptr inbounds double***, double**** %2155, i64 %2016
  %2158 = load double***, double**** %2157, align 8
  %2159 = shl nsw i32 %storemerge28, 1
  %2160 = add nsw i32 %2159, -1
  %2161 = sext i32 %2160 to i64
  %2162 = getelementptr inbounds double**, double*** %2158, i64 %2161
  %2163 = load double**, double*** %2162, align 8
  %2164 = getelementptr inbounds double*, double** %2163, i64 %2018
  %2165 = load double*, double** %2164, align 8
  %2166 = load double, double* %2165, align 8
  %2167 = load %struct.block*, %struct.block** %32, align 8
  %2168 = getelementptr inbounds %struct.block, %struct.block* %2167, i64 0, i32 11
  %2169 = load double****, double***** %2168, align 8
  %2170 = getelementptr inbounds double***, double**** %2169, i64 %2020
  %2171 = load double***, double**** %2170, align 8
  %2172 = shl nsw i32 %storemerge28, 1
  %2173 = sext i32 %2172 to i64
  %2174 = getelementptr inbounds double**, double*** %2171, i64 %2173
  %2175 = load double**, double*** %2174, align 8
  %2176 = getelementptr inbounds double*, double** %2175, i64 %2022
  %2177 = load double*, double** %2176, align 8
  %2178 = load double, double* %2177, align 8
  %2179 = fadd double %2166, %2178
  %2180 = load %struct.block*, %struct.block** %31, align 8
  %2181 = getelementptr inbounds %struct.block, %struct.block* %2180, i64 0, i32 11
  %2182 = load double****, double***** %2181, align 8
  %2183 = getelementptr inbounds double***, double**** %2182, i64 %2024
  %2184 = load double***, double**** %2183, align 8
  %2185 = add nsw i32 %storemerge28, %2025
  %2186 = sext i32 %2185 to i64
  %2187 = getelementptr inbounds double**, double*** %2184, i64 %2186
  %2188 = load double**, double*** %2187, align 8
  %2189 = getelementptr inbounds double*, double** %2188, i64 %2027
  %2190 = load double*, double** %2189, align 8
  store double %2179, double* %2190, align 8
  br label %2229

; <label>:2191:                                   ; preds = %2115
  %2192 = getelementptr inbounds double***, double**** %2155, i64 %2073
  %2193 = load double***, double**** %2192, align 8
  %2194 = shl nsw i32 %storemerge28, 1
  %2195 = add nsw i32 %2194, -1
  %2196 = sext i32 %2195 to i64
  %2197 = getelementptr inbounds double**, double*** %2193, i64 %2196
  %2198 = load double**, double*** %2197, align 8
  %2199 = getelementptr inbounds double*, double** %2198, i64 %2075
  %2200 = load double*, double** %2199, align 8
  %2201 = getelementptr inbounds double, double* %2200, i64 %2077
  %2202 = load double, double* %2201, align 8
  %2203 = load %struct.block*, %struct.block** %32, align 8
  %2204 = getelementptr inbounds %struct.block, %struct.block* %2203, i64 0, i32 11
  %2205 = load double****, double***** %2204, align 8
  %2206 = getelementptr inbounds double***, double**** %2205, i64 %2079
  %2207 = load double***, double**** %2206, align 8
  %2208 = shl nsw i32 %storemerge28, 1
  %2209 = sext i32 %2208 to i64
  %2210 = getelementptr inbounds double**, double*** %2207, i64 %2209
  %2211 = load double**, double*** %2210, align 8
  %2212 = getelementptr inbounds double*, double** %2211, i64 %2081
  %2213 = load double*, double** %2212, align 8
  %2214 = getelementptr inbounds double, double* %2213, i64 %2083
  %2215 = load double, double* %2214, align 8
  %2216 = fadd double %2202, %2215
  %2217 = load %struct.block*, %struct.block** %31, align 8
  %2218 = getelementptr inbounds %struct.block, %struct.block* %2217, i64 0, i32 11
  %2219 = load double****, double***** %2218, align 8
  %2220 = getelementptr inbounds double***, double**** %2219, i64 %2085
  %2221 = load double***, double**** %2220, align 8
  %2222 = add nsw i32 %storemerge28, %2086
  %2223 = sext i32 %2222 to i64
  %2224 = getelementptr inbounds double**, double*** %2221, i64 %2223
  %2225 = load double**, double*** %2224, align 8
  %2226 = getelementptr inbounds double*, double** %2225, i64 %2088
  %2227 = load double*, double** %2226, align 8
  %2228 = getelementptr inbounds double, double* %2227, i64 %2090
  store double %2216, double* %2228, align 8
  br label %2229

; <label>:2229:                                   ; preds = %2191, %2156
  %2230 = add nsw i32 %storemerge28, %2030
  %2231 = sext i32 %2230 to i64
  %2232 = shl nsw i32 %storemerge28, 1
  %2233 = sext i32 %2232 to i64
  %2234 = shl nsw i32 %storemerge28, 1
  %2235 = sext i32 %2234 to i64
  %2236 = shl nsw i32 %storemerge28, 1
  %2237 = add nsw i32 %2236, -1
  %2238 = sext i32 %2237 to i64
  %2239 = shl nsw i32 %storemerge28, 1
  %2240 = add nsw i32 %2239, -1
  %2241 = sext i32 %2240 to i64
  %2242 = shl nsw i32 %storemerge28, 1
  %2243 = add nsw i32 %2242, -1
  %2244 = sext i32 %2243 to i64
  %2245 = shl nsw i32 %storemerge28, 1
  %2246 = add nsw i32 %2245, -1
  %2247 = sext i32 %2246 to i64
  %2248 = shl nsw i32 %storemerge28, 1
  %2249 = sext i32 %2248 to i64
  %2250 = shl nsw i32 %storemerge28, 1
  %2251 = sext i32 %2250 to i64
  %2252 = add nsw i32 %storemerge28, %2068
  %2253 = sext i32 %2252 to i64
  br label %2254

; <label>:2254:                                   ; preds = %2257, %2229
  %storemerge31 = phi i32 [ 1, %2229 ], [ %2391, %2257 ]
  %2255 = load i32, i32* @z_block_half, align 4
  %2256 = icmp sgt i32 %storemerge31, %2255
  br i1 %2256, label %2392, label %2257

; <label>:2257:                                   ; preds = %2254
  %2258 = load %struct.block*, %struct.block** %31, align 8
  %2259 = getelementptr inbounds %struct.block, %struct.block* %2258, i64 0, i32 11
  %2260 = load double****, double***** %2259, align 8
  %2261 = getelementptr inbounds double***, double**** %2260, i64 %2029
  %2262 = load double***, double**** %2261, align 8
  %2263 = getelementptr inbounds double**, double*** %2262, i64 %2231
  %2264 = load double**, double*** %2263, align 8
  %2265 = getelementptr inbounds double*, double** %2264, i64 %2032
  %2266 = load double*, double** %2265, align 8
  %2267 = add nsw i32 %storemerge31, %2033
  %2268 = sext i32 %2267 to i64
  %2269 = getelementptr inbounds double, double* %2266, i64 %2268
  %2270 = load double, double* %2269, align 8
  %2271 = fmul double %2270, 2.500000e-01
  %2272 = load %struct.block*, %struct.block** %32, align 8
  %2273 = getelementptr inbounds %struct.block, %struct.block* %2272, i64 0, i32 11
  %2274 = load double****, double***** %2273, align 8
  %2275 = getelementptr inbounds double***, double**** %2274, i64 %2035
  %2276 = load double***, double**** %2275, align 8
  %2277 = getelementptr inbounds double**, double*** %2276, i64 %2233
  %2278 = load double**, double*** %2277, align 8
  %2279 = getelementptr inbounds double*, double** %2278, i64 %2037
  %2280 = load double*, double** %2279, align 8
  %2281 = shl nsw i32 %storemerge31, 1
  %2282 = sext i32 %2281 to i64
  %2283 = getelementptr inbounds double, double* %2280, i64 %2282
  store double %2271, double* %2283, align 8
  %2284 = load %struct.block*, %struct.block** %32, align 8
  %2285 = getelementptr inbounds %struct.block, %struct.block* %2284, i64 0, i32 11
  %2286 = load double****, double***** %2285, align 8
  %2287 = getelementptr inbounds double***, double**** %2286, i64 %2039
  %2288 = load double***, double**** %2287, align 8
  %2289 = getelementptr inbounds double**, double*** %2288, i64 %2235
  %2290 = load double**, double*** %2289, align 8
  %2291 = getelementptr inbounds double*, double** %2290, i64 %2041
  %2292 = load double*, double** %2291, align 8
  %2293 = shl nsw i32 %storemerge31, 1
  %2294 = add nsw i32 %2293, -1
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds double, double* %2292, i64 %2295
  store double %2271, double* %2296, align 8
  %2297 = load %struct.block*, %struct.block** %32, align 8
  %2298 = getelementptr inbounds %struct.block, %struct.block* %2297, i64 0, i32 11
  %2299 = load double****, double***** %2298, align 8
  %2300 = getelementptr inbounds double***, double**** %2299, i64 %2043
  %2301 = load double***, double**** %2300, align 8
  %2302 = getelementptr inbounds double**, double*** %2301, i64 %2238
  %2303 = load double**, double*** %2302, align 8
  %2304 = getelementptr inbounds double*, double** %2303, i64 %2045
  %2305 = load double*, double** %2304, align 8
  %2306 = shl nsw i32 %storemerge31, 1
  %2307 = sext i32 %2306 to i64
  %2308 = getelementptr inbounds double, double* %2305, i64 %2307
  store double %2271, double* %2308, align 8
  %2309 = load %struct.block*, %struct.block** %32, align 8
  %2310 = getelementptr inbounds %struct.block, %struct.block* %2309, i64 0, i32 11
  %2311 = load double****, double***** %2310, align 8
  %2312 = getelementptr inbounds double***, double**** %2311, i64 %2047
  %2313 = load double***, double**** %2312, align 8
  %2314 = getelementptr inbounds double**, double*** %2313, i64 %2241
  %2315 = load double**, double*** %2314, align 8
  %2316 = getelementptr inbounds double*, double** %2315, i64 %2049
  %2317 = load double*, double** %2316, align 8
  %2318 = shl nsw i32 %storemerge31, 1
  %2319 = add nsw i32 %2318, -1
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds double, double* %2317, i64 %2320
  store double %2271, double* %2321, align 8
  %2322 = load %struct.block*, %struct.block** %32, align 8
  %2323 = getelementptr inbounds %struct.block, %struct.block* %2322, i64 0, i32 11
  %2324 = load double****, double***** %2323, align 8
  %2325 = getelementptr inbounds double***, double**** %2324, i64 %2051
  %2326 = load double***, double**** %2325, align 8
  %2327 = getelementptr inbounds double**, double*** %2326, i64 %2244
  %2328 = load double**, double*** %2327, align 8
  %2329 = getelementptr inbounds double*, double** %2328, i64 %2053
  %2330 = load double*, double** %2329, align 8
  %2331 = shl nsw i32 %storemerge31, 1
  %2332 = add nsw i32 %2331, -1
  %2333 = sext i32 %2332 to i64
  %2334 = getelementptr inbounds double, double* %2330, i64 %2333
  %2335 = load double, double* %2334, align 8
  %2336 = load %struct.block*, %struct.block** %32, align 8
  %2337 = getelementptr inbounds %struct.block, %struct.block* %2336, i64 0, i32 11
  %2338 = load double****, double***** %2337, align 8
  %2339 = getelementptr inbounds double***, double**** %2338, i64 %2055
  %2340 = load double***, double**** %2339, align 8
  %2341 = getelementptr inbounds double**, double*** %2340, i64 %2247
  %2342 = load double**, double*** %2341, align 8
  %2343 = getelementptr inbounds double*, double** %2342, i64 %2057
  %2344 = load double*, double** %2343, align 8
  %2345 = shl nsw i32 %storemerge31, 1
  %2346 = sext i32 %2345 to i64
  %2347 = getelementptr inbounds double, double* %2344, i64 %2346
  %2348 = load double, double* %2347, align 8
  %2349 = fadd double %2335, %2348
  %2350 = load %struct.block*, %struct.block** %32, align 8
  %2351 = getelementptr inbounds %struct.block, %struct.block* %2350, i64 0, i32 11
  %2352 = load double****, double***** %2351, align 8
  %2353 = getelementptr inbounds double***, double**** %2352, i64 %2059
  %2354 = load double***, double**** %2353, align 8
  %2355 = getelementptr inbounds double**, double*** %2354, i64 %2249
  %2356 = load double**, double*** %2355, align 8
  %2357 = getelementptr inbounds double*, double** %2356, i64 %2061
  %2358 = load double*, double** %2357, align 8
  %2359 = shl nsw i32 %storemerge31, 1
  %2360 = add nsw i32 %2359, -1
  %2361 = sext i32 %2360 to i64
  %2362 = getelementptr inbounds double, double* %2358, i64 %2361
  %2363 = load double, double* %2362, align 8
  %2364 = fadd double %2349, %2363
  %2365 = load %struct.block*, %struct.block** %32, align 8
  %2366 = getelementptr inbounds %struct.block, %struct.block* %2365, i64 0, i32 11
  %2367 = load double****, double***** %2366, align 8
  %2368 = getelementptr inbounds double***, double**** %2367, i64 %2063
  %2369 = load double***, double**** %2368, align 8
  %2370 = getelementptr inbounds double**, double*** %2369, i64 %2251
  %2371 = load double**, double*** %2370, align 8
  %2372 = getelementptr inbounds double*, double** %2371, i64 %2065
  %2373 = load double*, double** %2372, align 8
  %2374 = shl nsw i32 %storemerge31, 1
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds double, double* %2373, i64 %2375
  %2377 = load double, double* %2376, align 8
  %2378 = fadd double %2364, %2377
  %2379 = load %struct.block*, %struct.block** %31, align 8
  %2380 = getelementptr inbounds %struct.block, %struct.block* %2379, i64 0, i32 11
  %2381 = load double****, double***** %2380, align 8
  %2382 = getelementptr inbounds double***, double**** %2381, i64 %2067
  %2383 = load double***, double**** %2382, align 8
  %2384 = getelementptr inbounds double**, double*** %2383, i64 %2253
  %2385 = load double**, double*** %2384, align 8
  %2386 = getelementptr inbounds double*, double** %2385, i64 %2070
  %2387 = load double*, double** %2386, align 8
  %2388 = add nsw i32 %storemerge31, %2071
  %2389 = sext i32 %2388 to i64
  %2390 = getelementptr inbounds double, double* %2387, i64 %2389
  store double %2378, double* %2390, align 8
  %2391 = add nsw i32 %storemerge31, 1
  br label %2254

; <label>:2392:                                   ; preds = %2254
  store i32 %storemerge31, i32* %17, align 4
  %2393 = load %struct.block*, %struct.block** %31, align 8
  %2394 = getelementptr inbounds %struct.block, %struct.block* %2393, i64 0, i32 11
  %2395 = load double****, double***** %2394, align 8
  %2396 = getelementptr inbounds double***, double**** %2395, i64 %2092
  %2397 = load double***, double**** %2396, align 8
  %2398 = add nsw i32 %storemerge28, %2093
  %2399 = sext i32 %2398 to i64
  %2400 = getelementptr inbounds double**, double*** %2397, i64 %2399
  %2401 = load double**, double*** %2400, align 8
  %2402 = getelementptr inbounds double*, double** %2401, i64 %2095
  %2403 = load double*, double** %2402, align 8
  %2404 = getelementptr inbounds double, double* %2403, i64 %2099
  %2405 = load double, double* %2404, align 8
  %2406 = fmul double %2405, 2.500000e-01
  %2407 = load %struct.block*, %struct.block** %32, align 8
  %2408 = getelementptr inbounds %struct.block, %struct.block* %2407, i64 0, i32 11
  %2409 = load double****, double***** %2408, align 8
  %2410 = getelementptr inbounds double***, double**** %2409, i64 %2101
  %2411 = load double***, double**** %2410, align 8
  %2412 = shl nsw i32 %storemerge28, 1
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds double**, double*** %2411, i64 %2413
  %2415 = load double**, double*** %2414, align 8
  %2416 = getelementptr inbounds double*, double** %2415, i64 %2103
  %2417 = load double*, double** %2416, align 8
  %2418 = getelementptr inbounds double, double* %2417, i64 %2105
  store double %2406, double* %2418, align 8
  %2419 = load %struct.block*, %struct.block** %32, align 8
  %2420 = getelementptr inbounds %struct.block, %struct.block* %2419, i64 0, i32 11
  %2421 = load double****, double***** %2420, align 8
  %2422 = getelementptr inbounds double***, double**** %2421, i64 %2107
  %2423 = load double***, double**** %2422, align 8
  %2424 = shl nsw i32 %storemerge28, 1
  %2425 = add nsw i32 %2424, -1
  %2426 = sext i32 %2425 to i64
  %2427 = getelementptr inbounds double**, double*** %2423, i64 %2426
  %2428 = load double**, double*** %2427, align 8
  %2429 = getelementptr inbounds double*, double** %2428, i64 %2109
  %2430 = load double*, double** %2429, align 8
  %2431 = getelementptr inbounds double, double* %2430, i64 %2111
  store double %2406, double* %2431, align 8
  %2432 = add nsw i32 %storemerge28, 1
  br label %2112

; <label>:2433:                                   ; preds = %2112
  store i32 %storemerge28, i32* %15, align 4
  %2434 = load %struct.block*, %struct.block** %31, align 8
  %2435 = getelementptr inbounds %struct.block, %struct.block* %2434, i64 0, i32 11
  %2436 = load double****, double***** %2435, align 8
  %2437 = load i32, i32* %18, align 4
  %2438 = sext i32 %2437 to i64
  %2439 = getelementptr inbounds double***, double**** %2436, i64 %2438
  %2440 = load double***, double**** %2439, align 8
  %2441 = load i32, i32* %22, align 4
  %2442 = load i32, i32* %20, align 4
  %2443 = add nsw i32 %2441, %2442
  %2444 = sext i32 %2443 to i64
  %2445 = getelementptr inbounds double**, double*** %2440, i64 %2444
  %2446 = load double**, double*** %2445, align 8
  %2447 = load i32, i32* %24, align 4
  %2448 = sext i32 %2447 to i64
  %2449 = getelementptr inbounds double*, double** %2446, i64 %2448
  %2450 = load double*, double** %2449, align 8
  %2451 = load i32, i32* %28, align 4
  %2452 = sext i32 %2451 to i64
  %2453 = getelementptr inbounds double, double* %2450, i64 %2452
  %2454 = load double, double* %2453, align 8
  %2455 = fmul double %2454, 2.500000e-01
  %2456 = load %struct.block*, %struct.block** %32, align 8
  %2457 = getelementptr inbounds %struct.block, %struct.block* %2456, i64 0, i32 11
  %2458 = load double****, double***** %2457, align 8
  %2459 = load i32, i32* %18, align 4
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds double***, double**** %2458, i64 %2460
  %2462 = load double***, double**** %2461, align 8
  %2463 = load i32, i32* %21, align 4
  %2464 = sext i32 %2463 to i64
  %2465 = getelementptr inbounds double**, double*** %2462, i64 %2464
  %2466 = load double**, double*** %2465, align 8
  %2467 = load i32, i32* %25, align 4
  %2468 = sext i32 %2467 to i64
  %2469 = getelementptr inbounds double*, double** %2466, i64 %2468
  %2470 = load double*, double** %2469, align 8
  store double %2455, double* %2470, align 8
  %2471 = load i32, i32* %18, align 4
  %2472 = sext i32 %2471 to i64
  %2473 = load i32, i32* %22, align 4
  %2474 = load i32, i32* %20, align 4
  %2475 = add nsw i32 %2473, %2474
  %2476 = sext i32 %2475 to i64
  %2477 = load i32, i32* %24, align 4
  %2478 = sext i32 %2477 to i64
  %2479 = load i32, i32* %28, align 4
  %2480 = load i32, i32* %18, align 4
  %2481 = sext i32 %2480 to i64
  %2482 = load i32, i32* %21, align 4
  %2483 = sext i32 %2482 to i64
  %2484 = load i32, i32* %25, align 4
  %2485 = sext i32 %2484 to i64
  %2486 = load i32, i32* %18, align 4
  %2487 = sext i32 %2486 to i64
  %2488 = load i32, i32* %21, align 4
  %2489 = sext i32 %2488 to i64
  %2490 = load i32, i32* %25, align 4
  %2491 = sext i32 %2490 to i64
  br label %2492

; <label>:2492:                                   ; preds = %2495, %2433
  %storemerge29 = phi i32 [ 1, %2433 ], [ %2535, %2495 ]
  %2493 = load i32, i32* @z_block_half, align 4
  %2494 = icmp sgt i32 %storemerge29, %2493
  br i1 %2494, label %2536, label %2495

; <label>:2495:                                   ; preds = %2492
  %2496 = load %struct.block*, %struct.block** %31, align 8
  %2497 = getelementptr inbounds %struct.block, %struct.block* %2496, i64 0, i32 11
  %2498 = load double****, double***** %2497, align 8
  %2499 = getelementptr inbounds double***, double**** %2498, i64 %2472
  %2500 = load double***, double**** %2499, align 8
  %2501 = getelementptr inbounds double**, double*** %2500, i64 %2476
  %2502 = load double**, double*** %2501, align 8
  %2503 = getelementptr inbounds double*, double** %2502, i64 %2478
  %2504 = load double*, double** %2503, align 8
  %2505 = add nsw i32 %storemerge29, %2479
  %2506 = sext i32 %2505 to i64
  %2507 = getelementptr inbounds double, double* %2504, i64 %2506
  %2508 = load double, double* %2507, align 8
  %2509 = fmul double %2508, 2.500000e-01
  %2510 = load %struct.block*, %struct.block** %32, align 8
  %2511 = getelementptr inbounds %struct.block, %struct.block* %2510, i64 0, i32 11
  %2512 = load double****, double***** %2511, align 8
  %2513 = getelementptr inbounds double***, double**** %2512, i64 %2481
  %2514 = load double***, double**** %2513, align 8
  %2515 = getelementptr inbounds double**, double*** %2514, i64 %2483
  %2516 = load double**, double*** %2515, align 8
  %2517 = getelementptr inbounds double*, double** %2516, i64 %2485
  %2518 = load double*, double** %2517, align 8
  %2519 = shl nsw i32 %storemerge29, 1
  %2520 = sext i32 %2519 to i64
  %2521 = getelementptr inbounds double, double* %2518, i64 %2520
  store double %2509, double* %2521, align 8
  %2522 = load %struct.block*, %struct.block** %32, align 8
  %2523 = getelementptr inbounds %struct.block, %struct.block* %2522, i64 0, i32 11
  %2524 = load double****, double***** %2523, align 8
  %2525 = getelementptr inbounds double***, double**** %2524, i64 %2487
  %2526 = load double***, double**** %2525, align 8
  %2527 = getelementptr inbounds double**, double*** %2526, i64 %2489
  %2528 = load double**, double*** %2527, align 8
  %2529 = getelementptr inbounds double*, double** %2528, i64 %2491
  %2530 = load double*, double** %2529, align 8
  %2531 = shl nsw i32 %storemerge29, 1
  %2532 = add nsw i32 %2531, -1
  %2533 = sext i32 %2532 to i64
  %2534 = getelementptr inbounds double, double* %2530, i64 %2533
  store double %2509, double* %2534, align 8
  %2535 = add nsw i32 %storemerge29, 1
  br label %2492

; <label>:2536:                                   ; preds = %2492
  store i32 %storemerge29, i32* %17, align 4
  %2537 = load %struct.block*, %struct.block** %31, align 8
  %2538 = getelementptr inbounds %struct.block, %struct.block* %2537, i64 0, i32 11
  %2539 = load double****, double***** %2538, align 8
  %2540 = load i32, i32* %18, align 4
  %2541 = sext i32 %2540 to i64
  %2542 = getelementptr inbounds double***, double**** %2539, i64 %2541
  %2543 = load double***, double**** %2542, align 8
  %2544 = load i32, i32* %22, align 4
  %2545 = load i32, i32* %20, align 4
  %2546 = add nsw i32 %2544, %2545
  %2547 = sext i32 %2546 to i64
  %2548 = getelementptr inbounds double**, double*** %2543, i64 %2547
  %2549 = load double**, double*** %2548, align 8
  %2550 = load i32, i32* %24, align 4
  %2551 = sext i32 %2550 to i64
  %2552 = getelementptr inbounds double*, double** %2549, i64 %2551
  %2553 = load double*, double** %2552, align 8
  %2554 = load i32, i32* %30, align 4
  %2555 = load i32, i32* %28, align 4
  %2556 = add nsw i32 %2554, %2555
  %2557 = sext i32 %2556 to i64
  %2558 = getelementptr inbounds double, double* %2553, i64 %2557
  %2559 = load double, double* %2558, align 8
  %2560 = fmul double %2559, 2.500000e-01
  %2561 = load %struct.block*, %struct.block** %32, align 8
  %2562 = getelementptr inbounds %struct.block, %struct.block* %2561, i64 0, i32 11
  %2563 = load double****, double***** %2562, align 8
  %2564 = load i32, i32* %18, align 4
  %2565 = sext i32 %2564 to i64
  %2566 = getelementptr inbounds double***, double**** %2563, i64 %2565
  %2567 = load double***, double**** %2566, align 8
  %2568 = load i32, i32* %21, align 4
  %2569 = sext i32 %2568 to i64
  %2570 = getelementptr inbounds double**, double*** %2567, i64 %2569
  %2571 = load double**, double*** %2570, align 8
  %2572 = load i32, i32* %25, align 4
  %2573 = sext i32 %2572 to i64
  %2574 = getelementptr inbounds double*, double** %2571, i64 %2573
  %2575 = load double*, double** %2574, align 8
  %2576 = load i32, i32* %29, align 4
  %2577 = sext i32 %2576 to i64
  %2578 = getelementptr inbounds double, double* %2575, i64 %2577
  store double %2560, double* %2578, align 8
  %2579 = load i32, i32* %12, align 4
  %2580 = icmp eq i32 %2579, 1
  br i1 %2580, label %2581, label %2710

; <label>:2581:                                   ; preds = %2536
  %2582 = load i32, i32* %11, align 4
  %2583 = icmp eq i32 %2582, 0
  %2584 = load %struct.block*, %struct.block** %32, align 8
  %2585 = getelementptr inbounds %struct.block, %struct.block* %2584, i64 0, i32 11
  %2586 = load double****, double***** %2585, align 8
  %2587 = load i32, i32* %18, align 4
  %2588 = sext i32 %2587 to i64
  %2589 = getelementptr inbounds double***, double**** %2586, i64 %2588
  %2590 = load double***, double**** %2589, align 8
  %2591 = load i32, i32* %21, align 4
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds double**, double*** %2590, i64 %2592
  %2594 = load double**, double*** %2593, align 8
  %2595 = load i32, i32* %26, align 4
  %2596 = sext i32 %2595 to i64
  %2597 = getelementptr inbounds double*, double** %2594, i64 %2596
  br i1 %2583, label %2598, label %2618

; <label>:2598:                                   ; preds = %2581
  %2599 = bitcast double** %2597 to i64**
  %2600 = load i64*, i64** %2599, align 8
  %2601 = load i64, i64* %2600, align 8
  %2602 = load %struct.block*, %struct.block** %31, align 8
  %2603 = getelementptr inbounds %struct.block, %struct.block* %2602, i64 0, i32 11
  %2604 = load double****, double***** %2603, align 8
  %2605 = load i32, i32* %18, align 4
  %2606 = sext i32 %2605 to i64
  %2607 = getelementptr inbounds double***, double**** %2604, i64 %2606
  %2608 = load double***, double**** %2607, align 8
  %2609 = load i32, i32* %21, align 4
  %2610 = sext i32 %2609 to i64
  %2611 = getelementptr inbounds double**, double*** %2608, i64 %2610
  %2612 = load double**, double*** %2611, align 8
  %2613 = load i32, i32* %23, align 4
  %2614 = sext i32 %2613 to i64
  %2615 = getelementptr inbounds double*, double** %2612, i64 %2614
  %2616 = bitcast double** %2615 to i64**
  %2617 = load i64*, i64** %2616, align 8
  store i64 %2601, i64* %2617, align 8
  br label %2644

; <label>:2618:                                   ; preds = %2581
  %2619 = load double*, double** %2597, align 8
  %2620 = load i32, i32* %29, align 4
  %2621 = sext i32 %2620 to i64
  %2622 = getelementptr inbounds double, double* %2619, i64 %2621
  %2623 = bitcast double* %2622 to i64*
  %2624 = load i64, i64* %2623, align 8
  %2625 = load %struct.block*, %struct.block** %31, align 8
  %2626 = getelementptr inbounds %struct.block, %struct.block* %2625, i64 0, i32 11
  %2627 = load double****, double***** %2626, align 8
  %2628 = load i32, i32* %18, align 4
  %2629 = sext i32 %2628 to i64
  %2630 = getelementptr inbounds double***, double**** %2627, i64 %2629
  %2631 = load double***, double**** %2630, align 8
  %2632 = load i32, i32* %21, align 4
  %2633 = sext i32 %2632 to i64
  %2634 = getelementptr inbounds double**, double*** %2631, i64 %2633
  %2635 = load double**, double*** %2634, align 8
  %2636 = load i32, i32* %23, align 4
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds double*, double** %2635, i64 %2637
  %2639 = load double*, double** %2638, align 8
  %2640 = load i32, i32* %29, align 4
  %2641 = sext i32 %2640 to i64
  %2642 = getelementptr inbounds double, double* %2639, i64 %2641
  %2643 = bitcast double* %2642 to i64*
  store i64 %2624, i64* %2643, align 8
  br label %2644

; <label>:2644:                                   ; preds = %2618, %2598
  %2645 = load i32, i32* %18, align 4
  %2646 = sext i32 %2645 to i64
  %2647 = load i32, i32* %21, align 4
  %2648 = sext i32 %2647 to i64
  %2649 = load i32, i32* %26, align 4
  %2650 = sext i32 %2649 to i64
  %2651 = load i32, i32* %18, align 4
  %2652 = sext i32 %2651 to i64
  %2653 = load i32, i32* %21, align 4
  %2654 = sext i32 %2653 to i64
  %2655 = load i32, i32* %26, align 4
  %2656 = sext i32 %2655 to i64
  %2657 = load i32, i32* %18, align 4
  %2658 = sext i32 %2657 to i64
  %2659 = load i32, i32* %21, align 4
  %2660 = sext i32 %2659 to i64
  %2661 = load i32, i32* %23, align 4
  %2662 = sext i32 %2661 to i64
  %2663 = load i32, i32* %28, align 4
  br label %2664

; <label>:2664:                                   ; preds = %2667, %2644
  %storemerge30 = phi i32 [ 1, %2644 ], [ %2708, %2667 ]
  %2665 = load i32, i32* @z_block_half, align 4
  %2666 = icmp sgt i32 %storemerge30, %2665
  br i1 %2666, label %2709, label %2667

; <label>:2667:                                   ; preds = %2664
  %2668 = load %struct.block*, %struct.block** %32, align 8
  %2669 = getelementptr inbounds %struct.block, %struct.block* %2668, i64 0, i32 11
  %2670 = load double****, double***** %2669, align 8
  %2671 = getelementptr inbounds double***, double**** %2670, i64 %2646
  %2672 = load double***, double**** %2671, align 8
  %2673 = getelementptr inbounds double**, double*** %2672, i64 %2648
  %2674 = load double**, double*** %2673, align 8
  %2675 = getelementptr inbounds double*, double** %2674, i64 %2650
  %2676 = load double*, double** %2675, align 8
  %2677 = shl nsw i32 %storemerge30, 1
  %2678 = add nsw i32 %2677, -1
  %2679 = sext i32 %2678 to i64
  %2680 = getelementptr inbounds double, double* %2676, i64 %2679
  %2681 = load double, double* %2680, align 8
  %2682 = load %struct.block*, %struct.block** %32, align 8
  %2683 = getelementptr inbounds %struct.block, %struct.block* %2682, i64 0, i32 11
  %2684 = load double****, double***** %2683, align 8
  %2685 = getelementptr inbounds double***, double**** %2684, i64 %2652
  %2686 = load double***, double**** %2685, align 8
  %2687 = getelementptr inbounds double**, double*** %2686, i64 %2654
  %2688 = load double**, double*** %2687, align 8
  %2689 = getelementptr inbounds double*, double** %2688, i64 %2656
  %2690 = load double*, double** %2689, align 8
  %2691 = shl nsw i32 %storemerge30, 1
  %2692 = sext i32 %2691 to i64
  %2693 = getelementptr inbounds double, double* %2690, i64 %2692
  %2694 = load double, double* %2693, align 8
  %2695 = fadd double %2681, %2694
  %2696 = load %struct.block*, %struct.block** %31, align 8
  %2697 = getelementptr inbounds %struct.block, %struct.block* %2696, i64 0, i32 11
  %2698 = load double****, double***** %2697, align 8
  %2699 = getelementptr inbounds double***, double**** %2698, i64 %2658
  %2700 = load double***, double**** %2699, align 8
  %2701 = getelementptr inbounds double**, double*** %2700, i64 %2660
  %2702 = load double**, double*** %2701, align 8
  %2703 = getelementptr inbounds double*, double** %2702, i64 %2662
  %2704 = load double*, double** %2703, align 8
  %2705 = add nsw i32 %storemerge30, %2663
  %2706 = sext i32 %2705 to i64
  %2707 = getelementptr inbounds double, double* %2704, i64 %2706
  store double %2695, double* %2707, align 8
  %2708 = add nsw i32 %storemerge30, 1
  br label %2664

; <label>:2709:                                   ; preds = %2664
  store i32 %storemerge30, i32* %17, align 4
  br label %2710

; <label>:2710:                                   ; preds = %2536, %2709
  %2711 = load i32, i32* %18, align 4
  %2712 = add nsw i32 %2711, 1
  br label %1751

; <label>:2713:                                   ; preds = %1723
  %2714 = and i32 %1726, -2
  %2715 = icmp eq i32 %2714, 4
  br i1 %2715, label %2716, label %3709

; <label>:2716:                                   ; preds = %2713
  %2717 = load i32, i32* %10, align 4
  %2718 = icmp eq i32 %2717, 4
  br i1 %2718, label %2719, label %2722

; <label>:2719:                                   ; preds = %2716
  store i32 0, i32* %27, align 4
  store i32 1, i32* %28, align 4
  %2720 = load i32, i32* @z_block_size, align 4
  %2721 = add nsw i32 %2720, 1
  br label %2725

; <label>:2722:                                   ; preds = %2716
  %2723 = load i32, i32* @z_block_size, align 4
  %2724 = add nsw i32 %2723, 1
  store i32 %2724, i32* %27, align 4
  store i32 %2723, i32* %28, align 4
  br label %2725

; <label>:2725:                                   ; preds = %2722, %2719
  %storemerge41 = phi i32 [ 0, %2722 ], [ %2721, %2719 ]
  %storemerge17 = phi i32 [ 1, %2722 ], [ %2720, %2719 ]
  store i32 %storemerge41, i32* %29, align 4
  store i32 %storemerge17, i32* %30, align 4
  %2726 = load i32, i32* %12, align 4
  %2727 = load i32, i32* @x_block_half, align 4
  %2728 = mul nsw i32 %2726, %2727
  store i32 %2728, i32* %20, align 4
  %2729 = load i32, i32* %11, align 4
  %2730 = load i32, i32* @y_block_half, align 4
  %2731 = mul nsw i32 %2729, %2730
  store i32 %2731, i32* %24, align 4
  %2732 = load i32, i32* @x_block_size, align 4
  %2733 = add nsw i32 %2732, 1
  store i32 %2733, i32* %21, align 4
  %2734 = load i32, i32* @x_block_half, align 4
  %2735 = add nsw i32 %2734, 1
  store i32 %2735, i32* %22, align 4
  %2736 = load i32, i32* @y_block_size, align 4
  %2737 = add nsw i32 %2736, 1
  store i32 %2737, i32* %25, align 4
  %2738 = load i32, i32* @y_block_half, align 4
  %2739 = add nsw i32 %2738, 1
  store i32 %2739, i32* %26, align 4
  %2740 = load i32, i32* %13, align 4
  br label %2741

; <label>:2741:                                   ; preds = %3706, %2725
  %storemerge18 = phi i32 [ %2740, %2725 ], [ %3708, %3706 ]
  store i32 %storemerge18, i32* %18, align 4
  %2742 = load i32, i32* %13, align 4
  %2743 = load i32, i32* %14, align 4
  %2744 = add nsw i32 %2742, %2743
  %2745 = icmp slt i32 %storemerge18, %2744
  br i1 %2745, label %2746, label %3709

; <label>:2746:                                   ; preds = %2741
  %2747 = load %struct.block*, %struct.block** %31, align 8
  %2748 = getelementptr inbounds %struct.block, %struct.block* %2747, i64 0, i32 11
  %2749 = load double****, double***** %2748, align 8
  %2750 = load i32, i32* %18, align 4
  %2751 = sext i32 %2750 to i64
  %2752 = getelementptr inbounds double***, double**** %2749, i64 %2751
  %2753 = load double***, double**** %2752, align 8
  %2754 = load i32, i32* %20, align 4
  %2755 = sext i32 %2754 to i64
  %2756 = getelementptr inbounds double**, double*** %2753, i64 %2755
  %2757 = load double**, double*** %2756, align 8
  %2758 = load i32, i32* %24, align 4
  %2759 = sext i32 %2758 to i64
  %2760 = getelementptr inbounds double*, double** %2757, i64 %2759
  %2761 = load double*, double** %2760, align 8
  %2762 = load i32, i32* %28, align 4
  %2763 = sext i32 %2762 to i64
  %2764 = getelementptr inbounds double, double* %2761, i64 %2763
  %2765 = load double, double* %2764, align 8
  %2766 = fmul double %2765, 2.500000e-01
  %2767 = load %struct.block*, %struct.block** %32, align 8
  %2768 = getelementptr inbounds %struct.block, %struct.block* %2767, i64 0, i32 11
  %2769 = load double****, double***** %2768, align 8
  %2770 = load i32, i32* %18, align 4
  %2771 = sext i32 %2770 to i64
  %2772 = getelementptr inbounds double***, double**** %2769, i64 %2771
  %2773 = load double***, double**** %2772, align 8
  %2774 = load double**, double*** %2773, align 8
  %2775 = load double*, double** %2774, align 8
  %2776 = load i32, i32* %29, align 4
  %2777 = sext i32 %2776 to i64
  %2778 = getelementptr inbounds double, double* %2775, i64 %2777
  store double %2766, double* %2778, align 8
  %2779 = load i32, i32* %18, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = load i32, i32* %20, align 4
  %2782 = sext i32 %2781 to i64
  %2783 = load i32, i32* %24, align 4
  %2784 = load i32, i32* %28, align 4
  %2785 = sext i32 %2784 to i64
  %2786 = load i32, i32* %18, align 4
  %2787 = sext i32 %2786 to i64
  %2788 = load i32, i32* %29, align 4
  %2789 = sext i32 %2788 to i64
  %2790 = load i32, i32* %18, align 4
  %2791 = sext i32 %2790 to i64
  %2792 = load i32, i32* %29, align 4
  %2793 = sext i32 %2792 to i64
  br label %2794

; <label>:2794:                                   ; preds = %2797, %2746
  %storemerge19 = phi i32 [ 1, %2746 ], [ %2835, %2797 ]
  %2795 = load i32, i32* @y_block_half, align 4
  %2796 = icmp sgt i32 %storemerge19, %2795
  br i1 %2796, label %2836, label %2797

; <label>:2797:                                   ; preds = %2794
  %2798 = load %struct.block*, %struct.block** %31, align 8
  %2799 = getelementptr inbounds %struct.block, %struct.block* %2798, i64 0, i32 11
  %2800 = load double****, double***** %2799, align 8
  %2801 = getelementptr inbounds double***, double**** %2800, i64 %2780
  %2802 = load double***, double**** %2801, align 8
  %2803 = getelementptr inbounds double**, double*** %2802, i64 %2782
  %2804 = load double**, double*** %2803, align 8
  %2805 = add nsw i32 %storemerge19, %2783
  %2806 = sext i32 %2805 to i64
  %2807 = getelementptr inbounds double*, double** %2804, i64 %2806
  %2808 = load double*, double** %2807, align 8
  %2809 = getelementptr inbounds double, double* %2808, i64 %2785
  %2810 = load double, double* %2809, align 8
  %2811 = fmul double %2810, 2.500000e-01
  %2812 = load %struct.block*, %struct.block** %32, align 8
  %2813 = getelementptr inbounds %struct.block, %struct.block* %2812, i64 0, i32 11
  %2814 = load double****, double***** %2813, align 8
  %2815 = getelementptr inbounds double***, double**** %2814, i64 %2787
  %2816 = load double***, double**** %2815, align 8
  %2817 = load double**, double*** %2816, align 8
  %2818 = shl nsw i32 %storemerge19, 1
  %2819 = sext i32 %2818 to i64
  %2820 = getelementptr inbounds double*, double** %2817, i64 %2819
  %2821 = load double*, double** %2820, align 8
  %2822 = getelementptr inbounds double, double* %2821, i64 %2789
  store double %2811, double* %2822, align 8
  %2823 = load %struct.block*, %struct.block** %32, align 8
  %2824 = getelementptr inbounds %struct.block, %struct.block* %2823, i64 0, i32 11
  %2825 = load double****, double***** %2824, align 8
  %2826 = getelementptr inbounds double***, double**** %2825, i64 %2791
  %2827 = load double***, double**** %2826, align 8
  %2828 = load double**, double*** %2827, align 8
  %2829 = shl nsw i32 %storemerge19, 1
  %2830 = add nsw i32 %2829, -1
  %2831 = sext i32 %2830 to i64
  %2832 = getelementptr inbounds double*, double** %2828, i64 %2831
  %2833 = load double*, double** %2832, align 8
  %2834 = getelementptr inbounds double, double* %2833, i64 %2793
  store double %2811, double* %2834, align 8
  %2835 = add nsw i32 %storemerge19, 1
  br label %2794

; <label>:2836:                                   ; preds = %2794
  store i32 %storemerge19, i32* %16, align 4
  %2837 = load %struct.block*, %struct.block** %31, align 8
  %2838 = getelementptr inbounds %struct.block, %struct.block* %2837, i64 0, i32 11
  %2839 = load double****, double***** %2838, align 8
  %2840 = load i32, i32* %18, align 4
  %2841 = sext i32 %2840 to i64
  %2842 = getelementptr inbounds double***, double**** %2839, i64 %2841
  %2843 = load double***, double**** %2842, align 8
  %2844 = load i32, i32* %20, align 4
  %2845 = sext i32 %2844 to i64
  %2846 = getelementptr inbounds double**, double*** %2843, i64 %2845
  %2847 = load double**, double*** %2846, align 8
  %2848 = load i32, i32* %26, align 4
  %2849 = load i32, i32* %24, align 4
  %2850 = add nsw i32 %2848, %2849
  %2851 = sext i32 %2850 to i64
  %2852 = getelementptr inbounds double*, double** %2847, i64 %2851
  %2853 = load double*, double** %2852, align 8
  %2854 = load i32, i32* %28, align 4
  %2855 = sext i32 %2854 to i64
  %2856 = getelementptr inbounds double, double* %2853, i64 %2855
  %2857 = load double, double* %2856, align 8
  %2858 = fmul double %2857, 2.500000e-01
  %2859 = load %struct.block*, %struct.block** %32, align 8
  %2860 = getelementptr inbounds %struct.block, %struct.block* %2859, i64 0, i32 11
  %2861 = load double****, double***** %2860, align 8
  %2862 = load i32, i32* %18, align 4
  %2863 = sext i32 %2862 to i64
  %2864 = getelementptr inbounds double***, double**** %2861, i64 %2863
  %2865 = load double***, double**** %2864, align 8
  %2866 = load double**, double*** %2865, align 8
  %2867 = load i32, i32* %25, align 4
  %2868 = sext i32 %2867 to i64
  %2869 = getelementptr inbounds double*, double** %2866, i64 %2868
  %2870 = load double*, double** %2869, align 8
  %2871 = load i32, i32* %29, align 4
  %2872 = sext i32 %2871 to i64
  %2873 = getelementptr inbounds double, double* %2870, i64 %2872
  store double %2858, double* %2873, align 8
  %2874 = load i32, i32* %12, align 4
  %2875 = icmp eq i32 %2874, 0
  br i1 %2875, label %2876, label %2990

; <label>:2876:                                   ; preds = %2836
  %2877 = load i32, i32* %11, align 4
  %2878 = icmp eq i32 %2877, 0
  %2879 = load %struct.block*, %struct.block** %32, align 8
  %2880 = getelementptr inbounds %struct.block, %struct.block* %2879, i64 0, i32 11
  %2881 = load double****, double***** %2880, align 8
  %2882 = load i32, i32* %18, align 4
  %2883 = sext i32 %2882 to i64
  %2884 = getelementptr inbounds double***, double**** %2881, i64 %2883
  %2885 = load double***, double**** %2884, align 8
  %2886 = load double**, double*** %2885, align 8
  br i1 %2878, label %2887, label %2907

; <label>:2887:                                   ; preds = %2876
  %2888 = load double*, double** %2886, align 8
  %2889 = load i32, i32* %30, align 4
  %2890 = sext i32 %2889 to i64
  %2891 = getelementptr inbounds double, double* %2888, i64 %2890
  %2892 = bitcast double* %2891 to i64*
  %2893 = load i64, i64* %2892, align 8
  %2894 = load %struct.block*, %struct.block** %31, align 8
  %2895 = getelementptr inbounds %struct.block, %struct.block* %2894, i64 0, i32 11
  %2896 = load double****, double***** %2895, align 8
  %2897 = load i32, i32* %18, align 4
  %2898 = sext i32 %2897 to i64
  %2899 = getelementptr inbounds double***, double**** %2896, i64 %2898
  %2900 = load double***, double**** %2899, align 8
  %2901 = load double**, double*** %2900, align 8
  %2902 = load double*, double** %2901, align 8
  %2903 = load i32, i32* %27, align 4
  %2904 = sext i32 %2903 to i64
  %2905 = getelementptr inbounds double, double* %2902, i64 %2904
  %2906 = bitcast double* %2905 to i64*
  store i64 %2893, i64* %2906, align 8
  br label %2933

; <label>:2907:                                   ; preds = %2876
  %2908 = load i32, i32* %25, align 4
  %2909 = sext i32 %2908 to i64
  %2910 = getelementptr inbounds double*, double** %2886, i64 %2909
  %2911 = load double*, double** %2910, align 8
  %2912 = load i32, i32* %30, align 4
  %2913 = sext i32 %2912 to i64
  %2914 = getelementptr inbounds double, double* %2911, i64 %2913
  %2915 = bitcast double* %2914 to i64*
  %2916 = load i64, i64* %2915, align 8
  %2917 = load %struct.block*, %struct.block** %31, align 8
  %2918 = getelementptr inbounds %struct.block, %struct.block* %2917, i64 0, i32 11
  %2919 = load double****, double***** %2918, align 8
  %2920 = load i32, i32* %18, align 4
  %2921 = sext i32 %2920 to i64
  %2922 = getelementptr inbounds double***, double**** %2919, i64 %2921
  %2923 = load double***, double**** %2922, align 8
  %2924 = load double**, double*** %2923, align 8
  %2925 = load i32, i32* %25, align 4
  %2926 = sext i32 %2925 to i64
  %2927 = getelementptr inbounds double*, double** %2924, i64 %2926
  %2928 = load double*, double** %2927, align 8
  %2929 = load i32, i32* %27, align 4
  %2930 = sext i32 %2929 to i64
  %2931 = getelementptr inbounds double, double* %2928, i64 %2930
  %2932 = bitcast double* %2931 to i64*
  store i64 %2916, i64* %2932, align 8
  br label %2933

; <label>:2933:                                   ; preds = %2907, %2887
  %2934 = load i32, i32* %18, align 4
  %2935 = sext i32 %2934 to i64
  %2936 = load i32, i32* %30, align 4
  %2937 = sext i32 %2936 to i64
  %2938 = load i32, i32* %18, align 4
  %2939 = sext i32 %2938 to i64
  %2940 = load i32, i32* %30, align 4
  %2941 = sext i32 %2940 to i64
  %2942 = load i32, i32* %18, align 4
  %2943 = sext i32 %2942 to i64
  %2944 = load i32, i32* %24, align 4
  %2945 = load i32, i32* %27, align 4
  %2946 = sext i32 %2945 to i64
  br label %2947

; <label>:2947:                                   ; preds = %2950, %2933
  %storemerge24 = phi i32 [ 1, %2933 ], [ %2988, %2950 ]
  %2948 = load i32, i32* @y_block_half, align 4
  %2949 = icmp sgt i32 %storemerge24, %2948
  br i1 %2949, label %2989, label %2950

; <label>:2950:                                   ; preds = %2947
  %2951 = load %struct.block*, %struct.block** %32, align 8
  %2952 = getelementptr inbounds %struct.block, %struct.block* %2951, i64 0, i32 11
  %2953 = load double****, double***** %2952, align 8
  %2954 = getelementptr inbounds double***, double**** %2953, i64 %2935
  %2955 = load double***, double**** %2954, align 8
  %2956 = load double**, double*** %2955, align 8
  %2957 = shl nsw i32 %storemerge24, 1
  %2958 = add nsw i32 %2957, -1
  %2959 = sext i32 %2958 to i64
  %2960 = getelementptr inbounds double*, double** %2956, i64 %2959
  %2961 = load double*, double** %2960, align 8
  %2962 = getelementptr inbounds double, double* %2961, i64 %2937
  %2963 = load double, double* %2962, align 8
  %2964 = load %struct.block*, %struct.block** %32, align 8
  %2965 = getelementptr inbounds %struct.block, %struct.block* %2964, i64 0, i32 11
  %2966 = load double****, double***** %2965, align 8
  %2967 = getelementptr inbounds double***, double**** %2966, i64 %2939
  %2968 = load double***, double**** %2967, align 8
  %2969 = load double**, double*** %2968, align 8
  %2970 = shl nsw i32 %storemerge24, 1
  %2971 = sext i32 %2970 to i64
  %2972 = getelementptr inbounds double*, double** %2969, i64 %2971
  %2973 = load double*, double** %2972, align 8
  %2974 = getelementptr inbounds double, double* %2973, i64 %2941
  %2975 = load double, double* %2974, align 8
  %2976 = fadd double %2963, %2975
  %2977 = load %struct.block*, %struct.block** %31, align 8
  %2978 = getelementptr inbounds %struct.block, %struct.block* %2977, i64 0, i32 11
  %2979 = load double****, double***** %2978, align 8
  %2980 = getelementptr inbounds double***, double**** %2979, i64 %2943
  %2981 = load double***, double**** %2980, align 8
  %2982 = load double**, double*** %2981, align 8
  %2983 = add nsw i32 %storemerge24, %2944
  %2984 = sext i32 %2983 to i64
  %2985 = getelementptr inbounds double*, double** %2982, i64 %2984
  %2986 = load double*, double** %2985, align 8
  %2987 = getelementptr inbounds double, double* %2986, i64 %2946
  store double %2976, double* %2987, align 8
  %2988 = add nsw i32 %storemerge24, 1
  br label %2947

; <label>:2989:                                   ; preds = %2947
  store i32 %storemerge24, i32* %16, align 4
  br label %2990

; <label>:2990:                                   ; preds = %2989, %2836
  %2991 = load i32, i32* %18, align 4
  %2992 = sext i32 %2991 to i64
  %2993 = load i32, i32* %20, align 4
  %2994 = load i32, i32* %24, align 4
  %2995 = sext i32 %2994 to i64
  %2996 = load i32, i32* %28, align 4
  %2997 = sext i32 %2996 to i64
  %2998 = load i32, i32* %18, align 4
  %2999 = sext i32 %2998 to i64
  %3000 = load i32, i32* %29, align 4
  %3001 = sext i32 %3000 to i64
  %3002 = load i32, i32* %18, align 4
  %3003 = sext i32 %3002 to i64
  %3004 = load i32, i32* %29, align 4
  %3005 = sext i32 %3004 to i64
  %3006 = load i32, i32* %11, align 4
  %3007 = icmp eq i32 %3006, 0
  %3008 = load i32, i32* %18, align 4
  %3009 = sext i32 %3008 to i64
  %3010 = load i32, i32* %30, align 4
  %3011 = sext i32 %3010 to i64
  %3012 = load i32, i32* %18, align 4
  %3013 = sext i32 %3012 to i64
  %3014 = load i32, i32* %30, align 4
  %3015 = sext i32 %3014 to i64
  %3016 = load i32, i32* %18, align 4
  %3017 = sext i32 %3016 to i64
  %3018 = load i32, i32* %20, align 4
  %3019 = load i32, i32* %27, align 4
  %3020 = sext i32 %3019 to i64
  %3021 = load i32, i32* %18, align 4
  %3022 = sext i32 %3021 to i64
  %3023 = load i32, i32* %20, align 4
  %3024 = load i32, i32* %24, align 4
  %3025 = load i32, i32* %28, align 4
  %3026 = sext i32 %3025 to i64
  %3027 = load i32, i32* %18, align 4
  %3028 = sext i32 %3027 to i64
  %3029 = load i32, i32* %29, align 4
  %3030 = sext i32 %3029 to i64
  %3031 = load i32, i32* %18, align 4
  %3032 = sext i32 %3031 to i64
  %3033 = load i32, i32* %29, align 4
  %3034 = sext i32 %3033 to i64
  %3035 = load i32, i32* %18, align 4
  %3036 = sext i32 %3035 to i64
  %3037 = load i32, i32* %29, align 4
  %3038 = sext i32 %3037 to i64
  %3039 = load i32, i32* %18, align 4
  %3040 = sext i32 %3039 to i64
  %3041 = load i32, i32* %29, align 4
  %3042 = sext i32 %3041 to i64
  %3043 = load i32, i32* %18, align 4
  %3044 = sext i32 %3043 to i64
  %3045 = load i32, i32* %30, align 4
  %3046 = sext i32 %3045 to i64
  %3047 = load i32, i32* %18, align 4
  %3048 = sext i32 %3047 to i64
  %3049 = load i32, i32* %30, align 4
  %3050 = sext i32 %3049 to i64
  %3051 = load i32, i32* %18, align 4
  %3052 = sext i32 %3051 to i64
  %3053 = load i32, i32* %30, align 4
  %3054 = sext i32 %3053 to i64
  %3055 = load i32, i32* %18, align 4
  %3056 = sext i32 %3055 to i64
  %3057 = load i32, i32* %30, align 4
  %3058 = sext i32 %3057 to i64
  %3059 = load i32, i32* %18, align 4
  %3060 = sext i32 %3059 to i64
  %3061 = load i32, i32* %20, align 4
  %3062 = load i32, i32* %24, align 4
  %3063 = load i32, i32* %27, align 4
  %3064 = sext i32 %3063 to i64
  %3065 = load i32, i32* %18, align 4
  %3066 = sext i32 %3065 to i64
  %3067 = load i32, i32* %25, align 4
  %3068 = sext i32 %3067 to i64
  %3069 = load i32, i32* %30, align 4
  %3070 = sext i32 %3069 to i64
  %3071 = load i32, i32* %18, align 4
  %3072 = sext i32 %3071 to i64
  %3073 = load i32, i32* %25, align 4
  %3074 = sext i32 %3073 to i64
  %3075 = load i32, i32* %30, align 4
  %3076 = sext i32 %3075 to i64
  %3077 = load i32, i32* %18, align 4
  %3078 = sext i32 %3077 to i64
  %3079 = load i32, i32* %20, align 4
  %3080 = load i32, i32* %25, align 4
  %3081 = sext i32 %3080 to i64
  %3082 = load i32, i32* %27, align 4
  %3083 = sext i32 %3082 to i64
  %3084 = load i32, i32* %18, align 4
  %3085 = sext i32 %3084 to i64
  %3086 = load i32, i32* %20, align 4
  %3087 = load i32, i32* %26, align 4
  %3088 = load i32, i32* %24, align 4
  %3089 = add nsw i32 %3087, %3088
  %3090 = sext i32 %3089 to i64
  %3091 = load i32, i32* %28, align 4
  %3092 = sext i32 %3091 to i64
  %3093 = load i32, i32* %18, align 4
  %3094 = sext i32 %3093 to i64
  %3095 = load i32, i32* %25, align 4
  %3096 = sext i32 %3095 to i64
  %3097 = load i32, i32* %29, align 4
  %3098 = sext i32 %3097 to i64
  %3099 = load i32, i32* %18, align 4
  %3100 = sext i32 %3099 to i64
  %3101 = load i32, i32* %25, align 4
  %3102 = sext i32 %3101 to i64
  %3103 = load i32, i32* %29, align 4
  %3104 = sext i32 %3103 to i64
  br label %3105

; <label>:3105:                                   ; preds = %3385, %2990
  %storemerge20 = phi i32 [ 1, %2990 ], [ %3425, %3385 ]
  %3106 = load i32, i32* @x_block_half, align 4
  %3107 = icmp sgt i32 %storemerge20, %3106
  br i1 %3107, label %3426, label %3108

; <label>:3108:                                   ; preds = %3105
  %3109 = load %struct.block*, %struct.block** %31, align 8
  %3110 = getelementptr inbounds %struct.block, %struct.block* %3109, i64 0, i32 11
  %3111 = load double****, double***** %3110, align 8
  %3112 = getelementptr inbounds double***, double**** %3111, i64 %2992
  %3113 = load double***, double**** %3112, align 8
  %3114 = add nsw i32 %storemerge20, %2993
  %3115 = sext i32 %3114 to i64
  %3116 = getelementptr inbounds double**, double*** %3113, i64 %3115
  %3117 = load double**, double*** %3116, align 8
  %3118 = getelementptr inbounds double*, double** %3117, i64 %2995
  %3119 = load double*, double** %3118, align 8
  %3120 = getelementptr inbounds double, double* %3119, i64 %2997
  %3121 = load double, double* %3120, align 8
  %3122 = fmul double %3121, 2.500000e-01
  %3123 = load %struct.block*, %struct.block** %32, align 8
  %3124 = getelementptr inbounds %struct.block, %struct.block* %3123, i64 0, i32 11
  %3125 = load double****, double***** %3124, align 8
  %3126 = getelementptr inbounds double***, double**** %3125, i64 %2999
  %3127 = load double***, double**** %3126, align 8
  %3128 = shl nsw i32 %storemerge20, 1
  %3129 = sext i32 %3128 to i64
  %3130 = getelementptr inbounds double**, double*** %3127, i64 %3129
  %3131 = load double**, double*** %3130, align 8
  %3132 = load double*, double** %3131, align 8
  %3133 = getelementptr inbounds double, double* %3132, i64 %3001
  store double %3122, double* %3133, align 8
  %3134 = load %struct.block*, %struct.block** %32, align 8
  %3135 = getelementptr inbounds %struct.block, %struct.block* %3134, i64 0, i32 11
  %3136 = load double****, double***** %3135, align 8
  %3137 = getelementptr inbounds double***, double**** %3136, i64 %3003
  %3138 = load double***, double**** %3137, align 8
  %3139 = shl nsw i32 %storemerge20, 1
  %3140 = add nsw i32 %3139, -1
  %3141 = sext i32 %3140 to i64
  %3142 = getelementptr inbounds double**, double*** %3138, i64 %3141
  %3143 = load double**, double*** %3142, align 8
  %3144 = load double*, double** %3143, align 8
  %3145 = getelementptr inbounds double, double* %3144, i64 %3005
  store double %3122, double* %3145, align 8
  %3146 = load %struct.block*, %struct.block** %32, align 8
  %3147 = getelementptr inbounds %struct.block, %struct.block* %3146, i64 0, i32 11
  %3148 = load double****, double***** %3147, align 8
  br i1 %3007, label %3149, label %3184

; <label>:3149:                                   ; preds = %3108
  %3150 = getelementptr inbounds double***, double**** %3148, i64 %3009
  %3151 = load double***, double**** %3150, align 8
  %3152 = shl nsw i32 %storemerge20, 1
  %3153 = add nsw i32 %3152, -1
  %3154 = sext i32 %3153 to i64
  %3155 = getelementptr inbounds double**, double*** %3151, i64 %3154
  %3156 = load double**, double*** %3155, align 8
  %3157 = load double*, double** %3156, align 8
  %3158 = getelementptr inbounds double, double* %3157, i64 %3011
  %3159 = load double, double* %3158, align 8
  %3160 = load %struct.block*, %struct.block** %32, align 8
  %3161 = getelementptr inbounds %struct.block, %struct.block* %3160, i64 0, i32 11
  %3162 = load double****, double***** %3161, align 8
  %3163 = getelementptr inbounds double***, double**** %3162, i64 %3013
  %3164 = load double***, double**** %3163, align 8
  %3165 = shl nsw i32 %storemerge20, 1
  %3166 = sext i32 %3165 to i64
  %3167 = getelementptr inbounds double**, double*** %3164, i64 %3166
  %3168 = load double**, double*** %3167, align 8
  %3169 = load double*, double** %3168, align 8
  %3170 = getelementptr inbounds double, double* %3169, i64 %3015
  %3171 = load double, double* %3170, align 8
  %3172 = fadd double %3159, %3171
  %3173 = load %struct.block*, %struct.block** %31, align 8
  %3174 = getelementptr inbounds %struct.block, %struct.block* %3173, i64 0, i32 11
  %3175 = load double****, double***** %3174, align 8
  %3176 = getelementptr inbounds double***, double**** %3175, i64 %3017
  %3177 = load double***, double**** %3176, align 8
  %3178 = add nsw i32 %storemerge20, %3018
  %3179 = sext i32 %3178 to i64
  %3180 = getelementptr inbounds double**, double*** %3177, i64 %3179
  %3181 = load double**, double*** %3180, align 8
  %3182 = load double*, double** %3181, align 8
  %3183 = getelementptr inbounds double, double* %3182, i64 %3020
  store double %3172, double* %3183, align 8
  br label %3222

; <label>:3184:                                   ; preds = %3108
  %3185 = getelementptr inbounds double***, double**** %3148, i64 %3066
  %3186 = load double***, double**** %3185, align 8
  %3187 = shl nsw i32 %storemerge20, 1
  %3188 = add nsw i32 %3187, -1
  %3189 = sext i32 %3188 to i64
  %3190 = getelementptr inbounds double**, double*** %3186, i64 %3189
  %3191 = load double**, double*** %3190, align 8
  %3192 = getelementptr inbounds double*, double** %3191, i64 %3068
  %3193 = load double*, double** %3192, align 8
  %3194 = getelementptr inbounds double, double* %3193, i64 %3070
  %3195 = load double, double* %3194, align 8
  %3196 = load %struct.block*, %struct.block** %32, align 8
  %3197 = getelementptr inbounds %struct.block, %struct.block* %3196, i64 0, i32 11
  %3198 = load double****, double***** %3197, align 8
  %3199 = getelementptr inbounds double***, double**** %3198, i64 %3072
  %3200 = load double***, double**** %3199, align 8
  %3201 = shl nsw i32 %storemerge20, 1
  %3202 = sext i32 %3201 to i64
  %3203 = getelementptr inbounds double**, double*** %3200, i64 %3202
  %3204 = load double**, double*** %3203, align 8
  %3205 = getelementptr inbounds double*, double** %3204, i64 %3074
  %3206 = load double*, double** %3205, align 8
  %3207 = getelementptr inbounds double, double* %3206, i64 %3076
  %3208 = load double, double* %3207, align 8
  %3209 = fadd double %3195, %3208
  %3210 = load %struct.block*, %struct.block** %31, align 8
  %3211 = getelementptr inbounds %struct.block, %struct.block* %3210, i64 0, i32 11
  %3212 = load double****, double***** %3211, align 8
  %3213 = getelementptr inbounds double***, double**** %3212, i64 %3078
  %3214 = load double***, double**** %3213, align 8
  %3215 = add nsw i32 %storemerge20, %3079
  %3216 = sext i32 %3215 to i64
  %3217 = getelementptr inbounds double**, double*** %3214, i64 %3216
  %3218 = load double**, double*** %3217, align 8
  %3219 = getelementptr inbounds double*, double** %3218, i64 %3081
  %3220 = load double*, double** %3219, align 8
  %3221 = getelementptr inbounds double, double* %3220, i64 %3083
  store double %3209, double* %3221, align 8
  br label %3222

; <label>:3222:                                   ; preds = %3184, %3149
  %3223 = add nsw i32 %storemerge20, %3023
  %3224 = sext i32 %3223 to i64
  %3225 = shl nsw i32 %storemerge20, 1
  %3226 = sext i32 %3225 to i64
  %3227 = shl nsw i32 %storemerge20, 1
  %3228 = sext i32 %3227 to i64
  %3229 = shl nsw i32 %storemerge20, 1
  %3230 = add nsw i32 %3229, -1
  %3231 = sext i32 %3230 to i64
  %3232 = shl nsw i32 %storemerge20, 1
  %3233 = add nsw i32 %3232, -1
  %3234 = sext i32 %3233 to i64
  %3235 = shl nsw i32 %storemerge20, 1
  %3236 = add nsw i32 %3235, -1
  %3237 = sext i32 %3236 to i64
  %3238 = shl nsw i32 %storemerge20, 1
  %3239 = add nsw i32 %3238, -1
  %3240 = sext i32 %3239 to i64
  %3241 = shl nsw i32 %storemerge20, 1
  %3242 = sext i32 %3241 to i64
  %3243 = shl nsw i32 %storemerge20, 1
  %3244 = sext i32 %3243 to i64
  %3245 = add nsw i32 %storemerge20, %3061
  %3246 = sext i32 %3245 to i64
  br label %3247

; <label>:3247:                                   ; preds = %3250, %3222
  %storemerge23 = phi i32 [ 1, %3222 ], [ %3384, %3250 ]
  %3248 = load i32, i32* @y_block_half, align 4
  %3249 = icmp sgt i32 %storemerge23, %3248
  br i1 %3249, label %3385, label %3250

; <label>:3250:                                   ; preds = %3247
  %3251 = load %struct.block*, %struct.block** %31, align 8
  %3252 = getelementptr inbounds %struct.block, %struct.block* %3251, i64 0, i32 11
  %3253 = load double****, double***** %3252, align 8
  %3254 = getelementptr inbounds double***, double**** %3253, i64 %3022
  %3255 = load double***, double**** %3254, align 8
  %3256 = getelementptr inbounds double**, double*** %3255, i64 %3224
  %3257 = load double**, double*** %3256, align 8
  %3258 = add nsw i32 %storemerge23, %3024
  %3259 = sext i32 %3258 to i64
  %3260 = getelementptr inbounds double*, double** %3257, i64 %3259
  %3261 = load double*, double** %3260, align 8
  %3262 = getelementptr inbounds double, double* %3261, i64 %3026
  %3263 = load double, double* %3262, align 8
  %3264 = fmul double %3263, 2.500000e-01
  %3265 = load %struct.block*, %struct.block** %32, align 8
  %3266 = getelementptr inbounds %struct.block, %struct.block* %3265, i64 0, i32 11
  %3267 = load double****, double***** %3266, align 8
  %3268 = getelementptr inbounds double***, double**** %3267, i64 %3028
  %3269 = load double***, double**** %3268, align 8
  %3270 = getelementptr inbounds double**, double*** %3269, i64 %3226
  %3271 = load double**, double*** %3270, align 8
  %3272 = shl nsw i32 %storemerge23, 1
  %3273 = sext i32 %3272 to i64
  %3274 = getelementptr inbounds double*, double** %3271, i64 %3273
  %3275 = load double*, double** %3274, align 8
  %3276 = getelementptr inbounds double, double* %3275, i64 %3030
  store double %3264, double* %3276, align 8
  %3277 = load %struct.block*, %struct.block** %32, align 8
  %3278 = getelementptr inbounds %struct.block, %struct.block* %3277, i64 0, i32 11
  %3279 = load double****, double***** %3278, align 8
  %3280 = getelementptr inbounds double***, double**** %3279, i64 %3032
  %3281 = load double***, double**** %3280, align 8
  %3282 = getelementptr inbounds double**, double*** %3281, i64 %3228
  %3283 = load double**, double*** %3282, align 8
  %3284 = shl nsw i32 %storemerge23, 1
  %3285 = add nsw i32 %3284, -1
  %3286 = sext i32 %3285 to i64
  %3287 = getelementptr inbounds double*, double** %3283, i64 %3286
  %3288 = load double*, double** %3287, align 8
  %3289 = getelementptr inbounds double, double* %3288, i64 %3034
  store double %3264, double* %3289, align 8
  %3290 = load %struct.block*, %struct.block** %32, align 8
  %3291 = getelementptr inbounds %struct.block, %struct.block* %3290, i64 0, i32 11
  %3292 = load double****, double***** %3291, align 8
  %3293 = getelementptr inbounds double***, double**** %3292, i64 %3036
  %3294 = load double***, double**** %3293, align 8
  %3295 = getelementptr inbounds double**, double*** %3294, i64 %3231
  %3296 = load double**, double*** %3295, align 8
  %3297 = shl nsw i32 %storemerge23, 1
  %3298 = sext i32 %3297 to i64
  %3299 = getelementptr inbounds double*, double** %3296, i64 %3298
  %3300 = load double*, double** %3299, align 8
  %3301 = getelementptr inbounds double, double* %3300, i64 %3038
  store double %3264, double* %3301, align 8
  %3302 = load %struct.block*, %struct.block** %32, align 8
  %3303 = getelementptr inbounds %struct.block, %struct.block* %3302, i64 0, i32 11
  %3304 = load double****, double***** %3303, align 8
  %3305 = getelementptr inbounds double***, double**** %3304, i64 %3040
  %3306 = load double***, double**** %3305, align 8
  %3307 = getelementptr inbounds double**, double*** %3306, i64 %3234
  %3308 = load double**, double*** %3307, align 8
  %3309 = shl nsw i32 %storemerge23, 1
  %3310 = add nsw i32 %3309, -1
  %3311 = sext i32 %3310 to i64
  %3312 = getelementptr inbounds double*, double** %3308, i64 %3311
  %3313 = load double*, double** %3312, align 8
  %3314 = getelementptr inbounds double, double* %3313, i64 %3042
  store double %3264, double* %3314, align 8
  %3315 = load %struct.block*, %struct.block** %32, align 8
  %3316 = getelementptr inbounds %struct.block, %struct.block* %3315, i64 0, i32 11
  %3317 = load double****, double***** %3316, align 8
  %3318 = getelementptr inbounds double***, double**** %3317, i64 %3044
  %3319 = load double***, double**** %3318, align 8
  %3320 = getelementptr inbounds double**, double*** %3319, i64 %3237
  %3321 = load double**, double*** %3320, align 8
  %3322 = shl nsw i32 %storemerge23, 1
  %3323 = add nsw i32 %3322, -1
  %3324 = sext i32 %3323 to i64
  %3325 = getelementptr inbounds double*, double** %3321, i64 %3324
  %3326 = load double*, double** %3325, align 8
  %3327 = getelementptr inbounds double, double* %3326, i64 %3046
  %3328 = load double, double* %3327, align 8
  %3329 = load %struct.block*, %struct.block** %32, align 8
  %3330 = getelementptr inbounds %struct.block, %struct.block* %3329, i64 0, i32 11
  %3331 = load double****, double***** %3330, align 8
  %3332 = getelementptr inbounds double***, double**** %3331, i64 %3048
  %3333 = load double***, double**** %3332, align 8
  %3334 = getelementptr inbounds double**, double*** %3333, i64 %3240
  %3335 = load double**, double*** %3334, align 8
  %3336 = shl nsw i32 %storemerge23, 1
  %3337 = sext i32 %3336 to i64
  %3338 = getelementptr inbounds double*, double** %3335, i64 %3337
  %3339 = load double*, double** %3338, align 8
  %3340 = getelementptr inbounds double, double* %3339, i64 %3050
  %3341 = load double, double* %3340, align 8
  %3342 = fadd double %3328, %3341
  %3343 = load %struct.block*, %struct.block** %32, align 8
  %3344 = getelementptr inbounds %struct.block, %struct.block* %3343, i64 0, i32 11
  %3345 = load double****, double***** %3344, align 8
  %3346 = getelementptr inbounds double***, double**** %3345, i64 %3052
  %3347 = load double***, double**** %3346, align 8
  %3348 = getelementptr inbounds double**, double*** %3347, i64 %3242
  %3349 = load double**, double*** %3348, align 8
  %3350 = shl nsw i32 %storemerge23, 1
  %3351 = add nsw i32 %3350, -1
  %3352 = sext i32 %3351 to i64
  %3353 = getelementptr inbounds double*, double** %3349, i64 %3352
  %3354 = load double*, double** %3353, align 8
  %3355 = getelementptr inbounds double, double* %3354, i64 %3054
  %3356 = load double, double* %3355, align 8
  %3357 = fadd double %3342, %3356
  %3358 = load %struct.block*, %struct.block** %32, align 8
  %3359 = getelementptr inbounds %struct.block, %struct.block* %3358, i64 0, i32 11
  %3360 = load double****, double***** %3359, align 8
  %3361 = getelementptr inbounds double***, double**** %3360, i64 %3056
  %3362 = load double***, double**** %3361, align 8
  %3363 = getelementptr inbounds double**, double*** %3362, i64 %3244
  %3364 = load double**, double*** %3363, align 8
  %3365 = shl nsw i32 %storemerge23, 1
  %3366 = sext i32 %3365 to i64
  %3367 = getelementptr inbounds double*, double** %3364, i64 %3366
  %3368 = load double*, double** %3367, align 8
  %3369 = getelementptr inbounds double, double* %3368, i64 %3058
  %3370 = load double, double* %3369, align 8
  %3371 = fadd double %3357, %3370
  %3372 = load %struct.block*, %struct.block** %31, align 8
  %3373 = getelementptr inbounds %struct.block, %struct.block* %3372, i64 0, i32 11
  %3374 = load double****, double***** %3373, align 8
  %3375 = getelementptr inbounds double***, double**** %3374, i64 %3060
  %3376 = load double***, double**** %3375, align 8
  %3377 = getelementptr inbounds double**, double*** %3376, i64 %3246
  %3378 = load double**, double*** %3377, align 8
  %3379 = add nsw i32 %storemerge23, %3062
  %3380 = sext i32 %3379 to i64
  %3381 = getelementptr inbounds double*, double** %3378, i64 %3380
  %3382 = load double*, double** %3381, align 8
  %3383 = getelementptr inbounds double, double* %3382, i64 %3064
  store double %3371, double* %3383, align 8
  %3384 = add nsw i32 %storemerge23, 1
  br label %3247

; <label>:3385:                                   ; preds = %3247
  store i32 %storemerge23, i32* %16, align 4
  %3386 = load %struct.block*, %struct.block** %31, align 8
  %3387 = getelementptr inbounds %struct.block, %struct.block* %3386, i64 0, i32 11
  %3388 = load double****, double***** %3387, align 8
  %3389 = getelementptr inbounds double***, double**** %3388, i64 %3085
  %3390 = load double***, double**** %3389, align 8
  %3391 = add nsw i32 %storemerge20, %3086
  %3392 = sext i32 %3391 to i64
  %3393 = getelementptr inbounds double**, double*** %3390, i64 %3392
  %3394 = load double**, double*** %3393, align 8
  %3395 = getelementptr inbounds double*, double** %3394, i64 %3090
  %3396 = load double*, double** %3395, align 8
  %3397 = getelementptr inbounds double, double* %3396, i64 %3092
  %3398 = load double, double* %3397, align 8
  %3399 = fmul double %3398, 2.500000e-01
  %3400 = load %struct.block*, %struct.block** %32, align 8
  %3401 = getelementptr inbounds %struct.block, %struct.block* %3400, i64 0, i32 11
  %3402 = load double****, double***** %3401, align 8
  %3403 = getelementptr inbounds double***, double**** %3402, i64 %3094
  %3404 = load double***, double**** %3403, align 8
  %3405 = shl nsw i32 %storemerge20, 1
  %3406 = sext i32 %3405 to i64
  %3407 = getelementptr inbounds double**, double*** %3404, i64 %3406
  %3408 = load double**, double*** %3407, align 8
  %3409 = getelementptr inbounds double*, double** %3408, i64 %3096
  %3410 = load double*, double** %3409, align 8
  %3411 = getelementptr inbounds double, double* %3410, i64 %3098
  store double %3399, double* %3411, align 8
  %3412 = load %struct.block*, %struct.block** %32, align 8
  %3413 = getelementptr inbounds %struct.block, %struct.block* %3412, i64 0, i32 11
  %3414 = load double****, double***** %3413, align 8
  %3415 = getelementptr inbounds double***, double**** %3414, i64 %3100
  %3416 = load double***, double**** %3415, align 8
  %3417 = shl nsw i32 %storemerge20, 1
  %3418 = add nsw i32 %3417, -1
  %3419 = sext i32 %3418 to i64
  %3420 = getelementptr inbounds double**, double*** %3416, i64 %3419
  %3421 = load double**, double*** %3420, align 8
  %3422 = getelementptr inbounds double*, double** %3421, i64 %3102
  %3423 = load double*, double** %3422, align 8
  %3424 = getelementptr inbounds double, double* %3423, i64 %3104
  store double %3399, double* %3424, align 8
  %3425 = add nsw i32 %storemerge20, 1
  br label %3105

; <label>:3426:                                   ; preds = %3105
  store i32 %storemerge20, i32* %15, align 4
  %3427 = load %struct.block*, %struct.block** %31, align 8
  %3428 = getelementptr inbounds %struct.block, %struct.block* %3427, i64 0, i32 11
  %3429 = load double****, double***** %3428, align 8
  %3430 = load i32, i32* %18, align 4
  %3431 = sext i32 %3430 to i64
  %3432 = getelementptr inbounds double***, double**** %3429, i64 %3431
  %3433 = load double***, double**** %3432, align 8
  %3434 = load i32, i32* %22, align 4
  %3435 = load i32, i32* %20, align 4
  %3436 = add nsw i32 %3434, %3435
  %3437 = sext i32 %3436 to i64
  %3438 = getelementptr inbounds double**, double*** %3433, i64 %3437
  %3439 = load double**, double*** %3438, align 8
  %3440 = load i32, i32* %24, align 4
  %3441 = sext i32 %3440 to i64
  %3442 = getelementptr inbounds double*, double** %3439, i64 %3441
  %3443 = load double*, double** %3442, align 8
  %3444 = load i32, i32* %28, align 4
  %3445 = sext i32 %3444 to i64
  %3446 = getelementptr inbounds double, double* %3443, i64 %3445
  %3447 = load double, double* %3446, align 8
  %3448 = fmul double %3447, 2.500000e-01
  %3449 = load %struct.block*, %struct.block** %32, align 8
  %3450 = getelementptr inbounds %struct.block, %struct.block* %3449, i64 0, i32 11
  %3451 = load double****, double***** %3450, align 8
  %3452 = load i32, i32* %18, align 4
  %3453 = sext i32 %3452 to i64
  %3454 = getelementptr inbounds double***, double**** %3451, i64 %3453
  %3455 = load double***, double**** %3454, align 8
  %3456 = load i32, i32* %21, align 4
  %3457 = sext i32 %3456 to i64
  %3458 = getelementptr inbounds double**, double*** %3455, i64 %3457
  %3459 = load double**, double*** %3458, align 8
  %3460 = load double*, double** %3459, align 8
  %3461 = load i32, i32* %29, align 4
  %3462 = sext i32 %3461 to i64
  %3463 = getelementptr inbounds double, double* %3460, i64 %3462
  store double %3448, double* %3463, align 8
  %3464 = load i32, i32* %18, align 4
  %3465 = sext i32 %3464 to i64
  %3466 = load i32, i32* %22, align 4
  %3467 = load i32, i32* %20, align 4
  %3468 = add nsw i32 %3466, %3467
  %3469 = sext i32 %3468 to i64
  %3470 = load i32, i32* %24, align 4
  %3471 = load i32, i32* %28, align 4
  %3472 = sext i32 %3471 to i64
  %3473 = load i32, i32* %18, align 4
  %3474 = sext i32 %3473 to i64
  %3475 = load i32, i32* %21, align 4
  %3476 = sext i32 %3475 to i64
  %3477 = load i32, i32* %29, align 4
  %3478 = sext i32 %3477 to i64
  %3479 = load i32, i32* %18, align 4
  %3480 = sext i32 %3479 to i64
  %3481 = load i32, i32* %21, align 4
  %3482 = sext i32 %3481 to i64
  %3483 = load i32, i32* %29, align 4
  %3484 = sext i32 %3483 to i64
  br label %3485

; <label>:3485:                                   ; preds = %3488, %3426
  %storemerge21 = phi i32 [ 1, %3426 ], [ %3528, %3488 ]
  %3486 = load i32, i32* @y_block_half, align 4
  %3487 = icmp sgt i32 %storemerge21, %3486
  br i1 %3487, label %3529, label %3488

; <label>:3488:                                   ; preds = %3485
  %3489 = load %struct.block*, %struct.block** %31, align 8
  %3490 = getelementptr inbounds %struct.block, %struct.block* %3489, i64 0, i32 11
  %3491 = load double****, double***** %3490, align 8
  %3492 = getelementptr inbounds double***, double**** %3491, i64 %3465
  %3493 = load double***, double**** %3492, align 8
  %3494 = getelementptr inbounds double**, double*** %3493, i64 %3469
  %3495 = load double**, double*** %3494, align 8
  %3496 = add nsw i32 %storemerge21, %3470
  %3497 = sext i32 %3496 to i64
  %3498 = getelementptr inbounds double*, double** %3495, i64 %3497
  %3499 = load double*, double** %3498, align 8
  %3500 = getelementptr inbounds double, double* %3499, i64 %3472
  %3501 = load double, double* %3500, align 8
  %3502 = fmul double %3501, 2.500000e-01
  %3503 = load %struct.block*, %struct.block** %32, align 8
  %3504 = getelementptr inbounds %struct.block, %struct.block* %3503, i64 0, i32 11
  %3505 = load double****, double***** %3504, align 8
  %3506 = getelementptr inbounds double***, double**** %3505, i64 %3474
  %3507 = load double***, double**** %3506, align 8
  %3508 = getelementptr inbounds double**, double*** %3507, i64 %3476
  %3509 = load double**, double*** %3508, align 8
  %3510 = shl nsw i32 %storemerge21, 1
  %3511 = sext i32 %3510 to i64
  %3512 = getelementptr inbounds double*, double** %3509, i64 %3511
  %3513 = load double*, double** %3512, align 8
  %3514 = getelementptr inbounds double, double* %3513, i64 %3478
  store double %3502, double* %3514, align 8
  %3515 = load %struct.block*, %struct.block** %32, align 8
  %3516 = getelementptr inbounds %struct.block, %struct.block* %3515, i64 0, i32 11
  %3517 = load double****, double***** %3516, align 8
  %3518 = getelementptr inbounds double***, double**** %3517, i64 %3480
  %3519 = load double***, double**** %3518, align 8
  %3520 = getelementptr inbounds double**, double*** %3519, i64 %3482
  %3521 = load double**, double*** %3520, align 8
  %3522 = shl nsw i32 %storemerge21, 1
  %3523 = add nsw i32 %3522, -1
  %3524 = sext i32 %3523 to i64
  %3525 = getelementptr inbounds double*, double** %3521, i64 %3524
  %3526 = load double*, double** %3525, align 8
  %3527 = getelementptr inbounds double, double* %3526, i64 %3484
  store double %3502, double* %3527, align 8
  %3528 = add nsw i32 %storemerge21, 1
  br label %3485

; <label>:3529:                                   ; preds = %3485
  store i32 %storemerge21, i32* %16, align 4
  %3530 = load %struct.block*, %struct.block** %31, align 8
  %3531 = getelementptr inbounds %struct.block, %struct.block* %3530, i64 0, i32 11
  %3532 = load double****, double***** %3531, align 8
  %3533 = load i32, i32* %18, align 4
  %3534 = sext i32 %3533 to i64
  %3535 = getelementptr inbounds double***, double**** %3532, i64 %3534
  %3536 = load double***, double**** %3535, align 8
  %3537 = load i32, i32* %22, align 4
  %3538 = load i32, i32* %20, align 4
  %3539 = add nsw i32 %3537, %3538
  %3540 = sext i32 %3539 to i64
  %3541 = getelementptr inbounds double**, double*** %3536, i64 %3540
  %3542 = load double**, double*** %3541, align 8
  %3543 = load i32, i32* %26, align 4
  %3544 = load i32, i32* %24, align 4
  %3545 = add nsw i32 %3543, %3544
  %3546 = sext i32 %3545 to i64
  %3547 = getelementptr inbounds double*, double** %3542, i64 %3546
  %3548 = load double*, double** %3547, align 8
  %3549 = load i32, i32* %28, align 4
  %3550 = sext i32 %3549 to i64
  %3551 = getelementptr inbounds double, double* %3548, i64 %3550
  %3552 = load double, double* %3551, align 8
  %3553 = fmul double %3552, 2.500000e-01
  %3554 = load %struct.block*, %struct.block** %32, align 8
  %3555 = getelementptr inbounds %struct.block, %struct.block* %3554, i64 0, i32 11
  %3556 = load double****, double***** %3555, align 8
  %3557 = load i32, i32* %18, align 4
  %3558 = sext i32 %3557 to i64
  %3559 = getelementptr inbounds double***, double**** %3556, i64 %3558
  %3560 = load double***, double**** %3559, align 8
  %3561 = load i32, i32* %21, align 4
  %3562 = sext i32 %3561 to i64
  %3563 = getelementptr inbounds double**, double*** %3560, i64 %3562
  %3564 = load double**, double*** %3563, align 8
  %3565 = load i32, i32* %25, align 4
  %3566 = sext i32 %3565 to i64
  %3567 = getelementptr inbounds double*, double** %3564, i64 %3566
  %3568 = load double*, double** %3567, align 8
  %3569 = load i32, i32* %29, align 4
  %3570 = sext i32 %3569 to i64
  %3571 = getelementptr inbounds double, double* %3568, i64 %3570
  store double %3553, double* %3571, align 8
  %3572 = load i32, i32* %12, align 4
  %3573 = icmp eq i32 %3572, 1
  br i1 %3573, label %3574, label %3706

; <label>:3574:                                   ; preds = %3529
  %3575 = load i32, i32* %11, align 4
  %3576 = icmp eq i32 %3575, 0
  %3577 = load %struct.block*, %struct.block** %32, align 8
  %3578 = getelementptr inbounds %struct.block, %struct.block* %3577, i64 0, i32 11
  %3579 = load double****, double***** %3578, align 8
  %3580 = load i32, i32* %18, align 4
  %3581 = sext i32 %3580 to i64
  %3582 = getelementptr inbounds double***, double**** %3579, i64 %3581
  %3583 = load double***, double**** %3582, align 8
  %3584 = load i32, i32* %21, align 4
  %3585 = sext i32 %3584 to i64
  %3586 = getelementptr inbounds double**, double*** %3583, i64 %3585
  %3587 = load double**, double*** %3586, align 8
  br i1 %3576, label %3588, label %3611

; <label>:3588:                                   ; preds = %3574
  %3589 = load double*, double** %3587, align 8
  %3590 = load i32, i32* %30, align 4
  %3591 = sext i32 %3590 to i64
  %3592 = getelementptr inbounds double, double* %3589, i64 %3591
  %3593 = bitcast double* %3592 to i64*
  %3594 = load i64, i64* %3593, align 8
  %3595 = load %struct.block*, %struct.block** %31, align 8
  %3596 = getelementptr inbounds %struct.block, %struct.block* %3595, i64 0, i32 11
  %3597 = load double****, double***** %3596, align 8
  %3598 = load i32, i32* %18, align 4
  %3599 = sext i32 %3598 to i64
  %3600 = getelementptr inbounds double***, double**** %3597, i64 %3599
  %3601 = load double***, double**** %3600, align 8
  %3602 = load i32, i32* %21, align 4
  %3603 = sext i32 %3602 to i64
  %3604 = getelementptr inbounds double**, double*** %3601, i64 %3603
  %3605 = load double**, double*** %3604, align 8
  %3606 = load double*, double** %3605, align 8
  %3607 = load i32, i32* %27, align 4
  %3608 = sext i32 %3607 to i64
  %3609 = getelementptr inbounds double, double* %3606, i64 %3608
  %3610 = bitcast double* %3609 to i64*
  store i64 %3594, i64* %3610, align 8
  br label %3640

; <label>:3611:                                   ; preds = %3574
  %3612 = load i32, i32* %25, align 4
  %3613 = sext i32 %3612 to i64
  %3614 = getelementptr inbounds double*, double** %3587, i64 %3613
  %3615 = load double*, double** %3614, align 8
  %3616 = load i32, i32* %30, align 4
  %3617 = sext i32 %3616 to i64
  %3618 = getelementptr inbounds double, double* %3615, i64 %3617
  %3619 = bitcast double* %3618 to i64*
  %3620 = load i64, i64* %3619, align 8
  %3621 = load %struct.block*, %struct.block** %31, align 8
  %3622 = getelementptr inbounds %struct.block, %struct.block* %3621, i64 0, i32 11
  %3623 = load double****, double***** %3622, align 8
  %3624 = load i32, i32* %18, align 4
  %3625 = sext i32 %3624 to i64
  %3626 = getelementptr inbounds double***, double**** %3623, i64 %3625
  %3627 = load double***, double**** %3626, align 8
  %3628 = load i32, i32* %21, align 4
  %3629 = sext i32 %3628 to i64
  %3630 = getelementptr inbounds double**, double*** %3627, i64 %3629
  %3631 = load double**, double*** %3630, align 8
  %3632 = load i32, i32* %25, align 4
  %3633 = sext i32 %3632 to i64
  %3634 = getelementptr inbounds double*, double** %3631, i64 %3633
  %3635 = load double*, double** %3634, align 8
  %3636 = load i32, i32* %27, align 4
  %3637 = sext i32 %3636 to i64
  %3638 = getelementptr inbounds double, double* %3635, i64 %3637
  %3639 = bitcast double* %3638 to i64*
  store i64 %3620, i64* %3639, align 8
  br label %3640

; <label>:3640:                                   ; preds = %3611, %3588
  %3641 = load i32, i32* %18, align 4
  %3642 = sext i32 %3641 to i64
  %3643 = load i32, i32* %21, align 4
  %3644 = sext i32 %3643 to i64
  %3645 = load i32, i32* %30, align 4
  %3646 = sext i32 %3645 to i64
  %3647 = load i32, i32* %18, align 4
  %3648 = sext i32 %3647 to i64
  %3649 = load i32, i32* %21, align 4
  %3650 = sext i32 %3649 to i64
  %3651 = load i32, i32* %30, align 4
  %3652 = sext i32 %3651 to i64
  %3653 = load i32, i32* %18, align 4
  %3654 = sext i32 %3653 to i64
  %3655 = load i32, i32* %21, align 4
  %3656 = sext i32 %3655 to i64
  %3657 = load i32, i32* %24, align 4
  %3658 = load i32, i32* %27, align 4
  %3659 = sext i32 %3658 to i64
  br label %3660

; <label>:3660:                                   ; preds = %3663, %3640
  %storemerge22 = phi i32 [ 1, %3640 ], [ %3704, %3663 ]
  %3661 = load i32, i32* @y_block_half, align 4
  %3662 = icmp sgt i32 %storemerge22, %3661
  br i1 %3662, label %3705, label %3663

; <label>:3663:                                   ; preds = %3660
  %3664 = load %struct.block*, %struct.block** %32, align 8
  %3665 = getelementptr inbounds %struct.block, %struct.block* %3664, i64 0, i32 11
  %3666 = load double****, double***** %3665, align 8
  %3667 = getelementptr inbounds double***, double**** %3666, i64 %3642
  %3668 = load double***, double**** %3667, align 8
  %3669 = getelementptr inbounds double**, double*** %3668, i64 %3644
  %3670 = load double**, double*** %3669, align 8
  %3671 = shl nsw i32 %storemerge22, 1
  %3672 = add nsw i32 %3671, -1
  %3673 = sext i32 %3672 to i64
  %3674 = getelementptr inbounds double*, double** %3670, i64 %3673
  %3675 = load double*, double** %3674, align 8
  %3676 = getelementptr inbounds double, double* %3675, i64 %3646
  %3677 = load double, double* %3676, align 8
  %3678 = load %struct.block*, %struct.block** %32, align 8
  %3679 = getelementptr inbounds %struct.block, %struct.block* %3678, i64 0, i32 11
  %3680 = load double****, double***** %3679, align 8
  %3681 = getelementptr inbounds double***, double**** %3680, i64 %3648
  %3682 = load double***, double**** %3681, align 8
  %3683 = getelementptr inbounds double**, double*** %3682, i64 %3650
  %3684 = load double**, double*** %3683, align 8
  %3685 = shl nsw i32 %storemerge22, 1
  %3686 = sext i32 %3685 to i64
  %3687 = getelementptr inbounds double*, double** %3684, i64 %3686
  %3688 = load double*, double** %3687, align 8
  %3689 = getelementptr inbounds double, double* %3688, i64 %3652
  %3690 = load double, double* %3689, align 8
  %3691 = fadd double %3677, %3690
  %3692 = load %struct.block*, %struct.block** %31, align 8
  %3693 = getelementptr inbounds %struct.block, %struct.block* %3692, i64 0, i32 11
  %3694 = load double****, double***** %3693, align 8
  %3695 = getelementptr inbounds double***, double**** %3694, i64 %3654
  %3696 = load double***, double**** %3695, align 8
  %3697 = getelementptr inbounds double**, double*** %3696, i64 %3656
  %3698 = load double**, double*** %3697, align 8
  %3699 = add nsw i32 %storemerge22, %3657
  %3700 = sext i32 %3699 to i64
  %3701 = getelementptr inbounds double*, double** %3698, i64 %3700
  %3702 = load double*, double** %3701, align 8
  %3703 = getelementptr inbounds double, double* %3702, i64 %3659
  store double %3691, double* %3703, align 8
  %3704 = add nsw i32 %storemerge22, 1
  br label %3660

; <label>:3705:                                   ; preds = %3660
  store i32 %storemerge22, i32* %16, align 4
  br label %3706

; <label>:3706:                                   ; preds = %3529, %3705
  %3707 = load i32, i32* %18, align 4
  %3708 = add nsw i32 %3707, 1
  br label %2741

; <label>:3709:                                   ; preds = %760, %2713, %2741, %1751, %272, %504, %734, %503
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @apply_bc(i32, %struct.block*, i32, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.block*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store %struct.block* %1, %struct.block** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %14, align 4
  store i32 1, i32* %13, align 4
  %15 = load i32, i32* @code, align 4
  %16 = icmp eq i32 %15, 0
  %17 = load i32, i32* @stencil, align 4
  %18 = icmp eq i32 %17, 7
  %or.cond = and i1 %16, %18
  %19 = load i32, i32* %5, align 4
  br i1 %or.cond, label %20, label %195

; <label>:20:                                     ; preds = %4
  switch i32 %19, label %376 [
    i32 1, label %21
    i32 0, label %24
    i32 3, label %79
    i32 2, label %82
    i32 5, label %137
    i32 4, label %140
  ]

; <label>:21:                                     ; preds = %20
  %22 = load i32, i32* @x_block_size, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %14, align 4
  store i32 %22, i32* %13, align 4
  br label %24

; <label>:24:                                     ; preds = %21, %20
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %7, align 4
  %27 = load i32, i32* %8, align 4
  %28 = add nsw i32 %26, %27
  %29 = load %struct.block*, %struct.block** %6, align 8
  %30 = getelementptr inbounds %struct.block, %struct.block* %29, i64 0, i32 11
  %31 = load i32, i32* %13, align 4
  %32 = sext i32 %31 to i64
  %33 = load %struct.block*, %struct.block** %6, align 8
  %34 = getelementptr inbounds %struct.block, %struct.block* %33, i64 0, i32 11
  %35 = load i32, i32* %14, align 4
  %36 = sext i32 %35 to i64
  %.promoted45 = load i32, i32* %12, align 1
  %.promoted48 = load i32, i32* %11, align 1
  br label %37

; <label>:37:                                     ; preds = %76, %24
  %storemerge16.lcssa49 = phi i32 [ %.promoted48, %24 ], [ %storemerge16, %76 ]
  %storemerge17.lcssa43.lcssa46 = phi i32 [ %.promoted45, %24 ], [ %storemerge17.lcssa43, %76 ]
  %storemerge15 = phi i32 [ %25, %24 ], [ %77, %76 ]
  %38 = icmp slt i32 %storemerge15, %28
  br i1 %38, label %39, label %78

; <label>:39:                                     ; preds = %37
  %40 = sext i32 %storemerge15 to i64
  %41 = sext i32 %storemerge15 to i64
  br label %42

; <label>:42:                                     ; preds = %74, %39
  %storemerge17.lcssa43 = phi i32 [ %storemerge17.lcssa43.lcssa46, %39 ], [ %storemerge17, %74 ]
  %storemerge16 = phi i32 [ 1, %39 ], [ %75, %74 ]
  %43 = load i32, i32* @y_block_size, align 4
  %44 = icmp sgt i32 %storemerge16, %43
  br i1 %44, label %76, label %45

; <label>:45:                                     ; preds = %42
  %46 = sext i32 %storemerge16 to i64
  %47 = sext i32 %storemerge16 to i64
  br label %48

; <label>:48:                                     ; preds = %51, %45
  %storemerge17 = phi i32 [ 1, %45 ], [ %73, %51 ]
  %49 = load i32, i32* @z_block_size, align 4
  %50 = icmp sgt i32 %storemerge17, %49
  br i1 %50, label %74, label %51

; <label>:51:                                     ; preds = %48
  %52 = load double****, double***** %30, align 8
  %53 = getelementptr inbounds double***, double**** %52, i64 %40
  %54 = load double***, double**** %53, align 8
  %55 = getelementptr inbounds double**, double*** %54, i64 %32
  %56 = load double**, double*** %55, align 8
  %57 = getelementptr inbounds double*, double** %56, i64 %46
  %58 = load double*, double** %57, align 8
  %59 = sext i32 %storemerge17 to i64
  %60 = getelementptr inbounds double, double* %58, i64 %59
  %61 = bitcast double* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load double****, double***** %34, align 8
  %64 = getelementptr inbounds double***, double**** %63, i64 %41
  %65 = load double***, double**** %64, align 8
  %66 = getelementptr inbounds double**, double*** %65, i64 %36
  %67 = load double**, double*** %66, align 8
  %68 = getelementptr inbounds double*, double** %67, i64 %47
  %69 = load double*, double** %68, align 8
  %70 = sext i32 %storemerge17 to i64
  %71 = getelementptr inbounds double, double* %69, i64 %70
  %72 = bitcast double* %71 to i64*
  store i64 %62, i64* %72, align 8
  %73 = add nsw i32 %storemerge17, 1
  br label %48

; <label>:74:                                     ; preds = %48
  %75 = add nsw i32 %storemerge16, 1
  br label %42

; <label>:76:                                     ; preds = %42
  %77 = add nsw i32 %storemerge15, 1
  br label %37

; <label>:78:                                     ; preds = %37
  store i32 %storemerge17.lcssa43.lcssa46, i32* %12, align 1
  store i32 %storemerge15, i32* %9, align 4
  store i32 %storemerge16.lcssa49, i32* %11, align 1
  br label %376

; <label>:79:                                     ; preds = %20
  %80 = load i32, i32* @y_block_size, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %14, align 4
  store i32 %80, i32* %13, align 4
  br label %82

; <label>:82:                                     ; preds = %79, %20
  %83 = load i32, i32* %7, align 4
  %84 = load i32, i32* %7, align 4
  %85 = load i32, i32* %8, align 4
  %86 = add nsw i32 %84, %85
  %87 = load %struct.block*, %struct.block** %6, align 8
  %88 = getelementptr inbounds %struct.block, %struct.block* %87, i64 0, i32 11
  %89 = load i32, i32* %13, align 4
  %90 = sext i32 %89 to i64
  %91 = load %struct.block*, %struct.block** %6, align 8
  %92 = getelementptr inbounds %struct.block, %struct.block* %91, i64 0, i32 11
  %93 = load i32, i32* %14, align 4
  %94 = sext i32 %93 to i64
  %.promoted54 = load i32, i32* %12, align 1
  %.promoted57 = load i32, i32* %10, align 1
  br label %95

; <label>:95:                                     ; preds = %134, %82
  %storemerge13.lcssa58 = phi i32 [ %.promoted57, %82 ], [ %storemerge13, %134 ]
  %storemerge14.lcssa52.lcssa55 = phi i32 [ %.promoted54, %82 ], [ %storemerge14.lcssa52, %134 ]
  %storemerge12 = phi i32 [ %83, %82 ], [ %135, %134 ]
  %96 = icmp slt i32 %storemerge12, %86
  br i1 %96, label %97, label %136

; <label>:97:                                     ; preds = %95
  %98 = sext i32 %storemerge12 to i64
  %99 = sext i32 %storemerge12 to i64
  br label %100

; <label>:100:                                    ; preds = %132, %97
  %storemerge14.lcssa52 = phi i32 [ %storemerge14.lcssa52.lcssa55, %97 ], [ %storemerge14, %132 ]
  %storemerge13 = phi i32 [ 1, %97 ], [ %133, %132 ]
  %101 = load i32, i32* @x_block_size, align 4
  %102 = icmp sgt i32 %storemerge13, %101
  br i1 %102, label %134, label %103

; <label>:103:                                    ; preds = %100
  %104 = sext i32 %storemerge13 to i64
  %105 = sext i32 %storemerge13 to i64
  br label %106

; <label>:106:                                    ; preds = %109, %103
  %storemerge14 = phi i32 [ 1, %103 ], [ %131, %109 ]
  %107 = load i32, i32* @z_block_size, align 4
  %108 = icmp sgt i32 %storemerge14, %107
  br i1 %108, label %132, label %109

; <label>:109:                                    ; preds = %106
  %110 = load double****, double***** %88, align 8
  %111 = getelementptr inbounds double***, double**** %110, i64 %98
  %112 = load double***, double**** %111, align 8
  %113 = getelementptr inbounds double**, double*** %112, i64 %104
  %114 = load double**, double*** %113, align 8
  %115 = getelementptr inbounds double*, double** %114, i64 %90
  %116 = load double*, double** %115, align 8
  %117 = sext i32 %storemerge14 to i64
  %118 = getelementptr inbounds double, double* %116, i64 %117
  %119 = bitcast double* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = load double****, double***** %92, align 8
  %122 = getelementptr inbounds double***, double**** %121, i64 %99
  %123 = load double***, double**** %122, align 8
  %124 = getelementptr inbounds double**, double*** %123, i64 %105
  %125 = load double**, double*** %124, align 8
  %126 = getelementptr inbounds double*, double** %125, i64 %94
  %127 = load double*, double** %126, align 8
  %128 = sext i32 %storemerge14 to i64
  %129 = getelementptr inbounds double, double* %127, i64 %128
  %130 = bitcast double* %129 to i64*
  store i64 %120, i64* %130, align 8
  %131 = add nsw i32 %storemerge14, 1
  br label %106

; <label>:132:                                    ; preds = %106
  %133 = add nsw i32 %storemerge13, 1
  br label %100

; <label>:134:                                    ; preds = %100
  %135 = add nsw i32 %storemerge12, 1
  br label %95

; <label>:136:                                    ; preds = %95
  store i32 %storemerge14.lcssa52.lcssa55, i32* %12, align 1
  store i32 %storemerge12, i32* %9, align 4
  store i32 %storemerge13.lcssa58, i32* %10, align 1
  br label %376

; <label>:137:                                    ; preds = %20
  %138 = load i32, i32* @z_block_size, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %14, align 4
  store i32 %138, i32* %13, align 4
  br label %140

; <label>:140:                                    ; preds = %137, %20
  %141 = load i32, i32* %7, align 4
  %142 = load i32, i32* %7, align 4
  %143 = load i32, i32* %8, align 4
  %144 = add nsw i32 %142, %143
  %145 = load %struct.block*, %struct.block** %6, align 8
  %146 = getelementptr inbounds %struct.block, %struct.block* %145, i64 0, i32 11
  %147 = load i32, i32* %13, align 4
  %148 = sext i32 %147 to i64
  %149 = load %struct.block*, %struct.block** %6, align 8
  %150 = getelementptr inbounds %struct.block, %struct.block* %149, i64 0, i32 11
  %151 = load i32, i32* %14, align 4
  %152 = sext i32 %151 to i64
  %.promoted63 = load i32, i32* %11, align 1
  %.promoted66 = load i32, i32* %10, align 1
  br label %153

; <label>:153:                                    ; preds = %192, %140
  %storemerge10.lcssa67 = phi i32 [ %.promoted66, %140 ], [ %storemerge10, %192 ]
  %storemerge11.lcssa61.lcssa64 = phi i32 [ %.promoted63, %140 ], [ %storemerge11.lcssa61, %192 ]
  %storemerge9 = phi i32 [ %141, %140 ], [ %193, %192 ]
  %154 = icmp slt i32 %storemerge9, %144
  br i1 %154, label %155, label %194

; <label>:155:                                    ; preds = %153
  %156 = sext i32 %storemerge9 to i64
  %157 = sext i32 %storemerge9 to i64
  br label %158

; <label>:158:                                    ; preds = %190, %155
  %storemerge11.lcssa61 = phi i32 [ %storemerge11.lcssa61.lcssa64, %155 ], [ %storemerge11, %190 ]
  %storemerge10 = phi i32 [ 1, %155 ], [ %191, %190 ]
  %159 = load i32, i32* @x_block_size, align 4
  %160 = icmp sgt i32 %storemerge10, %159
  br i1 %160, label %192, label %161

; <label>:161:                                    ; preds = %158
  %162 = sext i32 %storemerge10 to i64
  %163 = sext i32 %storemerge10 to i64
  br label %164

; <label>:164:                                    ; preds = %167, %161
  %storemerge11 = phi i32 [ 1, %161 ], [ %189, %167 ]
  %165 = load i32, i32* @y_block_size, align 4
  %166 = icmp sgt i32 %storemerge11, %165
  br i1 %166, label %190, label %167

; <label>:167:                                    ; preds = %164
  %168 = load double****, double***** %146, align 8
  %169 = getelementptr inbounds double***, double**** %168, i64 %156
  %170 = load double***, double**** %169, align 8
  %171 = getelementptr inbounds double**, double*** %170, i64 %162
  %172 = load double**, double*** %171, align 8
  %173 = sext i32 %storemerge11 to i64
  %174 = getelementptr inbounds double*, double** %172, i64 %173
  %175 = load double*, double** %174, align 8
  %176 = getelementptr inbounds double, double* %175, i64 %148
  %177 = bitcast double* %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = load double****, double***** %150, align 8
  %180 = getelementptr inbounds double***, double**** %179, i64 %157
  %181 = load double***, double**** %180, align 8
  %182 = getelementptr inbounds double**, double*** %181, i64 %163
  %183 = load double**, double*** %182, align 8
  %184 = sext i32 %storemerge11 to i64
  %185 = getelementptr inbounds double*, double** %183, i64 %184
  %186 = load double*, double** %185, align 8
  %187 = getelementptr inbounds double, double* %186, i64 %152
  %188 = bitcast double* %187 to i64*
  store i64 %178, i64* %188, align 8
  %189 = add nsw i32 %storemerge11, 1
  br label %164

; <label>:190:                                    ; preds = %164
  %191 = add nsw i32 %storemerge10, 1
  br label %158

; <label>:192:                                    ; preds = %158
  %193 = add nsw i32 %storemerge9, 1
  br label %153

; <label>:194:                                    ; preds = %153
  store i32 %storemerge11.lcssa61.lcssa64, i32* %11, align 1
  store i32 %storemerge9, i32* %9, align 4
  store i32 %storemerge10.lcssa67, i32* %10, align 1
  br label %376

; <label>:195:                                    ; preds = %4
  switch i32 %19, label %376 [
    i32 1, label %196
    i32 0, label %199
    i32 3, label %256
    i32 2, label %259
    i32 5, label %316
    i32 4, label %319
  ]

; <label>:196:                                    ; preds = %195
  %197 = load i32, i32* @x_block_size, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %14, align 4
  store i32 %197, i32* %13, align 4
  br label %199

; <label>:199:                                    ; preds = %196, %195
  %200 = load i32, i32* %7, align 4
  %201 = load i32, i32* %7, align 4
  %202 = load i32, i32* %8, align 4
  %203 = add nsw i32 %201, %202
  %204 = load %struct.block*, %struct.block** %6, align 8
  %205 = getelementptr inbounds %struct.block, %struct.block* %204, i64 0, i32 11
  %206 = load i32, i32* %13, align 4
  %207 = sext i32 %206 to i64
  %208 = load %struct.block*, %struct.block** %6, align 8
  %209 = getelementptr inbounds %struct.block, %struct.block* %208, i64 0, i32 11
  %210 = load i32, i32* %14, align 4
  %211 = sext i32 %210 to i64
  %.promoted20 = load i32, i32* %12, align 1
  %.promoted = load i32, i32* %11, align 1
  br label %212

; <label>:212:                                    ; preds = %253, %199
  %storemerge7.lcssa22 = phi i32 [ %.promoted, %199 ], [ %storemerge7, %253 ]
  %storemerge8.lcssa18.lcssa21 = phi i32 [ %.promoted20, %199 ], [ %storemerge8.lcssa18, %253 ]
  %storemerge6 = phi i32 [ %200, %199 ], [ %254, %253 ]
  %213 = icmp slt i32 %storemerge6, %203
  br i1 %213, label %214, label %255

; <label>:214:                                    ; preds = %212
  %215 = sext i32 %storemerge6 to i64
  %216 = sext i32 %storemerge6 to i64
  br label %217

; <label>:217:                                    ; preds = %251, %214
  %storemerge8.lcssa18 = phi i32 [ %storemerge8.lcssa18.lcssa21, %214 ], [ %storemerge8, %251 ]
  %storemerge7 = phi i32 [ 0, %214 ], [ %252, %251 ]
  %218 = load i32, i32* @y_block_size, align 4
  %219 = add nsw i32 %218, 1
  %220 = icmp sgt i32 %storemerge7, %219
  br i1 %220, label %253, label %221

; <label>:221:                                    ; preds = %217
  %222 = sext i32 %storemerge7 to i64
  %223 = sext i32 %storemerge7 to i64
  br label %224

; <label>:224:                                    ; preds = %228, %221
  %storemerge8 = phi i32 [ 0, %221 ], [ %250, %228 ]
  %225 = load i32, i32* @z_block_size, align 4
  %226 = add nsw i32 %225, 1
  %227 = icmp sgt i32 %storemerge8, %226
  br i1 %227, label %251, label %228

; <label>:228:                                    ; preds = %224
  %229 = load double****, double***** %205, align 8
  %230 = getelementptr inbounds double***, double**** %229, i64 %215
  %231 = load double***, double**** %230, align 8
  %232 = getelementptr inbounds double**, double*** %231, i64 %207
  %233 = load double**, double*** %232, align 8
  %234 = getelementptr inbounds double*, double** %233, i64 %222
  %235 = load double*, double** %234, align 8
  %236 = sext i32 %storemerge8 to i64
  %237 = getelementptr inbounds double, double* %235, i64 %236
  %238 = bitcast double* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = load double****, double***** %209, align 8
  %241 = getelementptr inbounds double***, double**** %240, i64 %216
  %242 = load double***, double**** %241, align 8
  %243 = getelementptr inbounds double**, double*** %242, i64 %211
  %244 = load double**, double*** %243, align 8
  %245 = getelementptr inbounds double*, double** %244, i64 %223
  %246 = load double*, double** %245, align 8
  %247 = sext i32 %storemerge8 to i64
  %248 = getelementptr inbounds double, double* %246, i64 %247
  %249 = bitcast double* %248 to i64*
  store i64 %239, i64* %249, align 8
  %250 = add nsw i32 %storemerge8, 1
  br label %224

; <label>:251:                                    ; preds = %224
  %252 = add nsw i32 %storemerge7, 1
  br label %217

; <label>:253:                                    ; preds = %217
  %254 = add nsw i32 %storemerge6, 1
  br label %212

; <label>:255:                                    ; preds = %212
  store i32 %storemerge8.lcssa18.lcssa21, i32* %12, align 1
  store i32 %storemerge6, i32* %9, align 4
  store i32 %storemerge7.lcssa22, i32* %11, align 1
  br label %376

; <label>:256:                                    ; preds = %195
  %257 = load i32, i32* @y_block_size, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %14, align 4
  store i32 %257, i32* %13, align 4
  br label %259

; <label>:259:                                    ; preds = %256, %195
  %260 = load i32, i32* %7, align 4
  %261 = load i32, i32* %7, align 4
  %262 = load i32, i32* %8, align 4
  %263 = add nsw i32 %261, %262
  %264 = load %struct.block*, %struct.block** %6, align 8
  %265 = getelementptr inbounds %struct.block, %struct.block* %264, i64 0, i32 11
  %266 = load i32, i32* %13, align 4
  %267 = sext i32 %266 to i64
  %268 = load %struct.block*, %struct.block** %6, align 8
  %269 = getelementptr inbounds %struct.block, %struct.block* %268, i64 0, i32 11
  %270 = load i32, i32* %14, align 4
  %271 = sext i32 %270 to i64
  %.promoted27 = load i32, i32* %12, align 1
  %.promoted30 = load i32, i32* %10, align 1
  br label %272

; <label>:272:                                    ; preds = %313, %259
  %storemerge4.lcssa31 = phi i32 [ %.promoted30, %259 ], [ %storemerge4, %313 ]
  %storemerge5.lcssa25.lcssa28 = phi i32 [ %.promoted27, %259 ], [ %storemerge5.lcssa25, %313 ]
  %storemerge3 = phi i32 [ %260, %259 ], [ %314, %313 ]
  %273 = icmp slt i32 %storemerge3, %263
  br i1 %273, label %274, label %315

; <label>:274:                                    ; preds = %272
  %275 = sext i32 %storemerge3 to i64
  %276 = sext i32 %storemerge3 to i64
  br label %277

; <label>:277:                                    ; preds = %311, %274
  %storemerge5.lcssa25 = phi i32 [ %storemerge5.lcssa25.lcssa28, %274 ], [ %storemerge5, %311 ]
  %storemerge4 = phi i32 [ 0, %274 ], [ %312, %311 ]
  %278 = load i32, i32* @x_block_size, align 4
  %279 = add nsw i32 %278, 1
  %280 = icmp sgt i32 %storemerge4, %279
  br i1 %280, label %313, label %281

; <label>:281:                                    ; preds = %277
  %282 = sext i32 %storemerge4 to i64
  %283 = sext i32 %storemerge4 to i64
  br label %284

; <label>:284:                                    ; preds = %288, %281
  %storemerge5 = phi i32 [ 0, %281 ], [ %310, %288 ]
  %285 = load i32, i32* @z_block_size, align 4
  %286 = add nsw i32 %285, 1
  %287 = icmp sgt i32 %storemerge5, %286
  br i1 %287, label %311, label %288

; <label>:288:                                    ; preds = %284
  %289 = load double****, double***** %265, align 8
  %290 = getelementptr inbounds double***, double**** %289, i64 %275
  %291 = load double***, double**** %290, align 8
  %292 = getelementptr inbounds double**, double*** %291, i64 %282
  %293 = load double**, double*** %292, align 8
  %294 = getelementptr inbounds double*, double** %293, i64 %267
  %295 = load double*, double** %294, align 8
  %296 = sext i32 %storemerge5 to i64
  %297 = getelementptr inbounds double, double* %295, i64 %296
  %298 = bitcast double* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = load double****, double***** %269, align 8
  %301 = getelementptr inbounds double***, double**** %300, i64 %276
  %302 = load double***, double**** %301, align 8
  %303 = getelementptr inbounds double**, double*** %302, i64 %283
  %304 = load double**, double*** %303, align 8
  %305 = getelementptr inbounds double*, double** %304, i64 %271
  %306 = load double*, double** %305, align 8
  %307 = sext i32 %storemerge5 to i64
  %308 = getelementptr inbounds double, double* %306, i64 %307
  %309 = bitcast double* %308 to i64*
  store i64 %299, i64* %309, align 8
  %310 = add nsw i32 %storemerge5, 1
  br label %284

; <label>:311:                                    ; preds = %284
  %312 = add nsw i32 %storemerge4, 1
  br label %277

; <label>:313:                                    ; preds = %277
  %314 = add nsw i32 %storemerge3, 1
  br label %272

; <label>:315:                                    ; preds = %272
  store i32 %storemerge5.lcssa25.lcssa28, i32* %12, align 1
  store i32 %storemerge3, i32* %9, align 4
  store i32 %storemerge4.lcssa31, i32* %10, align 1
  br label %376

; <label>:316:                                    ; preds = %195
  %317 = load i32, i32* @z_block_size, align 4
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %14, align 4
  store i32 %317, i32* %13, align 4
  br label %319

; <label>:319:                                    ; preds = %316, %195
  %320 = load i32, i32* %7, align 4
  %321 = load i32, i32* %7, align 4
  %322 = load i32, i32* %8, align 4
  %323 = add nsw i32 %321, %322
  %324 = load %struct.block*, %struct.block** %6, align 8
  %325 = getelementptr inbounds %struct.block, %struct.block* %324, i64 0, i32 11
  %326 = load i32, i32* %13, align 4
  %327 = sext i32 %326 to i64
  %328 = load %struct.block*, %struct.block** %6, align 8
  %329 = getelementptr inbounds %struct.block, %struct.block* %328, i64 0, i32 11
  %330 = load i32, i32* %14, align 4
  %331 = sext i32 %330 to i64
  %.promoted36 = load i32, i32* %11, align 1
  %.promoted39 = load i32, i32* %10, align 1
  br label %332

; <label>:332:                                    ; preds = %373, %319
  %storemerge1.lcssa40 = phi i32 [ %.promoted39, %319 ], [ %storemerge1, %373 ]
  %storemerge2.lcssa34.lcssa37 = phi i32 [ %.promoted36, %319 ], [ %storemerge2.lcssa34, %373 ]
  %storemerge = phi i32 [ %320, %319 ], [ %374, %373 ]
  %333 = icmp slt i32 %storemerge, %323
  br i1 %333, label %334, label %375

; <label>:334:                                    ; preds = %332
  %335 = sext i32 %storemerge to i64
  %336 = sext i32 %storemerge to i64
  br label %337

; <label>:337:                                    ; preds = %371, %334
  %storemerge2.lcssa34 = phi i32 [ %storemerge2.lcssa34.lcssa37, %334 ], [ %storemerge2, %371 ]
  %storemerge1 = phi i32 [ 0, %334 ], [ %372, %371 ]
  %338 = load i32, i32* @x_block_size, align 4
  %339 = add nsw i32 %338, 1
  %340 = icmp sgt i32 %storemerge1, %339
  br i1 %340, label %373, label %341

; <label>:341:                                    ; preds = %337
  %342 = sext i32 %storemerge1 to i64
  %343 = sext i32 %storemerge1 to i64
  br label %344

; <label>:344:                                    ; preds = %348, %341
  %storemerge2 = phi i32 [ 0, %341 ], [ %370, %348 ]
  %345 = load i32, i32* @y_block_size, align 4
  %346 = add nsw i32 %345, 1
  %347 = icmp sgt i32 %storemerge2, %346
  br i1 %347, label %371, label %348

; <label>:348:                                    ; preds = %344
  %349 = load double****, double***** %325, align 8
  %350 = getelementptr inbounds double***, double**** %349, i64 %335
  %351 = load double***, double**** %350, align 8
  %352 = getelementptr inbounds double**, double*** %351, i64 %342
  %353 = load double**, double*** %352, align 8
  %354 = sext i32 %storemerge2 to i64
  %355 = getelementptr inbounds double*, double** %353, i64 %354
  %356 = load double*, double** %355, align 8
  %357 = getelementptr inbounds double, double* %356, i64 %327
  %358 = bitcast double* %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = load double****, double***** %329, align 8
  %361 = getelementptr inbounds double***, double**** %360, i64 %336
  %362 = load double***, double**** %361, align 8
  %363 = getelementptr inbounds double**, double*** %362, i64 %343
  %364 = load double**, double*** %363, align 8
  %365 = sext i32 %storemerge2 to i64
  %366 = getelementptr inbounds double*, double** %364, i64 %365
  %367 = load double*, double** %366, align 8
  %368 = getelementptr inbounds double, double* %367, i64 %331
  %369 = bitcast double* %368 to i64*
  store i64 %359, i64* %369, align 8
  %370 = add nsw i32 %storemerge2, 1
  br label %344

; <label>:371:                                    ; preds = %344
  %372 = add nsw i32 %storemerge1, 1
  br label %337

; <label>:373:                                    ; preds = %337
  %374 = add nsw i32 %storemerge, 1
  br label %332

; <label>:375:                                    ; preds = %332
  store i32 %storemerge2.lcssa34.lcssa37, i32* %11, align 1
  store i32 %storemerge, i32* %9, align 4
  store i32 %storemerge1.lcssa40, i32* %10, align 1
  br label %376

; <label>:376:                                    ; preds = %195, %255, %315, %375, %20, %78, %136, %194
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @driver() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  call void @init()
  call void @init_profile()
  %12 = load i32, i32* @counter_malloc, align 4
  store i32 %12, i32* @counter_malloc_init, align 4
  %13 = load i64, i64* bitcast (double* @size_malloc to i64*), align 8
  store i64 %13, i64* bitcast (double* @size_malloc_init to i64*), align 8
  %14 = call double @timer()
  store double %14, double* %7, align 8
  %15 = load i32, i32* @num_refine, align 4
  %16 = icmp eq i32 %15, 0
  %17 = load i32, i32* @uniform_refine, align 4
  %18 = icmp eq i32 %17, 0
  %or.cond = and i1 %16, %18
  br i1 %or.cond, label %20, label %19

; <label>:19:                                     ; preds = %0
  call void @refine(i32 0)
  br label %20

; <label>:20:                                     ; preds = %0, %19
  %21 = call double @timer()
  store double %21, double* %8, align 8
  %22 = load double, double* %7, align 8
  %23 = fsub double %21, %22
  %24 = load double, double* @timer_refine_all, align 8
  %25 = fadd double %24, %23
  store double %25, double* @timer_refine_all, align 8
  %26 = load i32, i32* @plot_freq, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

; <label>:28:                                     ; preds = %20
  call void @plot(i32 0)
  br label %29

; <label>:29:                                     ; preds = %20, %28
  %30 = call double @timer()
  store double %30, double* %9, align 8
  %31 = load double, double* %8, align 8
  %32 = fsub double %30, %31
  %33 = load double, double* @timer_plot, align 8
  %34 = fadd double %33, %32
  store double %34, double* @timer_plot, align 8
  %35 = load i32, i32* @global_active, align 4
  store i32 %35, i32* @nb_max, align 4
  store i32 %35, i32* @nb_min, align 4
  store i32 0, i32* %6, align 4
  %36 = bitcast double* %11 to i64*
  %.promoted41 = load i32, i32* %2, align 1
  %.promoted44 = load i32, i32* %3, align 1
  %.promoted47 = load i32, i32* %4, align 1
  %.promoted50 = load double, double* %9, align 1
  %.promoted53 = load double, double* %10, align 1
  %.promoted56 = load i32, i32* %5, align 1
  %.promoted = load i32, i32* %6, align 1
  %.promoted61 = load double, double* %8, align 1
  br label %37

; <label>:37:                                     ; preds = %187, %29
  %38 = phi double [ %.promoted61, %29 ], [ %175, %187 ]
  %.lcssa3959 = phi i32 [ %.promoted, %29 ], [ %43, %187 ]
  %.lcssa3657 = phi i32 [ %.promoted56, %29 ], [ %44, %187 ]
  %.lcssa719.lcssa34.lcssa54 = phi double [ %.promoted53, %29 ], [ %.lcssa719.lcssa34, %187 ]
  %.lcssa17.lcssa31.lcssa51 = phi double [ %.promoted50, %29 ], [ %179, %187 ]
  %storemerge215.lcssa28.lcssa48 = phi i32 [ %.promoted47, %29 ], [ %storemerge215.lcssa28, %187 ]
  %storemerge1.lcssa25.lcssa45 = phi i32 [ %.promoted44, %29 ], [ %storemerge1.lcssa25, %187 ]
  %storemerge3.lcssa10.lcssa22.lcssa42 = phi i32 [ %.promoted41, %29 ], [ %storemerge3.lcssa10.lcssa22, %187 ]
  %storemerge = phi i32 [ 1, %29 ], [ %192, %187 ]
  %39 = load i32, i32* @num_tsteps, align 4
  %40 = icmp sgt i32 %storemerge, %39
  br i1 %40, label %193, label %41

; <label>:41:                                     ; preds = %37
  br label %42

; <label>:42:                                     ; preds = %161, %41
  %43 = phi i32 [ %163, %161 ], [ %.lcssa3959, %41 ]
  %44 = phi i32 [ %162, %161 ], [ 0, %41 ]
  %.lcssa719.lcssa34 = phi double [ %.lcssa719, %161 ], [ %.lcssa719.lcssa34.lcssa54, %41 ]
  %.lcssa17.lcssa31 = phi double [ %.lcssa17, %161 ], [ %.lcssa17.lcssa31.lcssa51, %41 ]
  %storemerge215.lcssa28 = phi i32 [ %storemerge215, %161 ], [ %storemerge215.lcssa28.lcssa48, %41 ]
  %storemerge1.lcssa25 = phi i32 [ %storemerge1, %161 ], [ %storemerge1.lcssa25.lcssa45, %41 ]
  %storemerge3.lcssa10.lcssa22 = phi i32 [ %storemerge3.lcssa10, %161 ], [ %storemerge3.lcssa10.lcssa22.lcssa42, %41 ]
  %45 = load i32, i32* @stages_per_ts, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %164

; <label>:47:                                     ; preds = %42
  %48 = load i32, i32* @global_active, align 4
  %49 = sext i32 %48 to i64
  %50 = load i64, i64* @total_blocks, align 8
  %51 = add nsw i64 %50, %49
  store i64 %51, i64* @total_blocks, align 8
  %52 = load i32, i32* @nb_min, align 4
  %53 = icmp slt i32 %48, %52
  br i1 %53, label %54, label %56

; <label>:54:                                     ; preds = %47
  %55 = load i32, i32* @global_active, align 4
  store i32 %55, i32* @nb_min, align 4
  br label %56

; <label>:56:                                     ; preds = %54, %47
  %57 = load i32, i32* @global_active, align 4
  %58 = load i32, i32* @nb_max, align 4
  %59 = icmp sgt i32 %57, %58
  br i1 %59, label %60, label %62

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* @global_active, align 4
  store i32 %61, i32* @nb_max, align 4
  br label %62

; <label>:62:                                     ; preds = %60, %56
  br label %63

; <label>:63:                                     ; preds = %158, %62
  %.lcssa719 = phi double [ %.lcssa719.lcssa34, %62 ], [ %81, %158 ]
  %.lcssa17 = phi double [ %.lcssa17.lcssa31, %62 ], [ %82, %158 ]
  %storemerge215 = phi i32 [ %storemerge215.lcssa28, %62 ], [ %storemerge2, %158 ]
  %storemerge3.lcssa10 = phi i32 [ %storemerge3.lcssa10.lcssa22, %62 ], [ %storemerge3, %158 ]
  %storemerge1 = phi i32 [ 0, %62 ], [ %160, %158 ]
  %64 = load i32, i32* @num_vars, align 4
  %65 = icmp slt i32 %storemerge1, %64
  br i1 %65, label %66, label %161

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* @comm_vars, align 4
  %68 = add nsw i32 %storemerge1, %67
  %69 = load i32, i32* @num_vars, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = load i32, i32* @comm_vars, align 4
  %72 = load i32, i32* @num_vars, align 4
  %73 = sub nsw i32 %72, %storemerge1
  %storemerge2 = select i1 %70, i32 %73, i32 %71
  %74 = call double @timer()
  call void @comm(i32 %storemerge1, i32 %storemerge2, i32 %43)
  %75 = call double @timer()
  %76 = fsub double %75, %74
  %77 = load double, double* @timer_comm_all, align 8
  %78 = fadd double %77, %76
  store double %78, double* @timer_comm_all, align 8
  %79 = add nsw i32 %storemerge1, %storemerge2
  br label %80

; <label>:80:                                     ; preds = %152, %66
  %81 = phi double [ %75, %66 ], [ %153, %152 ]
  %82 = phi double [ %74, %66 ], [ %85, %152 ]
  %storemerge3 = phi i32 [ %storemerge1, %66 ], [ %157, %152 ]
  %83 = icmp slt i32 %storemerge3, %79
  br i1 %83, label %84, label %158

; <label>:84:                                     ; preds = %80
  call void @stencil_calc(i32 %storemerge3)
  %85 = call double @timer()
  %86 = fsub double %85, %81
  %87 = load double, double* @timer_calc_all, align 8
  %88 = fadd double %87, %86
  store double %88, double* @timer_calc_all, align 8
  %89 = load i32, i32* @checksum_freq, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %152, label %91

; <label>:91:                                     ; preds = %84
  %92 = load i32, i32* @checksum_freq, align 4
  %93 = srem i32 %44, %92
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %152

; <label>:95:                                     ; preds = %91
  %96 = call double @check_sum(i32 %storemerge3)
  store double %96, double* %11, align 8
  %97 = load i32, i32* @report_diffusion, align 4
  %98 = icmp ne i32 %97, 0
  %99 = load i32, i32* @my_pe, align 4
  %100 = icmp eq i32 %99, 0
  %or.cond66 = and i1 %98, %100
  br i1 %or.cond66, label %101, label %119

; <label>:101:                                    ; preds = %95
  %102 = load double, double* %11, align 8
  %103 = load double*, double** @grid_sum, align 8
  %104 = sext i32 %storemerge3 to i64
  %105 = getelementptr inbounds double, double* %103, i64 %104
  %106 = load double, double* %105, align 8
  %107 = sext i32 %storemerge3 to i64
  %108 = getelementptr inbounds double, double* %103, i64 %107
  %109 = load double, double* %108, align 8
  %110 = fsub double %102, %109
  %111 = call double @llvm.fabs.f64(double %110)
  %112 = load double*, double** @grid_sum, align 8
  %113 = sext i32 %storemerge3 to i64
  %114 = getelementptr inbounds double, double* %112, i64 %113
  %115 = load double, double* %114, align 8
  %116 = fdiv double %111, %115
  %117 = load double, double* @tol, align 8
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i32 %storemerge, i32 %storemerge3, double %102, double %106, double %116, double %117) #6
  br label %119

; <label>:119:                                    ; preds = %95, %101
  %120 = load double, double* %11, align 8
  %121 = load double*, double** @grid_sum, align 8
  %122 = sext i32 %storemerge3 to i64
  %123 = getelementptr inbounds double, double* %121, i64 %122
  %124 = load double, double* %123, align 8
  %125 = fsub double %120, %124
  %126 = call double @llvm.fabs.f64(double %125)
  %127 = load double*, double** @grid_sum, align 8
  %128 = sext i32 %storemerge3 to i64
  %129 = getelementptr inbounds double, double* %127, i64 %128
  %130 = load double, double* %129, align 8
  %131 = fdiv double %126, %130
  %132 = load double, double* @tol, align 8
  %133 = fcmp ogt double %131, %132
  br i1 %133, label %134, label %146

; <label>:134:                                    ; preds = %119
  store i32 %storemerge3.lcssa10.lcssa22.lcssa42, i32* %2, align 1
  store i32 %storemerge1.lcssa25.lcssa45, i32* %3, align 1
  store i32 %storemerge215.lcssa28.lcssa48, i32* %4, align 1
  store double %.lcssa17.lcssa31.lcssa51, double* %9, align 1
  store double %.lcssa719.lcssa34.lcssa54, double* %10, align 1
  store i32 0, i32* %5, align 1
  store i32 %storemerge, i32* %1, align 4
  store i32 %.lcssa3959, i32* %6, align 1
  store double %38, double* %8, align 1
  store i32 %storemerge3.lcssa10.lcssa22, i32* %2, align 1
  store i32 %storemerge1.lcssa25, i32* %3, align 1
  store i32 %storemerge215.lcssa28, i32* %4, align 1
  store double %.lcssa17.lcssa31, double* %9, align 1
  store double %.lcssa719.lcssa34, double* %10, align 1
  store i32 %44, i32* %5, align 1
  store i32 %43, i32* %6, align 1
  store i32 %storemerge3.lcssa10, i32* %2, align 1
  store i32 %storemerge1, i32* %3, align 4
  store i32 %storemerge2, i32* %4, align 1
  store double %74, double* %9, align 1
  store double %75, double* %10, align 1
  store i32 %storemerge3, i32* %2, align 4
  store double %85, double* %9, align 1
  store double %81, double* %10, align 1
  %135 = load i32, i32* @my_pe, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %197

; <label>:137:                                    ; preds = %134
  %138 = load i32, i32* %1, align 4
  %139 = load double, double* %11, align 8
  %140 = load double*, double** @grid_sum, align 8
  %141 = load i32, i32* %2, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds double, double* %140, i64 %142
  %144 = load double, double* %143, align 8
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1.11, i64 0, i64 0), i32 %138, double %139, double %144, i32 %141) #6
  br label %197

; <label>:146:                                    ; preds = %119
  %147 = load i64, i64* %36, align 8
  %148 = load double*, double** @grid_sum, align 8
  %149 = sext i32 %storemerge3 to i64
  %150 = getelementptr inbounds double, double* %148, i64 %149
  %151 = bitcast double* %150 to i64*
  store i64 %147, i64* %151, align 8
  br label %152

; <label>:152:                                    ; preds = %91, %84, %146
  %153 = call double @timer()
  %154 = fsub double %153, %85
  %155 = load double, double* @timer_cs_all, align 8
  %156 = fadd double %155, %154
  store double %156, double* @timer_cs_all, align 8
  %157 = add nsw i32 %storemerge3, 1
  br label %80

; <label>:158:                                    ; preds = %80
  %159 = load i32, i32* @comm_vars, align 4
  %160 = add nsw i32 %storemerge1, %159
  br label %63

; <label>:161:                                    ; preds = %63
  %162 = add nsw i32 %44, 1
  %163 = add nsw i32 %43, 1
  br label %42

; <label>:164:                                    ; preds = %42
  %165 = load i32, i32* @num_refine, align 4
  %166 = icmp ne i32 %165, 0
  %167 = load i32, i32* @uniform_refine, align 4
  %168 = icmp eq i32 %167, 0
  %or.cond68 = and i1 %166, %168
  br i1 %or.cond68, label %169, label %174

; <label>:169:                                    ; preds = %164
  call void @move()
  %170 = load i32, i32* @refine_freq, align 4
  %171 = srem i32 %storemerge, %170
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

; <label>:173:                                    ; preds = %169
  call void @refine(i32 %storemerge)
  br label %174

; <label>:174:                                    ; preds = %173, %169, %164
  %175 = call double @timer()
  %176 = fsub double %175, %.lcssa719.lcssa34
  %177 = load double, double* @timer_refine_all, align 8
  %178 = fadd double %177, %176
  store double %178, double* @timer_refine_all, align 8
  %179 = call double @timer()
  %180 = load i32, i32* @plot_freq, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %187, label %182

; <label>:182:                                    ; preds = %174
  %183 = load i32, i32* @plot_freq, align 4
  %184 = srem i32 %storemerge, %183
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

; <label>:186:                                    ; preds = %182
  call void @plot(i32 %storemerge)
  br label %187

; <label>:187:                                    ; preds = %182, %174, %186
  %188 = call double @timer()
  %189 = fsub double %188, %179
  %190 = load double, double* @timer_plot, align 8
  %191 = fadd double %190, %189
  store double %191, double* @timer_plot, align 8
  %192 = add nsw i32 %storemerge, 1
  br label %37

; <label>:193:                                    ; preds = %37
  store i32 %storemerge3.lcssa10.lcssa22.lcssa42, i32* %2, align 1
  store i32 %storemerge1.lcssa25.lcssa45, i32* %3, align 1
  store i32 %storemerge215.lcssa28.lcssa48, i32* %4, align 1
  store double %.lcssa17.lcssa31.lcssa51, double* %9, align 1
  store double %.lcssa719.lcssa34.lcssa54, double* %10, align 1
  store i32 %.lcssa3657, i32* %5, align 1
  store i32 %storemerge, i32* %1, align 4
  store i32 %.lcssa3959, i32* %6, align 1
  store double %38, double* %8, align 1
  %194 = call double @timer()
  %195 = load double, double* %7, align 8
  %196 = fsub double %194, %195
  store double %196, double* @timer_all, align 8
  br label %197

; <label>:197:                                    ; preds = %137, %134, %193
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

; Function Attrs: noinline nounwind uwtable
define i32 @glibc_compat_rand() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @next, align 4
  %4 = icmp slt i32 %3, 3
  %5 = load i32, i32* @next, align 4
  %6 = add nsw i32 %5, 341
  %7 = add nsw i32 %5, -3
  %8 = select i1 %4, i32 %6, i32 %7
  store i32 %8, i32* %1, align 4
  %9 = load i32, i32* @next, align 4
  %10 = icmp slt i32 %9, 31
  %11 = load i32, i32* @next, align 4
  %12 = add nsw i32 %11, 313
  %13 = add nsw i32 %11, -31
  %14 = select i1 %10, i32 %12, i32 %13
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %18, %21
  %23 = load i32, i32* @next, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %24
  store i32 %22, i32* %25, align 4
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 1
  store i32 %29, i32* %2, align 4
  %30 = load i32, i32* @next, align 4
  %31 = add nsw i32 %30, 1
  %32 = icmp sgt i32 %30, 342
  %spec.select = select i1 %32, i32 0, i32 %31
  store i32 %spec.select, i32* @next, align 4
  %33 = load i32, i32* %2, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind uwtable
define void @glibc_compat_srand(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp eq i32 %0, 0
  %spec.select = select i1 %6, i32 1, i32 %0
  store i32 %spec.select, i32* getelementptr inbounds ([344 x i32], [344 x i32]* @table, i64 0, i64 0), align 16
  %.promoted = load i32, i32* %3, align 1
  br label %7

; <label>:7:                                      ; preds = %10, %1
  %8 = phi i32 [ %.promoted, %1 ], [ %18, %10 ]
  %storemerge = phi i32 [ 1, %1 ], [ %21, %10 ]
  %9 = icmp slt i32 %storemerge, 31
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %7
  %11 = add nsw i32 %storemerge, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = mul nuw nsw i64 %15, 16807
  %17 = urem i64 %16, 2147483647
  %18 = trunc i64 %17 to i32
  %19 = sext i32 %storemerge to i64
  %20 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %19
  store i32 %18, i32* %20, align 4
  %21 = add nsw i32 %storemerge, 1
  br label %7

; <label>:22:                                     ; preds = %7
  store i32 %storemerge, i32* %2, align 4
  store i32 %8, i32* %3, align 1
  br label %23

; <label>:23:                                     ; preds = %25, %22
  %storemerge1 = phi i32 [ 31, %22 ], [ %32, %25 ]
  %24 = icmp slt i32 %storemerge1, 34
  br i1 %24, label %25, label %33

; <label>:25:                                     ; preds = %23
  %26 = add nsw i32 %storemerge1, -31
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %storemerge1 to i64
  %31 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %30
  store i32 %29, i32* %31, align 4
  %32 = add nsw i32 %storemerge1, 1
  br label %23

; <label>:33:                                     ; preds = %23
  store i32 %storemerge1, i32* %4, align 4
  br label %34

; <label>:34:                                     ; preds = %36, %33
  %storemerge2 = phi i32 [ 34, %33 ], [ %48, %36 ]
  %35 = icmp slt i32 %storemerge2, 344
  br i1 %35, label %36, label %49

; <label>:36:                                     ; preds = %34
  %37 = add nsw i32 %storemerge2, -31
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %storemerge2, -3
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %40, %44
  %46 = sext i32 %storemerge2 to i64
  %47 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %46
  store i32 %45, i32* %47, align 4
  %48 = add nsw i32 %storemerge2, 1
  br label %34

; <label>:49:                                     ; preds = %34
  store i32 %storemerge2, i32* %5, align 4
  store i32 0, i32* @next, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @init() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.block*, align 8
  %13 = load i32, i32* @error_tol, align 4
  %14 = sub nsw i32 0, %13
  %15 = sitofp i32 %14 to double
  %16 = call double @pow(double 1.000000e+01, double %15) #6
  store double %16, double* @tol, align 8
  %17 = load i32*, i32** @p8, align 8
  store i32 1, i32* %17, align 4
  %18 = load i32*, i32** @p2, align 8
  store i32 1, i32* %18, align 4
  br label %19

; <label>:19:                                     ; preds = %22, %0
  %storemerge = phi i32 [ 0, %0 ], [ %42, %22 ]
  %20 = load i32, i32* @num_refine, align 4
  %21 = icmp sgt i32 %storemerge, %20
  br i1 %21, label %43, label %22

; <label>:22:                                     ; preds = %19
  %23 = load i32*, i32** @p8, align 8
  %24 = sext i32 %storemerge to i64
  %25 = getelementptr inbounds i32, i32* %23, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = shl nsw i32 %26, 3
  %28 = add nsw i32 %storemerge, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %23, i64 %29
  store i32 %27, i32* %30, align 4
  %31 = load i32*, i32** @p2, align 8
  %32 = sext i32 %storemerge to i64
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = shl nsw i32 %34, 1
  %36 = add nsw i32 %storemerge, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %31, i64 %37
  store i32 %35, i32* %38, align 4
  %39 = load i32*, i32** @sorted_index, align 8
  %40 = sext i32 %storemerge to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  store i32 0, i32* %41, align 4
  %42 = add nsw i32 %storemerge, 1
  br label %19

; <label>:43:                                     ; preds = %19
  store i32 %storemerge, i32* %3, align 4
  %44 = load i32*, i32** @sorted_index, align 8
  %45 = load i32, i32* @num_refine, align 4
  %46 = add nsw i32 %45, 1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %44, i64 %47
  store i32 0, i32* %48, align 4
  %49 = load i32*, i32** @block_start, align 8
  store i32 0, i32* %49, align 4
  %50 = load i32, i32* @init_block_x, align 4
  %51 = load i32, i32* @init_block_y, align 4
  %52 = mul nsw i32 %50, %51
  %53 = load i32, i32* @init_block_z, align 4
  %54 = mul nsw i32 %52, %53
  store i32 %54, i32* @global_max_b, align 4
  store i32 %54, i32* @local_max_b, align 4
  %55 = load i32, i32* @num_pes, align 4
  %56 = mul nsw i32 %55, %54
  store i32 %56, i32* %11, align 4
  %.promoted64 = load i32, i32* %11, align 1
  br label %57

; <label>:57:                                     ; preds = %61, %43
  %58 = phi i32 [ %.promoted64, %43 ], [ %71, %61 ]
  %storemerge1 = phi i32 [ 1, %43 ], [ %75, %61 ]
  %59 = load i32, i32* @num_refine, align 4
  %60 = icmp sgt i32 %storemerge1, %59
  br i1 %60, label %76, label %61

; <label>:61:                                     ; preds = %57
  %62 = load i32*, i32** @block_start, align 8
  %63 = add nsw i32 %storemerge1, -1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, %58
  %68 = load i32*, i32** @block_start, align 8
  %69 = sext i32 %storemerge1 to i64
  %70 = getelementptr inbounds i32, i32* %68, i64 %69
  store i32 %67, i32* %70, align 4
  %71 = shl nsw i32 %58, 3
  %72 = load i32*, i32** @num_blocks, align 8
  %73 = sext i32 %storemerge1 to i64
  %74 = getelementptr inbounds i32, i32* %72, i64 %73
  store i32 0, i32* %74, align 4
  %75 = add nsw i32 %storemerge1, 1
  br label %57

; <label>:76:                                     ; preds = %57
  store i32 %storemerge1, i32* %3, align 4
  store i32 %58, i32* %11, align 1
  %77 = load i32, i32* @x_block_size, align 4
  %78 = sdiv i32 %77, 2
  store i32 %78, i32* @x_block_half, align 4
  %79 = load i32, i32* @y_block_size, align 4
  %80 = sdiv i32 %79, 2
  store i32 %80, i32* @y_block_half, align 4
  %81 = load i32, i32* @z_block_size, align 4
  %82 = sdiv i32 %81, 2
  store i32 %82, i32* @z_block_half, align 4
  %83 = load i32, i32* @init_block_x, align 4
  %84 = load i32, i32* @init_block_y, align 4
  %85 = mul nsw i32 %83, %84
  %86 = load i32, i32* @init_block_z, align 4
  %87 = mul nsw i32 %85, %86
  store i32 %87, i32* @max_active_block, align 4
  store i32 %87, i32* @num_active, align 4
  %88 = load i32, i32* @num_pes, align 4
  %89 = mul nsw i32 %87, %88
  store i32 %89, i32* @global_active, align 4
  store i32 0, i32* @max_active_parent, align 4
  store i32 0, i32* @num_parents, align 4
  %90 = load i32*, i32** @p2, align 8
  %91 = load i32, i32* @num_refine, align 4
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %90, i64 %93
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %7, align 4
  %96 = load i32, i32* @npx, align 4
  %97 = load i32, i32* @init_block_x, align 4
  %98 = mul nsw i32 %96, %97
  %99 = mul nsw i32 %98, %95
  store i32 %99, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %100 = load i32, i32* @npy, align 4
  %101 = load i32, i32* @init_block_y, align 4
  %102 = mul nsw i32 %100, %101
  %103 = load i32, i32* %7, align 4
  %104 = mul nsw i32 %102, %103
  store i32 %104, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %105 = load i32, i32* @npz, align 4
  %106 = load i32, i32* @init_block_z, align 4
  %107 = mul nsw i32 %105, %106
  %108 = mul nsw i32 %107, %103
  store i32 %108, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %1, align 4
  store i32 0, i32* %6, align 4
  %109 = load i32, i32* %7, align 4
  %110 = sdiv i32 %109, 2
  %111 = load i32, i32* %7, align 4
  %112 = sdiv i32 %111, 2
  %113 = load i32, i32* %7, align 4
  %114 = sdiv i32 %113, 2
  %.promoted46 = load i32, i32* %10, align 1
  %.promoted48 = load i32, i32* %2, align 1
  %.promoted = load i32, i32* %8, align 1
  %.promoted51 = load i32, i32* %9, align 1
  %.promoted53 = load i32, i32* %3, align 1
  %.promoted55 = load i32, i32* %6, align 1
  %.promoted57 = load i32, i32* %1, align 1
  %.promoted59 = load i32, i32* %4, align 1
  %.promoted61 = load i32, i32* %5, align 1
  br label %115

; <label>:115:                                    ; preds = %279, %76
  %116 = phi i32 [ %280, %279 ], [ %.promoted61, %76 ]
  %storemerge3.lcssa60 = phi i32 [ %storemerge3, %279 ], [ %.promoted59, %76 ]
  %.lcssa3144.lcssa58 = phi i32 [ %.lcssa3144, %279 ], [ %.promoted57, %76 ]
  %.lcssa2942.lcssa56 = phi i32 [ %.lcssa2942, %279 ], [ %.promoted55, %76 ]
  %.lcssa40.lcssa54 = phi i32 [ %.lcssa40, %279 ], [ %.promoted53, %76 ]
  %storemerge6.lcssa12.lcssa19.lcssa26.lcssa38.lcssa52 = phi i32 [ %storemerge6.lcssa12.lcssa19.lcssa26.lcssa38, %279 ], [ %.promoted51, %76 ]
  %storemerge5.lcssa17.lcssa24.lcssa36.lcssa50 = phi i32 [ %storemerge5.lcssa17.lcssa24.lcssa36, %279 ], [ %.promoted, %76 ]
  %storemerge4.lcssa22.lcssa34.lcssa49 = phi i32 [ %storemerge4.lcssa22.lcssa34, %279 ], [ %.promoted48, %76 ]
  %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20.lcssa33.lcssa47 = phi i32 [ %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20.lcssa33, %279 ], [ %.promoted46, %76 ]
  %117 = load i32, i32* @init_block_z, align 4
  %118 = icmp slt i32 %116, %117
  br i1 %118, label %119, label %281

; <label>:119:                                    ; preds = %115
  %120 = mul nsw i32 %116, %113
  %121 = add nsw i32 %120, %114
  %122 = icmp eq i32 %116, 0
  br label %123

; <label>:123:                                    ; preds = %277, %119
  %.lcssa3144 = phi i32 [ %.lcssa3144.lcssa58, %119 ], [ %131, %277 ]
  %.lcssa2942 = phi i32 [ %.lcssa2942.lcssa56, %119 ], [ %132, %277 ]
  %.lcssa40 = phi i32 [ %.lcssa40.lcssa54, %119 ], [ %133, %277 ]
  %storemerge6.lcssa12.lcssa19.lcssa26.lcssa38 = phi i32 [ %storemerge6.lcssa12.lcssa19.lcssa26.lcssa38.lcssa52, %119 ], [ %storemerge6.lcssa12.lcssa19.lcssa26, %277 ]
  %storemerge5.lcssa17.lcssa24.lcssa36 = phi i32 [ %storemerge5.lcssa17.lcssa24.lcssa36.lcssa50, %119 ], [ %storemerge5.lcssa17.lcssa24, %277 ]
  %storemerge4.lcssa22.lcssa34 = phi i32 [ %storemerge4.lcssa22.lcssa34.lcssa49, %119 ], [ %storemerge4.lcssa22, %277 ]
  %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20.lcssa33 = phi i32 [ %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20.lcssa33.lcssa47, %119 ], [ %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20, %277 ]
  %storemerge3 = phi i32 [ 0, %119 ], [ %278, %277 ]
  %124 = load i32, i32* @init_block_y, align 4
  %125 = icmp slt i32 %storemerge3, %124
  br i1 %125, label %126, label %279

; <label>:126:                                    ; preds = %123
  %127 = mul nsw i32 %storemerge3, %111
  %128 = add nsw i32 %127, %112
  %129 = icmp eq i32 %storemerge3, 0
  br label %130

; <label>:130:                                    ; preds = %271, %126
  %131 = phi i32 [ %276, %271 ], [ %.lcssa3144, %126 ]
  %132 = phi i32 [ %274, %271 ], [ %.lcssa2942, %126 ]
  %133 = phi i32 [ %275, %271 ], [ 0, %126 ]
  %storemerge6.lcssa12.lcssa19.lcssa26 = phi i32 [ %storemerge6.lcssa12.lcssa19, %271 ], [ %storemerge6.lcssa12.lcssa19.lcssa26.lcssa38, %126 ]
  %storemerge5.lcssa17.lcssa24 = phi i32 [ %storemerge5.lcssa17, %271 ], [ %storemerge5.lcssa17.lcssa24.lcssa36, %126 ]
  %storemerge4.lcssa22 = phi i32 [ %storemerge4, %271 ], [ %storemerge4.lcssa22.lcssa34, %126 ]
  %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20 = phi i32 [ %storemerge7.lcssa8.lcssa11.lcssa14, %271 ], [ %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20.lcssa33, %126 ]
  %134 = load i32, i32* @init_block_x, align 4
  %135 = icmp slt i32 %133, %134
  br i1 %135, label %136, label %277

; <label>:136:                                    ; preds = %130
  %137 = load %struct.block*, %struct.block** @blocks, align 8
  %138 = sext i32 %132 to i64
  %139 = getelementptr inbounds %struct.block, %struct.block* %137, i64 %138
  store %struct.block* %139, %struct.block** %12, align 8
  %140 = getelementptr inbounds %struct.block, %struct.block* %137, i64 %138, i32 1
  store i32 0, i32* %140, align 4
  %141 = load %struct.block*, %struct.block** %12, align 8
  %142 = getelementptr inbounds %struct.block, %struct.block* %141, i64 0, i32 0
  store i32 %131, i32* %142, align 8
  %143 = load %struct.block*, %struct.block** %12, align 8
  %144 = getelementptr inbounds %struct.block, %struct.block* %143, i64 0, i32 4
  store i32 -1, i32* %144, align 8
  %145 = mul nsw i32 %133, %109
  %146 = add nsw i32 %145, %110
  %147 = load %struct.block*, %struct.block** %12, align 8
  %148 = getelementptr inbounds %struct.block, %struct.block* %147, i64 0, i32 10, i64 0
  store i32 %146, i32* %148, align 4
  %149 = load %struct.block*, %struct.block** %12, align 8
  %150 = getelementptr inbounds %struct.block, %struct.block* %149, i64 0, i32 10, i64 1
  store i32 %128, i32* %150, align 4
  %151 = load %struct.block*, %struct.block** %12, align 8
  %152 = getelementptr inbounds %struct.block, %struct.block* %151, i64 0, i32 10, i64 2
  store i32 %121, i32* %152, align 4
  call void @add_sorted_list(i32 %132, i32 %131, i32 0)
  br label %153

; <label>:153:                                    ; preds = %191, %136
  %storemerge6.lcssa12.lcssa19 = phi i32 [ %storemerge6.lcssa12.lcssa19.lcssa26, %136 ], [ %storemerge6.lcssa12, %191 ]
  %storemerge5.lcssa17 = phi i32 [ %storemerge5.lcssa17.lcssa24, %136 ], [ %storemerge5, %191 ]
  %storemerge7.lcssa8.lcssa11.lcssa14 = phi i32 [ %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20, %136 ], [ %storemerge7.lcssa8.lcssa11, %191 ]
  %storemerge4 = phi i32 [ 0, %136 ], [ %192, %191 ]
  %154 = load i32, i32* @num_vars, align 4
  %155 = icmp slt i32 %storemerge4, %154
  br i1 %155, label %156, label %193

; <label>:156:                                    ; preds = %153
  %157 = sext i32 %storemerge4 to i64
  br label %158

; <label>:158:                                    ; preds = %189, %156
  %storemerge6.lcssa12 = phi i32 [ %storemerge6.lcssa12.lcssa19, %156 ], [ %storemerge6, %189 ]
  %storemerge7.lcssa8.lcssa11 = phi i32 [ %storemerge7.lcssa8.lcssa11.lcssa14, %156 ], [ %storemerge7.lcssa8, %189 ]
  %storemerge5 = phi i32 [ 1, %156 ], [ %190, %189 ]
  %159 = load i32, i32* @x_block_size, align 4
  %160 = icmp sgt i32 %storemerge5, %159
  br i1 %160, label %191, label %161

; <label>:161:                                    ; preds = %158
  %162 = sext i32 %storemerge5 to i64
  br label %163

; <label>:163:                                    ; preds = %187, %161
  %storemerge7.lcssa8 = phi i32 [ %storemerge7.lcssa8.lcssa11, %161 ], [ %storemerge7, %187 ]
  %storemerge6 = phi i32 [ 1, %161 ], [ %188, %187 ]
  %164 = load i32, i32* @y_block_size, align 4
  %165 = icmp sgt i32 %storemerge6, %164
  br i1 %165, label %189, label %166

; <label>:166:                                    ; preds = %163
  %167 = sext i32 %storemerge6 to i64
  br label %168

; <label>:168:                                    ; preds = %171, %166
  %storemerge7 = phi i32 [ 1, %166 ], [ %186, %171 ]
  %169 = load i32, i32* @z_block_size, align 4
  %170 = icmp sgt i32 %storemerge7, %169
  br i1 %170, label %187, label %171

; <label>:171:                                    ; preds = %168
  %172 = call i32 @glibc_compat_rand()
  %173 = sitofp i32 %172 to double
  %174 = fdiv double %173, 0x41DFFFFFFFC00000
  %175 = load %struct.block*, %struct.block** %12, align 8
  %176 = getelementptr inbounds %struct.block, %struct.block* %175, i64 0, i32 11
  %177 = load double****, double***** %176, align 8
  %178 = getelementptr inbounds double***, double**** %177, i64 %157
  %179 = load double***, double**** %178, align 8
  %180 = getelementptr inbounds double**, double*** %179, i64 %162
  %181 = load double**, double*** %180, align 8
  %182 = getelementptr inbounds double*, double** %181, i64 %167
  %183 = load double*, double** %182, align 8
  %184 = sext i32 %storemerge7 to i64
  %185 = getelementptr inbounds double, double* %183, i64 %184
  store double %174, double* %185, align 8
  %186 = add nsw i32 %storemerge7, 1
  br label %168

; <label>:187:                                    ; preds = %168
  %188 = add nsw i32 %storemerge6, 1
  br label %163

; <label>:189:                                    ; preds = %163
  %190 = add nsw i32 %storemerge5, 1
  br label %158

; <label>:191:                                    ; preds = %158
  %192 = add nsw i32 %storemerge4, 1
  br label %153

; <label>:193:                                    ; preds = %153
  %194 = icmp eq i32 %133, 0
  %195 = load %struct.block*, %struct.block** %12, align 8
  %196 = getelementptr inbounds %struct.block, %struct.block* %195, i64 0, i32 8, i64 0
  br i1 %194, label %197, label %199

; <label>:197:                                    ; preds = %193
  store i32 -2, i32* %196, align 4
  %198 = getelementptr inbounds %struct.block, %struct.block* %195, i64 0, i32 9, i64 0, i64 0, i64 0
  store i32 0, i32* %198, align 4
  br label %202

; <label>:199:                                    ; preds = %193
  store i32 0, i32* %196, align 4
  %200 = add nsw i32 %132, -1
  %201 = getelementptr inbounds %struct.block, %struct.block* %195, i64 0, i32 9, i64 0, i64 0, i64 0
  store i32 %200, i32* %201, align 4
  br label %202

; <label>:202:                                    ; preds = %199, %197
  %203 = load %struct.block*, %struct.block** %12, align 8
  %204 = getelementptr inbounds %struct.block, %struct.block* %203, i64 0, i32 7, i64 0
  store i32 0, i32* %204, align 4
  %205 = load i32, i32* @init_block_x, align 4
  %206 = add nsw i32 %205, -1
  %207 = icmp eq i32 %133, %206
  %208 = load %struct.block*, %struct.block** %12, align 8
  %209 = getelementptr inbounds %struct.block, %struct.block* %208, i64 0, i32 8, i64 1
  br i1 %207, label %210, label %212

; <label>:210:                                    ; preds = %202
  store i32 -2, i32* %209, align 4
  %211 = getelementptr inbounds %struct.block, %struct.block* %208, i64 0, i32 9, i64 1, i64 0, i64 0
  store i32 0, i32* %211, align 4
  br label %215

; <label>:212:                                    ; preds = %202
  store i32 0, i32* %209, align 4
  %213 = add nsw i32 %132, 1
  %214 = getelementptr inbounds %struct.block, %struct.block* %208, i64 0, i32 9, i64 1, i64 0, i64 0
  store i32 %213, i32* %214, align 4
  br label %215

; <label>:215:                                    ; preds = %212, %210
  %216 = load %struct.block*, %struct.block** %12, align 8
  %217 = getelementptr inbounds %struct.block, %struct.block* %216, i64 0, i32 7, i64 1
  store i32 0, i32* %217, align 4
  %218 = load %struct.block*, %struct.block** %12, align 8
  %219 = getelementptr inbounds %struct.block, %struct.block* %218, i64 0, i32 8, i64 2
  br i1 %129, label %220, label %222

; <label>:220:                                    ; preds = %215
  store i32 -2, i32* %219, align 4
  %221 = getelementptr inbounds %struct.block, %struct.block* %218, i64 0, i32 9, i64 2, i64 0, i64 0
  store i32 0, i32* %221, align 4
  br label %226

; <label>:222:                                    ; preds = %215
  store i32 0, i32* %219, align 4
  %223 = load i32, i32* @init_block_x, align 4
  %224 = sub nsw i32 %132, %223
  %225 = getelementptr inbounds %struct.block, %struct.block* %218, i64 0, i32 9, i64 2, i64 0, i64 0
  store i32 %224, i32* %225, align 4
  br label %226

; <label>:226:                                    ; preds = %222, %220
  %227 = load %struct.block*, %struct.block** %12, align 8
  %228 = getelementptr inbounds %struct.block, %struct.block* %227, i64 0, i32 7, i64 2
  store i32 0, i32* %228, align 4
  %229 = load i32, i32* @init_block_y, align 4
  %230 = add nsw i32 %229, -1
  %231 = icmp eq i32 %storemerge3, %230
  %232 = load %struct.block*, %struct.block** %12, align 8
  %233 = getelementptr inbounds %struct.block, %struct.block* %232, i64 0, i32 8, i64 3
  br i1 %231, label %234, label %236

; <label>:234:                                    ; preds = %226
  store i32 -2, i32* %233, align 4
  %235 = getelementptr inbounds %struct.block, %struct.block* %232, i64 0, i32 9, i64 3, i64 0, i64 0
  store i32 0, i32* %235, align 4
  br label %240

; <label>:236:                                    ; preds = %226
  store i32 0, i32* %233, align 4
  %237 = load i32, i32* @init_block_x, align 4
  %238 = add nsw i32 %132, %237
  %239 = getelementptr inbounds %struct.block, %struct.block* %232, i64 0, i32 9, i64 3, i64 0, i64 0
  store i32 %238, i32* %239, align 4
  br label %240

; <label>:240:                                    ; preds = %236, %234
  %241 = load %struct.block*, %struct.block** %12, align 8
  %242 = getelementptr inbounds %struct.block, %struct.block* %241, i64 0, i32 7, i64 3
  store i32 0, i32* %242, align 4
  %243 = load %struct.block*, %struct.block** %12, align 8
  %244 = getelementptr inbounds %struct.block, %struct.block* %243, i64 0, i32 8, i64 4
  br i1 %122, label %245, label %247

; <label>:245:                                    ; preds = %240
  store i32 -2, i32* %244, align 4
  %246 = getelementptr inbounds %struct.block, %struct.block* %243, i64 0, i32 9, i64 4, i64 0, i64 0
  store i32 0, i32* %246, align 4
  br label %254

; <label>:247:                                    ; preds = %240
  store i32 0, i32* %244, align 4
  %248 = load i32, i32* @init_block_x, align 4
  %249 = load i32, i32* @init_block_y, align 4
  %250 = mul nsw i32 %248, %249
  %251 = sub nsw i32 %132, %250
  %252 = load %struct.block*, %struct.block** %12, align 8
  %253 = getelementptr inbounds %struct.block, %struct.block* %252, i64 0, i32 9, i64 4, i64 0, i64 0
  store i32 %251, i32* %253, align 4
  br label %254

; <label>:254:                                    ; preds = %247, %245
  %255 = load %struct.block*, %struct.block** %12, align 8
  %256 = getelementptr inbounds %struct.block, %struct.block* %255, i64 0, i32 7, i64 4
  store i32 0, i32* %256, align 4
  %257 = load i32, i32* @init_block_z, align 4
  %258 = add nsw i32 %257, -1
  %259 = icmp eq i32 %116, %258
  %260 = load %struct.block*, %struct.block** %12, align 8
  %261 = getelementptr inbounds %struct.block, %struct.block* %260, i64 0, i32 8, i64 5
  br i1 %259, label %262, label %264

; <label>:262:                                    ; preds = %254
  store i32 -2, i32* %261, align 4
  %263 = getelementptr inbounds %struct.block, %struct.block* %260, i64 0, i32 9, i64 5, i64 0, i64 0
  store i32 0, i32* %263, align 4
  br label %271

; <label>:264:                                    ; preds = %254
  store i32 0, i32* %261, align 4
  %265 = load i32, i32* @init_block_x, align 4
  %266 = load i32, i32* @init_block_y, align 4
  %267 = mul nsw i32 %265, %266
  %268 = add nsw i32 %132, %267
  %269 = load %struct.block*, %struct.block** %12, align 8
  %270 = getelementptr inbounds %struct.block, %struct.block* %269, i64 0, i32 9, i64 5, i64 0, i64 0
  store i32 %268, i32* %270, align 4
  br label %271

; <label>:271:                                    ; preds = %264, %262
  %272 = load %struct.block*, %struct.block** %12, align 8
  %273 = getelementptr inbounds %struct.block, %struct.block* %272, i64 0, i32 7, i64 5
  store i32 0, i32* %273, align 4
  %274 = add nsw i32 %132, 1
  %275 = add nsw i32 %133, 1
  %276 = add nsw i32 %131, 1
  br label %130

; <label>:277:                                    ; preds = %130
  %278 = add nsw i32 %storemerge3, 1
  br label %123

; <label>:279:                                    ; preds = %123
  %280 = add nsw i32 %116, 1
  br label %115

; <label>:281:                                    ; preds = %115
  store i32 %storemerge7.lcssa8.lcssa11.lcssa14.lcssa20.lcssa33.lcssa47, i32* %10, align 1
  store i32 %storemerge4.lcssa22.lcssa34.lcssa49, i32* %2, align 1
  store i32 %storemerge5.lcssa17.lcssa24.lcssa36.lcssa50, i32* %8, align 1
  store i32 %storemerge6.lcssa12.lcssa19.lcssa26.lcssa38.lcssa52, i32* %9, align 1
  store i32 %.lcssa40.lcssa54, i32* %3, align 1
  store i32 %.lcssa2942.lcssa56, i32* %6, align 1
  store i32 %.lcssa3144.lcssa58, i32* %1, align 1
  store i32 %storemerge3.lcssa60, i32* %4, align 1
  store i32 %116, i32* %5, align 1
  br label %282

; <label>:282:                                    ; preds = %285, %281
  %storemerge2 = phi i32 [ 0, %281 ], [ %290, %285 ]
  %283 = load i32, i32* @num_vars, align 4
  %284 = icmp slt i32 %storemerge2, %283
  br i1 %284, label %285, label %291

; <label>:285:                                    ; preds = %282
  %286 = call double @check_sum(i32 %storemerge2)
  %287 = load double*, double** @grid_sum, align 8
  %288 = sext i32 %storemerge2 to i64
  %289 = getelementptr inbounds double, double* %287, i64 %288
  store double %286, double* %289, align 8
  %290 = add nsw i32 %storemerge2, 1
  br label %282

; <label>:291:                                    ; preds = %282
  store i32 %storemerge2, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind
declare double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i32 500, i32* @max_num_blocks, align 4
  store i32 0, i32* @target_active, align 4
  store i32 0, i32* @target_max, align 4
  store i32 0, i32* @target_min, align 4
  store i32 5, i32* @num_refine, align 4
  store i32 0, i32* @uniform_refine, align 4
  store i32 10, i32* @x_block_size, align 4
  store i32 10, i32* @y_block_size, align 4
  store i32 10, i32* @z_block_size, align 4
  store i32 40, i32* @num_vars, align 4
  store i32 0, i32* @comm_vars, align 4
  store i32 1, i32* @init_block_x, align 4
  store i32 1, i32* @init_block_y, align 4
  store i32 1, i32* @init_block_z, align 4
  store i32 1, i32* @reorder, align 4
  store i32 1, i32* @npx, align 4
  store i32 1, i32* @npy, align 4
  store i32 1, i32* @npz, align 4
  store i32 0, i32* @inbalance, align 4
  store i32 5, i32* @refine_freq, align 4
  store i32 0, i32* @report_diffusion, align 4
  store i32 8, i32* @error_tol, align 4
  store i32 20, i32* @num_tsteps, align 4
  store i32 20, i32* @stages_per_ts, align 4
  store i32 5, i32* @checksum_freq, align 4
  store i32 7, i32* @stencil, align 4
  store i32 12, i32* @report_perf, align 4
  store i32 0, i32* @plot_freq, align 4
  store i32 0, i32* @num_objects, align 4
  store i32 1, i32* @lb_opt, align 4
  store i32 0, i32* @block_change, align 4
  store i32 0, i32* @code, align 4
  store i32 0, i32* @permute, align 4
  store i32 1, i32* @nonblocking, align 4
  store i32 0, i32* @refine_ghost, align 4
  store i32 0, i32* @my_pe, align 4
  store i32 1, i32* @num_pes, align 4
  store i32 0, i32* @counter_malloc, align 4
  store double 0.000000e+00, double* @size_malloc, align 8
  %7 = load i32, i32* %3, align 4
  %.promoted = load i32, i32* %6, align 1
  br label %8

; <label>:8:                                      ; preds = %566, %2
  %9 = phi i32 [ %.promoted, %2 ], [ %567, %566 ]
  %storemerge = phi i32 [ 1, %2 ], [ %569, %566 ]
  store i32 %storemerge, i32* %5, align 4
  %10 = icmp slt i32 %storemerge, %7
  br i1 %10, label %11, label %570

; <label>:11:                                     ; preds = %8
  %12 = load i8**, i8*** %4, align 8
  %13 = load i32, i32* %5, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8*, i8** %12, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0)) #8
  %18 = icmp eq i32 %17, 0
  %19 = load i8**, i8*** %4, align 8
  %20 = load i32, i32* %5, align 4
  br i1 %18, label %21, label %27

; <label>:21:                                     ; preds = %11
  %22 = add nsw i32 %20, 1
  store i32 %22, i32* %5, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8*, i8** %19, i64 %23
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @atoi(i8* %25) #8
  store i32 %26, i32* @max_num_blocks, align 4
  br label %566

; <label>:27:                                     ; preds = %11
  %28 = sext i32 %20 to i64
  %29 = getelementptr inbounds i8*, i8** %19, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.15, i64 0, i64 0)) #8
  %32 = icmp eq i32 %31, 0
  %33 = load i8**, i8*** %4, align 8
  %34 = load i32, i32* %5, align 4
  br i1 %32, label %35, label %41

; <label>:35:                                     ; preds = %27
  %36 = add nsw i32 %34, 1
  store i32 %36, i32* %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8*, i8** %33, i64 %37
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @atoi(i8* %39) #8
  store i32 %40, i32* @target_active, align 4
  br label %566

; <label>:41:                                     ; preds = %27
  %42 = sext i32 %34 to i64
  %43 = getelementptr inbounds i8*, i8** %33, i64 %42
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.16, i64 0, i64 0)) #8
  %46 = icmp eq i32 %45, 0
  %47 = load i8**, i8*** %4, align 8
  %48 = load i32, i32* %5, align 4
  br i1 %46, label %49, label %55

; <label>:49:                                     ; preds = %41
  %50 = add nsw i32 %48, 1
  store i32 %50, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8*, i8** %47, i64 %51
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @atoi(i8* %53) #8
  store i32 %54, i32* @target_max, align 4
  br label %566

; <label>:55:                                     ; preds = %41
  %56 = sext i32 %48 to i64
  %57 = getelementptr inbounds i8*, i8** %47, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.17, i64 0, i64 0)) #8
  %60 = icmp eq i32 %59, 0
  %61 = load i8**, i8*** %4, align 8
  %62 = load i32, i32* %5, align 4
  br i1 %60, label %63, label %69

; <label>:63:                                     ; preds = %55
  %64 = add nsw i32 %62, 1
  store i32 %64, i32* %5, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8*, i8** %61, i64 %65
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 @atoi(i8* %67) #8
  store i32 %68, i32* @target_min, align 4
  br label %566

; <label>:69:                                     ; preds = %55
  %70 = sext i32 %62 to i64
  %71 = getelementptr inbounds i8*, i8** %61, i64 %70
  %72 = load i8*, i8** %71, align 8
  %73 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.18, i64 0, i64 0)) #8
  %74 = icmp eq i32 %73, 0
  %75 = load i8**, i8*** %4, align 8
  %76 = load i32, i32* %5, align 4
  br i1 %74, label %77, label %83

; <label>:77:                                     ; preds = %69
  %78 = add nsw i32 %76, 1
  store i32 %78, i32* %5, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %75, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 @atoi(i8* %81) #8
  store i32 %82, i32* @num_refine, align 4
  br label %566

; <label>:83:                                     ; preds = %69
  %84 = sext i32 %76 to i64
  %85 = getelementptr inbounds i8*, i8** %75, i64 %84
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 @strcmp(i8* %86, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.19, i64 0, i64 0)) #8
  %88 = icmp eq i32 %87, 0
  %89 = load i8**, i8*** %4, align 8
  %90 = load i32, i32* %5, align 4
  br i1 %88, label %91, label %97

; <label>:91:                                     ; preds = %83
  %92 = add nsw i32 %90, 1
  store i32 %92, i32* %5, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8*, i8** %89, i64 %93
  %95 = load i8*, i8** %94, align 8
  %96 = call i32 @atoi(i8* %95) #8
  store i32 %96, i32* @block_change, align 4
  br label %566

; <label>:97:                                     ; preds = %83
  %98 = sext i32 %90 to i64
  %99 = getelementptr inbounds i8*, i8** %89, i64 %98
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 @strcmp(i8* %100, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.20, i64 0, i64 0)) #8
  %102 = icmp eq i32 %101, 0
  %103 = load i8**, i8*** %4, align 8
  %104 = load i32, i32* %5, align 4
  br i1 %102, label %105, label %111

; <label>:105:                                    ; preds = %97
  %106 = add nsw i32 %104, 1
  store i32 %106, i32* %5, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8*, i8** %103, i64 %107
  %109 = load i8*, i8** %108, align 8
  %110 = call i32 @atoi(i8* %109) #8
  store i32 %110, i32* @uniform_refine, align 4
  br label %566

; <label>:111:                                    ; preds = %97
  %112 = sext i32 %104 to i64
  %113 = getelementptr inbounds i8*, i8** %103, i64 %112
  %114 = load i8*, i8** %113, align 8
  %115 = call i32 @strcmp(i8* %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.21, i64 0, i64 0)) #8
  %116 = icmp eq i32 %115, 0
  %117 = load i8**, i8*** %4, align 8
  %118 = load i32, i32* %5, align 4
  br i1 %116, label %119, label %125

; <label>:119:                                    ; preds = %111
  %120 = add nsw i32 %118, 1
  store i32 %120, i32* %5, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %117, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 @atoi(i8* %123) #8
  store i32 %124, i32* @x_block_size, align 4
  br label %566

; <label>:125:                                    ; preds = %111
  %126 = sext i32 %118 to i64
  %127 = getelementptr inbounds i8*, i8** %117, i64 %126
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @strcmp(i8* %128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.22, i64 0, i64 0)) #8
  %130 = icmp eq i32 %129, 0
  %131 = load i8**, i8*** %4, align 8
  %132 = load i32, i32* %5, align 4
  br i1 %130, label %133, label %139

; <label>:133:                                    ; preds = %125
  %134 = add nsw i32 %132, 1
  store i32 %134, i32* %5, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8*, i8** %131, i64 %135
  %137 = load i8*, i8** %136, align 8
  %138 = call i32 @atoi(i8* %137) #8
  store i32 %138, i32* @y_block_size, align 4
  br label %566

; <label>:139:                                    ; preds = %125
  %140 = sext i32 %132 to i64
  %141 = getelementptr inbounds i8*, i8** %131, i64 %140
  %142 = load i8*, i8** %141, align 8
  %143 = call i32 @strcmp(i8* %142, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.23, i64 0, i64 0)) #8
  %144 = icmp eq i32 %143, 0
  %145 = load i8**, i8*** %4, align 8
  %146 = load i32, i32* %5, align 4
  br i1 %144, label %147, label %153

; <label>:147:                                    ; preds = %139
  %148 = add nsw i32 %146, 1
  store i32 %148, i32* %5, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8*, i8** %145, i64 %149
  %151 = load i8*, i8** %150, align 8
  %152 = call i32 @atoi(i8* %151) #8
  store i32 %152, i32* @z_block_size, align 4
  br label %566

; <label>:153:                                    ; preds = %139
  %154 = sext i32 %146 to i64
  %155 = getelementptr inbounds i8*, i8** %145, i64 %154
  %156 = load i8*, i8** %155, align 8
  %157 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.24, i64 0, i64 0)) #8
  %158 = icmp eq i32 %157, 0
  %159 = load i8**, i8*** %4, align 8
  %160 = load i32, i32* %5, align 4
  br i1 %158, label %161, label %167

; <label>:161:                                    ; preds = %153
  %162 = add nsw i32 %160, 1
  store i32 %162, i32* %5, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8*, i8** %159, i64 %163
  %165 = load i8*, i8** %164, align 8
  %166 = call i32 @atoi(i8* %165) #8
  store i32 %166, i32* @num_vars, align 4
  br label %566

; <label>:167:                                    ; preds = %153
  %168 = sext i32 %160 to i64
  %169 = getelementptr inbounds i8*, i8** %159, i64 %168
  %170 = load i8*, i8** %169, align 8
  %171 = call i32 @strcmp(i8* %170, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #8
  %172 = icmp eq i32 %171, 0
  %173 = load i8**, i8*** %4, align 8
  %174 = load i32, i32* %5, align 4
  br i1 %172, label %175, label %181

; <label>:175:                                    ; preds = %167
  %176 = add nsw i32 %174, 1
  store i32 %176, i32* %5, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8*, i8** %173, i64 %177
  %179 = load i8*, i8** %178, align 8
  %180 = call i32 @atoi(i8* %179) #8
  store i32 %180, i32* @comm_vars, align 4
  br label %566

; <label>:181:                                    ; preds = %167
  %182 = sext i32 %174 to i64
  %183 = getelementptr inbounds i8*, i8** %173, i64 %182
  %184 = load i8*, i8** %183, align 8
  %185 = call i32 @strcmp(i8* %184, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #8
  %186 = icmp eq i32 %185, 0
  %187 = load i8**, i8*** %4, align 8
  %188 = load i32, i32* %5, align 4
  br i1 %186, label %189, label %195

; <label>:189:                                    ; preds = %181
  %190 = add nsw i32 %188, 1
  store i32 %190, i32* %5, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8*, i8** %187, i64 %191
  %193 = load i8*, i8** %192, align 8
  %194 = call i32 @atoi(i8* %193) #8
  store i32 %194, i32* @init_block_x, align 4
  br label %566

; <label>:195:                                    ; preds = %181
  %196 = sext i32 %188 to i64
  %197 = getelementptr inbounds i8*, i8** %187, i64 %196
  %198 = load i8*, i8** %197, align 8
  %199 = call i32 @strcmp(i8* %198, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #8
  %200 = icmp eq i32 %199, 0
  %201 = load i8**, i8*** %4, align 8
  %202 = load i32, i32* %5, align 4
  br i1 %200, label %203, label %209

; <label>:203:                                    ; preds = %195
  %204 = add nsw i32 %202, 1
  store i32 %204, i32* %5, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8*, i8** %201, i64 %205
  %207 = load i8*, i8** %206, align 8
  %208 = call i32 @atoi(i8* %207) #8
  store i32 %208, i32* @init_block_y, align 4
  br label %566

; <label>:209:                                    ; preds = %195
  %210 = sext i32 %202 to i64
  %211 = getelementptr inbounds i8*, i8** %201, i64 %210
  %212 = load i8*, i8** %211, align 8
  %213 = call i32 @strcmp(i8* %212, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.25, i64 0, i64 0)) #8
  %214 = icmp eq i32 %213, 0
  %215 = load i8**, i8*** %4, align 8
  %216 = load i32, i32* %5, align 4
  br i1 %214, label %217, label %223

; <label>:217:                                    ; preds = %209
  %218 = add nsw i32 %216, 1
  store i32 %218, i32* %5, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8*, i8** %215, i64 %219
  %221 = load i8*, i8** %220, align 8
  %222 = call i32 @atoi(i8* %221) #8
  store i32 %222, i32* @init_block_z, align 4
  br label %566

; <label>:223:                                    ; preds = %209
  %224 = sext i32 %216 to i64
  %225 = getelementptr inbounds i8*, i8** %215, i64 %224
  %226 = load i8*, i8** %225, align 8
  %227 = call i32 @strcmp(i8* %226, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)) #8
  %228 = icmp eq i32 %227, 0
  %229 = load i8**, i8*** %4, align 8
  %230 = load i32, i32* %5, align 4
  br i1 %228, label %231, label %237

; <label>:231:                                    ; preds = %223
  %232 = add nsw i32 %230, 1
  store i32 %232, i32* %5, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8*, i8** %229, i64 %233
  %235 = load i8*, i8** %234, align 8
  %236 = call i32 @atoi(i8* %235) #8
  store i32 %236, i32* @refine_freq, align 4
  br label %566

; <label>:237:                                    ; preds = %223
  %238 = sext i32 %230 to i64
  %239 = getelementptr inbounds i8*, i8** %229, i64 %238
  %240 = load i8*, i8** %239, align 8
  %241 = call i32 @strcmp(i8* %240, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0)) #8
  %242 = icmp eq i32 %241, 0
  %243 = load i8**, i8*** %4, align 8
  %244 = load i32, i32* %5, align 4
  br i1 %242, label %245, label %251

; <label>:245:                                    ; preds = %237
  %246 = add nsw i32 %244, 1
  store i32 %246, i32* %5, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8*, i8** %243, i64 %247
  %249 = load i8*, i8** %248, align 8
  %250 = call i32 @atoi(i8* %249) #8
  store i32 %250, i32* @report_diffusion, align 4
  br label %566

; <label>:251:                                    ; preds = %237
  %252 = sext i32 %244 to i64
  %253 = getelementptr inbounds i8*, i8** %243, i64 %252
  %254 = load i8*, i8** %253, align 8
  %255 = call i32 @strcmp(i8* %254, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #8
  %256 = icmp eq i32 %255, 0
  %257 = load i8**, i8*** %4, align 8
  %258 = load i32, i32* %5, align 4
  br i1 %256, label %259, label %265

; <label>:259:                                    ; preds = %251
  %260 = add nsw i32 %258, 1
  store i32 %260, i32* %5, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8*, i8** %257, i64 %261
  %263 = load i8*, i8** %262, align 8
  %264 = call i32 @atoi(i8* %263) #8
  store i32 %264, i32* @error_tol, align 4
  br label %566

; <label>:265:                                    ; preds = %251
  %266 = sext i32 %258 to i64
  %267 = getelementptr inbounds i8*, i8** %257, i64 %266
  %268 = load i8*, i8** %267, align 8
  %269 = call i32 @strcmp(i8* %268, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #8
  %270 = icmp eq i32 %269, 0
  %271 = load i8**, i8*** %4, align 8
  %272 = load i32, i32* %5, align 4
  br i1 %270, label %273, label %279

; <label>:273:                                    ; preds = %265
  %274 = add nsw i32 %272, 1
  store i32 %274, i32* %5, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8*, i8** %271, i64 %275
  %277 = load i8*, i8** %276, align 8
  %278 = call i32 @atoi(i8* %277) #8
  store i32 %278, i32* @num_tsteps, align 4
  br label %566

; <label>:279:                                    ; preds = %265
  %280 = sext i32 %272 to i64
  %281 = getelementptr inbounds i8*, i8** %271, i64 %280
  %282 = load i8*, i8** %281, align 8
  %283 = call i32 @strcmp(i8* %282, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0)) #8
  %284 = icmp eq i32 %283, 0
  %285 = load i8**, i8*** %4, align 8
  %286 = load i32, i32* %5, align 4
  br i1 %284, label %287, label %293

; <label>:287:                                    ; preds = %279
  %288 = add nsw i32 %286, 1
  store i32 %288, i32* %5, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8*, i8** %285, i64 %289
  %291 = load i8*, i8** %290, align 8
  %292 = call i32 @atoi(i8* %291) #8
  store i32 %292, i32* @stages_per_ts, align 4
  br label %566

; <label>:293:                                    ; preds = %279
  %294 = sext i32 %286 to i64
  %295 = getelementptr inbounds i8*, i8** %285, i64 %294
  %296 = load i8*, i8** %295, align 8
  %297 = call i32 @strcmp(i8* %296, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #8
  %298 = icmp eq i32 %297, 0
  %299 = load i8**, i8*** %4, align 8
  %300 = load i32, i32* %5, align 4
  br i1 %298, label %301, label %307

; <label>:301:                                    ; preds = %293
  %302 = add nsw i32 %300, 1
  store i32 %302, i32* %5, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8*, i8** %299, i64 %303
  %305 = load i8*, i8** %304, align 8
  %306 = call i32 @atoi(i8* %305) #8
  store i32 %306, i32* @checksum_freq, align 4
  br label %566

; <label>:307:                                    ; preds = %293
  %308 = sext i32 %300 to i64
  %309 = getelementptr inbounds i8*, i8** %299, i64 %308
  %310 = load i8*, i8** %309, align 8
  %311 = call i32 @strcmp(i8* %310, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0)) #8
  %312 = icmp eq i32 %311, 0
  %313 = load i8**, i8*** %4, align 8
  %314 = load i32, i32* %5, align 4
  br i1 %312, label %315, label %321

; <label>:315:                                    ; preds = %307
  %316 = add nsw i32 %314, 1
  store i32 %316, i32* %5, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i8*, i8** %313, i64 %317
  %319 = load i8*, i8** %318, align 8
  %320 = call i32 @atoi(i8* %319) #8
  store i32 %320, i32* @stencil, align 4
  br label %566

; <label>:321:                                    ; preds = %307
  %322 = sext i32 %314 to i64
  %323 = getelementptr inbounds i8*, i8** %313, i64 %322
  %324 = load i8*, i8** %323, align 8
  %325 = call i32 @strcmp(i8* %324, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #8
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

; <label>:327:                                    ; preds = %321
  store i32 1, i32* @permute, align 4
  br label %566

; <label>:328:                                    ; preds = %321
  %329 = load i8**, i8*** %4, align 8
  %330 = load i32, i32* %5, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i8*, i8** %329, i64 %331
  %333 = load i8*, i8** %332, align 8
  %334 = call i32 @strcmp(i8* %333, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0)) #8
  %335 = icmp eq i32 %334, 0
  %336 = load i8**, i8*** %4, align 8
  %337 = load i32, i32* %5, align 4
  br i1 %335, label %338, label %344

; <label>:338:                                    ; preds = %328
  %339 = add nsw i32 %337, 1
  store i32 %339, i32* %5, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8*, i8** %336, i64 %340
  %342 = load i8*, i8** %341, align 8
  %343 = call i32 @atoi(i8* %342) #8
  store i32 %343, i32* @report_perf, align 4
  br label %566

; <label>:344:                                    ; preds = %328
  %345 = sext i32 %337 to i64
  %346 = getelementptr inbounds i8*, i8** %336, i64 %345
  %347 = load i8*, i8** %346, align 8
  %348 = call i32 @strcmp(i8* %347, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #8
  %349 = icmp eq i32 %348, 0
  %350 = load i8**, i8*** %4, align 8
  %351 = load i32, i32* %5, align 4
  br i1 %349, label %352, label %358

; <label>:352:                                    ; preds = %344
  %353 = add nsw i32 %351, 1
  store i32 %353, i32* %5, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8*, i8** %350, i64 %354
  %356 = load i8*, i8** %355, align 8
  %357 = call i32 @atoi(i8* %356) #8
  store i32 %357, i32* @plot_freq, align 4
  br label %566

; <label>:358:                                    ; preds = %344
  %359 = sext i32 %351 to i64
  %360 = getelementptr inbounds i8*, i8** %350, i64 %359
  %361 = load i8*, i8** %360, align 8
  %362 = call i32 @strcmp(i8* %361, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0)) #8
  %363 = icmp eq i32 %362, 0
  %364 = load i8**, i8*** %4, align 8
  %365 = load i32, i32* %5, align 4
  br i1 %363, label %366, label %372

; <label>:366:                                    ; preds = %358
  %367 = add nsw i32 %365, 1
  store i32 %367, i32* %5, align 4
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds i8*, i8** %364, i64 %368
  %370 = load i8*, i8** %369, align 8
  %371 = call i32 @atoi(i8* %370) #8
  store i32 %371, i32* @code, align 4
  br label %566

; <label>:372:                                    ; preds = %358
  %373 = sext i32 %365 to i64
  %374 = getelementptr inbounds i8*, i8** %364, i64 %373
  %375 = load i8*, i8** %374, align 8
  %376 = call i32 @strcmp(i8* %375, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0)) #8
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

; <label>:378:                                    ; preds = %372
  store i32 1, i32* @refine_ghost, align 4
  br label %566

; <label>:379:                                    ; preds = %372
  %380 = load i8**, i8*** %4, align 8
  %381 = load i32, i32* %5, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds i8*, i8** %380, i64 %382
  %384 = load i8*, i8** %383, align 8
  %385 = call i32 @strcmp(i8* %384, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #8
  %386 = icmp eq i32 %385, 0
  %387 = load i8**, i8*** %4, align 8
  %388 = load i32, i32* %5, align 4
  br i1 %386, label %389, label %398

; <label>:389:                                    ; preds = %379
  %390 = add nsw i32 %388, 1
  store i32 %390, i32* %5, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8*, i8** %387, i64 %391
  %393 = load i8*, i8** %392, align 8
  %394 = call i32 @atoi(i8* %393) #8
  store i32 %394, i32* @num_objects, align 4
  %395 = sext i32 %394 to i64
  %396 = mul nsw i64 %395, 176
  %397 = call i8* @ma_malloc(i64 %396, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 107)
  store i8* %397, i8** bitcast (%struct.object** @objects to i8**), align 8
  br label %566

; <label>:398:                                    ; preds = %379
  %399 = sext i32 %388 to i64
  %400 = getelementptr inbounds i8*, i8** %387, i64 %399
  %401 = load i8*, i8** %400, align 8
  %402 = call i32 @strcmp(i8* %401, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #8
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %550

; <label>:404:                                    ; preds = %398
  %405 = load i32, i32* @num_objects, align 4
  %406 = icmp slt i32 %9, %405
  br i1 %406, label %408, label %407

; <label>:407:                                    ; preds = %404
  store i32 %9, i32* %6, align 1
  %puts = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.2, i64 0, i64 0))
  call void @exit(i32 -1) #7
  unreachable

; <label>:408:                                    ; preds = %404
  %409 = load i8**, i8*** %4, align 8
  %410 = load i32, i32* %5, align 4
  %411 = add nsw i32 %410, 1
  store i32 %411, i32* %5, align 4
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i8*, i8** %409, i64 %412
  %414 = load i8*, i8** %413, align 8
  %415 = call i32 @atoi(i8* %414) #8
  %416 = load %struct.object*, %struct.object** @objects, align 8
  %417 = sext i32 %9 to i64
  %418 = getelementptr inbounds %struct.object, %struct.object* %416, i64 %417, i32 0
  store i32 %415, i32* %418, align 8
  %419 = load i8**, i8*** %4, align 8
  %420 = load i32, i32* %5, align 4
  %421 = add nsw i32 %420, 1
  store i32 %421, i32* %5, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i8*, i8** %419, i64 %422
  %424 = load i8*, i8** %423, align 8
  %425 = call i32 @atoi(i8* %424) #8
  %426 = load %struct.object*, %struct.object** @objects, align 8
  %427 = sext i32 %9 to i64
  %428 = getelementptr inbounds %struct.object, %struct.object* %426, i64 %427, i32 1
  store i32 %425, i32* %428, align 4
  %429 = load i8**, i8*** %4, align 8
  %430 = load i32, i32* %5, align 4
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* %5, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds i8*, i8** %429, i64 %432
  %434 = load i8*, i8** %433, align 8
  %435 = call double @atof(i8* %434) #8
  %436 = load %struct.object*, %struct.object** @objects, align 8
  %437 = sext i32 %9 to i64
  %438 = getelementptr inbounds %struct.object, %struct.object* %436, i64 %437, i32 2, i64 0
  store double %435, double* %438, align 8
  %439 = load i8**, i8*** %4, align 8
  %440 = load i32, i32* %5, align 4
  %441 = add nsw i32 %440, 1
  store i32 %441, i32* %5, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds i8*, i8** %439, i64 %442
  %444 = load i8*, i8** %443, align 8
  %445 = call double @atof(i8* %444) #8
  %446 = load %struct.object*, %struct.object** @objects, align 8
  %447 = sext i32 %9 to i64
  %448 = getelementptr inbounds %struct.object, %struct.object* %446, i64 %447, i32 2, i64 1
  store double %445, double* %448, align 8
  %449 = load i8**, i8*** %4, align 8
  %450 = load i32, i32* %5, align 4
  %451 = add nsw i32 %450, 1
  store i32 %451, i32* %5, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i8*, i8** %449, i64 %452
  %454 = load i8*, i8** %453, align 8
  %455 = call double @atof(i8* %454) #8
  %456 = load %struct.object*, %struct.object** @objects, align 8
  %457 = sext i32 %9 to i64
  %458 = getelementptr inbounds %struct.object, %struct.object* %456, i64 %457, i32 2, i64 2
  store double %455, double* %458, align 8
  %459 = load i8**, i8*** %4, align 8
  %460 = load i32, i32* %5, align 4
  %461 = add nsw i32 %460, 1
  store i32 %461, i32* %5, align 4
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds i8*, i8** %459, i64 %462
  %464 = load i8*, i8** %463, align 8
  %465 = call double @atof(i8* %464) #8
  %466 = load %struct.object*, %struct.object** @objects, align 8
  %467 = sext i32 %9 to i64
  %468 = getelementptr inbounds %struct.object, %struct.object* %466, i64 %467, i32 4, i64 0
  store double %465, double* %468, align 8
  %469 = load i8**, i8*** %4, align 8
  %470 = load i32, i32* %5, align 4
  %471 = add nsw i32 %470, 1
  store i32 %471, i32* %5, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i8*, i8** %469, i64 %472
  %474 = load i8*, i8** %473, align 8
  %475 = call double @atof(i8* %474) #8
  %476 = load %struct.object*, %struct.object** @objects, align 8
  %477 = sext i32 %9 to i64
  %478 = getelementptr inbounds %struct.object, %struct.object* %476, i64 %477, i32 4, i64 1
  store double %475, double* %478, align 8
  %479 = load i8**, i8*** %4, align 8
  %480 = load i32, i32* %5, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %5, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i8*, i8** %479, i64 %482
  %484 = load i8*, i8** %483, align 8
  %485 = call double @atof(i8* %484) #8
  %486 = load %struct.object*, %struct.object** @objects, align 8
  %487 = sext i32 %9 to i64
  %488 = getelementptr inbounds %struct.object, %struct.object* %486, i64 %487, i32 4, i64 2
  store double %485, double* %488, align 8
  %489 = load i8**, i8*** %4, align 8
  %490 = load i32, i32* %5, align 4
  %491 = add nsw i32 %490, 1
  store i32 %491, i32* %5, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i8*, i8** %489, i64 %492
  %494 = load i8*, i8** %493, align 8
  %495 = call double @atof(i8* %494) #8
  %496 = load %struct.object*, %struct.object** @objects, align 8
  %497 = sext i32 %9 to i64
  %498 = getelementptr inbounds %struct.object, %struct.object* %496, i64 %497, i32 6, i64 0
  store double %495, double* %498, align 8
  %499 = load i8**, i8*** %4, align 8
  %500 = load i32, i32* %5, align 4
  %501 = add nsw i32 %500, 1
  store i32 %501, i32* %5, align 4
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds i8*, i8** %499, i64 %502
  %504 = load i8*, i8** %503, align 8
  %505 = call double @atof(i8* %504) #8
  %506 = load %struct.object*, %struct.object** @objects, align 8
  %507 = sext i32 %9 to i64
  %508 = getelementptr inbounds %struct.object, %struct.object* %506, i64 %507, i32 6, i64 1
  store double %505, double* %508, align 8
  %509 = load i8**, i8*** %4, align 8
  %510 = load i32, i32* %5, align 4
  %511 = add nsw i32 %510, 1
  store i32 %511, i32* %5, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds i8*, i8** %509, i64 %512
  %514 = load i8*, i8** %513, align 8
  %515 = call double @atof(i8* %514) #8
  %516 = load %struct.object*, %struct.object** @objects, align 8
  %517 = sext i32 %9 to i64
  %518 = getelementptr inbounds %struct.object, %struct.object* %516, i64 %517, i32 6, i64 2
  store double %515, double* %518, align 8
  %519 = load i8**, i8*** %4, align 8
  %520 = load i32, i32* %5, align 4
  %521 = add nsw i32 %520, 1
  store i32 %521, i32* %5, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds i8*, i8** %519, i64 %522
  %524 = load i8*, i8** %523, align 8
  %525 = call double @atof(i8* %524) #8
  %526 = load %struct.object*, %struct.object** @objects, align 8
  %527 = sext i32 %9 to i64
  %528 = getelementptr inbounds %struct.object, %struct.object* %526, i64 %527, i32 8, i64 0
  store double %525, double* %528, align 8
  %529 = load i8**, i8*** %4, align 8
  %530 = load i32, i32* %5, align 4
  %531 = add nsw i32 %530, 1
  store i32 %531, i32* %5, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8*, i8** %529, i64 %532
  %534 = load i8*, i8** %533, align 8
  %535 = call double @atof(i8* %534) #8
  %536 = load %struct.object*, %struct.object** @objects, align 8
  %537 = sext i32 %9 to i64
  %538 = getelementptr inbounds %struct.object, %struct.object* %536, i64 %537, i32 8, i64 1
  store double %535, double* %538, align 8
  %539 = load i8**, i8*** %4, align 8
  %540 = load i32, i32* %5, align 4
  %541 = add nsw i32 %540, 1
  store i32 %541, i32* %5, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8*, i8** %539, i64 %542
  %544 = load i8*, i8** %543, align 8
  %545 = call double @atof(i8* %544) #8
  %546 = load %struct.object*, %struct.object** @objects, align 8
  %547 = sext i32 %9 to i64
  %548 = getelementptr inbounds %struct.object, %struct.object* %546, i64 %547, i32 8, i64 2
  store double %545, double* %548, align 8
  %549 = add nsw i32 %9, 1
  br label %566

; <label>:550:                                    ; preds = %398
  store i32 %9, i32* %6, align 1
  %551 = load i8**, i8*** %4, align 8
  %552 = load i32, i32* %5, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds i8*, i8** %551, i64 %553
  %555 = load i8*, i8** %554, align 8
  %556 = call i32 @strcmp(i8* %555, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #8
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %559

; <label>:558:                                    ; preds = %550
  call void @print_help_message()
  call void @exit(i32 0) #7
  unreachable

; <label>:559:                                    ; preds = %550
  %560 = load i8**, i8*** %4, align 8
  %561 = load i32, i32* %5, align 4
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds i8*, i8** %560, i64 %562
  %564 = load i8*, i8** %563, align 8
  %565 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32, i64 0, i64 0), i8* %564) #6
  call void @print_help_message()
  call void @exit(i32 -1) #7
  unreachable

; <label>:566:                                    ; preds = %21, %49, %77, %105, %133, %161, %189, %217, %245, %273, %301, %327, %352, %378, %408, %389, %366, %338, %315, %287, %259, %231, %203, %175, %147, %119, %91, %63, %35
  %567 = phi i32 [ %9, %21 ], [ %9, %35 ], [ %9, %49 ], [ %9, %63 ], [ %9, %77 ], [ %9, %91 ], [ %9, %105 ], [ %9, %119 ], [ %9, %133 ], [ %9, %147 ], [ %9, %161 ], [ %9, %175 ], [ %9, %189 ], [ %9, %203 ], [ %9, %217 ], [ %9, %231 ], [ %9, %245 ], [ %9, %259 ], [ %9, %273 ], [ %9, %287 ], [ %9, %301 ], [ %9, %315 ], [ %9, %327 ], [ %9, %338 ], [ %9, %352 ], [ %9, %366 ], [ %9, %378 ], [ %549, %408 ], [ 0, %389 ]
  %568 = load i32, i32* %5, align 4
  %569 = add nsw i32 %568, 1
  br label %8

; <label>:570:                                    ; preds = %8
  store i32 %9, i32* %6, align 1
  %571 = call i32 @check_input()
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %574, label %573

; <label>:573:                                    ; preds = %570
  call void @exit(i32 -1) #7
  unreachable

; <label>:574:                                    ; preds = %570
  %575 = load i32, i32* @block_change, align 4
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %579

; <label>:577:                                    ; preds = %574
  %578 = load i32, i32* @num_refine, align 4
  store i32 %578, i32* @block_change, align 4
  br label %579

; <label>:579:                                    ; preds = %574, %577
  %580 = load i32, i32* @num_objects, align 4
  %581 = load %struct.object*, %struct.object** @objects, align 8
  %582 = load %struct.object*, %struct.object** @objects, align 8
  %583 = load %struct.object*, %struct.object** @objects, align 8
  %584 = load %struct.object*, %struct.object** @objects, align 8
  %585 = load %struct.object*, %struct.object** @objects, align 8
  %586 = load %struct.object*, %struct.object** @objects, align 8
  br label %587

; <label>:587:                                    ; preds = %621, %579
  %storemerge1 = phi i32 [ 0, %579 ], [ %622, %621 ]
  %588 = icmp slt i32 %storemerge1, %580
  br i1 %588, label %589, label %623

; <label>:589:                                    ; preds = %587
  %590 = sext i32 %storemerge1 to i64
  %591 = sext i32 %storemerge1 to i64
  %592 = sext i32 %storemerge1 to i64
  %593 = sext i32 %storemerge1 to i64
  %594 = sext i32 %storemerge1 to i64
  %595 = sext i32 %storemerge1 to i64
  br label %596

; <label>:596:                                    ; preds = %598, %589
  %storemerge2 = phi i32 [ 0, %589 ], [ %620, %598 ]
  %597 = icmp slt i32 %storemerge2, 3
  br i1 %597, label %598, label %621

; <label>:598:                                    ; preds = %596
  %599 = sext i32 %storemerge2 to i64
  %600 = getelementptr inbounds %struct.object, %struct.object* %581, i64 %590, i32 2, i64 %599
  %601 = bitcast double* %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = sext i32 %storemerge2 to i64
  %604 = getelementptr inbounds %struct.object, %struct.object* %582, i64 %591, i32 3, i64 %603
  %605 = bitcast double* %604 to i64*
  store i64 %602, i64* %605, align 8
  %606 = sext i32 %storemerge2 to i64
  %607 = getelementptr inbounds %struct.object, %struct.object* %583, i64 %592, i32 4, i64 %606
  %608 = bitcast double* %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = sext i32 %storemerge2 to i64
  %611 = getelementptr inbounds %struct.object, %struct.object* %584, i64 %593, i32 5, i64 %610
  %612 = bitcast double* %611 to i64*
  store i64 %609, i64* %612, align 8
  %613 = sext i32 %storemerge2 to i64
  %614 = getelementptr inbounds %struct.object, %struct.object* %585, i64 %594, i32 6, i64 %613
  %615 = bitcast double* %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = sext i32 %storemerge2 to i64
  %618 = getelementptr inbounds %struct.object, %struct.object* %586, i64 %595, i32 7, i64 %617
  %619 = bitcast double* %618 to i64*
  store i64 %616, i64* %619, align 8
  %620 = add nsw i32 %storemerge2, 1
  br label %596

; <label>:621:                                    ; preds = %596
  store i32 %storemerge2, i32* %5, align 4
  %622 = add nsw i32 %storemerge1, 1
  br label %587

; <label>:623:                                    ; preds = %587
  store i32 %storemerge1, i32* %6, align 4
  call void @allocate()
  call void @driver()
  call void @profile()
  call void @deallocate()
  call void @exit(i32 0) #7
  unreachable
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind readonly
declare double @atof(i8*) #5

; Function Attrs: noinline nounwind uwtable
define void @print_help_message() #0 {
  %puts = call i32 @puts(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @str.3, i64 0, i64 0))
  %puts1 = call i32 @puts(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.4, i64 0, i64 0))
  %puts2 = call i32 @puts(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.5, i64 0, i64 0))
  %puts3 = call i32 @puts(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.6, i64 0, i64 0))
  %puts4 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.7, i64 0, i64 0))
  %puts5 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.8, i64 0, i64 0))
  %puts6 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.9, i64 0, i64 0))
  %puts7 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.10, i64 0, i64 0))
  %puts8 = call i32 @puts(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.11, i64 0, i64 0))
  %puts9 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.12, i64 0, i64 0))
  %puts10 = call i32 @puts(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @str.13, i64 0, i64 0))
  %puts11 = call i32 @puts(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.14, i64 0, i64 0))
  %puts12 = call i32 @puts(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @str.15, i64 0, i64 0))
  %puts13 = call i32 @puts(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @str.16, i64 0, i64 0))
  %puts14 = call i32 @puts(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.17, i64 0, i64 0))
  %puts15 = call i32 @puts(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.18, i64 0, i64 0))
  %puts16 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.19, i64 0, i64 0))
  %puts17 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.20, i64 0, i64 0))
  %puts18 = call i32 @puts(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @str.21, i64 0, i64 0))
  %puts19 = call i32 @puts(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.22, i64 0, i64 0))
  %puts20 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.23, i64 0, i64 0))
  %puts21 = call i32 @puts(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @str.24, i64 0, i64 0))
  %puts22 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.25, i64 0, i64 0))
  %puts23 = call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.26, i64 0, i64 0))
  %puts24 = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.27, i64 0, i64 0))
  %puts25 = call i32 @puts(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.28, i64 0, i64 0))
  %puts26 = call i32 @puts(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.29, i64 0, i64 0))
  %puts27 = call i32 @puts(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @str.30, i64 0, i64 0))
  %puts28 = call i32 @puts(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @str.31, i64 0, i64 0))
  %puts29 = call i32 @puts(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @str.32, i64 0, i64 0))
  %puts30 = call i32 @puts(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @str.33, i64 0, i64 0))
  %puts31 = call i32 @puts(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @str.34, i64 0, i64 0))
  %puts32 = call i32 @puts(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @str.35, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @check_input() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @init_block_x, align 4
  %3 = icmp slt i32 %2, 1
  %4 = load i32, i32* @init_block_y, align 4
  %5 = icmp slt i32 %4, 1
  %or.cond = or i1 %3, %5
  %6 = load i32, i32* @init_block_z, align 4
  %7 = icmp slt i32 %6, 1
  %or.cond20 = or i1 %or.cond, %7
  br i1 %or.cond20, label %8, label %9

; <label>:8:                                      ; preds = %0
  %puts17 = call i32 @puts(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @str.53, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %9

; <label>:9:                                      ; preds = %0, %8
  %10 = load i32, i32* @max_num_blocks, align 4
  %11 = load i32, i32* @init_block_x, align 4
  %12 = load i32, i32* @init_block_y, align 4
  %13 = mul nsw i32 %11, %12
  %14 = load i32, i32* @init_block_z, align 4
  %15 = mul nsw i32 %13, %14
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %9
  %puts16 = call i32 @puts(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.52, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %18

; <label>:18:                                     ; preds = %17, %9
  %19 = load i32, i32* @x_block_size, align 4
  %20 = icmp slt i32 %19, 1
  %21 = load i32, i32* @y_block_size, align 4
  %22 = icmp slt i32 %21, 1
  %or.cond22 = or i1 %20, %22
  %23 = load i32, i32* @z_block_size, align 4
  %24 = icmp slt i32 %23, 1
  %or.cond24 = or i1 %or.cond22, %24
  br i1 %or.cond24, label %25, label %26

; <label>:25:                                     ; preds = %18
  %puts15 = call i32 @puts(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.51, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %26

; <label>:26:                                     ; preds = %18, %25
  %27 = load i32, i32* @x_block_size, align 4
  %28 = sdiv i32 %27, 2
  %29 = shl nsw i32 %28, 1
  %30 = icmp eq i32 %29, %27
  br i1 %30, label %32, label %31

; <label>:31:                                     ; preds = %26
  %puts14 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.50, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %32

; <label>:32:                                     ; preds = %26, %31
  %33 = load i32, i32* @y_block_size, align 4
  %34 = sdiv i32 %33, 2
  %35 = shl nsw i32 %34, 1
  %36 = icmp eq i32 %35, %33
  br i1 %36, label %38, label %37

; <label>:37:                                     ; preds = %32
  %puts13 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.49, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %38

; <label>:38:                                     ; preds = %32, %37
  %39 = load i32, i32* @z_block_size, align 4
  %40 = sdiv i32 %39, 2
  %41 = shl nsw i32 %40, 1
  %42 = icmp eq i32 %41, %39
  br i1 %42, label %44, label %43

; <label>:43:                                     ; preds = %38
  %puts12 = call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.48, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %44

; <label>:44:                                     ; preds = %38, %43
  %45 = load i32, i32* @target_active, align 4
  %46 = icmp eq i32 %45, 0
  %47 = load i32, i32* @target_max, align 4
  %48 = icmp eq i32 %47, 0
  %or.cond26 = or i1 %46, %48
  br i1 %or.cond26, label %50, label %49

; <label>:49:                                     ; preds = %44
  %puts11 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.47, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %50

; <label>:50:                                     ; preds = %44, %49
  %51 = load i32, i32* @target_active, align 4
  %52 = icmp eq i32 %51, 0
  %53 = load i32, i32* @target_min, align 4
  %54 = icmp eq i32 %53, 0
  %or.cond28 = or i1 %52, %54
  br i1 %or.cond28, label %56, label %55

; <label>:55:                                     ; preds = %50
  %puts10 = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.46, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %56

; <label>:56:                                     ; preds = %50, %55
  %57 = load i32, i32* @target_active, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %63, label %59

; <label>:59:                                     ; preds = %56
  %60 = load i32, i32* @target_active, align 4
  %61 = load i32, i32* @max_num_blocks, align 4
  %62 = icmp sgt i32 %60, %61
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %59, %56
  %puts9 = call i32 @puts(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @str.45, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %64

; <label>:64:                                     ; preds = %63, %59
  %65 = load i32, i32* @target_max, align 4
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %75, label %67

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* @target_max, align 4
  %69 = load i32, i32* @max_num_blocks, align 4
  %70 = icmp sgt i32 %68, %69
  br i1 %70, label %75, label %71

; <label>:71:                                     ; preds = %67
  %72 = load i32, i32* @target_max, align 4
  %73 = load i32, i32* @target_active, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %71, %67, %64
  %puts8 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.44, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %76

; <label>:76:                                     ; preds = %75, %71
  %77 = load i32, i32* @target_min, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %91, label %79

; <label>:79:                                     ; preds = %76
  %80 = load i32, i32* @target_min, align 4
  %81 = load i32, i32* @max_num_blocks, align 4
  %82 = icmp sgt i32 %80, %81
  br i1 %82, label %91, label %83

; <label>:83:                                     ; preds = %79
  %84 = load i32, i32* @target_min, align 4
  %85 = load i32, i32* @target_active, align 4
  %86 = icmp sgt i32 %84, %85
  br i1 %86, label %91, label %87

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* @target_min, align 4
  %89 = load i32, i32* @target_max, align 4
  %90 = icmp sgt i32 %88, %89
  br i1 %90, label %91, label %92

; <label>:91:                                     ; preds = %87, %83, %79, %76
  %puts7 = call i32 @puts(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @str.43, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %92

; <label>:92:                                     ; preds = %91, %87
  %93 = load i32, i32* @num_refine, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %95, label %96

; <label>:95:                                     ; preds = %92
  %puts6 = call i32 @puts(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.42, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %96

; <label>:96:                                     ; preds = %95, %92
  %97 = load i32, i32* @block_change, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %100

; <label>:99:                                     ; preds = %96
  %puts5 = call i32 @puts(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @str.41, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %100

; <label>:100:                                    ; preds = %99, %96
  %101 = load i32, i32* @num_vars, align 4
  %102 = icmp slt i32 %101, 1
  br i1 %102, label %103, label %104

; <label>:103:                                    ; preds = %100
  %puts4 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str.40, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %100
  %105 = load i32, i32* @num_pes, align 4
  %106 = load i32, i32* @npx, align 4
  %107 = load i32, i32* @npy, align 4
  %108 = mul nsw i32 %106, %107
  %109 = load i32, i32* @npz, align 4
  %110 = mul nsw i32 %108, %109
  %111 = icmp eq i32 %105, %110
  br i1 %111, label %113, label %112

; <label>:112:                                    ; preds = %104
  %puts3 = call i32 @puts(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @str.39, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %113

; <label>:113:                                    ; preds = %104, %112
  %114 = load i32, i32* @stencil, align 4
  %115 = icmp eq i32 %114, 7
  %116 = load i32, i32* @stencil, align 4
  %117 = icmp eq i32 %116, 27
  %or.cond30 = or i1 %115, %117
  br i1 %or.cond30, label %119, label %118

; <label>:118:                                    ; preds = %113
  %puts2 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.38, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %119

; <label>:119:                                    ; preds = %113, %118
  %120 = load i32, i32* @stencil, align 4
  %121 = icmp ne i32 %120, 27
  %122 = load i32, i32* @num_refine, align 4
  %123 = icmp eq i32 %122, 0
  %or.cond32 = or i1 %121, %123
  %or.cond32.not = xor i1 %or.cond32, true
  %124 = load i32, i32* @uniform_refine, align 4
  %125 = icmp eq i32 %124, 0
  %or.cond34 = and i1 %or.cond32.not, %125
  br i1 %or.cond34, label %126, label %127

; <label>:126:                                    ; preds = %119
  %puts1 = call i32 @puts(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @str.37, i64 0, i64 0))
  br label %127

; <label>:127:                                    ; preds = %119, %126
  %128 = load i32, i32* @comm_vars, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %134, label %130

; <label>:130:                                    ; preds = %127
  %131 = load i32, i32* @comm_vars, align 4
  %132 = load i32, i32* @num_vars, align 4
  %133 = icmp sgt i32 %131, %132
  br i1 %133, label %134, label %136

; <label>:134:                                    ; preds = %130, %127
  %135 = load i32, i32* @num_vars, align 4
  store i32 %135, i32* @comm_vars, align 4
  br label %136

; <label>:136:                                    ; preds = %134, %130
  %137 = load i32, i32* @code, align 4
  %138 = icmp slt i32 %137, 0
  %139 = load i32, i32* @code, align 4
  %140 = icmp sgt i32 %139, 2
  %or.cond36 = or i1 %138, %140
  br i1 %or.cond36, label %141, label %142

; <label>:141:                                    ; preds = %136
  %puts = call i32 @puts(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @str.36, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %142

; <label>:142:                                    ; preds = %136, %141
  %143 = load i32, i32* %1, align 4
  ret i32 %143
}

; Function Attrs: noinline nounwind uwtable
define void @allocate() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* @num_refine, align 4
  %6 = add nsw i32 %5, 1
  %7 = sext i32 %6 to i64
  %8 = shl nsw i64 %7, 2
  %9 = call i8* @ma_malloc(i64 %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 209)
  store i8* %9, i8** bitcast (i32** @num_blocks to i8**), align 8
  %10 = load i32, i32* @num_pes, align 4
  %11 = load i32, i32* @init_block_x, align 4
  %12 = mul nsw i32 %10, %11
  %13 = load i32, i32* @init_block_y, align 4
  %14 = mul nsw i32 %12, %13
  %15 = load i32, i32* @init_block_z, align 4
  %16 = mul nsw i32 %14, %15
  %17 = load i32*, i32** @num_blocks, align 8
  store i32 %16, i32* %17, align 4
  %18 = load i32, i32* @init_block_x, align 4
  %19 = load i32, i32* @init_block_y, align 4
  %20 = mul nsw i32 %18, %19
  %21 = load i32, i32* @init_block_z, align 4
  %22 = mul nsw i32 %20, %21
  %23 = load i32*, i32** @num_blocks, align 8
  store i32 %22, i32* %23, align 4
  %24 = load i32, i32* @max_num_blocks, align 4
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %25, 192
  %27 = call i8* @ma_malloc(i64 %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 214)
  store i8* %27, i8** bitcast (%struct.block** @blocks to i8**), align 8
  %.promoted10 = load i32, i32* %2, align 1
  %.promoted13 = load i32, i32* %3, align 1
  %.promoted15 = load i32, i32* %1, align 1
  br label %28

; <label>:28:                                     ; preds = %107, %0
  %storemerge3.lcssa9.lcssa16 = phi i32 [ %.promoted15, %0 ], [ %storemerge3.lcssa9, %107 ]
  %storemerge2.lcssa14 = phi i32 [ %.promoted13, %0 ], [ %storemerge2, %107 ]
  %storemerge4.lcssa5.lcssa8.lcssa11 = phi i32 [ %.promoted10, %0 ], [ %storemerge4.lcssa5.lcssa8, %107 ]
  %storemerge = phi i32 [ 0, %0 ], [ %108, %107 ]
  %29 = load i32, i32* @max_num_blocks, align 4
  %30 = icmp slt i32 %storemerge, %29
  br i1 %30, label %31, label %109

; <label>:31:                                     ; preds = %28
  %32 = load %struct.block*, %struct.block** @blocks, align 8
  %33 = sext i32 %storemerge to i64
  %34 = getelementptr inbounds %struct.block, %struct.block* %32, i64 %33, i32 0
  store i32 -1, i32* %34, align 8
  %35 = load i32, i32* @num_vars, align 4
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 3
  %38 = call i8* @ma_malloc(i64 %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 219)
  %39 = load %struct.block*, %struct.block** @blocks, align 8
  %40 = sext i32 %storemerge to i64
  %41 = getelementptr inbounds %struct.block, %struct.block* %39, i64 %40, i32 11
  %42 = bitcast double***** %41 to i8**
  store i8* %38, i8** %42, align 8
  %43 = sext i32 %storemerge to i64
  %44 = sext i32 %storemerge to i64
  %45 = sext i32 %storemerge to i64
  br label %46

; <label>:46:                                     ; preds = %105, %31
  %storemerge3.lcssa9 = phi i32 [ %storemerge3.lcssa9.lcssa16, %31 ], [ %storemerge3, %105 ]
  %storemerge4.lcssa5.lcssa8 = phi i32 [ %storemerge4.lcssa5.lcssa8.lcssa11, %31 ], [ %storemerge4.lcssa5, %105 ]
  %storemerge2 = phi i32 [ 0, %31 ], [ %106, %105 ]
  %47 = load i32, i32* @num_vars, align 4
  %48 = icmp slt i32 %storemerge2, %47
  br i1 %48, label %49, label %107

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* @x_block_size, align 4
  %51 = add nsw i32 %50, 2
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 3
  %54 = call i8* @ma_malloc(i64 %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 223)
  %55 = load %struct.block*, %struct.block** @blocks, align 8
  %56 = getelementptr inbounds %struct.block, %struct.block* %55, i64 %43, i32 11
  %57 = load double****, double***** %56, align 8
  %58 = sext i32 %storemerge2 to i64
  %59 = getelementptr inbounds double***, double**** %57, i64 %58
  %60 = bitcast double**** %59 to i8**
  store i8* %54, i8** %60, align 8
  %61 = sext i32 %storemerge2 to i64
  %62 = sext i32 %storemerge2 to i64
  br label %63

; <label>:63:                                     ; preds = %103, %49
  %storemerge4.lcssa5 = phi i32 [ %storemerge4.lcssa5.lcssa8, %49 ], [ %storemerge4, %103 ]
  %storemerge3 = phi i32 [ 0, %49 ], [ %104, %103 ]
  %64 = load i32, i32* @x_block_size, align 4
  %65 = add nsw i32 %64, 2
  %66 = icmp slt i32 %storemerge3, %65
  br i1 %66, label %67, label %105

; <label>:67:                                     ; preds = %63
  %68 = load i32, i32* @y_block_size, align 4
  %69 = add nsw i32 %68, 2
  %70 = sext i32 %69 to i64
  %71 = shl nsw i64 %70, 3
  %72 = call i8* @ma_malloc(i64 %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 227)
  %73 = load %struct.block*, %struct.block** @blocks, align 8
  %74 = getelementptr inbounds %struct.block, %struct.block* %73, i64 %44, i32 11
  %75 = load double****, double***** %74, align 8
  %76 = getelementptr inbounds double***, double**** %75, i64 %61
  %77 = load double***, double**** %76, align 8
  %78 = sext i32 %storemerge3 to i64
  %79 = getelementptr inbounds double**, double*** %77, i64 %78
  %80 = bitcast double*** %79 to i8**
  store i8* %72, i8** %80, align 8
  %81 = sext i32 %storemerge3 to i64
  br label %82

; <label>:82:                                     ; preds = %86, %67
  %storemerge4 = phi i32 [ 0, %67 ], [ %102, %86 ]
  %83 = load i32, i32* @y_block_size, align 4
  %84 = add nsw i32 %83, 2
  %85 = icmp slt i32 %storemerge4, %84
  br i1 %85, label %86, label %103

; <label>:86:                                     ; preds = %82
  %87 = load i32, i32* @z_block_size, align 4
  %88 = add nsw i32 %87, 2
  %89 = sext i32 %88 to i64
  %90 = shl nsw i64 %89, 3
  %91 = call i8* @ma_malloc(i64 %90, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 231)
  %92 = load %struct.block*, %struct.block** @blocks, align 8
  %93 = getelementptr inbounds %struct.block, %struct.block* %92, i64 %45, i32 11
  %94 = load double****, double***** %93, align 8
  %95 = getelementptr inbounds double***, double**** %94, i64 %62
  %96 = load double***, double**** %95, align 8
  %97 = getelementptr inbounds double**, double*** %96, i64 %81
  %98 = load double**, double*** %97, align 8
  %99 = sext i32 %storemerge4 to i64
  %100 = getelementptr inbounds double*, double** %98, i64 %99
  %101 = bitcast double** %100 to i8**
  store i8* %91, i8** %101, align 8
  %102 = add nsw i32 %storemerge4, 1
  br label %82

; <label>:103:                                    ; preds = %82
  %104 = add nsw i32 %storemerge3, 1
  br label %63

; <label>:105:                                    ; preds = %63
  %106 = add nsw i32 %storemerge2, 1
  br label %46

; <label>:107:                                    ; preds = %46
  %108 = add nsw i32 %storemerge, 1
  br label %28

; <label>:109:                                    ; preds = %28
  store i32 %storemerge4.lcssa5.lcssa8.lcssa11, i32* %2, align 1
  store i32 %storemerge, i32* %4, align 4
  store i32 %storemerge2.lcssa14, i32* %3, align 1
  store i32 %storemerge3.lcssa9.lcssa16, i32* %1, align 1
  %110 = load i32, i32* @max_num_blocks, align 4
  %111 = sext i32 %110 to i64
  %112 = shl nsw i64 %111, 3
  %113 = call i8* @ma_malloc(i64 %112, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 237)
  store i8* %113, i8** bitcast (%struct.sorted_block** @sorted_list to i8**), align 8
  %114 = load i32, i32* @num_refine, align 4
  %115 = add nsw i32 %114, 2
  %116 = sext i32 %115 to i64
  %117 = shl nsw i64 %116, 2
  %118 = call i8* @ma_malloc(i64 %117, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 239)
  store i8* %118, i8** bitcast (i32** @sorted_index to i8**), align 8
  %119 = load i32, i32* @max_num_blocks, align 4
  store i32 %119, i32* @max_num_parents, align 4
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %120, 100
  %122 = call i8* @ma_malloc(i64 %121, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 243)
  store i8* %122, i8** bitcast (%struct.parent** @parents to i8**), align 8
  br label %123

; <label>:123:                                    ; preds = %126, %109
  %storemerge1 = phi i32 [ 0, %109 ], [ %130, %126 ]
  %124 = load i32, i32* @max_num_parents, align 4
  %125 = icmp slt i32 %storemerge1, %124
  br i1 %125, label %126, label %131

; <label>:126:                                    ; preds = %123
  %127 = load %struct.parent*, %struct.parent** @parents, align 8
  %128 = sext i32 %storemerge1 to i64
  %129 = getelementptr inbounds %struct.parent, %struct.parent* %127, i64 %128, i32 0
  store i32 -1, i32* %129, align 4
  %130 = add nsw i32 %storemerge1, 1
  br label %123

; <label>:131:                                    ; preds = %123
  store i32 %storemerge1, i32* %4, align 4
  %132 = load i32, i32* @num_vars, align 4
  %133 = sext i32 %132 to i64
  %134 = shl nsw i64 %133, 3
  %135 = call i8* @ma_malloc(i64 %134, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 247)
  store i8* %135, i8** bitcast (double** @grid_sum to i8**), align 8
  %136 = load i32, i32* @num_refine, align 4
  %137 = add nsw i32 %136, 2
  %138 = sext i32 %137 to i64
  %139 = shl nsw i64 %138, 2
  %140 = call i8* @ma_malloc(i64 %139, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 249)
  store i8* %140, i8** bitcast (i32** @p8 to i8**), align 8
  %141 = load i32, i32* @num_refine, align 4
  %142 = add nsw i32 %141, 2
  %143 = sext i32 %142 to i64
  %144 = shl nsw i64 %143, 2
  %145 = call i8* @ma_malloc(i64 %144, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 250)
  store i8* %145, i8** bitcast (i32** @p2 to i8**), align 8
  %146 = load i32, i32* @num_refine, align 4
  %147 = add nsw i32 %146, 1
  %148 = sext i32 %147 to i64
  %149 = shl nsw i64 %148, 2
  %150 = call i8* @ma_malloc(i64 %149, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 252)
  store i8* %150, i8** bitcast (i32** @block_start to i8**), align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @deallocate() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %.promoted9 = load i32, i32* %2, align 1
  %.promoted12 = load i32, i32* %3, align 1
  %.promoted14 = load i32, i32* %1, align 1
  br label %5

; <label>:5:                                      ; preds = %60, %0
  %storemerge2.lcssa8.lcssa15 = phi i32 [ %.promoted14, %0 ], [ %storemerge2.lcssa8, %60 ]
  %storemerge1.lcssa13 = phi i32 [ %.promoted12, %0 ], [ %storemerge1, %60 ]
  %storemerge3.lcssa4.lcssa7.lcssa10 = phi i32 [ %.promoted9, %0 ], [ %storemerge3.lcssa4.lcssa7, %60 ]
  %storemerge = phi i32 [ 0, %0 ], [ %66, %60 ]
  %6 = load i32, i32* @max_num_blocks, align 4
  %7 = icmp slt i32 %storemerge, %6
  br i1 %7, label %8, label %67

; <label>:8:                                      ; preds = %5
  %9 = sext i32 %storemerge to i64
  %10 = sext i32 %storemerge to i64
  %11 = sext i32 %storemerge to i64
  br label %12

; <label>:12:                                     ; preds = %51, %8
  %storemerge2.lcssa8 = phi i32 [ %storemerge2.lcssa8.lcssa15, %8 ], [ %storemerge2, %51 ]
  %storemerge3.lcssa4.lcssa7 = phi i32 [ %storemerge3.lcssa4.lcssa7.lcssa10, %8 ], [ %storemerge3.lcssa4, %51 ]
  %storemerge1 = phi i32 [ 0, %8 ], [ %59, %51 ]
  %13 = load i32, i32* @num_vars, align 4
  %14 = icmp slt i32 %storemerge1, %13
  br i1 %14, label %15, label %60

; <label>:15:                                     ; preds = %12
  %16 = sext i32 %storemerge1 to i64
  %17 = sext i32 %storemerge1 to i64
  br label %18

; <label>:18:                                     ; preds = %41, %15
  %storemerge3.lcssa4 = phi i32 [ %storemerge3.lcssa4.lcssa7, %15 ], [ %storemerge3, %41 ]
  %storemerge2 = phi i32 [ 0, %15 ], [ %50, %41 ]
  %19 = load i32, i32* @x_block_size, align 4
  %20 = add nsw i32 %19, 2
  %21 = icmp slt i32 %storemerge2, %20
  br i1 %21, label %22, label %51

; <label>:22:                                     ; preds = %18
  %23 = sext i32 %storemerge2 to i64
  br label %24

; <label>:24:                                     ; preds = %29, %22
  %storemerge3 = phi i32 [ 0, %22 ], [ %40, %29 ]
  %25 = load i32, i32* @y_block_size, align 4
  %26 = add nsw i32 %25, 2
  %27 = icmp slt i32 %storemerge3, %26
  %28 = load %struct.block*, %struct.block** @blocks, align 8
  br i1 %27, label %29, label %41

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.block, %struct.block* %28, i64 %9, i32 11
  %31 = load double****, double***** %30, align 8
  %32 = getelementptr inbounds double***, double**** %31, i64 %16
  %33 = load double***, double**** %32, align 8
  %34 = getelementptr inbounds double**, double*** %33, i64 %23
  %35 = load double**, double*** %34, align 8
  %36 = sext i32 %storemerge3 to i64
  %37 = getelementptr inbounds double*, double** %35, i64 %36
  %38 = bitcast double** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  call void @free(i8* %39) #6
  %40 = add nsw i32 %storemerge3, 1
  br label %24

; <label>:41:                                     ; preds = %24
  %42 = getelementptr inbounds %struct.block, %struct.block* %28, i64 %10, i32 11
  %43 = load double****, double***** %42, align 8
  %44 = getelementptr inbounds double***, double**** %43, i64 %17
  %45 = load double***, double**** %44, align 8
  %46 = sext i32 %storemerge2 to i64
  %47 = getelementptr inbounds double**, double*** %45, i64 %46
  %48 = bitcast double*** %47 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @free(i8* %49) #6
  %50 = add nsw i32 %storemerge2, 1
  br label %18

; <label>:51:                                     ; preds = %18
  %52 = load %struct.block*, %struct.block** @blocks, align 8
  %53 = getelementptr inbounds %struct.block, %struct.block* %52, i64 %11, i32 11
  %54 = load double****, double***** %53, align 8
  %55 = sext i32 %storemerge1 to i64
  %56 = getelementptr inbounds double***, double**** %54, i64 %55
  %57 = bitcast double**** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @free(i8* %58) #6
  %59 = add nsw i32 %storemerge1, 1
  br label %12

; <label>:60:                                     ; preds = %12
  %61 = load %struct.block*, %struct.block** @blocks, align 8
  %62 = sext i32 %storemerge to i64
  %63 = getelementptr inbounds %struct.block, %struct.block* %61, i64 %62, i32 11
  %64 = bitcast double***** %63 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @free(i8* %65) #6
  %66 = add nsw i32 %storemerge, 1
  br label %5

; <label>:67:                                     ; preds = %5
  store i32 %storemerge3.lcssa4.lcssa7.lcssa10, i32* %2, align 1
  store i32 %storemerge, i32* %4, align 4
  store i32 %storemerge1.lcssa13, i32* %3, align 1
  store i32 %storemerge2.lcssa8.lcssa15, i32* %1, align 1
  %68 = load i8*, i8** bitcast (%struct.block** @blocks to i8**), align 8
  call void @free(i8* %68) #6
  %69 = load i8*, i8** bitcast (%struct.sorted_block** @sorted_list to i8**), align 8
  call void @free(i8* %69) #6
  %70 = load i8*, i8** bitcast (i32** @sorted_index to i8**), align 8
  call void @free(i8* %70) #6
  %71 = load i8*, i8** bitcast (%struct.object** @objects to i8**), align 8
  call void @free(i8* %71) #6
  %72 = load i8*, i8** bitcast (double** @grid_sum to i8**), align 8
  call void @free(i8* %72) #6
  %73 = load i8*, i8** bitcast (i32** @p8 to i8**), align 8
  call void @free(i8* %73) #6
  %74 = load i8*, i8** bitcast (i32** @p2 to i8**), align 8
  call void @free(i8* %74) #6
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: noinline nounwind uwtable
define void @move() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @num_objects, align 4
  %.promoted = load i32, i32* %2, align 1
  br label %4

; <label>:4:                                      ; preds = %93, %0
  %storemerge1.lcssa2 = phi i32 [ %.promoted, %0 ], [ %storemerge1, %93 ]
  %storemerge = phi i32 [ 0, %0 ], [ %94, %93 ]
  %5 = icmp slt i32 %storemerge, %3
  br i1 %5, label %6, label %95

; <label>:6:                                      ; preds = %4
  %7 = sext i32 %storemerge to i64
  %8 = sext i32 %storemerge to i64
  %9 = sext i32 %storemerge to i64
  %10 = sext i32 %storemerge to i64
  %11 = sext i32 %storemerge to i64
  %12 = sext i32 %storemerge to i64
  %13 = sext i32 %storemerge to i64
  %14 = sext i32 %storemerge to i64
  %15 = sext i32 %storemerge to i64
  %16 = sext i32 %storemerge to i64
  %17 = sext i32 %storemerge to i64
  %18 = sext i32 %storemerge to i64
  %19 = sext i32 %storemerge to i64
  %20 = sext i32 %storemerge to i64
  %21 = sext i32 %storemerge to i64
  br label %22

; <label>:22:                                     ; preds = %82, %6
  %storemerge1 = phi i32 [ 0, %6 ], [ %92, %82 ]
  %23 = icmp slt i32 %storemerge1, 3
  br i1 %23, label %24, label %93

; <label>:24:                                     ; preds = %22
  %25 = load %struct.object*, %struct.object** @objects, align 8
  %26 = sext i32 %storemerge1 to i64
  %27 = getelementptr inbounds %struct.object, %struct.object* %25, i64 %7, i32 4, i64 %26
  %28 = load double, double* %27, align 8
  %29 = load %struct.object*, %struct.object** @objects, align 8
  %30 = sext i32 %storemerge1 to i64
  %31 = getelementptr inbounds %struct.object, %struct.object* %29, i64 %8, i32 2, i64 %30
  %32 = load double, double* %31, align 8
  %33 = fadd double %32, %28
  store double %33, double* %31, align 8
  %34 = load %struct.object*, %struct.object** @objects, align 8
  %35 = getelementptr inbounds %struct.object, %struct.object* %34, i64 %9, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %82, label %38

; <label>:38:                                     ; preds = %24
  %39 = load %struct.object*, %struct.object** @objects, align 8
  %40 = sext i32 %storemerge1 to i64
  %41 = getelementptr inbounds %struct.object, %struct.object* %39, i64 %10, i32 2, i64 %40
  %42 = load double, double* %41, align 8
  %43 = fcmp ult double %42, 1.000000e+00
  %44 = load %struct.object*, %struct.object** @objects, align 8
  %45 = sext i32 %storemerge1 to i64
  br i1 %43, label %61, label %46

; <label>:46:                                     ; preds = %38
  %47 = getelementptr inbounds %struct.object, %struct.object* %44, i64 %13, i32 2, i64 %45
  %48 = load double, double* %47, align 8
  %49 = fsub double 2.000000e+00, %48
  %50 = load %struct.object*, %struct.object** @objects, align 8
  %51 = sext i32 %storemerge1 to i64
  %52 = getelementptr inbounds %struct.object, %struct.object* %50, i64 %14, i32 2, i64 %51
  store double %49, double* %52, align 8
  %53 = load %struct.object*, %struct.object** @objects, align 8
  %54 = sext i32 %storemerge1 to i64
  %55 = getelementptr inbounds %struct.object, %struct.object* %53, i64 %15, i32 4, i64 %54
  %56 = load double, double* %55, align 8
  %57 = fsub double -0.000000e+00, %56
  %58 = load %struct.object*, %struct.object** @objects, align 8
  %59 = sext i32 %storemerge1 to i64
  %60 = getelementptr inbounds %struct.object, %struct.object* %58, i64 %16, i32 4, i64 %59
  store double %57, double* %60, align 8
  br label %82

; <label>:61:                                     ; preds = %38
  %62 = getelementptr inbounds %struct.object, %struct.object* %44, i64 %17, i32 2, i64 %45
  %63 = load double, double* %62, align 8
  %64 = fcmp ugt double %63, 0.000000e+00
  br i1 %64, label %82, label %65

; <label>:65:                                     ; preds = %61
  %66 = load %struct.object*, %struct.object** @objects, align 8
  %67 = sext i32 %storemerge1 to i64
  %68 = getelementptr inbounds %struct.object, %struct.object* %66, i64 %18, i32 2, i64 %67
  %69 = load double, double* %68, align 8
  %70 = fsub double 0.000000e+00, %69
  %71 = load %struct.object*, %struct.object** @objects, align 8
  %72 = sext i32 %storemerge1 to i64
  %73 = getelementptr inbounds %struct.object, %struct.object* %71, i64 %19, i32 2, i64 %72
  store double %70, double* %73, align 8
  %74 = load %struct.object*, %struct.object** @objects, align 8
  %75 = sext i32 %storemerge1 to i64
  %76 = getelementptr inbounds %struct.object, %struct.object* %74, i64 %20, i32 4, i64 %75
  %77 = load double, double* %76, align 8
  %78 = fsub double -0.000000e+00, %77
  %79 = load %struct.object*, %struct.object** @objects, align 8
  %80 = sext i32 %storemerge1 to i64
  %81 = getelementptr inbounds %struct.object, %struct.object* %79, i64 %21, i32 4, i64 %80
  store double %78, double* %81, align 8
  br label %82

; <label>:82:                                     ; preds = %46, %61, %65, %24
  %83 = load %struct.object*, %struct.object** @objects, align 8
  %84 = sext i32 %storemerge1 to i64
  %85 = getelementptr inbounds %struct.object, %struct.object* %83, i64 %11, i32 8, i64 %84
  %86 = load double, double* %85, align 8
  %87 = load %struct.object*, %struct.object** @objects, align 8
  %88 = sext i32 %storemerge1 to i64
  %89 = getelementptr inbounds %struct.object, %struct.object* %87, i64 %12, i32 6, i64 %88
  %90 = load double, double* %89, align 8
  %91 = fadd double %90, %86
  store double %91, double* %89, align 8
  %92 = add nsw i32 %storemerge1, 1
  br label %22

; <label>:93:                                     ; preds = %22
  %94 = add nsw i32 %storemerge, 1
  br label %4

; <label>:95:                                     ; preds = %4
  store i32 %storemerge1.lcssa2, i32* %2, align 1
  store i32 %storemerge, i32* %1, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @check_objects() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [3 x [2 x double]], align 16
  %5 = alloca %struct.block*, align 8
  %6 = alloca %struct.parent*, align 8
  %7 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0, i64 0
  %8 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0, i64 1
  %9 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 1, i64 0
  %10 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 1, i64 1
  %11 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 2, i64 0
  %12 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 2, i64 1
  %13 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0, i64 0
  %14 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0, i64 1
  %15 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 1, i64 0
  %16 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 1, i64 1
  %17 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 2, i64 0
  %18 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 2, i64 1
  %19 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0
  %20 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0, i64 0
  %21 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0, i64 1
  %22 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 1, i64 0
  %23 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 1, i64 1
  %24 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 2, i64 0
  %25 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 2, i64 1
  %26 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %4, i64 0, i64 0
  %.promoted = load i32, i32* %3, align 1
  %.promoted6 = load %struct.parent*, %struct.parent** %6, align 1
  %.promoted8 = load i32, i32* %1, align 1
  br label %27

; <label>:27:                                     ; preds = %335, %0
  %28 = phi i32 [ %.promoted8, %0 ], [ %336, %335 ]
  %29 = phi %struct.parent* [ %.promoted6, %0 ], [ %337, %335 ]
  %storemerge1.lcssa5 = phi i32 [ %.promoted, %0 ], [ %storemerge1.lcssa2, %335 ]
  %storemerge = phi i32 [ 0, %0 ], [ %338, %335 ]
  %30 = load i32*, i32** @sorted_index, align 8
  %31 = load i32, i32* @num_refine, align 4
  %32 = add nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %30, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %storemerge, %35
  br i1 %36, label %37, label %339

; <label>:37:                                     ; preds = %27
  %38 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %39 = sext i32 %storemerge to i64
  %40 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %38, i64 %39, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.block*, %struct.block** @blocks, align 8
  %43 = sext i32 %41 to i64
  %44 = getelementptr inbounds %struct.block, %struct.block* %42, i64 %43
  store %struct.block* %44, %struct.block** %5, align 8
  %45 = getelementptr inbounds %struct.block, %struct.block* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %48, label %335

; <label>:48:                                     ; preds = %37
  %49 = load i32*, i32** @p2, align 8
  %50 = load i32, i32* @num_refine, align 4
  %51 = load %struct.block*, %struct.block** %5, align 8
  %52 = getelementptr inbounds %struct.block, %struct.block* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sub nsw i32 %50, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %49, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load %struct.block*, %struct.block** %5, align 8
  %59 = getelementptr inbounds %struct.block, %struct.block* %58, i64 0, i32 10, i64 0
  %60 = load i32, i32* %59, align 4
  %61 = sub nsw i32 %60, %57
  %62 = sitofp i32 %61 to double
  %63 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %64 = sitofp i32 %63 to double
  %65 = fdiv double %62, %64
  store double %65, double* %7, align 16
  %66 = load %struct.block*, %struct.block** %5, align 8
  %67 = getelementptr inbounds %struct.block, %struct.block* %66, i64 0, i32 10, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = add nsw i32 %68, %57
  %70 = sitofp i32 %69 to double
  %71 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %72 = sitofp i32 %71 to double
  %73 = fdiv double %70, %72
  store double %73, double* %8, align 8
  %74 = load %struct.block*, %struct.block** %5, align 8
  %75 = getelementptr inbounds %struct.block, %struct.block* %74, i64 0, i32 10, i64 1
  %76 = load i32, i32* %75, align 4
  %77 = sub nsw i32 %76, %57
  %78 = sitofp i32 %77 to double
  %79 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %80 = sitofp i32 %79 to double
  %81 = fdiv double %78, %80
  store double %81, double* %9, align 16
  %82 = load %struct.block*, %struct.block** %5, align 8
  %83 = getelementptr inbounds %struct.block, %struct.block* %82, i64 0, i32 10, i64 1
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, %57
  %86 = sitofp i32 %85 to double
  %87 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %88 = sitofp i32 %87 to double
  %89 = fdiv double %86, %88
  store double %89, double* %10, align 8
  %90 = load %struct.block*, %struct.block** %5, align 8
  %91 = getelementptr inbounds %struct.block, %struct.block* %90, i64 0, i32 10, i64 2
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %92, %57
  %94 = sitofp i32 %93 to double
  %95 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %96 = sitofp i32 %95 to double
  %97 = fdiv double %94, %96
  store double %97, double* %11, align 16
  %98 = load %struct.block*, %struct.block** %5, align 8
  %99 = getelementptr inbounds %struct.block, %struct.block* %98, i64 0, i32 10, i64 2
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, %57
  %102 = sitofp i32 %101 to double
  %103 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %104 = sitofp i32 %103 to double
  %105 = fdiv double %102, %104
  store double %105, double* %12, align 8
  %106 = load i32, i32* @refine_ghost, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %169, label %108

; <label>:108:                                    ; preds = %48
  %109 = sitofp i32 %57 to double
  %110 = load i32, i32* @x_block_size, align 4
  %111 = sitofp i32 %110 to double
  %112 = fdiv double %109, %111
  %113 = fmul double %112, 2.000000e+00
  %114 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %115 = sitofp i32 %114 to double
  %116 = fdiv double %113, %115
  %117 = load double, double* %13, align 16
  %118 = fsub double %117, %116
  store double %118, double* %13, align 16
  %119 = sitofp i32 %57 to double
  %120 = load i32, i32* @x_block_size, align 4
  %121 = sitofp i32 %120 to double
  %122 = fdiv double %119, %121
  %123 = fmul double %122, 2.000000e+00
  %124 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %125 = sitofp i32 %124 to double
  %126 = fdiv double %123, %125
  %127 = load double, double* %14, align 8
  %128 = fadd double %127, %126
  store double %128, double* %14, align 8
  %129 = sitofp i32 %57 to double
  %130 = load i32, i32* @y_block_size, align 4
  %131 = sitofp i32 %130 to double
  %132 = fdiv double %129, %131
  %133 = fmul double %132, 2.000000e+00
  %134 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %135 = sitofp i32 %134 to double
  %136 = fdiv double %133, %135
  %137 = load double, double* %15, align 16
  %138 = fsub double %137, %136
  store double %138, double* %15, align 16
  %139 = sitofp i32 %57 to double
  %140 = load i32, i32* @y_block_size, align 4
  %141 = sitofp i32 %140 to double
  %142 = fdiv double %139, %141
  %143 = fmul double %142, 2.000000e+00
  %144 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %145 = sitofp i32 %144 to double
  %146 = fdiv double %143, %145
  %147 = load double, double* %16, align 8
  %148 = fadd double %147, %146
  store double %148, double* %16, align 8
  %149 = sitofp i32 %57 to double
  %150 = load i32, i32* @z_block_size, align 4
  %151 = sitofp i32 %150 to double
  %152 = fdiv double %149, %151
  %153 = fmul double %152, 2.000000e+00
  %154 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %155 = sitofp i32 %154 to double
  %156 = fdiv double %153, %155
  %157 = load double, double* %17, align 16
  %158 = fsub double %157, %156
  store double %158, double* %17, align 16
  %159 = sitofp i32 %57 to double
  %160 = load i32, i32* @z_block_size, align 4
  %161 = sitofp i32 %160 to double
  %162 = fdiv double %159, %161
  %163 = fmul double %162, 2.000000e+00
  %164 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %165 = sitofp i32 %164 to double
  %166 = fdiv double %163, %165
  %167 = load double, double* %18, align 8
  %168 = fadd double %167, %166
  store double %168, double* %18, align 8
  br label %169

; <label>:169:                                    ; preds = %48, %108
  %170 = call i32 @check_block([2 x double]* nonnull %19)
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %175, label %172

; <label>:172:                                    ; preds = %169
  %173 = load %struct.block*, %struct.block** %5, align 8
  %174 = getelementptr inbounds %struct.block, %struct.block* %173, i64 0, i32 2
  store i32 1, i32* %174, align 8
  br label %253

; <label>:175:                                    ; preds = %169
  %176 = load i32, i32* @refine_ghost, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %253, label %178

; <label>:178:                                    ; preds = %175
  %179 = load %struct.block*, %struct.block** %5, align 8
  %180 = getelementptr inbounds %struct.block, %struct.block* %179, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %253, label %183

; <label>:183:                                    ; preds = %178
  %184 = load i32*, i32** @p2, align 8
  %185 = load i32, i32* @num_refine, align 4
  %186 = load %struct.block*, %struct.block** %5, align 8
  %187 = getelementptr inbounds %struct.block, %struct.block* %186, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = sub nsw i32 %185, %188
  %190 = add nsw i32 %189, 1
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %184, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = sitofp i32 %193 to double
  %195 = load i32, i32* @x_block_size, align 4
  %196 = sitofp i32 %195 to double
  %197 = fdiv double %194, %196
  %198 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %199 = sitofp i32 %198 to double
  %200 = fdiv double %197, %199
  %201 = load double, double* %20, align 16
  %202 = fsub double %201, %200
  store double %202, double* %20, align 16
  %203 = sitofp i32 %193 to double
  %204 = load i32, i32* @x_block_size, align 4
  %205 = sitofp i32 %204 to double
  %206 = fdiv double %203, %205
  %207 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %208 = sitofp i32 %207 to double
  %209 = fdiv double %206, %208
  %210 = load double, double* %21, align 8
  %211 = fadd double %210, %209
  store double %211, double* %21, align 8
  %212 = sitofp i32 %193 to double
  %213 = load i32, i32* @y_block_size, align 4
  %214 = sitofp i32 %213 to double
  %215 = fdiv double %212, %214
  %216 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %217 = sitofp i32 %216 to double
  %218 = fdiv double %215, %217
  %219 = load double, double* %22, align 16
  %220 = fsub double %219, %218
  store double %220, double* %22, align 16
  %221 = sitofp i32 %193 to double
  %222 = load i32, i32* @y_block_size, align 4
  %223 = sitofp i32 %222 to double
  %224 = fdiv double %221, %223
  %225 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %226 = sitofp i32 %225 to double
  %227 = fdiv double %224, %226
  %228 = load double, double* %23, align 8
  %229 = fadd double %228, %227
  store double %229, double* %23, align 8
  %230 = sitofp i32 %193 to double
  %231 = load i32, i32* @z_block_size, align 4
  %232 = sitofp i32 %231 to double
  %233 = fdiv double %230, %232
  %234 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %235 = sitofp i32 %234 to double
  %236 = fdiv double %233, %235
  %237 = load double, double* %24, align 16
  %238 = fsub double %237, %236
  store double %238, double* %24, align 16
  %239 = sitofp i32 %193 to double
  %240 = load i32, i32* @z_block_size, align 4
  %241 = sitofp i32 %240 to double
  %242 = fdiv double %239, %241
  %243 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %244 = sitofp i32 %243 to double
  %245 = fdiv double %242, %244
  %246 = load double, double* %25, align 8
  %247 = fadd double %246, %245
  store double %247, double* %25, align 8
  %248 = call i32 @check_block([2 x double]* nonnull %26)
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %253, label %250

; <label>:250:                                    ; preds = %183
  %251 = load %struct.block*, %struct.block** %5, align 8
  %252 = getelementptr inbounds %struct.block, %struct.block* %251, i64 0, i32 2
  store i32 0, i32* %252, align 8
  br label %253

; <label>:253:                                    ; preds = %175, %178, %183, %250, %172
  %254 = phi i32 [ %57, %172 ], [ %57, %178 ], [ %57, %175 ], [ %193, %183 ], [ %193, %250 ]
  %255 = load %struct.block*, %struct.block** %5, align 8
  %256 = getelementptr inbounds %struct.block, %struct.block* %255, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = load i32, i32* @num_refine, align 4
  %259 = icmp eq i32 %257, %258
  br i1 %259, label %260, label %265

; <label>:260:                                    ; preds = %253
  %261 = load %struct.block*, %struct.block** %5, align 8
  %262 = getelementptr inbounds %struct.block, %struct.block* %261, i64 0, i32 2
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %270, label %265

; <label>:265:                                    ; preds = %260, %253
  %266 = load %struct.block*, %struct.block** %5, align 8
  %267 = getelementptr inbounds %struct.block, %struct.block* %266, i64 0, i32 2
  %268 = load i32, i32* %267, align 8
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %321

; <label>:270:                                    ; preds = %265, %260
  %271 = load %struct.block*, %struct.block** %5, align 8
  %272 = getelementptr inbounds %struct.block, %struct.block* %271, i64 0, i32 2
  store i32 0, i32* %272, align 8
  %273 = getelementptr inbounds %struct.block, %struct.block* %271, i64 0, i32 4
  %274 = load i32, i32* %273, align 8
  %275 = icmp eq i32 %274, -1
  br i1 %275, label %321, label %276

; <label>:276:                                    ; preds = %270
  %277 = load %struct.block*, %struct.block** %5, align 8
  %278 = getelementptr inbounds %struct.block, %struct.block* %277, i64 0, i32 5
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* @my_pe, align 4
  %281 = icmp eq i32 %279, %280
  br i1 %281, label %282, label %321

; <label>:282:                                    ; preds = %276
  %283 = load %struct.parent*, %struct.parent** @parents, align 8
  %284 = load %struct.block*, %struct.block** %5, align 8
  %285 = getelementptr inbounds %struct.block, %struct.block* %284, i64 0, i32 4
  %286 = load i32, i32* %285, align 8
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.parent, %struct.parent* %283, i64 %287
  %289 = getelementptr inbounds %struct.parent, %struct.parent* %283, i64 %287, i32 5
  store i32 0, i32* %289, align 4
  %290 = load i32, i32* @my_pe, align 4
  %291 = load %struct.block*, %struct.block** @blocks, align 8
  %292 = load %struct.block*, %struct.block** @blocks, align 8
  br label %293

; <label>:293:                                    ; preds = %319, %282
  %storemerge1 = phi i32 [ 0, %282 ], [ %320, %319 ]
  %294 = icmp slt i32 %storemerge1, 8
  br i1 %294, label %295, label %321

; <label>:295:                                    ; preds = %293
  %296 = sext i32 %storemerge1 to i64
  %297 = getelementptr inbounds %struct.parent, %struct.parent* %288, i64 0, i32 7, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, %290
  br i1 %299, label %300, label %319

; <label>:300:                                    ; preds = %295
  %301 = sext i32 %storemerge1 to i64
  %302 = getelementptr inbounds %struct.parent, %struct.parent* %288, i64 0, i32 6, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = icmp sgt i32 %303, -1
  br i1 %304, label %305, label %319

; <label>:305:                                    ; preds = %300
  %306 = sext i32 %storemerge1 to i64
  %307 = getelementptr inbounds %struct.parent, %struct.parent* %288, i64 0, i32 6, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds %struct.block, %struct.block* %291, i64 %309, i32 2
  %311 = load i32, i32* %310, align 8
  %312 = icmp eq i32 %311, -1
  br i1 %312, label %313, label %319

; <label>:313:                                    ; preds = %305
  %314 = sext i32 %storemerge1 to i64
  %315 = getelementptr inbounds %struct.parent, %struct.parent* %288, i64 0, i32 6, i64 %314
  %316 = load i32, i32* %315, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.block, %struct.block* %292, i64 %317, i32 2
  store i32 0, i32* %318, align 8
  br label %319

; <label>:319:                                    ; preds = %295, %300, %313, %305
  %320 = add nsw i32 %storemerge1, 1
  br label %293

; <label>:321:                                    ; preds = %276, %270, %293, %265
  %322 = phi %struct.parent* [ %29, %265 ], [ %29, %270 ], [ %29, %276 ], [ %288, %293 ]
  %storemerge1.lcssa3 = phi i32 [ %storemerge1.lcssa5, %265 ], [ %storemerge1.lcssa5, %270 ], [ %storemerge1.lcssa5, %276 ], [ %storemerge1, %293 ]
  %323 = load %struct.block*, %struct.block** %5, align 8
  %324 = getelementptr inbounds %struct.block, %struct.block* %323, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %335

; <label>:327:                                    ; preds = %321
  %328 = load %struct.block*, %struct.block** %5, align 8
  %329 = getelementptr inbounds %struct.block, %struct.block* %328, i64 0, i32 2
  %330 = load i32, i32* %329, align 8
  %331 = icmp eq i32 %330, -1
  br i1 %331, label %332, label %335

; <label>:332:                                    ; preds = %327
  %333 = load %struct.block*, %struct.block** %5, align 8
  %334 = getelementptr inbounds %struct.block, %struct.block* %333, i64 0, i32 2
  store i32 0, i32* %334, align 8
  br label %335

; <label>:335:                                    ; preds = %37, %321, %332, %327
  %336 = phi i32 [ %28, %37 ], [ %254, %321 ], [ %254, %332 ], [ %254, %327 ]
  %337 = phi %struct.parent* [ %29, %37 ], [ %322, %321 ], [ %322, %332 ], [ %322, %327 ]
  %storemerge1.lcssa2 = phi i32 [ %storemerge1.lcssa5, %37 ], [ %storemerge1.lcssa3, %321 ], [ %storemerge1.lcssa3, %332 ], [ %storemerge1.lcssa3, %327 ]
  %338 = add nsw i32 %storemerge, 1
  br label %27

; <label>:339:                                    ; preds = %27
  store i32 %storemerge1.lcssa5, i32* %3, align 1
  store %struct.parent* %29, %struct.parent** %6, align 1
  store i32 %storemerge, i32* %2, align 4
  store i32 %28, i32* %1, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @check_block([2 x double]*) #0 {
  %2 = alloca [2 x double]*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.object*, align 8
  store [2 x double]* %0, [2 x double]** %2, align 8
  store i32 0, i32* %8, align 4
  br label %16

; <label>:16:                                     ; preds = %2809, %1
  %storemerge = phi i32 [ 0, %1 ], [ %2811, %2809 ]
  store i32 %storemerge, i32* %3, align 4
  %17 = load i32, i32* @num_objects, align 4
  %18 = icmp slt i32 %storemerge, %17
  br i1 %18, label %19, label %2812

; <label>:19:                                     ; preds = %16
  %20 = load %struct.object*, %struct.object** @objects, align 8
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.object, %struct.object* %20, i64 %22
  store %struct.object* %23, %struct.object** %15, align 8
  %24 = load i32, i32* %8, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %2809, label %26

; <label>:26:                                     ; preds = %19
  %27 = load %struct.object*, %struct.object** %15, align 8
  %28 = getelementptr inbounds %struct.object, %struct.object* %27, i64 0, i32 6, i64 0
  %29 = load double, double* %28, align 8
  %30 = fcmp olt double %29, 0.000000e+00
  br i1 %30, label %2809, label %31

; <label>:31:                                     ; preds = %26
  %32 = load %struct.object*, %struct.object** %15, align 8
  %33 = getelementptr inbounds %struct.object, %struct.object* %32, i64 0, i32 6, i64 1
  %34 = load double, double* %33, align 8
  %35 = fcmp olt double %34, 0.000000e+00
  br i1 %35, label %2809, label %36

; <label>:36:                                     ; preds = %31
  %37 = load %struct.object*, %struct.object** %15, align 8
  %38 = getelementptr inbounds %struct.object, %struct.object* %37, i64 0, i32 6, i64 2
  %39 = load double, double* %38, align 8
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %2809, label %41

; <label>:41:                                     ; preds = %36
  %42 = load %struct.object*, %struct.object** %15, align 8
  %43 = getelementptr inbounds %struct.object, %struct.object* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %313

; <label>:46:                                     ; preds = %41
  %47 = load [2 x double]*, [2 x double]** %2, align 8
  %48 = getelementptr inbounds [2 x double], [2 x double]* %47, i64 0, i64 1
  %49 = load double, double* %48, align 8
  %50 = load %struct.object*, %struct.object** %15, align 8
  %51 = getelementptr inbounds %struct.object, %struct.object* %50, i64 0, i32 2, i64 0
  %52 = load double, double* %51, align 8
  %53 = getelementptr inbounds %struct.object, %struct.object* %50, i64 0, i32 6, i64 0
  %54 = load double, double* %53, align 8
  %55 = fsub double %52, %54
  %56 = fcmp ogt double %49, %55
  br i1 %56, label %57, label %2809

; <label>:57:                                     ; preds = %46
  %58 = load [2 x double]*, [2 x double]** %2, align 8
  %59 = getelementptr inbounds [2 x double], [2 x double]* %58, i64 0, i64 0
  %60 = load double, double* %59, align 8
  %61 = load %struct.object*, %struct.object** %15, align 8
  %62 = getelementptr inbounds %struct.object, %struct.object* %61, i64 0, i32 2, i64 0
  %63 = load double, double* %62, align 8
  %64 = getelementptr inbounds %struct.object, %struct.object* %61, i64 0, i32 6, i64 0
  %65 = load double, double* %64, align 8
  %66 = fadd double %63, %65
  %67 = fcmp olt double %60, %66
  br i1 %67, label %68, label %2809

; <label>:68:                                     ; preds = %57
  %69 = load [2 x double]*, [2 x double]** %2, align 8
  %70 = getelementptr inbounds [2 x double], [2 x double]* %69, i64 0, i64 0
  %71 = load double, double* %70, align 8
  %72 = load %struct.object*, %struct.object** %15, align 8
  %73 = getelementptr inbounds %struct.object, %struct.object* %72, i64 0, i32 2, i64 0
  %74 = load double, double* %73, align 8
  %75 = getelementptr inbounds %struct.object, %struct.object* %72, i64 0, i32 6, i64 0
  %76 = load double, double* %75, align 8
  %77 = fsub double %74, %76
  %78 = fcmp olt double %71, %77
  br i1 %78, label %79, label %90

; <label>:79:                                     ; preds = %68
  %80 = load [2 x double]*, [2 x double]** %2, align 8
  %81 = getelementptr inbounds [2 x double], [2 x double]* %80, i64 0, i64 1
  %82 = load double, double* %81, align 8
  %83 = load %struct.object*, %struct.object** %15, align 8
  %84 = getelementptr inbounds %struct.object, %struct.object* %83, i64 0, i32 2, i64 0
  %85 = load double, double* %84, align 8
  %86 = getelementptr inbounds %struct.object, %struct.object* %83, i64 0, i32 6, i64 0
  %87 = load double, double* %86, align 8
  %88 = fadd double %85, %87
  %89 = fcmp olt double %82, %88
  br i1 %89, label %112, label %90

; <label>:90:                                     ; preds = %79, %68
  %91 = load [2 x double]*, [2 x double]** %2, align 8
  %92 = getelementptr inbounds [2 x double], [2 x double]* %91, i64 0, i64 0
  %93 = load double, double* %92, align 8
  %94 = load %struct.object*, %struct.object** %15, align 8
  %95 = getelementptr inbounds %struct.object, %struct.object* %94, i64 0, i32 2, i64 0
  %96 = load double, double* %95, align 8
  %97 = getelementptr inbounds %struct.object, %struct.object* %94, i64 0, i32 6, i64 0
  %98 = load double, double* %97, align 8
  %99 = fsub double %96, %98
  %100 = fcmp ogt double %93, %99
  br i1 %100, label %101, label %157

; <label>:101:                                    ; preds = %90
  %102 = load [2 x double]*, [2 x double]** %2, align 8
  %103 = getelementptr inbounds [2 x double], [2 x double]* %102, i64 0, i64 1
  %104 = load double, double* %103, align 8
  %105 = load %struct.object*, %struct.object** %15, align 8
  %106 = getelementptr inbounds %struct.object, %struct.object* %105, i64 0, i32 2, i64 0
  %107 = load double, double* %106, align 8
  %108 = getelementptr inbounds %struct.object, %struct.object* %105, i64 0, i32 6, i64 0
  %109 = load double, double* %108, align 8
  %110 = fadd double %107, %109
  %111 = fcmp ogt double %104, %110
  br i1 %111, label %112, label %157

; <label>:112:                                    ; preds = %101, %79
  %113 = load [2 x double]*, [2 x double]** %2, align 8
  %114 = getelementptr inbounds [2 x double], [2 x double]* %113, i64 1, i64 1
  %115 = load double, double* %114, align 8
  %116 = load %struct.object*, %struct.object** %15, align 8
  %117 = getelementptr inbounds %struct.object, %struct.object* %116, i64 0, i32 2, i64 1
  %118 = load double, double* %117, align 8
  %119 = getelementptr inbounds %struct.object, %struct.object* %116, i64 0, i32 6, i64 1
  %120 = load double, double* %119, align 8
  %121 = fsub double %118, %120
  %122 = fcmp ogt double %115, %121
  br i1 %122, label %123, label %2809

; <label>:123:                                    ; preds = %112
  %124 = load [2 x double]*, [2 x double]** %2, align 8
  %125 = getelementptr inbounds [2 x double], [2 x double]* %124, i64 1, i64 0
  %126 = load double, double* %125, align 8
  %127 = load %struct.object*, %struct.object** %15, align 8
  %128 = getelementptr inbounds %struct.object, %struct.object* %127, i64 0, i32 2, i64 1
  %129 = load double, double* %128, align 8
  %130 = getelementptr inbounds %struct.object, %struct.object* %127, i64 0, i32 6, i64 1
  %131 = load double, double* %130, align 8
  %132 = fadd double %129, %131
  %133 = fcmp olt double %126, %132
  br i1 %133, label %134, label %2809

; <label>:134:                                    ; preds = %123
  %135 = load [2 x double]*, [2 x double]** %2, align 8
  %136 = getelementptr inbounds [2 x double], [2 x double]* %135, i64 2, i64 1
  %137 = load double, double* %136, align 8
  %138 = load %struct.object*, %struct.object** %15, align 8
  %139 = getelementptr inbounds %struct.object, %struct.object* %138, i64 0, i32 2, i64 2
  %140 = load double, double* %139, align 8
  %141 = getelementptr inbounds %struct.object, %struct.object* %138, i64 0, i32 6, i64 2
  %142 = load double, double* %141, align 8
  %143 = fsub double %140, %142
  %144 = fcmp ogt double %137, %143
  br i1 %144, label %145, label %2809

; <label>:145:                                    ; preds = %134
  %146 = load [2 x double]*, [2 x double]** %2, align 8
  %147 = getelementptr inbounds [2 x double], [2 x double]* %146, i64 2, i64 0
  %148 = load double, double* %147, align 8
  %149 = load %struct.object*, %struct.object** %15, align 8
  %150 = getelementptr inbounds %struct.object, %struct.object* %149, i64 0, i32 2, i64 2
  %151 = load double, double* %150, align 8
  %152 = getelementptr inbounds %struct.object, %struct.object* %149, i64 0, i32 6, i64 2
  %153 = load double, double* %152, align 8
  %154 = fadd double %151, %153
  %155 = fcmp olt double %148, %154
  br i1 %155, label %156, label %2809

; <label>:156:                                    ; preds = %145
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:157:                                    ; preds = %101, %90
  %158 = load [2 x double]*, [2 x double]** %2, align 8
  %159 = getelementptr inbounds [2 x double], [2 x double]* %158, i64 1, i64 1
  %160 = load double, double* %159, align 8
  %161 = load %struct.object*, %struct.object** %15, align 8
  %162 = getelementptr inbounds %struct.object, %struct.object* %161, i64 0, i32 2, i64 1
  %163 = load double, double* %162, align 8
  %164 = getelementptr inbounds %struct.object, %struct.object* %161, i64 0, i32 6, i64 1
  %165 = load double, double* %164, align 8
  %166 = fsub double %163, %165
  %167 = fcmp ogt double %160, %166
  br i1 %167, label %168, label %246

; <label>:168:                                    ; preds = %157
  %169 = load [2 x double]*, [2 x double]** %2, align 8
  %170 = getelementptr inbounds [2 x double], [2 x double]* %169, i64 1, i64 0
  %171 = load double, double* %170, align 8
  %172 = load %struct.object*, %struct.object** %15, align 8
  %173 = getelementptr inbounds %struct.object, %struct.object* %172, i64 0, i32 2, i64 1
  %174 = load double, double* %173, align 8
  %175 = getelementptr inbounds %struct.object, %struct.object* %172, i64 0, i32 6, i64 1
  %176 = load double, double* %175, align 8
  %177 = fadd double %174, %176
  %178 = fcmp olt double %171, %177
  br i1 %178, label %179, label %246

; <label>:179:                                    ; preds = %168
  %180 = load [2 x double]*, [2 x double]** %2, align 8
  %181 = getelementptr inbounds [2 x double], [2 x double]* %180, i64 1, i64 0
  %182 = load double, double* %181, align 8
  %183 = load %struct.object*, %struct.object** %15, align 8
  %184 = getelementptr inbounds %struct.object, %struct.object* %183, i64 0, i32 2, i64 1
  %185 = load double, double* %184, align 8
  %186 = getelementptr inbounds %struct.object, %struct.object* %183, i64 0, i32 6, i64 1
  %187 = load double, double* %186, align 8
  %188 = fsub double %185, %187
  %189 = fcmp olt double %182, %188
  br i1 %189, label %190, label %201

; <label>:190:                                    ; preds = %179
  %191 = load [2 x double]*, [2 x double]** %2, align 8
  %192 = getelementptr inbounds [2 x double], [2 x double]* %191, i64 1, i64 1
  %193 = load double, double* %192, align 8
  %194 = load %struct.object*, %struct.object** %15, align 8
  %195 = getelementptr inbounds %struct.object, %struct.object* %194, i64 0, i32 2, i64 1
  %196 = load double, double* %195, align 8
  %197 = getelementptr inbounds %struct.object, %struct.object* %194, i64 0, i32 6, i64 1
  %198 = load double, double* %197, align 8
  %199 = fadd double %196, %198
  %200 = fcmp olt double %193, %199
  br i1 %200, label %223, label %201

; <label>:201:                                    ; preds = %190, %179
  %202 = load [2 x double]*, [2 x double]** %2, align 8
  %203 = getelementptr inbounds [2 x double], [2 x double]* %202, i64 1, i64 0
  %204 = load double, double* %203, align 8
  %205 = load %struct.object*, %struct.object** %15, align 8
  %206 = getelementptr inbounds %struct.object, %struct.object* %205, i64 0, i32 2, i64 1
  %207 = load double, double* %206, align 8
  %208 = getelementptr inbounds %struct.object, %struct.object* %205, i64 0, i32 6, i64 1
  %209 = load double, double* %208, align 8
  %210 = fsub double %207, %209
  %211 = fcmp ogt double %204, %210
  br i1 %211, label %212, label %2809

; <label>:212:                                    ; preds = %201
  %213 = load [2 x double]*, [2 x double]** %2, align 8
  %214 = getelementptr inbounds [2 x double], [2 x double]* %213, i64 1, i64 1
  %215 = load double, double* %214, align 8
  %216 = load %struct.object*, %struct.object** %15, align 8
  %217 = getelementptr inbounds %struct.object, %struct.object* %216, i64 0, i32 2, i64 1
  %218 = load double, double* %217, align 8
  %219 = getelementptr inbounds %struct.object, %struct.object* %216, i64 0, i32 6, i64 1
  %220 = load double, double* %219, align 8
  %221 = fadd double %218, %220
  %222 = fcmp ogt double %215, %221
  br i1 %222, label %223, label %2809

; <label>:223:                                    ; preds = %212, %190
  %224 = load [2 x double]*, [2 x double]** %2, align 8
  %225 = getelementptr inbounds [2 x double], [2 x double]* %224, i64 2, i64 1
  %226 = load double, double* %225, align 8
  %227 = load %struct.object*, %struct.object** %15, align 8
  %228 = getelementptr inbounds %struct.object, %struct.object* %227, i64 0, i32 2, i64 2
  %229 = load double, double* %228, align 8
  %230 = getelementptr inbounds %struct.object, %struct.object* %227, i64 0, i32 6, i64 2
  %231 = load double, double* %230, align 8
  %232 = fsub double %229, %231
  %233 = fcmp ogt double %226, %232
  br i1 %233, label %234, label %2809

; <label>:234:                                    ; preds = %223
  %235 = load [2 x double]*, [2 x double]** %2, align 8
  %236 = getelementptr inbounds [2 x double], [2 x double]* %235, i64 2, i64 0
  %237 = load double, double* %236, align 8
  %238 = load %struct.object*, %struct.object** %15, align 8
  %239 = getelementptr inbounds %struct.object, %struct.object* %238, i64 0, i32 2, i64 2
  %240 = load double, double* %239, align 8
  %241 = getelementptr inbounds %struct.object, %struct.object* %238, i64 0, i32 6, i64 2
  %242 = load double, double* %241, align 8
  %243 = fadd double %240, %242
  %244 = fcmp olt double %237, %243
  br i1 %244, label %245, label %2809

; <label>:245:                                    ; preds = %234
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:246:                                    ; preds = %168, %157
  %247 = load [2 x double]*, [2 x double]** %2, align 8
  %248 = getelementptr inbounds [2 x double], [2 x double]* %247, i64 2, i64 1
  %249 = load double, double* %248, align 8
  %250 = load %struct.object*, %struct.object** %15, align 8
  %251 = getelementptr inbounds %struct.object, %struct.object* %250, i64 0, i32 2, i64 2
  %252 = load double, double* %251, align 8
  %253 = getelementptr inbounds %struct.object, %struct.object* %250, i64 0, i32 6, i64 2
  %254 = load double, double* %253, align 8
  %255 = fsub double %252, %254
  %256 = fcmp ogt double %249, %255
  br i1 %256, label %257, label %2809

; <label>:257:                                    ; preds = %246
  %258 = load [2 x double]*, [2 x double]** %2, align 8
  %259 = getelementptr inbounds [2 x double], [2 x double]* %258, i64 2, i64 0
  %260 = load double, double* %259, align 8
  %261 = load %struct.object*, %struct.object** %15, align 8
  %262 = getelementptr inbounds %struct.object, %struct.object* %261, i64 0, i32 2, i64 2
  %263 = load double, double* %262, align 8
  %264 = getelementptr inbounds %struct.object, %struct.object* %261, i64 0, i32 6, i64 2
  %265 = load double, double* %264, align 8
  %266 = fadd double %263, %265
  %267 = fcmp olt double %260, %266
  br i1 %267, label %268, label %2809

; <label>:268:                                    ; preds = %257
  %269 = load [2 x double]*, [2 x double]** %2, align 8
  %270 = getelementptr inbounds [2 x double], [2 x double]* %269, i64 2, i64 0
  %271 = load double, double* %270, align 8
  %272 = load %struct.object*, %struct.object** %15, align 8
  %273 = getelementptr inbounds %struct.object, %struct.object* %272, i64 0, i32 2, i64 2
  %274 = load double, double* %273, align 8
  %275 = getelementptr inbounds %struct.object, %struct.object* %272, i64 0, i32 6, i64 2
  %276 = load double, double* %275, align 8
  %277 = fsub double %274, %276
  %278 = fcmp olt double %271, %277
  br i1 %278, label %279, label %290

; <label>:279:                                    ; preds = %268
  %280 = load [2 x double]*, [2 x double]** %2, align 8
  %281 = getelementptr inbounds [2 x double], [2 x double]* %280, i64 2, i64 1
  %282 = load double, double* %281, align 8
  %283 = load %struct.object*, %struct.object** %15, align 8
  %284 = getelementptr inbounds %struct.object, %struct.object* %283, i64 0, i32 2, i64 2
  %285 = load double, double* %284, align 8
  %286 = getelementptr inbounds %struct.object, %struct.object* %283, i64 0, i32 6, i64 2
  %287 = load double, double* %286, align 8
  %288 = fadd double %285, %287
  %289 = fcmp olt double %282, %288
  br i1 %289, label %312, label %290

; <label>:290:                                    ; preds = %279, %268
  %291 = load [2 x double]*, [2 x double]** %2, align 8
  %292 = getelementptr inbounds [2 x double], [2 x double]* %291, i64 2, i64 0
  %293 = load double, double* %292, align 8
  %294 = load %struct.object*, %struct.object** %15, align 8
  %295 = getelementptr inbounds %struct.object, %struct.object* %294, i64 0, i32 2, i64 2
  %296 = load double, double* %295, align 8
  %297 = getelementptr inbounds %struct.object, %struct.object* %294, i64 0, i32 6, i64 2
  %298 = load double, double* %297, align 8
  %299 = fsub double %296, %298
  %300 = fcmp ogt double %293, %299
  br i1 %300, label %301, label %2809

; <label>:301:                                    ; preds = %290
  %302 = load [2 x double]*, [2 x double]** %2, align 8
  %303 = getelementptr inbounds [2 x double], [2 x double]* %302, i64 2, i64 1
  %304 = load double, double* %303, align 8
  %305 = load %struct.object*, %struct.object** %15, align 8
  %306 = getelementptr inbounds %struct.object, %struct.object* %305, i64 0, i32 2, i64 2
  %307 = load double, double* %306, align 8
  %308 = getelementptr inbounds %struct.object, %struct.object* %305, i64 0, i32 6, i64 2
  %309 = load double, double* %308, align 8
  %310 = fadd double %307, %309
  %311 = fcmp ogt double %304, %310
  br i1 %311, label %312, label %2809

; <label>:312:                                    ; preds = %301, %279
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:313:                                    ; preds = %41
  %314 = load %struct.object*, %struct.object** %15, align 8
  %315 = getelementptr inbounds %struct.object, %struct.object* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 8
  %317 = icmp eq i32 %316, 1
  br i1 %317, label %318, label %385

; <label>:318:                                    ; preds = %313
  %319 = load [2 x double]*, [2 x double]** %2, align 8
  %320 = getelementptr inbounds [2 x double], [2 x double]* %319, i64 0, i64 1
  %321 = load double, double* %320, align 8
  %322 = load %struct.object*, %struct.object** %15, align 8
  %323 = getelementptr inbounds %struct.object, %struct.object* %322, i64 0, i32 2, i64 0
  %324 = load double, double* %323, align 8
  %325 = getelementptr inbounds %struct.object, %struct.object* %322, i64 0, i32 6, i64 0
  %326 = load double, double* %325, align 8
  %327 = fsub double %324, %326
  %328 = fcmp ogt double %321, %327
  br i1 %328, label %329, label %2809

; <label>:329:                                    ; preds = %318
  %330 = load [2 x double]*, [2 x double]** %2, align 8
  %331 = getelementptr inbounds [2 x double], [2 x double]* %330, i64 0, i64 0
  %332 = load double, double* %331, align 8
  %333 = load %struct.object*, %struct.object** %15, align 8
  %334 = getelementptr inbounds %struct.object, %struct.object* %333, i64 0, i32 2, i64 0
  %335 = load double, double* %334, align 8
  %336 = getelementptr inbounds %struct.object, %struct.object* %333, i64 0, i32 6, i64 0
  %337 = load double, double* %336, align 8
  %338 = fadd double %335, %337
  %339 = fcmp olt double %332, %338
  br i1 %339, label %340, label %2809

; <label>:340:                                    ; preds = %329
  %341 = load [2 x double]*, [2 x double]** %2, align 8
  %342 = getelementptr inbounds [2 x double], [2 x double]* %341, i64 1, i64 1
  %343 = load double, double* %342, align 8
  %344 = load %struct.object*, %struct.object** %15, align 8
  %345 = getelementptr inbounds %struct.object, %struct.object* %344, i64 0, i32 2, i64 1
  %346 = load double, double* %345, align 8
  %347 = getelementptr inbounds %struct.object, %struct.object* %344, i64 0, i32 6, i64 1
  %348 = load double, double* %347, align 8
  %349 = fsub double %346, %348
  %350 = fcmp ogt double %343, %349
  br i1 %350, label %351, label %2809

; <label>:351:                                    ; preds = %340
  %352 = load [2 x double]*, [2 x double]** %2, align 8
  %353 = getelementptr inbounds [2 x double], [2 x double]* %352, i64 1, i64 0
  %354 = load double, double* %353, align 8
  %355 = load %struct.object*, %struct.object** %15, align 8
  %356 = getelementptr inbounds %struct.object, %struct.object* %355, i64 0, i32 2, i64 1
  %357 = load double, double* %356, align 8
  %358 = getelementptr inbounds %struct.object, %struct.object* %355, i64 0, i32 6, i64 1
  %359 = load double, double* %358, align 8
  %360 = fadd double %357, %359
  %361 = fcmp olt double %354, %360
  br i1 %361, label %362, label %2809

; <label>:362:                                    ; preds = %351
  %363 = load [2 x double]*, [2 x double]** %2, align 8
  %364 = getelementptr inbounds [2 x double], [2 x double]* %363, i64 2, i64 1
  %365 = load double, double* %364, align 8
  %366 = load %struct.object*, %struct.object** %15, align 8
  %367 = getelementptr inbounds %struct.object, %struct.object* %366, i64 0, i32 2, i64 2
  %368 = load double, double* %367, align 8
  %369 = getelementptr inbounds %struct.object, %struct.object* %366, i64 0, i32 6, i64 2
  %370 = load double, double* %369, align 8
  %371 = fsub double %368, %370
  %372 = fcmp ogt double %365, %371
  br i1 %372, label %373, label %2809

; <label>:373:                                    ; preds = %362
  %374 = load [2 x double]*, [2 x double]** %2, align 8
  %375 = getelementptr inbounds [2 x double], [2 x double]* %374, i64 2, i64 0
  %376 = load double, double* %375, align 8
  %377 = load %struct.object*, %struct.object** %15, align 8
  %378 = getelementptr inbounds %struct.object, %struct.object* %377, i64 0, i32 2, i64 2
  %379 = load double, double* %378, align 8
  %380 = getelementptr inbounds %struct.object, %struct.object* %377, i64 0, i32 6, i64 2
  %381 = load double, double* %380, align 8
  %382 = fadd double %379, %381
  %383 = fcmp olt double %376, %382
  br i1 %383, label %384, label %2809

; <label>:384:                                    ; preds = %373
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:385:                                    ; preds = %313
  %386 = load %struct.object*, %struct.object** %15, align 8
  %387 = getelementptr inbounds %struct.object, %struct.object* %386, i64 0, i32 0
  %388 = load i32, i32* %387, align 8
  %389 = icmp sgt i32 %388, 1
  br i1 %389, label %390, label %1483

; <label>:390:                                    ; preds = %385
  %391 = load %struct.object*, %struct.object** %15, align 8
  %392 = getelementptr inbounds %struct.object, %struct.object* %391, i64 0, i32 0
  %393 = load i32, i32* %392, align 8
  %394 = icmp slt i32 %393, 15
  br i1 %394, label %395, label %1483

; <label>:395:                                    ; preds = %390
  %396 = load %struct.object*, %struct.object** %15, align 8
  %397 = getelementptr inbounds %struct.object, %struct.object* %396, i64 0, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %1483

; <label>:401:                                    ; preds = %395
  %402 = load i32, i32* %8, align 4
  store i32 %402, i32* %4, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %9, align 4
  %403 = load %struct.object*, %struct.object** %15, align 8
  %404 = getelementptr inbounds %struct.object, %struct.object* %403, i64 0, i32 2, i64 0
  %405 = load double, double* %404, align 8
  %406 = load [2 x double]*, [2 x double]** %2, align 8
  %407 = getelementptr inbounds [2 x double], [2 x double]* %406, i64 0, i64 0
  %408 = load double, double* %407, align 8
  %409 = fcmp olt double %405, %408
  br i1 %409, label %430, label %410

; <label>:410:                                    ; preds = %401
  %411 = load %struct.object*, %struct.object** %15, align 8
  %412 = getelementptr inbounds %struct.object, %struct.object* %411, i64 0, i32 2, i64 0
  %413 = load double, double* %412, align 8
  %414 = load [2 x double]*, [2 x double]** %2, align 8
  %415 = getelementptr inbounds [2 x double], [2 x double]* %414, i64 0, i64 1
  %416 = load double, double* %415, align 8
  %417 = fcmp ogt double %413, %416
  br i1 %417, label %430, label %418

; <label>:418:                                    ; preds = %410
  store i32 1, i32* %9, align 4
  %419 = load %struct.object*, %struct.object** %15, align 8
  %420 = getelementptr inbounds %struct.object, %struct.object* %419, i64 0, i32 2, i64 0
  %421 = load double, double* %420, align 8
  %422 = load [2 x double]*, [2 x double]** %2, align 8
  %423 = getelementptr inbounds [2 x double], [2 x double]* %422, i64 0, i64 0
  %424 = load double, double* %423, align 8
  %425 = getelementptr inbounds [2 x double], [2 x double]* %422, i64 0, i64 1
  %426 = load double, double* %425, align 8
  %427 = fadd double %424, %426
  %428 = fmul double %427, 5.000000e-01
  %429 = fcmp olt double %421, %428
  %. = select i1 %429, i32 0, i32 1
  br label %430

; <label>:430:                                    ; preds = %418, %410, %401
  %storemerge17 = phi i32 [ 0, %401 ], [ %., %418 ], [ 1, %410 ]
  store i32 %storemerge17, i32* %10, align 4
  %431 = load %struct.object*, %struct.object** %15, align 8
  %432 = getelementptr inbounds %struct.object, %struct.object* %431, i64 0, i32 2, i64 1
  %433 = load double, double* %432, align 8
  %434 = load [2 x double]*, [2 x double]** %2, align 8
  %435 = getelementptr inbounds [2 x double], [2 x double]* %434, i64 1, i64 0
  %436 = load double, double* %435, align 8
  %437 = fcmp olt double %433, %436
  br i1 %437, label %458, label %438

; <label>:438:                                    ; preds = %430
  %439 = load %struct.object*, %struct.object** %15, align 8
  %440 = getelementptr inbounds %struct.object, %struct.object* %439, i64 0, i32 2, i64 1
  %441 = load double, double* %440, align 8
  %442 = load [2 x double]*, [2 x double]** %2, align 8
  %443 = getelementptr inbounds [2 x double], [2 x double]* %442, i64 1, i64 1
  %444 = load double, double* %443, align 8
  %445 = fcmp ogt double %441, %444
  br i1 %445, label %458, label %446

; <label>:446:                                    ; preds = %438
  store i32 1, i32* %11, align 4
  %447 = load %struct.object*, %struct.object** %15, align 8
  %448 = getelementptr inbounds %struct.object, %struct.object* %447, i64 0, i32 2, i64 1
  %449 = load double, double* %448, align 8
  %450 = load [2 x double]*, [2 x double]** %2, align 8
  %451 = getelementptr inbounds [2 x double], [2 x double]* %450, i64 1, i64 0
  %452 = load double, double* %451, align 8
  %453 = getelementptr inbounds [2 x double], [2 x double]* %450, i64 1, i64 1
  %454 = load double, double* %453, align 8
  %455 = fadd double %452, %454
  %456 = fmul double %455, 5.000000e-01
  %457 = fcmp olt double %449, %456
  %.28 = select i1 %457, i32 0, i32 1
  br label %458

; <label>:458:                                    ; preds = %446, %438, %430
  %storemerge20 = phi i32 [ 0, %430 ], [ %.28, %446 ], [ 1, %438 ]
  store i32 %storemerge20, i32* %12, align 4
  %459 = load %struct.object*, %struct.object** %15, align 8
  %460 = getelementptr inbounds %struct.object, %struct.object* %459, i64 0, i32 2, i64 2
  %461 = load double, double* %460, align 8
  %462 = load [2 x double]*, [2 x double]** %2, align 8
  %463 = getelementptr inbounds [2 x double], [2 x double]* %462, i64 2, i64 0
  %464 = load double, double* %463, align 8
  %465 = fcmp olt double %461, %464
  br i1 %465, label %486, label %466

; <label>:466:                                    ; preds = %458
  %467 = load %struct.object*, %struct.object** %15, align 8
  %468 = getelementptr inbounds %struct.object, %struct.object* %467, i64 0, i32 2, i64 2
  %469 = load double, double* %468, align 8
  %470 = load [2 x double]*, [2 x double]** %2, align 8
  %471 = getelementptr inbounds [2 x double], [2 x double]* %470, i64 2, i64 1
  %472 = load double, double* %471, align 8
  %473 = fcmp ogt double %469, %472
  br i1 %473, label %486, label %474

; <label>:474:                                    ; preds = %466
  store i32 1, i32* %13, align 4
  %475 = load %struct.object*, %struct.object** %15, align 8
  %476 = getelementptr inbounds %struct.object, %struct.object* %475, i64 0, i32 2, i64 2
  %477 = load double, double* %476, align 8
  %478 = load [2 x double]*, [2 x double]** %2, align 8
  %479 = getelementptr inbounds [2 x double], [2 x double]* %478, i64 2, i64 0
  %480 = load double, double* %479, align 8
  %481 = getelementptr inbounds [2 x double], [2 x double]* %478, i64 2, i64 1
  %482 = load double, double* %481, align 8
  %483 = fadd double %480, %482
  %484 = fmul double %483, 5.000000e-01
  %485 = fcmp olt double %477, %484
  %.29 = select i1 %485, i32 0, i32 1
  br label %486

; <label>:486:                                    ; preds = %474, %466, %458
  %storemerge23 = phi i32 [ 0, %458 ], [ %.29, %474 ], [ 1, %466 ]
  store i32 %storemerge23, i32* %14, align 4
  %487 = load i32, i32* %9, align 4
  %488 = icmp eq i32 %487, 0
  %489 = load i32, i32* %11, align 4
  %490 = icmp eq i32 %489, 0
  %491 = load i32, i32* %13, align 4
  %492 = icmp eq i32 %491, 0
  %493 = load [2 x double]*, [2 x double]** %2, align 8
  br i1 %488, label %910, label %494

; <label>:494:                                    ; preds = %486
  br i1 %490, label %680, label %495

; <label>:495:                                    ; preds = %494
  br i1 %492, label %581, label %496

; <label>:496:                                    ; preds = %495
  %497 = load i32, i32* %10, align 4
  %498 = sub nsw i32 1, %497
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [2 x double], [2 x double]* %493, i64 0, i64 %499
  %501 = load double, double* %500, align 8
  %502 = load %struct.object*, %struct.object** %15, align 8
  %503 = getelementptr inbounds %struct.object, %struct.object* %502, i64 0, i32 2, i64 0
  %504 = load double, double* %503, align 8
  %505 = fsub double %501, %504
  %506 = getelementptr inbounds %struct.object, %struct.object* %502, i64 0, i32 6, i64 0
  %507 = load double, double* %506, align 8
  %508 = fdiv double %505, %507
  %509 = load [2 x double]*, [2 x double]** %2, align 8
  %510 = load i32, i32* %10, align 4
  %511 = sub nsw i32 1, %510
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [2 x double], [2 x double]* %509, i64 0, i64 %512
  %514 = load double, double* %513, align 8
  %515 = load %struct.object*, %struct.object** %15, align 8
  %516 = getelementptr inbounds %struct.object, %struct.object* %515, i64 0, i32 2, i64 0
  %517 = load double, double* %516, align 8
  %518 = fsub double %514, %517
  %519 = getelementptr inbounds %struct.object, %struct.object* %515, i64 0, i32 6, i64 0
  %520 = load double, double* %519, align 8
  %521 = fdiv double %518, %520
  %522 = fmul double %508, %521
  %523 = load [2 x double]*, [2 x double]** %2, align 8
  %524 = load i32, i32* %12, align 4
  %525 = sub nsw i32 1, %524
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [2 x double], [2 x double]* %523, i64 1, i64 %526
  %528 = load double, double* %527, align 8
  %529 = load %struct.object*, %struct.object** %15, align 8
  %530 = getelementptr inbounds %struct.object, %struct.object* %529, i64 0, i32 2, i64 1
  %531 = load double, double* %530, align 8
  %532 = fsub double %528, %531
  %533 = getelementptr inbounds %struct.object, %struct.object* %529, i64 0, i32 6, i64 1
  %534 = load double, double* %533, align 8
  %535 = fdiv double %532, %534
  %536 = load [2 x double]*, [2 x double]** %2, align 8
  %537 = load i32, i32* %12, align 4
  %538 = sub nsw i32 1, %537
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [2 x double], [2 x double]* %536, i64 1, i64 %539
  %541 = load double, double* %540, align 8
  %542 = load %struct.object*, %struct.object** %15, align 8
  %543 = getelementptr inbounds %struct.object, %struct.object* %542, i64 0, i32 2, i64 1
  %544 = load double, double* %543, align 8
  %545 = fsub double %541, %544
  %546 = getelementptr inbounds %struct.object, %struct.object* %542, i64 0, i32 6, i64 1
  %547 = load double, double* %546, align 8
  %548 = fdiv double %545, %547
  %549 = fmul double %535, %548
  %550 = fadd double %522, %549
  %551 = load [2 x double]*, [2 x double]** %2, align 8
  %552 = load i32, i32* %14, align 4
  %553 = sub nsw i32 1, %552
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [2 x double], [2 x double]* %551, i64 2, i64 %554
  %556 = load double, double* %555, align 8
  %557 = load %struct.object*, %struct.object** %15, align 8
  %558 = getelementptr inbounds %struct.object, %struct.object* %557, i64 0, i32 2, i64 2
  %559 = load double, double* %558, align 8
  %560 = fsub double %556, %559
  %561 = getelementptr inbounds %struct.object, %struct.object* %557, i64 0, i32 6, i64 2
  %562 = load double, double* %561, align 8
  %563 = fdiv double %560, %562
  %564 = load [2 x double]*, [2 x double]** %2, align 8
  %565 = load i32, i32* %14, align 4
  %566 = sub nsw i32 1, %565
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds [2 x double], [2 x double]* %564, i64 2, i64 %567
  %569 = load double, double* %568, align 8
  %570 = load %struct.object*, %struct.object** %15, align 8
  %571 = getelementptr inbounds %struct.object, %struct.object* %570, i64 0, i32 2, i64 2
  %572 = load double, double* %571, align 8
  %573 = fsub double %569, %572
  %574 = getelementptr inbounds %struct.object, %struct.object* %570, i64 0, i32 6, i64 2
  %575 = load double, double* %574, align 8
  %576 = fdiv double %573, %575
  %577 = fmul double %563, %576
  %578 = fadd double %550, %577
  %579 = fcmp ogt double %578, 1.000000e+00
  br i1 %579, label %580, label %1386

; <label>:580:                                    ; preds = %496
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:581:                                    ; preds = %495
  %582 = load i32, i32* %14, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [2 x double], [2 x double]* %493, i64 2, i64 %583
  %585 = load double, double* %584, align 8
  %586 = load %struct.object*, %struct.object** %15, align 8
  %587 = getelementptr inbounds %struct.object, %struct.object* %586, i64 0, i32 2, i64 2
  %588 = load double, double* %587, align 8
  %589 = fsub double %585, %588
  %590 = call double @llvm.fabs.f64(double %589)
  %591 = getelementptr inbounds %struct.object, %struct.object* %586, i64 0, i32 6, i64 2
  %592 = load double, double* %591, align 8
  %593 = fcmp olt double %590, %592
  br i1 %593, label %594, label %1386

; <label>:594:                                    ; preds = %581
  %595 = load [2 x double]*, [2 x double]** %2, align 8
  %596 = load i32, i32* %10, align 4
  %597 = sub nsw i32 1, %596
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds [2 x double], [2 x double]* %595, i64 0, i64 %598
  %600 = load double, double* %599, align 8
  %601 = load %struct.object*, %struct.object** %15, align 8
  %602 = getelementptr inbounds %struct.object, %struct.object* %601, i64 0, i32 2, i64 0
  %603 = load double, double* %602, align 8
  %604 = fsub double %600, %603
  %605 = getelementptr inbounds %struct.object, %struct.object* %601, i64 0, i32 6, i64 0
  %606 = load double, double* %605, align 8
  %607 = fdiv double %604, %606
  %608 = load [2 x double]*, [2 x double]** %2, align 8
  %609 = load i32, i32* %10, align 4
  %610 = sub nsw i32 1, %609
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [2 x double], [2 x double]* %608, i64 0, i64 %611
  %613 = load double, double* %612, align 8
  %614 = load %struct.object*, %struct.object** %15, align 8
  %615 = getelementptr inbounds %struct.object, %struct.object* %614, i64 0, i32 2, i64 0
  %616 = load double, double* %615, align 8
  %617 = fsub double %613, %616
  %618 = getelementptr inbounds %struct.object, %struct.object* %614, i64 0, i32 6, i64 0
  %619 = load double, double* %618, align 8
  %620 = fdiv double %617, %619
  %621 = fmul double %607, %620
  %622 = load [2 x double]*, [2 x double]** %2, align 8
  %623 = load i32, i32* %12, align 4
  %624 = sub nsw i32 1, %623
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [2 x double], [2 x double]* %622, i64 1, i64 %625
  %627 = load double, double* %626, align 8
  %628 = load %struct.object*, %struct.object** %15, align 8
  %629 = getelementptr inbounds %struct.object, %struct.object* %628, i64 0, i32 2, i64 1
  %630 = load double, double* %629, align 8
  %631 = fsub double %627, %630
  %632 = getelementptr inbounds %struct.object, %struct.object* %628, i64 0, i32 6, i64 1
  %633 = load double, double* %632, align 8
  %634 = fdiv double %631, %633
  %635 = load [2 x double]*, [2 x double]** %2, align 8
  %636 = load i32, i32* %12, align 4
  %637 = sub nsw i32 1, %636
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [2 x double], [2 x double]* %635, i64 1, i64 %638
  %640 = load double, double* %639, align 8
  %641 = load %struct.object*, %struct.object** %15, align 8
  %642 = getelementptr inbounds %struct.object, %struct.object* %641, i64 0, i32 2, i64 1
  %643 = load double, double* %642, align 8
  %644 = fsub double %640, %643
  %645 = getelementptr inbounds %struct.object, %struct.object* %641, i64 0, i32 6, i64 1
  %646 = load double, double* %645, align 8
  %647 = fdiv double %644, %646
  %648 = fmul double %634, %647
  %649 = fadd double %621, %648
  %650 = load [2 x double]*, [2 x double]** %2, align 8
  %651 = load i32, i32* %14, align 4
  %652 = sub nsw i32 1, %651
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds [2 x double], [2 x double]* %650, i64 2, i64 %653
  %655 = load double, double* %654, align 8
  %656 = load %struct.object*, %struct.object** %15, align 8
  %657 = getelementptr inbounds %struct.object, %struct.object* %656, i64 0, i32 2, i64 2
  %658 = load double, double* %657, align 8
  %659 = fsub double %655, %658
  %660 = getelementptr inbounds %struct.object, %struct.object* %656, i64 0, i32 6, i64 2
  %661 = load double, double* %660, align 8
  %662 = fdiv double %659, %661
  %663 = load [2 x double]*, [2 x double]** %2, align 8
  %664 = load i32, i32* %14, align 4
  %665 = sub nsw i32 1, %664
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [2 x double], [2 x double]* %663, i64 2, i64 %666
  %668 = load double, double* %667, align 8
  %669 = load %struct.object*, %struct.object** %15, align 8
  %670 = getelementptr inbounds %struct.object, %struct.object* %669, i64 0, i32 2, i64 2
  %671 = load double, double* %670, align 8
  %672 = fsub double %668, %671
  %673 = getelementptr inbounds %struct.object, %struct.object* %669, i64 0, i32 6, i64 2
  %674 = load double, double* %673, align 8
  %675 = fdiv double %672, %674
  %676 = fmul double %662, %675
  %677 = fadd double %649, %676
  %678 = fcmp ogt double %677, 1.000000e+00
  br i1 %678, label %679, label %1386

; <label>:679:                                    ; preds = %594
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:680:                                    ; preds = %494
  %681 = load i32, i32* %12, align 4
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds [2 x double], [2 x double]* %493, i64 1, i64 %682
  %684 = load double, double* %683, align 8
  %685 = load %struct.object*, %struct.object** %15, align 8
  %686 = getelementptr inbounds %struct.object, %struct.object* %685, i64 0, i32 2, i64 1
  %687 = load double, double* %686, align 8
  %688 = fsub double %684, %687
  br i1 %492, label %780, label %689

; <label>:689:                                    ; preds = %680
  %690 = call double @llvm.fabs.f64(double %688)
  %691 = getelementptr inbounds %struct.object, %struct.object* %685, i64 0, i32 6, i64 1
  %692 = load double, double* %691, align 8
  %693 = fcmp olt double %690, %692
  br i1 %693, label %694, label %1386

; <label>:694:                                    ; preds = %689
  %695 = load [2 x double]*, [2 x double]** %2, align 8
  %696 = load i32, i32* %10, align 4
  %697 = sub nsw i32 1, %696
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds [2 x double], [2 x double]* %695, i64 0, i64 %698
  %700 = load double, double* %699, align 8
  %701 = load %struct.object*, %struct.object** %15, align 8
  %702 = getelementptr inbounds %struct.object, %struct.object* %701, i64 0, i32 2, i64 0
  %703 = load double, double* %702, align 8
  %704 = fsub double %700, %703
  %705 = getelementptr inbounds %struct.object, %struct.object* %701, i64 0, i32 6, i64 0
  %706 = load double, double* %705, align 8
  %707 = fdiv double %704, %706
  %708 = load [2 x double]*, [2 x double]** %2, align 8
  %709 = load i32, i32* %10, align 4
  %710 = sub nsw i32 1, %709
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds [2 x double], [2 x double]* %708, i64 0, i64 %711
  %713 = load double, double* %712, align 8
  %714 = load %struct.object*, %struct.object** %15, align 8
  %715 = getelementptr inbounds %struct.object, %struct.object* %714, i64 0, i32 2, i64 0
  %716 = load double, double* %715, align 8
  %717 = fsub double %713, %716
  %718 = getelementptr inbounds %struct.object, %struct.object* %714, i64 0, i32 6, i64 0
  %719 = load double, double* %718, align 8
  %720 = fdiv double %717, %719
  %721 = fmul double %707, %720
  %722 = load [2 x double]*, [2 x double]** %2, align 8
  %723 = load i32, i32* %12, align 4
  %724 = sub nsw i32 1, %723
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds [2 x double], [2 x double]* %722, i64 1, i64 %725
  %727 = load double, double* %726, align 8
  %728 = load %struct.object*, %struct.object** %15, align 8
  %729 = getelementptr inbounds %struct.object, %struct.object* %728, i64 0, i32 2, i64 1
  %730 = load double, double* %729, align 8
  %731 = fsub double %727, %730
  %732 = getelementptr inbounds %struct.object, %struct.object* %728, i64 0, i32 6, i64 1
  %733 = load double, double* %732, align 8
  %734 = fdiv double %731, %733
  %735 = load [2 x double]*, [2 x double]** %2, align 8
  %736 = load i32, i32* %12, align 4
  %737 = sub nsw i32 1, %736
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds [2 x double], [2 x double]* %735, i64 1, i64 %738
  %740 = load double, double* %739, align 8
  %741 = load %struct.object*, %struct.object** %15, align 8
  %742 = getelementptr inbounds %struct.object, %struct.object* %741, i64 0, i32 2, i64 1
  %743 = load double, double* %742, align 8
  %744 = fsub double %740, %743
  %745 = getelementptr inbounds %struct.object, %struct.object* %741, i64 0, i32 6, i64 1
  %746 = load double, double* %745, align 8
  %747 = fdiv double %744, %746
  %748 = fmul double %734, %747
  %749 = fadd double %721, %748
  %750 = load [2 x double]*, [2 x double]** %2, align 8
  %751 = load i32, i32* %14, align 4
  %752 = sub nsw i32 1, %751
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [2 x double], [2 x double]* %750, i64 2, i64 %753
  %755 = load double, double* %754, align 8
  %756 = load %struct.object*, %struct.object** %15, align 8
  %757 = getelementptr inbounds %struct.object, %struct.object* %756, i64 0, i32 2, i64 2
  %758 = load double, double* %757, align 8
  %759 = fsub double %755, %758
  %760 = getelementptr inbounds %struct.object, %struct.object* %756, i64 0, i32 6, i64 2
  %761 = load double, double* %760, align 8
  %762 = fdiv double %759, %761
  %763 = load [2 x double]*, [2 x double]** %2, align 8
  %764 = load i32, i32* %14, align 4
  %765 = sub nsw i32 1, %764
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds [2 x double], [2 x double]* %763, i64 2, i64 %766
  %768 = load double, double* %767, align 8
  %769 = load %struct.object*, %struct.object** %15, align 8
  %770 = getelementptr inbounds %struct.object, %struct.object* %769, i64 0, i32 2, i64 2
  %771 = load double, double* %770, align 8
  %772 = fsub double %768, %771
  %773 = getelementptr inbounds %struct.object, %struct.object* %769, i64 0, i32 6, i64 2
  %774 = load double, double* %773, align 8
  %775 = fdiv double %772, %774
  %776 = fmul double %762, %775
  %777 = fadd double %749, %776
  %778 = fcmp ogt double %777, 1.000000e+00
  br i1 %778, label %779, label %1386

; <label>:779:                                    ; preds = %694
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:780:                                    ; preds = %680
  %781 = getelementptr inbounds %struct.object, %struct.object* %685, i64 0, i32 6, i64 1
  %782 = load double, double* %781, align 8
  %783 = fdiv double %688, %782
  %784 = load [2 x double]*, [2 x double]** %2, align 8
  %785 = load i32, i32* %12, align 4
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds [2 x double], [2 x double]* %784, i64 1, i64 %786
  %788 = load double, double* %787, align 8
  %789 = load %struct.object*, %struct.object** %15, align 8
  %790 = getelementptr inbounds %struct.object, %struct.object* %789, i64 0, i32 2, i64 1
  %791 = load double, double* %790, align 8
  %792 = fsub double %788, %791
  %793 = getelementptr inbounds %struct.object, %struct.object* %789, i64 0, i32 6, i64 1
  %794 = load double, double* %793, align 8
  %795 = fdiv double %792, %794
  %796 = fmul double %783, %795
  %797 = load [2 x double]*, [2 x double]** %2, align 8
  %798 = load i32, i32* %14, align 4
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds [2 x double], [2 x double]* %797, i64 2, i64 %799
  %801 = load double, double* %800, align 8
  %802 = load %struct.object*, %struct.object** %15, align 8
  %803 = getelementptr inbounds %struct.object, %struct.object* %802, i64 0, i32 2, i64 2
  %804 = load double, double* %803, align 8
  %805 = fsub double %801, %804
  %806 = getelementptr inbounds %struct.object, %struct.object* %802, i64 0, i32 6, i64 2
  %807 = load double, double* %806, align 8
  %808 = fdiv double %805, %807
  %809 = load [2 x double]*, [2 x double]** %2, align 8
  %810 = load i32, i32* %14, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds [2 x double], [2 x double]* %809, i64 2, i64 %811
  %813 = load double, double* %812, align 8
  %814 = load %struct.object*, %struct.object** %15, align 8
  %815 = getelementptr inbounds %struct.object, %struct.object* %814, i64 0, i32 2, i64 2
  %816 = load double, double* %815, align 8
  %817 = fsub double %813, %816
  %818 = getelementptr inbounds %struct.object, %struct.object* %814, i64 0, i32 6, i64 2
  %819 = load double, double* %818, align 8
  %820 = fdiv double %817, %819
  %821 = fmul double %808, %820
  %822 = fadd double %796, %821
  %823 = fcmp olt double %822, 1.000000e+00
  br i1 %823, label %824, label %1386

; <label>:824:                                    ; preds = %780
  %825 = load [2 x double]*, [2 x double]** %2, align 8
  %826 = load i32, i32* %10, align 4
  %827 = sub nsw i32 1, %826
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds [2 x double], [2 x double]* %825, i64 0, i64 %828
  %830 = load double, double* %829, align 8
  %831 = load %struct.object*, %struct.object** %15, align 8
  %832 = getelementptr inbounds %struct.object, %struct.object* %831, i64 0, i32 2, i64 0
  %833 = load double, double* %832, align 8
  %834 = fsub double %830, %833
  %835 = getelementptr inbounds %struct.object, %struct.object* %831, i64 0, i32 6, i64 0
  %836 = load double, double* %835, align 8
  %837 = fdiv double %834, %836
  %838 = load [2 x double]*, [2 x double]** %2, align 8
  %839 = load i32, i32* %10, align 4
  %840 = sub nsw i32 1, %839
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [2 x double], [2 x double]* %838, i64 0, i64 %841
  %843 = load double, double* %842, align 8
  %844 = load %struct.object*, %struct.object** %15, align 8
  %845 = getelementptr inbounds %struct.object, %struct.object* %844, i64 0, i32 2, i64 0
  %846 = load double, double* %845, align 8
  %847 = fsub double %843, %846
  %848 = getelementptr inbounds %struct.object, %struct.object* %844, i64 0, i32 6, i64 0
  %849 = load double, double* %848, align 8
  %850 = fdiv double %847, %849
  %851 = fmul double %837, %850
  %852 = load [2 x double]*, [2 x double]** %2, align 8
  %853 = load i32, i32* %12, align 4
  %854 = sub nsw i32 1, %853
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds [2 x double], [2 x double]* %852, i64 1, i64 %855
  %857 = load double, double* %856, align 8
  %858 = load %struct.object*, %struct.object** %15, align 8
  %859 = getelementptr inbounds %struct.object, %struct.object* %858, i64 0, i32 2, i64 1
  %860 = load double, double* %859, align 8
  %861 = fsub double %857, %860
  %862 = getelementptr inbounds %struct.object, %struct.object* %858, i64 0, i32 6, i64 1
  %863 = load double, double* %862, align 8
  %864 = fdiv double %861, %863
  %865 = load [2 x double]*, [2 x double]** %2, align 8
  %866 = load i32, i32* %12, align 4
  %867 = sub nsw i32 1, %866
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds [2 x double], [2 x double]* %865, i64 1, i64 %868
  %870 = load double, double* %869, align 8
  %871 = load %struct.object*, %struct.object** %15, align 8
  %872 = getelementptr inbounds %struct.object, %struct.object* %871, i64 0, i32 2, i64 1
  %873 = load double, double* %872, align 8
  %874 = fsub double %870, %873
  %875 = getelementptr inbounds %struct.object, %struct.object* %871, i64 0, i32 6, i64 1
  %876 = load double, double* %875, align 8
  %877 = fdiv double %874, %876
  %878 = fmul double %864, %877
  %879 = fadd double %851, %878
  %880 = load [2 x double]*, [2 x double]** %2, align 8
  %881 = load i32, i32* %14, align 4
  %882 = sub nsw i32 1, %881
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds [2 x double], [2 x double]* %880, i64 2, i64 %883
  %885 = load double, double* %884, align 8
  %886 = load %struct.object*, %struct.object** %15, align 8
  %887 = getelementptr inbounds %struct.object, %struct.object* %886, i64 0, i32 2, i64 2
  %888 = load double, double* %887, align 8
  %889 = fsub double %885, %888
  %890 = getelementptr inbounds %struct.object, %struct.object* %886, i64 0, i32 6, i64 2
  %891 = load double, double* %890, align 8
  %892 = fdiv double %889, %891
  %893 = load [2 x double]*, [2 x double]** %2, align 8
  %894 = load i32, i32* %14, align 4
  %895 = sub nsw i32 1, %894
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds [2 x double], [2 x double]* %893, i64 2, i64 %896
  %898 = load double, double* %897, align 8
  %899 = load %struct.object*, %struct.object** %15, align 8
  %900 = getelementptr inbounds %struct.object, %struct.object* %899, i64 0, i32 2, i64 2
  %901 = load double, double* %900, align 8
  %902 = fsub double %898, %901
  %903 = getelementptr inbounds %struct.object, %struct.object* %899, i64 0, i32 6, i64 2
  %904 = load double, double* %903, align 8
  %905 = fdiv double %902, %904
  %906 = fmul double %892, %905
  %907 = fadd double %879, %906
  %908 = fcmp ogt double %907, 1.000000e+00
  br i1 %908, label %909, label %1386

; <label>:909:                                    ; preds = %824
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:910:                                    ; preds = %486
  %911 = load i32, i32* %10, align 4
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds [2 x double], [2 x double]* %493, i64 0, i64 %912
  %914 = load double, double* %913, align 8
  %915 = load %struct.object*, %struct.object** %15, align 8
  %916 = getelementptr inbounds %struct.object, %struct.object* %915, i64 0, i32 2, i64 0
  %917 = load double, double* %916, align 8
  %918 = fsub double %914, %917
  br i1 %490, label %1141, label %919

; <label>:919:                                    ; preds = %910
  br i1 %492, label %1011, label %920

; <label>:920:                                    ; preds = %919
  %921 = call double @llvm.fabs.f64(double %918)
  %922 = getelementptr inbounds %struct.object, %struct.object* %915, i64 0, i32 6, i64 0
  %923 = load double, double* %922, align 8
  %924 = fcmp olt double %921, %923
  br i1 %924, label %925, label %1386

; <label>:925:                                    ; preds = %920
  %926 = load [2 x double]*, [2 x double]** %2, align 8
  %927 = load i32, i32* %10, align 4
  %928 = sub nsw i32 1, %927
  %929 = sext i32 %928 to i64
  %930 = getelementptr inbounds [2 x double], [2 x double]* %926, i64 0, i64 %929
  %931 = load double, double* %930, align 8
  %932 = load %struct.object*, %struct.object** %15, align 8
  %933 = getelementptr inbounds %struct.object, %struct.object* %932, i64 0, i32 2, i64 0
  %934 = load double, double* %933, align 8
  %935 = fsub double %931, %934
  %936 = getelementptr inbounds %struct.object, %struct.object* %932, i64 0, i32 6, i64 0
  %937 = load double, double* %936, align 8
  %938 = fdiv double %935, %937
  %939 = load [2 x double]*, [2 x double]** %2, align 8
  %940 = load i32, i32* %10, align 4
  %941 = sub nsw i32 1, %940
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds [2 x double], [2 x double]* %939, i64 0, i64 %942
  %944 = load double, double* %943, align 8
  %945 = load %struct.object*, %struct.object** %15, align 8
  %946 = getelementptr inbounds %struct.object, %struct.object* %945, i64 0, i32 2, i64 0
  %947 = load double, double* %946, align 8
  %948 = fsub double %944, %947
  %949 = getelementptr inbounds %struct.object, %struct.object* %945, i64 0, i32 6, i64 0
  %950 = load double, double* %949, align 8
  %951 = fdiv double %948, %950
  %952 = fmul double %938, %951
  %953 = load [2 x double]*, [2 x double]** %2, align 8
  %954 = load i32, i32* %12, align 4
  %955 = sub nsw i32 1, %954
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds [2 x double], [2 x double]* %953, i64 1, i64 %956
  %958 = load double, double* %957, align 8
  %959 = load %struct.object*, %struct.object** %15, align 8
  %960 = getelementptr inbounds %struct.object, %struct.object* %959, i64 0, i32 2, i64 1
  %961 = load double, double* %960, align 8
  %962 = fsub double %958, %961
  %963 = getelementptr inbounds %struct.object, %struct.object* %959, i64 0, i32 6, i64 1
  %964 = load double, double* %963, align 8
  %965 = fdiv double %962, %964
  %966 = load [2 x double]*, [2 x double]** %2, align 8
  %967 = load i32, i32* %12, align 4
  %968 = sub nsw i32 1, %967
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds [2 x double], [2 x double]* %966, i64 1, i64 %969
  %971 = load double, double* %970, align 8
  %972 = load %struct.object*, %struct.object** %15, align 8
  %973 = getelementptr inbounds %struct.object, %struct.object* %972, i64 0, i32 2, i64 1
  %974 = load double, double* %973, align 8
  %975 = fsub double %971, %974
  %976 = getelementptr inbounds %struct.object, %struct.object* %972, i64 0, i32 6, i64 1
  %977 = load double, double* %976, align 8
  %978 = fdiv double %975, %977
  %979 = fmul double %965, %978
  %980 = fadd double %952, %979
  %981 = load [2 x double]*, [2 x double]** %2, align 8
  %982 = load i32, i32* %14, align 4
  %983 = sub nsw i32 1, %982
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds [2 x double], [2 x double]* %981, i64 2, i64 %984
  %986 = load double, double* %985, align 8
  %987 = load %struct.object*, %struct.object** %15, align 8
  %988 = getelementptr inbounds %struct.object, %struct.object* %987, i64 0, i32 2, i64 2
  %989 = load double, double* %988, align 8
  %990 = fsub double %986, %989
  %991 = getelementptr inbounds %struct.object, %struct.object* %987, i64 0, i32 6, i64 2
  %992 = load double, double* %991, align 8
  %993 = fdiv double %990, %992
  %994 = load [2 x double]*, [2 x double]** %2, align 8
  %995 = load i32, i32* %14, align 4
  %996 = sub nsw i32 1, %995
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds [2 x double], [2 x double]* %994, i64 2, i64 %997
  %999 = load double, double* %998, align 8
  %1000 = load %struct.object*, %struct.object** %15, align 8
  %1001 = getelementptr inbounds %struct.object, %struct.object* %1000, i64 0, i32 2, i64 2
  %1002 = load double, double* %1001, align 8
  %1003 = fsub double %999, %1002
  %1004 = getelementptr inbounds %struct.object, %struct.object* %1000, i64 0, i32 6, i64 2
  %1005 = load double, double* %1004, align 8
  %1006 = fdiv double %1003, %1005
  %1007 = fmul double %993, %1006
  %1008 = fadd double %980, %1007
  %1009 = fcmp ogt double %1008, 1.000000e+00
  br i1 %1009, label %1010, label %1386

; <label>:1010:                                   ; preds = %925
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:1011:                                   ; preds = %919
  %1012 = getelementptr inbounds %struct.object, %struct.object* %915, i64 0, i32 6, i64 0
  %1013 = load double, double* %1012, align 8
  %1014 = fdiv double %918, %1013
  %1015 = load [2 x double]*, [2 x double]** %2, align 8
  %1016 = load i32, i32* %10, align 4
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds [2 x double], [2 x double]* %1015, i64 0, i64 %1017
  %1019 = load double, double* %1018, align 8
  %1020 = load %struct.object*, %struct.object** %15, align 8
  %1021 = getelementptr inbounds %struct.object, %struct.object* %1020, i64 0, i32 2, i64 0
  %1022 = load double, double* %1021, align 8
  %1023 = fsub double %1019, %1022
  %1024 = getelementptr inbounds %struct.object, %struct.object* %1020, i64 0, i32 6, i64 0
  %1025 = load double, double* %1024, align 8
  %1026 = fdiv double %1023, %1025
  %1027 = fmul double %1014, %1026
  %1028 = load [2 x double]*, [2 x double]** %2, align 8
  %1029 = load i32, i32* %14, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds [2 x double], [2 x double]* %1028, i64 2, i64 %1030
  %1032 = load double, double* %1031, align 8
  %1033 = load %struct.object*, %struct.object** %15, align 8
  %1034 = getelementptr inbounds %struct.object, %struct.object* %1033, i64 0, i32 2, i64 2
  %1035 = load double, double* %1034, align 8
  %1036 = fsub double %1032, %1035
  %1037 = getelementptr inbounds %struct.object, %struct.object* %1033, i64 0, i32 6, i64 2
  %1038 = load double, double* %1037, align 8
  %1039 = fdiv double %1036, %1038
  %1040 = load [2 x double]*, [2 x double]** %2, align 8
  %1041 = load i32, i32* %14, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds [2 x double], [2 x double]* %1040, i64 2, i64 %1042
  %1044 = load double, double* %1043, align 8
  %1045 = load %struct.object*, %struct.object** %15, align 8
  %1046 = getelementptr inbounds %struct.object, %struct.object* %1045, i64 0, i32 2, i64 2
  %1047 = load double, double* %1046, align 8
  %1048 = fsub double %1044, %1047
  %1049 = getelementptr inbounds %struct.object, %struct.object* %1045, i64 0, i32 6, i64 2
  %1050 = load double, double* %1049, align 8
  %1051 = fdiv double %1048, %1050
  %1052 = fmul double %1039, %1051
  %1053 = fadd double %1027, %1052
  %1054 = fcmp olt double %1053, 1.000000e+00
  br i1 %1054, label %1055, label %1386

; <label>:1055:                                   ; preds = %1011
  %1056 = load [2 x double]*, [2 x double]** %2, align 8
  %1057 = load i32, i32* %10, align 4
  %1058 = sub nsw i32 1, %1057
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds [2 x double], [2 x double]* %1056, i64 0, i64 %1059
  %1061 = load double, double* %1060, align 8
  %1062 = load %struct.object*, %struct.object** %15, align 8
  %1063 = getelementptr inbounds %struct.object, %struct.object* %1062, i64 0, i32 2, i64 0
  %1064 = load double, double* %1063, align 8
  %1065 = fsub double %1061, %1064
  %1066 = getelementptr inbounds %struct.object, %struct.object* %1062, i64 0, i32 6, i64 0
  %1067 = load double, double* %1066, align 8
  %1068 = fdiv double %1065, %1067
  %1069 = load [2 x double]*, [2 x double]** %2, align 8
  %1070 = load i32, i32* %10, align 4
  %1071 = sub nsw i32 1, %1070
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds [2 x double], [2 x double]* %1069, i64 0, i64 %1072
  %1074 = load double, double* %1073, align 8
  %1075 = load %struct.object*, %struct.object** %15, align 8
  %1076 = getelementptr inbounds %struct.object, %struct.object* %1075, i64 0, i32 2, i64 0
  %1077 = load double, double* %1076, align 8
  %1078 = fsub double %1074, %1077
  %1079 = getelementptr inbounds %struct.object, %struct.object* %1075, i64 0, i32 6, i64 0
  %1080 = load double, double* %1079, align 8
  %1081 = fdiv double %1078, %1080
  %1082 = fmul double %1068, %1081
  %1083 = load [2 x double]*, [2 x double]** %2, align 8
  %1084 = load i32, i32* %12, align 4
  %1085 = sub nsw i32 1, %1084
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds [2 x double], [2 x double]* %1083, i64 1, i64 %1086
  %1088 = load double, double* %1087, align 8
  %1089 = load %struct.object*, %struct.object** %15, align 8
  %1090 = getelementptr inbounds %struct.object, %struct.object* %1089, i64 0, i32 2, i64 1
  %1091 = load double, double* %1090, align 8
  %1092 = fsub double %1088, %1091
  %1093 = getelementptr inbounds %struct.object, %struct.object* %1089, i64 0, i32 6, i64 1
  %1094 = load double, double* %1093, align 8
  %1095 = fdiv double %1092, %1094
  %1096 = load [2 x double]*, [2 x double]** %2, align 8
  %1097 = load i32, i32* %12, align 4
  %1098 = sub nsw i32 1, %1097
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds [2 x double], [2 x double]* %1096, i64 1, i64 %1099
  %1101 = load double, double* %1100, align 8
  %1102 = load %struct.object*, %struct.object** %15, align 8
  %1103 = getelementptr inbounds %struct.object, %struct.object* %1102, i64 0, i32 2, i64 1
  %1104 = load double, double* %1103, align 8
  %1105 = fsub double %1101, %1104
  %1106 = getelementptr inbounds %struct.object, %struct.object* %1102, i64 0, i32 6, i64 1
  %1107 = load double, double* %1106, align 8
  %1108 = fdiv double %1105, %1107
  %1109 = fmul double %1095, %1108
  %1110 = fadd double %1082, %1109
  %1111 = load [2 x double]*, [2 x double]** %2, align 8
  %1112 = load i32, i32* %14, align 4
  %1113 = sub nsw i32 1, %1112
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds [2 x double], [2 x double]* %1111, i64 2, i64 %1114
  %1116 = load double, double* %1115, align 8
  %1117 = load %struct.object*, %struct.object** %15, align 8
  %1118 = getelementptr inbounds %struct.object, %struct.object* %1117, i64 0, i32 2, i64 2
  %1119 = load double, double* %1118, align 8
  %1120 = fsub double %1116, %1119
  %1121 = getelementptr inbounds %struct.object, %struct.object* %1117, i64 0, i32 6, i64 2
  %1122 = load double, double* %1121, align 8
  %1123 = fdiv double %1120, %1122
  %1124 = load [2 x double]*, [2 x double]** %2, align 8
  %1125 = load i32, i32* %14, align 4
  %1126 = sub nsw i32 1, %1125
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds [2 x double], [2 x double]* %1124, i64 2, i64 %1127
  %1129 = load double, double* %1128, align 8
  %1130 = load %struct.object*, %struct.object** %15, align 8
  %1131 = getelementptr inbounds %struct.object, %struct.object* %1130, i64 0, i32 2, i64 2
  %1132 = load double, double* %1131, align 8
  %1133 = fsub double %1129, %1132
  %1134 = getelementptr inbounds %struct.object, %struct.object* %1130, i64 0, i32 6, i64 2
  %1135 = load double, double* %1134, align 8
  %1136 = fdiv double %1133, %1135
  %1137 = fmul double %1123, %1136
  %1138 = fadd double %1110, %1137
  %1139 = fcmp ogt double %1138, 1.000000e+00
  br i1 %1139, label %1140, label %1386

; <label>:1140:                                   ; preds = %1055
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:1141:                                   ; preds = %910
  %1142 = getelementptr inbounds %struct.object, %struct.object* %915, i64 0, i32 6, i64 0
  %1143 = load double, double* %1142, align 8
  %1144 = fdiv double %918, %1143
  %1145 = load [2 x double]*, [2 x double]** %2, align 8
  %1146 = load i32, i32* %10, align 4
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds [2 x double], [2 x double]* %1145, i64 0, i64 %1147
  %1149 = load double, double* %1148, align 8
  %1150 = load %struct.object*, %struct.object** %15, align 8
  %1151 = getelementptr inbounds %struct.object, %struct.object* %1150, i64 0, i32 2, i64 0
  %1152 = load double, double* %1151, align 8
  %1153 = fsub double %1149, %1152
  %1154 = getelementptr inbounds %struct.object, %struct.object* %1150, i64 0, i32 6, i64 0
  %1155 = load double, double* %1154, align 8
  %1156 = fdiv double %1153, %1155
  %1157 = fmul double %1144, %1156
  %1158 = load [2 x double]*, [2 x double]** %2, align 8
  %1159 = load i32, i32* %12, align 4
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds [2 x double], [2 x double]* %1158, i64 1, i64 %1160
  %1162 = load double, double* %1161, align 8
  %1163 = load %struct.object*, %struct.object** %15, align 8
  %1164 = getelementptr inbounds %struct.object, %struct.object* %1163, i64 0, i32 2, i64 1
  %1165 = load double, double* %1164, align 8
  %1166 = fsub double %1162, %1165
  %1167 = getelementptr inbounds %struct.object, %struct.object* %1163, i64 0, i32 6, i64 1
  %1168 = load double, double* %1167, align 8
  %1169 = fdiv double %1166, %1168
  %1170 = load [2 x double]*, [2 x double]** %2, align 8
  %1171 = load i32, i32* %12, align 4
  %1172 = sext i32 %1171 to i64
  %1173 = getelementptr inbounds [2 x double], [2 x double]* %1170, i64 1, i64 %1172
  %1174 = load double, double* %1173, align 8
  %1175 = load %struct.object*, %struct.object** %15, align 8
  %1176 = getelementptr inbounds %struct.object, %struct.object* %1175, i64 0, i32 2, i64 1
  %1177 = load double, double* %1176, align 8
  %1178 = fsub double %1174, %1177
  %1179 = getelementptr inbounds %struct.object, %struct.object* %1175, i64 0, i32 6, i64 1
  %1180 = load double, double* %1179, align 8
  %1181 = fdiv double %1178, %1180
  %1182 = fmul double %1169, %1181
  %1183 = fadd double %1157, %1182
  br i1 %492, label %1272, label %1184

; <label>:1184:                                   ; preds = %1141
  %1185 = fcmp olt double %1183, 1.000000e+00
  br i1 %1185, label %1186, label %1386

; <label>:1186:                                   ; preds = %1184
  %1187 = load [2 x double]*, [2 x double]** %2, align 8
  %1188 = load i32, i32* %10, align 4
  %1189 = sub nsw i32 1, %1188
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds [2 x double], [2 x double]* %1187, i64 0, i64 %1190
  %1192 = load double, double* %1191, align 8
  %1193 = load %struct.object*, %struct.object** %15, align 8
  %1194 = getelementptr inbounds %struct.object, %struct.object* %1193, i64 0, i32 2, i64 0
  %1195 = load double, double* %1194, align 8
  %1196 = fsub double %1192, %1195
  %1197 = getelementptr inbounds %struct.object, %struct.object* %1193, i64 0, i32 6, i64 0
  %1198 = load double, double* %1197, align 8
  %1199 = fdiv double %1196, %1198
  %1200 = load [2 x double]*, [2 x double]** %2, align 8
  %1201 = load i32, i32* %10, align 4
  %1202 = sub nsw i32 1, %1201
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds [2 x double], [2 x double]* %1200, i64 0, i64 %1203
  %1205 = load double, double* %1204, align 8
  %1206 = load %struct.object*, %struct.object** %15, align 8
  %1207 = getelementptr inbounds %struct.object, %struct.object* %1206, i64 0, i32 2, i64 0
  %1208 = load double, double* %1207, align 8
  %1209 = fsub double %1205, %1208
  %1210 = getelementptr inbounds %struct.object, %struct.object* %1206, i64 0, i32 6, i64 0
  %1211 = load double, double* %1210, align 8
  %1212 = fdiv double %1209, %1211
  %1213 = fmul double %1199, %1212
  %1214 = load [2 x double]*, [2 x double]** %2, align 8
  %1215 = load i32, i32* %12, align 4
  %1216 = sub nsw i32 1, %1215
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds [2 x double], [2 x double]* %1214, i64 1, i64 %1217
  %1219 = load double, double* %1218, align 8
  %1220 = load %struct.object*, %struct.object** %15, align 8
  %1221 = getelementptr inbounds %struct.object, %struct.object* %1220, i64 0, i32 2, i64 1
  %1222 = load double, double* %1221, align 8
  %1223 = fsub double %1219, %1222
  %1224 = getelementptr inbounds %struct.object, %struct.object* %1220, i64 0, i32 6, i64 1
  %1225 = load double, double* %1224, align 8
  %1226 = fdiv double %1223, %1225
  %1227 = load [2 x double]*, [2 x double]** %2, align 8
  %1228 = load i32, i32* %12, align 4
  %1229 = sub nsw i32 1, %1228
  %1230 = sext i32 %1229 to i64
  %1231 = getelementptr inbounds [2 x double], [2 x double]* %1227, i64 1, i64 %1230
  %1232 = load double, double* %1231, align 8
  %1233 = load %struct.object*, %struct.object** %15, align 8
  %1234 = getelementptr inbounds %struct.object, %struct.object* %1233, i64 0, i32 2, i64 1
  %1235 = load double, double* %1234, align 8
  %1236 = fsub double %1232, %1235
  %1237 = getelementptr inbounds %struct.object, %struct.object* %1233, i64 0, i32 6, i64 1
  %1238 = load double, double* %1237, align 8
  %1239 = fdiv double %1236, %1238
  %1240 = fmul double %1226, %1239
  %1241 = fadd double %1213, %1240
  %1242 = load [2 x double]*, [2 x double]** %2, align 8
  %1243 = load i32, i32* %14, align 4
  %1244 = sub nsw i32 1, %1243
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds [2 x double], [2 x double]* %1242, i64 2, i64 %1245
  %1247 = load double, double* %1246, align 8
  %1248 = load %struct.object*, %struct.object** %15, align 8
  %1249 = getelementptr inbounds %struct.object, %struct.object* %1248, i64 0, i32 2, i64 2
  %1250 = load double, double* %1249, align 8
  %1251 = fsub double %1247, %1250
  %1252 = getelementptr inbounds %struct.object, %struct.object* %1248, i64 0, i32 6, i64 2
  %1253 = load double, double* %1252, align 8
  %1254 = fdiv double %1251, %1253
  %1255 = load [2 x double]*, [2 x double]** %2, align 8
  %1256 = load i32, i32* %14, align 4
  %1257 = sub nsw i32 1, %1256
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds [2 x double], [2 x double]* %1255, i64 2, i64 %1258
  %1260 = load double, double* %1259, align 8
  %1261 = load %struct.object*, %struct.object** %15, align 8
  %1262 = getelementptr inbounds %struct.object, %struct.object* %1261, i64 0, i32 2, i64 2
  %1263 = load double, double* %1262, align 8
  %1264 = fsub double %1260, %1263
  %1265 = getelementptr inbounds %struct.object, %struct.object* %1261, i64 0, i32 6, i64 2
  %1266 = load double, double* %1265, align 8
  %1267 = fdiv double %1264, %1266
  %1268 = fmul double %1254, %1267
  %1269 = fadd double %1241, %1268
  %1270 = fcmp ogt double %1269, 1.000000e+00
  br i1 %1270, label %1271, label %1386

; <label>:1271:                                   ; preds = %1186
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:1272:                                   ; preds = %1141
  %1273 = load [2 x double]*, [2 x double]** %2, align 8
  %1274 = load i32, i32* %14, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds [2 x double], [2 x double]* %1273, i64 2, i64 %1275
  %1277 = load double, double* %1276, align 8
  %1278 = load %struct.object*, %struct.object** %15, align 8
  %1279 = getelementptr inbounds %struct.object, %struct.object* %1278, i64 0, i32 2, i64 2
  %1280 = load double, double* %1279, align 8
  %1281 = fsub double %1277, %1280
  %1282 = getelementptr inbounds %struct.object, %struct.object* %1278, i64 0, i32 6, i64 2
  %1283 = load double, double* %1282, align 8
  %1284 = fdiv double %1281, %1283
  %1285 = load [2 x double]*, [2 x double]** %2, align 8
  %1286 = load i32, i32* %14, align 4
  %1287 = sext i32 %1286 to i64
  %1288 = getelementptr inbounds [2 x double], [2 x double]* %1285, i64 2, i64 %1287
  %1289 = load double, double* %1288, align 8
  %1290 = load %struct.object*, %struct.object** %15, align 8
  %1291 = getelementptr inbounds %struct.object, %struct.object* %1290, i64 0, i32 2, i64 2
  %1292 = load double, double* %1291, align 8
  %1293 = fsub double %1289, %1292
  %1294 = getelementptr inbounds %struct.object, %struct.object* %1290, i64 0, i32 6, i64 2
  %1295 = load double, double* %1294, align 8
  %1296 = fdiv double %1293, %1295
  %1297 = fmul double %1284, %1296
  %1298 = fadd double %1183, %1297
  %1299 = fcmp olt double %1298, 1.000000e+00
  br i1 %1299, label %1300, label %1386

; <label>:1300:                                   ; preds = %1272
  %1301 = load [2 x double]*, [2 x double]** %2, align 8
  %1302 = load i32, i32* %10, align 4
  %1303 = sub nsw i32 1, %1302
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds [2 x double], [2 x double]* %1301, i64 0, i64 %1304
  %1306 = load double, double* %1305, align 8
  %1307 = load %struct.object*, %struct.object** %15, align 8
  %1308 = getelementptr inbounds %struct.object, %struct.object* %1307, i64 0, i32 2, i64 0
  %1309 = load double, double* %1308, align 8
  %1310 = fsub double %1306, %1309
  %1311 = getelementptr inbounds %struct.object, %struct.object* %1307, i64 0, i32 6, i64 0
  %1312 = load double, double* %1311, align 8
  %1313 = fdiv double %1310, %1312
  %1314 = load [2 x double]*, [2 x double]** %2, align 8
  %1315 = load i32, i32* %10, align 4
  %1316 = sub nsw i32 1, %1315
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds [2 x double], [2 x double]* %1314, i64 0, i64 %1317
  %1319 = load double, double* %1318, align 8
  %1320 = load %struct.object*, %struct.object** %15, align 8
  %1321 = getelementptr inbounds %struct.object, %struct.object* %1320, i64 0, i32 2, i64 0
  %1322 = load double, double* %1321, align 8
  %1323 = fsub double %1319, %1322
  %1324 = getelementptr inbounds %struct.object, %struct.object* %1320, i64 0, i32 6, i64 0
  %1325 = load double, double* %1324, align 8
  %1326 = fdiv double %1323, %1325
  %1327 = fmul double %1313, %1326
  %1328 = load [2 x double]*, [2 x double]** %2, align 8
  %1329 = load i32, i32* %12, align 4
  %1330 = sub nsw i32 1, %1329
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds [2 x double], [2 x double]* %1328, i64 1, i64 %1331
  %1333 = load double, double* %1332, align 8
  %1334 = load %struct.object*, %struct.object** %15, align 8
  %1335 = getelementptr inbounds %struct.object, %struct.object* %1334, i64 0, i32 2, i64 1
  %1336 = load double, double* %1335, align 8
  %1337 = fsub double %1333, %1336
  %1338 = getelementptr inbounds %struct.object, %struct.object* %1334, i64 0, i32 6, i64 1
  %1339 = load double, double* %1338, align 8
  %1340 = fdiv double %1337, %1339
  %1341 = load [2 x double]*, [2 x double]** %2, align 8
  %1342 = load i32, i32* %12, align 4
  %1343 = sub nsw i32 1, %1342
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds [2 x double], [2 x double]* %1341, i64 1, i64 %1344
  %1346 = load double, double* %1345, align 8
  %1347 = load %struct.object*, %struct.object** %15, align 8
  %1348 = getelementptr inbounds %struct.object, %struct.object* %1347, i64 0, i32 2, i64 1
  %1349 = load double, double* %1348, align 8
  %1350 = fsub double %1346, %1349
  %1351 = getelementptr inbounds %struct.object, %struct.object* %1347, i64 0, i32 6, i64 1
  %1352 = load double, double* %1351, align 8
  %1353 = fdiv double %1350, %1352
  %1354 = fmul double %1340, %1353
  %1355 = fadd double %1327, %1354
  %1356 = load [2 x double]*, [2 x double]** %2, align 8
  %1357 = load i32, i32* %14, align 4
  %1358 = sub nsw i32 1, %1357
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds [2 x double], [2 x double]* %1356, i64 2, i64 %1359
  %1361 = load double, double* %1360, align 8
  %1362 = load %struct.object*, %struct.object** %15, align 8
  %1363 = getelementptr inbounds %struct.object, %struct.object* %1362, i64 0, i32 2, i64 2
  %1364 = load double, double* %1363, align 8
  %1365 = fsub double %1361, %1364
  %1366 = getelementptr inbounds %struct.object, %struct.object* %1362, i64 0, i32 6, i64 2
  %1367 = load double, double* %1366, align 8
  %1368 = fdiv double %1365, %1367
  %1369 = load [2 x double]*, [2 x double]** %2, align 8
  %1370 = load i32, i32* %14, align 4
  %1371 = sub nsw i32 1, %1370
  %1372 = sext i32 %1371 to i64
  %1373 = getelementptr inbounds [2 x double], [2 x double]* %1369, i64 2, i64 %1372
  %1374 = load double, double* %1373, align 8
  %1375 = load %struct.object*, %struct.object** %15, align 8
  %1376 = getelementptr inbounds %struct.object, %struct.object* %1375, i64 0, i32 2, i64 2
  %1377 = load double, double* %1376, align 8
  %1378 = fsub double %1374, %1377
  %1379 = getelementptr inbounds %struct.object, %struct.object* %1375, i64 0, i32 6, i64 2
  %1380 = load double, double* %1379, align 8
  %1381 = fdiv double %1378, %1380
  %1382 = fmul double %1368, %1381
  %1383 = fadd double %1355, %1382
  %1384 = fcmp ogt double %1383, 1.000000e+00
  br i1 %1384, label %1385, label %1386

; <label>:1385:                                   ; preds = %1300
  store i32 1, i32* %8, align 4
  br label %1386

; <label>:1386:                                   ; preds = %1011, %1055, %1140, %920, %925, %1010, %1272, %1300, %1385, %1184, %1186, %1271, %581, %594, %679, %496, %580, %780, %824, %909, %689, %694, %779
  %1387 = load %struct.object*, %struct.object** %15, align 8
  %1388 = getelementptr inbounds %struct.object, %struct.object* %1387, i64 0, i32 0
  %1389 = load i32, i32* %1388, align 8
  %1390 = icmp eq i32 %1389, 2
  %1391 = load i32, i32* %8, align 4
  %1392 = icmp eq i32 %1391, 0
  %or.cond = or i1 %1390, %1392
  br i1 %or.cond, label %2809, label %1393

; <label>:1393:                                   ; preds = %1386
  %1394 = load %struct.object*, %struct.object** %15, align 8
  %1395 = getelementptr inbounds %struct.object, %struct.object* %1394, i64 0, i32 0
  %1396 = load i32, i32* %1395, align 8
  %1397 = icmp eq i32 %1396, 4
  br i1 %1397, label %1398, label %1408

; <label>:1398:                                   ; preds = %1393
  %1399 = load [2 x double]*, [2 x double]** %2, align 8
  %1400 = getelementptr inbounds [2 x double], [2 x double]* %1399, i64 0, i64 1
  %1401 = load double, double* %1400, align 8
  %1402 = load %struct.object*, %struct.object** %15, align 8
  %1403 = getelementptr inbounds %struct.object, %struct.object* %1402, i64 0, i32 2, i64 0
  %1404 = load double, double* %1403, align 8
  %1405 = fcmp olt double %1401, %1404
  br i1 %1405, label %1406, label %1408

; <label>:1406:                                   ; preds = %1398
  %1407 = load i32, i32* %4, align 4
  store i32 %1407, i32* %8, align 4
  br label %2809

; <label>:1408:                                   ; preds = %1398, %1393
  %1409 = load %struct.object*, %struct.object** %15, align 8
  %1410 = getelementptr inbounds %struct.object, %struct.object* %1409, i64 0, i32 0
  %1411 = load i32, i32* %1410, align 8
  %1412 = icmp eq i32 %1411, 6
  br i1 %1412, label %1413, label %1423

; <label>:1413:                                   ; preds = %1408
  %1414 = load [2 x double]*, [2 x double]** %2, align 8
  %1415 = getelementptr inbounds [2 x double], [2 x double]* %1414, i64 0, i64 0
  %1416 = load double, double* %1415, align 8
  %1417 = load %struct.object*, %struct.object** %15, align 8
  %1418 = getelementptr inbounds %struct.object, %struct.object* %1417, i64 0, i32 2, i64 0
  %1419 = load double, double* %1418, align 8
  %1420 = fcmp ogt double %1416, %1419
  br i1 %1420, label %1421, label %1423

; <label>:1421:                                   ; preds = %1413
  %1422 = load i32, i32* %4, align 4
  store i32 %1422, i32* %8, align 4
  br label %2809

; <label>:1423:                                   ; preds = %1413, %1408
  %1424 = load %struct.object*, %struct.object** %15, align 8
  %1425 = getelementptr inbounds %struct.object, %struct.object* %1424, i64 0, i32 0
  %1426 = load i32, i32* %1425, align 8
  %1427 = icmp eq i32 %1426, 8
  br i1 %1427, label %1428, label %1438

; <label>:1428:                                   ; preds = %1423
  %1429 = load [2 x double]*, [2 x double]** %2, align 8
  %1430 = getelementptr inbounds [2 x double], [2 x double]* %1429, i64 1, i64 1
  %1431 = load double, double* %1430, align 8
  %1432 = load %struct.object*, %struct.object** %15, align 8
  %1433 = getelementptr inbounds %struct.object, %struct.object* %1432, i64 0, i32 2, i64 1
  %1434 = load double, double* %1433, align 8
  %1435 = fcmp olt double %1431, %1434
  br i1 %1435, label %1436, label %1438

; <label>:1436:                                   ; preds = %1428
  %1437 = load i32, i32* %4, align 4
  store i32 %1437, i32* %8, align 4
  br label %2809

; <label>:1438:                                   ; preds = %1428, %1423
  %1439 = load %struct.object*, %struct.object** %15, align 8
  %1440 = getelementptr inbounds %struct.object, %struct.object* %1439, i64 0, i32 0
  %1441 = load i32, i32* %1440, align 8
  %1442 = icmp eq i32 %1441, 10
  br i1 %1442, label %1443, label %1453

; <label>:1443:                                   ; preds = %1438
  %1444 = load [2 x double]*, [2 x double]** %2, align 8
  %1445 = getelementptr inbounds [2 x double], [2 x double]* %1444, i64 1, i64 0
  %1446 = load double, double* %1445, align 8
  %1447 = load %struct.object*, %struct.object** %15, align 8
  %1448 = getelementptr inbounds %struct.object, %struct.object* %1447, i64 0, i32 2, i64 1
  %1449 = load double, double* %1448, align 8
  %1450 = fcmp ogt double %1446, %1449
  br i1 %1450, label %1451, label %1453

; <label>:1451:                                   ; preds = %1443
  %1452 = load i32, i32* %4, align 4
  store i32 %1452, i32* %8, align 4
  br label %2809

; <label>:1453:                                   ; preds = %1443, %1438
  %1454 = load %struct.object*, %struct.object** %15, align 8
  %1455 = getelementptr inbounds %struct.object, %struct.object* %1454, i64 0, i32 0
  %1456 = load i32, i32* %1455, align 8
  %1457 = icmp eq i32 %1456, 12
  br i1 %1457, label %1458, label %1468

; <label>:1458:                                   ; preds = %1453
  %1459 = load [2 x double]*, [2 x double]** %2, align 8
  %1460 = getelementptr inbounds [2 x double], [2 x double]* %1459, i64 2, i64 1
  %1461 = load double, double* %1460, align 8
  %1462 = load %struct.object*, %struct.object** %15, align 8
  %1463 = getelementptr inbounds %struct.object, %struct.object* %1462, i64 0, i32 2, i64 2
  %1464 = load double, double* %1463, align 8
  %1465 = fcmp olt double %1461, %1464
  br i1 %1465, label %1466, label %1468

; <label>:1466:                                   ; preds = %1458
  %1467 = load i32, i32* %4, align 4
  store i32 %1467, i32* %8, align 4
  br label %2809

; <label>:1468:                                   ; preds = %1458, %1453
  %1469 = load %struct.object*, %struct.object** %15, align 8
  %1470 = getelementptr inbounds %struct.object, %struct.object* %1469, i64 0, i32 0
  %1471 = load i32, i32* %1470, align 8
  %1472 = icmp eq i32 %1471, 14
  br i1 %1472, label %1473, label %2809

; <label>:1473:                                   ; preds = %1468
  %1474 = load [2 x double]*, [2 x double]** %2, align 8
  %1475 = getelementptr inbounds [2 x double], [2 x double]* %1474, i64 2, i64 0
  %1476 = load double, double* %1475, align 8
  %1477 = load %struct.object*, %struct.object** %15, align 8
  %1478 = getelementptr inbounds %struct.object, %struct.object* %1477, i64 0, i32 2, i64 2
  %1479 = load double, double* %1478, align 8
  %1480 = fcmp ogt double %1476, %1479
  br i1 %1480, label %1481, label %2809

; <label>:1481:                                   ; preds = %1473
  %1482 = load i32, i32* %4, align 4
  store i32 %1482, i32* %8, align 4
  br label %2809

; <label>:1483:                                   ; preds = %395, %390, %385
  %1484 = load %struct.object*, %struct.object** %15, align 8
  %1485 = getelementptr inbounds %struct.object, %struct.object* %1484, i64 0, i32 0
  %1486 = load i32, i32* %1485, align 8
  %1487 = icmp sgt i32 %1486, 2
  br i1 %1487, label %1488, label %1877

; <label>:1488:                                   ; preds = %1483
  %1489 = load %struct.object*, %struct.object** %15, align 8
  %1490 = getelementptr inbounds %struct.object, %struct.object* %1489, i64 0, i32 0
  %1491 = load i32, i32* %1490, align 8
  %1492 = icmp slt i32 %1491, 16
  br i1 %1492, label %1493, label %1877

; <label>:1493:                                   ; preds = %1488
  %1494 = load %struct.object*, %struct.object** %15, align 8
  %1495 = getelementptr inbounds %struct.object, %struct.object* %1494, i64 0, i32 0
  %1496 = load i32, i32* %1495, align 8
  %1497 = and i32 %1496, 1
  %1498 = icmp eq i32 %1497, 0
  br i1 %1498, label %1877, label %1499

; <label>:1499:                                   ; preds = %1493
  %1500 = load i32, i32* %8, align 4
  store i32 %1500, i32* %4, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %9, align 4
  %1501 = load %struct.object*, %struct.object** %15, align 8
  %1502 = getelementptr inbounds %struct.object, %struct.object* %1501, i64 0, i32 2, i64 0
  %1503 = load double, double* %1502, align 8
  %1504 = load [2 x double]*, [2 x double]** %2, align 8
  %1505 = getelementptr inbounds [2 x double], [2 x double]* %1504, i64 0, i64 0
  %1506 = load double, double* %1505, align 8
  %1507 = fcmp olt double %1503, %1506
  br i1 %1507, label %1508, label %1509

; <label>:1508:                                   ; preds = %1499
  store i32 0, i32* %10, align 4
  br label %1519

; <label>:1509:                                   ; preds = %1499
  %1510 = load %struct.object*, %struct.object** %15, align 8
  %1511 = getelementptr inbounds %struct.object, %struct.object* %1510, i64 0, i32 2, i64 0
  %1512 = load double, double* %1511, align 8
  %1513 = load [2 x double]*, [2 x double]** %2, align 8
  %1514 = getelementptr inbounds [2 x double], [2 x double]* %1513, i64 0, i64 1
  %1515 = load double, double* %1514, align 8
  %1516 = fcmp ogt double %1512, %1515
  br i1 %1516, label %1517, label %1518

; <label>:1517:                                   ; preds = %1509
  store i32 1, i32* %10, align 4
  br label %1519

; <label>:1518:                                   ; preds = %1509
  store i32 1, i32* %9, align 4
  br label %1519

; <label>:1519:                                   ; preds = %1517, %1518, %1508
  %1520 = load %struct.object*, %struct.object** %15, align 8
  %1521 = getelementptr inbounds %struct.object, %struct.object* %1520, i64 0, i32 2, i64 1
  %1522 = load double, double* %1521, align 8
  %1523 = load [2 x double]*, [2 x double]** %2, align 8
  %1524 = getelementptr inbounds [2 x double], [2 x double]* %1523, i64 1, i64 0
  %1525 = load double, double* %1524, align 8
  %1526 = fcmp olt double %1522, %1525
  br i1 %1526, label %1527, label %1528

; <label>:1527:                                   ; preds = %1519
  store i32 0, i32* %12, align 4
  br label %1538

; <label>:1528:                                   ; preds = %1519
  %1529 = load %struct.object*, %struct.object** %15, align 8
  %1530 = getelementptr inbounds %struct.object, %struct.object* %1529, i64 0, i32 2, i64 1
  %1531 = load double, double* %1530, align 8
  %1532 = load [2 x double]*, [2 x double]** %2, align 8
  %1533 = getelementptr inbounds [2 x double], [2 x double]* %1532, i64 1, i64 1
  %1534 = load double, double* %1533, align 8
  %1535 = fcmp ogt double %1531, %1534
  br i1 %1535, label %1536, label %1537

; <label>:1536:                                   ; preds = %1528
  store i32 1, i32* %12, align 4
  br label %1538

; <label>:1537:                                   ; preds = %1528
  store i32 1, i32* %11, align 4
  br label %1538

; <label>:1538:                                   ; preds = %1536, %1537, %1527
  %1539 = load %struct.object*, %struct.object** %15, align 8
  %1540 = getelementptr inbounds %struct.object, %struct.object* %1539, i64 0, i32 2, i64 2
  %1541 = load double, double* %1540, align 8
  %1542 = load [2 x double]*, [2 x double]** %2, align 8
  %1543 = getelementptr inbounds [2 x double], [2 x double]* %1542, i64 2, i64 0
  %1544 = load double, double* %1543, align 8
  %1545 = fcmp olt double %1541, %1544
  br i1 %1545, label %1546, label %1547

; <label>:1546:                                   ; preds = %1538
  store i32 0, i32* %14, align 4
  br label %1557

; <label>:1547:                                   ; preds = %1538
  %1548 = load %struct.object*, %struct.object** %15, align 8
  %1549 = getelementptr inbounds %struct.object, %struct.object* %1548, i64 0, i32 2, i64 2
  %1550 = load double, double* %1549, align 8
  %1551 = load [2 x double]*, [2 x double]** %2, align 8
  %1552 = getelementptr inbounds [2 x double], [2 x double]* %1551, i64 2, i64 1
  %1553 = load double, double* %1552, align 8
  %1554 = fcmp ogt double %1550, %1553
  br i1 %1554, label %1555, label %1556

; <label>:1555:                                   ; preds = %1547
  store i32 1, i32* %14, align 4
  br label %1557

; <label>:1556:                                   ; preds = %1547
  store i32 1, i32* %13, align 4
  br label %1557

; <label>:1557:                                   ; preds = %1555, %1556, %1546
  %1558 = load i32, i32* %9, align 4
  %1559 = icmp eq i32 %1558, 0
  %1560 = load i32, i32* %11, align 4
  %1561 = icmp eq i32 %1560, 0
  %1562 = load i32, i32* %13, align 4
  %1563 = icmp eq i32 %1562, 0
  br i1 %1559, label %1643, label %1564

; <label>:1564:                                   ; preds = %1557
  br i1 %1561, label %1582, label %1565

; <label>:1565:                                   ; preds = %1564
  br i1 %1563, label %1567, label %1566

; <label>:1566:                                   ; preds = %1565
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1567:                                   ; preds = %1565
  %1568 = load [2 x double]*, [2 x double]** %2, align 8
  %1569 = load i32, i32* %14, align 4
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds [2 x double], [2 x double]* %1568, i64 2, i64 %1570
  %1572 = load double, double* %1571, align 8
  %1573 = load %struct.object*, %struct.object** %15, align 8
  %1574 = getelementptr inbounds %struct.object, %struct.object* %1573, i64 0, i32 2, i64 2
  %1575 = load double, double* %1574, align 8
  %1576 = fsub double %1572, %1575
  %1577 = call double @llvm.fabs.f64(double %1576)
  %1578 = getelementptr inbounds %struct.object, %struct.object* %1573, i64 0, i32 6, i64 2
  %1579 = load double, double* %1578, align 8
  %1580 = fcmp olt double %1577, %1579
  br i1 %1580, label %1581, label %1780

; <label>:1581:                                   ; preds = %1567
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1582:                                   ; preds = %1564
  %1583 = load [2 x double]*, [2 x double]** %2, align 8
  %1584 = load i32, i32* %12, align 4
  %1585 = sext i32 %1584 to i64
  %1586 = getelementptr inbounds [2 x double], [2 x double]* %1583, i64 1, i64 %1585
  %1587 = load double, double* %1586, align 8
  %1588 = load %struct.object*, %struct.object** %15, align 8
  %1589 = getelementptr inbounds %struct.object, %struct.object* %1588, i64 0, i32 2, i64 1
  %1590 = load double, double* %1589, align 8
  %1591 = fsub double %1587, %1590
  br i1 %1563, label %1598, label %1592

; <label>:1592:                                   ; preds = %1582
  %1593 = call double @llvm.fabs.f64(double %1591)
  %1594 = getelementptr inbounds %struct.object, %struct.object* %1588, i64 0, i32 6, i64 1
  %1595 = load double, double* %1594, align 8
  %1596 = fcmp olt double %1593, %1595
  br i1 %1596, label %1597, label %1780

; <label>:1597:                                   ; preds = %1592
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1598:                                   ; preds = %1582
  %1599 = getelementptr inbounds %struct.object, %struct.object* %1588, i64 0, i32 6, i64 1
  %1600 = load double, double* %1599, align 8
  %1601 = fdiv double %1591, %1600
  %1602 = load [2 x double]*, [2 x double]** %2, align 8
  %1603 = load i32, i32* %12, align 4
  %1604 = sext i32 %1603 to i64
  %1605 = getelementptr inbounds [2 x double], [2 x double]* %1602, i64 1, i64 %1604
  %1606 = load double, double* %1605, align 8
  %1607 = load %struct.object*, %struct.object** %15, align 8
  %1608 = getelementptr inbounds %struct.object, %struct.object* %1607, i64 0, i32 2, i64 1
  %1609 = load double, double* %1608, align 8
  %1610 = fsub double %1606, %1609
  %1611 = getelementptr inbounds %struct.object, %struct.object* %1607, i64 0, i32 6, i64 1
  %1612 = load double, double* %1611, align 8
  %1613 = fdiv double %1610, %1612
  %1614 = fmul double %1601, %1613
  %1615 = load [2 x double]*, [2 x double]** %2, align 8
  %1616 = load i32, i32* %14, align 4
  %1617 = sext i32 %1616 to i64
  %1618 = getelementptr inbounds [2 x double], [2 x double]* %1615, i64 2, i64 %1617
  %1619 = load double, double* %1618, align 8
  %1620 = load %struct.object*, %struct.object** %15, align 8
  %1621 = getelementptr inbounds %struct.object, %struct.object* %1620, i64 0, i32 2, i64 2
  %1622 = load double, double* %1621, align 8
  %1623 = fsub double %1619, %1622
  %1624 = getelementptr inbounds %struct.object, %struct.object* %1620, i64 0, i32 6, i64 2
  %1625 = load double, double* %1624, align 8
  %1626 = fdiv double %1623, %1625
  %1627 = load [2 x double]*, [2 x double]** %2, align 8
  %1628 = load i32, i32* %14, align 4
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds [2 x double], [2 x double]* %1627, i64 2, i64 %1629
  %1631 = load double, double* %1630, align 8
  %1632 = load %struct.object*, %struct.object** %15, align 8
  %1633 = getelementptr inbounds %struct.object, %struct.object* %1632, i64 0, i32 2, i64 2
  %1634 = load double, double* %1633, align 8
  %1635 = fsub double %1631, %1634
  %1636 = getelementptr inbounds %struct.object, %struct.object* %1632, i64 0, i32 6, i64 2
  %1637 = load double, double* %1636, align 8
  %1638 = fdiv double %1635, %1637
  %1639 = fmul double %1626, %1638
  %1640 = fadd double %1614, %1639
  %1641 = fcmp olt double %1640, 1.000000e+00
  br i1 %1641, label %1642, label %1780

; <label>:1642:                                   ; preds = %1598
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1643:                                   ; preds = %1557
  %1644 = load [2 x double]*, [2 x double]** %2, align 8
  %1645 = load i32, i32* %10, align 4
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds [2 x double], [2 x double]* %1644, i64 0, i64 %1646
  %1648 = load double, double* %1647, align 8
  %1649 = load %struct.object*, %struct.object** %15, align 8
  %1650 = getelementptr inbounds %struct.object, %struct.object* %1649, i64 0, i32 2, i64 0
  %1651 = load double, double* %1650, align 8
  %1652 = fsub double %1648, %1651
  br i1 %1561, label %1705, label %1653

; <label>:1653:                                   ; preds = %1643
  br i1 %1563, label %1660, label %1654

; <label>:1654:                                   ; preds = %1653
  %1655 = call double @llvm.fabs.f64(double %1652)
  %1656 = getelementptr inbounds %struct.object, %struct.object* %1649, i64 0, i32 6, i64 0
  %1657 = load double, double* %1656, align 8
  %1658 = fcmp olt double %1655, %1657
  br i1 %1658, label %1659, label %1780

; <label>:1659:                                   ; preds = %1654
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1660:                                   ; preds = %1653
  %1661 = getelementptr inbounds %struct.object, %struct.object* %1649, i64 0, i32 6, i64 0
  %1662 = load double, double* %1661, align 8
  %1663 = fdiv double %1652, %1662
  %1664 = load [2 x double]*, [2 x double]** %2, align 8
  %1665 = load i32, i32* %10, align 4
  %1666 = sext i32 %1665 to i64
  %1667 = getelementptr inbounds [2 x double], [2 x double]* %1664, i64 0, i64 %1666
  %1668 = load double, double* %1667, align 8
  %1669 = load %struct.object*, %struct.object** %15, align 8
  %1670 = getelementptr inbounds %struct.object, %struct.object* %1669, i64 0, i32 2, i64 0
  %1671 = load double, double* %1670, align 8
  %1672 = fsub double %1668, %1671
  %1673 = getelementptr inbounds %struct.object, %struct.object* %1669, i64 0, i32 6, i64 0
  %1674 = load double, double* %1673, align 8
  %1675 = fdiv double %1672, %1674
  %1676 = fmul double %1663, %1675
  %1677 = load [2 x double]*, [2 x double]** %2, align 8
  %1678 = load i32, i32* %14, align 4
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds [2 x double], [2 x double]* %1677, i64 2, i64 %1679
  %1681 = load double, double* %1680, align 8
  %1682 = load %struct.object*, %struct.object** %15, align 8
  %1683 = getelementptr inbounds %struct.object, %struct.object* %1682, i64 0, i32 2, i64 2
  %1684 = load double, double* %1683, align 8
  %1685 = fsub double %1681, %1684
  %1686 = getelementptr inbounds %struct.object, %struct.object* %1682, i64 0, i32 6, i64 2
  %1687 = load double, double* %1686, align 8
  %1688 = fdiv double %1685, %1687
  %1689 = load [2 x double]*, [2 x double]** %2, align 8
  %1690 = load i32, i32* %14, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds [2 x double], [2 x double]* %1689, i64 2, i64 %1691
  %1693 = load double, double* %1692, align 8
  %1694 = load %struct.object*, %struct.object** %15, align 8
  %1695 = getelementptr inbounds %struct.object, %struct.object* %1694, i64 0, i32 2, i64 2
  %1696 = load double, double* %1695, align 8
  %1697 = fsub double %1693, %1696
  %1698 = getelementptr inbounds %struct.object, %struct.object* %1694, i64 0, i32 6, i64 2
  %1699 = load double, double* %1698, align 8
  %1700 = fdiv double %1697, %1699
  %1701 = fmul double %1688, %1700
  %1702 = fadd double %1676, %1701
  %1703 = fcmp olt double %1702, 1.000000e+00
  br i1 %1703, label %1704, label %1780

; <label>:1704:                                   ; preds = %1660
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1705:                                   ; preds = %1643
  %1706 = getelementptr inbounds %struct.object, %struct.object* %1649, i64 0, i32 6, i64 0
  %1707 = load double, double* %1706, align 8
  %1708 = fdiv double %1652, %1707
  %1709 = load [2 x double]*, [2 x double]** %2, align 8
  %1710 = load i32, i32* %10, align 4
  %1711 = sext i32 %1710 to i64
  %1712 = getelementptr inbounds [2 x double], [2 x double]* %1709, i64 0, i64 %1711
  %1713 = load double, double* %1712, align 8
  %1714 = load %struct.object*, %struct.object** %15, align 8
  %1715 = getelementptr inbounds %struct.object, %struct.object* %1714, i64 0, i32 2, i64 0
  %1716 = load double, double* %1715, align 8
  %1717 = fsub double %1713, %1716
  %1718 = getelementptr inbounds %struct.object, %struct.object* %1714, i64 0, i32 6, i64 0
  %1719 = load double, double* %1718, align 8
  %1720 = fdiv double %1717, %1719
  %1721 = fmul double %1708, %1720
  %1722 = load [2 x double]*, [2 x double]** %2, align 8
  %1723 = load i32, i32* %12, align 4
  %1724 = sext i32 %1723 to i64
  %1725 = getelementptr inbounds [2 x double], [2 x double]* %1722, i64 1, i64 %1724
  %1726 = load double, double* %1725, align 8
  %1727 = load %struct.object*, %struct.object** %15, align 8
  %1728 = getelementptr inbounds %struct.object, %struct.object* %1727, i64 0, i32 2, i64 1
  %1729 = load double, double* %1728, align 8
  %1730 = fsub double %1726, %1729
  %1731 = getelementptr inbounds %struct.object, %struct.object* %1727, i64 0, i32 6, i64 1
  %1732 = load double, double* %1731, align 8
  %1733 = fdiv double %1730, %1732
  %1734 = load [2 x double]*, [2 x double]** %2, align 8
  %1735 = load i32, i32* %12, align 4
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds [2 x double], [2 x double]* %1734, i64 1, i64 %1736
  %1738 = load double, double* %1737, align 8
  %1739 = load %struct.object*, %struct.object** %15, align 8
  %1740 = getelementptr inbounds %struct.object, %struct.object* %1739, i64 0, i32 2, i64 1
  %1741 = load double, double* %1740, align 8
  %1742 = fsub double %1738, %1741
  %1743 = getelementptr inbounds %struct.object, %struct.object* %1739, i64 0, i32 6, i64 1
  %1744 = load double, double* %1743, align 8
  %1745 = fdiv double %1742, %1744
  %1746 = fmul double %1733, %1745
  %1747 = fadd double %1721, %1746
  br i1 %1563, label %1751, label %1748

; <label>:1748:                                   ; preds = %1705
  %1749 = fcmp olt double %1747, 1.000000e+00
  br i1 %1749, label %1750, label %1780

; <label>:1750:                                   ; preds = %1748
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1751:                                   ; preds = %1705
  %1752 = load [2 x double]*, [2 x double]** %2, align 8
  %1753 = load i32, i32* %14, align 4
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds [2 x double], [2 x double]* %1752, i64 2, i64 %1754
  %1756 = load double, double* %1755, align 8
  %1757 = load %struct.object*, %struct.object** %15, align 8
  %1758 = getelementptr inbounds %struct.object, %struct.object* %1757, i64 0, i32 2, i64 2
  %1759 = load double, double* %1758, align 8
  %1760 = fsub double %1756, %1759
  %1761 = getelementptr inbounds %struct.object, %struct.object* %1757, i64 0, i32 6, i64 2
  %1762 = load double, double* %1761, align 8
  %1763 = fdiv double %1760, %1762
  %1764 = load [2 x double]*, [2 x double]** %2, align 8
  %1765 = load i32, i32* %14, align 4
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds [2 x double], [2 x double]* %1764, i64 2, i64 %1766
  %1768 = load double, double* %1767, align 8
  %1769 = load %struct.object*, %struct.object** %15, align 8
  %1770 = getelementptr inbounds %struct.object, %struct.object* %1769, i64 0, i32 2, i64 2
  %1771 = load double, double* %1770, align 8
  %1772 = fsub double %1768, %1771
  %1773 = getelementptr inbounds %struct.object, %struct.object* %1769, i64 0, i32 6, i64 2
  %1774 = load double, double* %1773, align 8
  %1775 = fdiv double %1772, %1774
  %1776 = fmul double %1763, %1775
  %1777 = fadd double %1747, %1776
  %1778 = fcmp olt double %1777, 1.000000e+00
  br i1 %1778, label %1779, label %1780

; <label>:1779:                                   ; preds = %1751
  store i32 1, i32* %8, align 4
  br label %1780

; <label>:1780:                                   ; preds = %1660, %1704, %1654, %1659, %1751, %1779, %1748, %1750, %1567, %1581, %1566, %1598, %1642, %1592, %1597
  %1781 = load %struct.object*, %struct.object** %15, align 8
  %1782 = getelementptr inbounds %struct.object, %struct.object* %1781, i64 0, i32 0
  %1783 = load i32, i32* %1782, align 8
  %1784 = icmp eq i32 %1783, 3
  %1785 = load i32, i32* %8, align 4
  %1786 = icmp eq i32 %1785, 0
  %or.cond32 = or i1 %1784, %1786
  br i1 %or.cond32, label %2809, label %1787

; <label>:1787:                                   ; preds = %1780
  %1788 = load %struct.object*, %struct.object** %15, align 8
  %1789 = getelementptr inbounds %struct.object, %struct.object* %1788, i64 0, i32 0
  %1790 = load i32, i32* %1789, align 8
  %1791 = icmp eq i32 %1790, 5
  br i1 %1791, label %1792, label %1802

; <label>:1792:                                   ; preds = %1787
  %1793 = load [2 x double]*, [2 x double]** %2, align 8
  %1794 = getelementptr inbounds [2 x double], [2 x double]* %1793, i64 0, i64 1
  %1795 = load double, double* %1794, align 8
  %1796 = load %struct.object*, %struct.object** %15, align 8
  %1797 = getelementptr inbounds %struct.object, %struct.object* %1796, i64 0, i32 2, i64 0
  %1798 = load double, double* %1797, align 8
  %1799 = fcmp olt double %1795, %1798
  br i1 %1799, label %1800, label %1802

; <label>:1800:                                   ; preds = %1792
  %1801 = load i32, i32* %4, align 4
  store i32 %1801, i32* %8, align 4
  br label %2809

; <label>:1802:                                   ; preds = %1792, %1787
  %1803 = load %struct.object*, %struct.object** %15, align 8
  %1804 = getelementptr inbounds %struct.object, %struct.object* %1803, i64 0, i32 0
  %1805 = load i32, i32* %1804, align 8
  %1806 = icmp eq i32 %1805, 7
  br i1 %1806, label %1807, label %1817

; <label>:1807:                                   ; preds = %1802
  %1808 = load [2 x double]*, [2 x double]** %2, align 8
  %1809 = getelementptr inbounds [2 x double], [2 x double]* %1808, i64 0, i64 0
  %1810 = load double, double* %1809, align 8
  %1811 = load %struct.object*, %struct.object** %15, align 8
  %1812 = getelementptr inbounds %struct.object, %struct.object* %1811, i64 0, i32 2, i64 0
  %1813 = load double, double* %1812, align 8
  %1814 = fcmp ogt double %1810, %1813
  br i1 %1814, label %1815, label %1817

; <label>:1815:                                   ; preds = %1807
  %1816 = load i32, i32* %4, align 4
  store i32 %1816, i32* %8, align 4
  br label %2809

; <label>:1817:                                   ; preds = %1807, %1802
  %1818 = load %struct.object*, %struct.object** %15, align 8
  %1819 = getelementptr inbounds %struct.object, %struct.object* %1818, i64 0, i32 0
  %1820 = load i32, i32* %1819, align 8
  %1821 = icmp eq i32 %1820, 9
  br i1 %1821, label %1822, label %1832

; <label>:1822:                                   ; preds = %1817
  %1823 = load [2 x double]*, [2 x double]** %2, align 8
  %1824 = getelementptr inbounds [2 x double], [2 x double]* %1823, i64 1, i64 1
  %1825 = load double, double* %1824, align 8
  %1826 = load %struct.object*, %struct.object** %15, align 8
  %1827 = getelementptr inbounds %struct.object, %struct.object* %1826, i64 0, i32 2, i64 1
  %1828 = load double, double* %1827, align 8
  %1829 = fcmp olt double %1825, %1828
  br i1 %1829, label %1830, label %1832

; <label>:1830:                                   ; preds = %1822
  %1831 = load i32, i32* %4, align 4
  store i32 %1831, i32* %8, align 4
  br label %2809

; <label>:1832:                                   ; preds = %1822, %1817
  %1833 = load %struct.object*, %struct.object** %15, align 8
  %1834 = getelementptr inbounds %struct.object, %struct.object* %1833, i64 0, i32 0
  %1835 = load i32, i32* %1834, align 8
  %1836 = icmp eq i32 %1835, 11
  br i1 %1836, label %1837, label %1847

; <label>:1837:                                   ; preds = %1832
  %1838 = load [2 x double]*, [2 x double]** %2, align 8
  %1839 = getelementptr inbounds [2 x double], [2 x double]* %1838, i64 1, i64 0
  %1840 = load double, double* %1839, align 8
  %1841 = load %struct.object*, %struct.object** %15, align 8
  %1842 = getelementptr inbounds %struct.object, %struct.object* %1841, i64 0, i32 2, i64 1
  %1843 = load double, double* %1842, align 8
  %1844 = fcmp ogt double %1840, %1843
  br i1 %1844, label %1845, label %1847

; <label>:1845:                                   ; preds = %1837
  %1846 = load i32, i32* %4, align 4
  store i32 %1846, i32* %8, align 4
  br label %2809

; <label>:1847:                                   ; preds = %1837, %1832
  %1848 = load %struct.object*, %struct.object** %15, align 8
  %1849 = getelementptr inbounds %struct.object, %struct.object* %1848, i64 0, i32 0
  %1850 = load i32, i32* %1849, align 8
  %1851 = icmp eq i32 %1850, 13
  br i1 %1851, label %1852, label %1862

; <label>:1852:                                   ; preds = %1847
  %1853 = load [2 x double]*, [2 x double]** %2, align 8
  %1854 = getelementptr inbounds [2 x double], [2 x double]* %1853, i64 2, i64 1
  %1855 = load double, double* %1854, align 8
  %1856 = load %struct.object*, %struct.object** %15, align 8
  %1857 = getelementptr inbounds %struct.object, %struct.object* %1856, i64 0, i32 2, i64 2
  %1858 = load double, double* %1857, align 8
  %1859 = fcmp olt double %1855, %1858
  br i1 %1859, label %1860, label %1862

; <label>:1860:                                   ; preds = %1852
  %1861 = load i32, i32* %4, align 4
  store i32 %1861, i32* %8, align 4
  br label %2809

; <label>:1862:                                   ; preds = %1852, %1847
  %1863 = load %struct.object*, %struct.object** %15, align 8
  %1864 = getelementptr inbounds %struct.object, %struct.object* %1863, i64 0, i32 0
  %1865 = load i32, i32* %1864, align 8
  %1866 = icmp eq i32 %1865, 15
  br i1 %1866, label %1867, label %2809

; <label>:1867:                                   ; preds = %1862
  %1868 = load [2 x double]*, [2 x double]** %2, align 8
  %1869 = getelementptr inbounds [2 x double], [2 x double]* %1868, i64 2, i64 0
  %1870 = load double, double* %1869, align 8
  %1871 = load %struct.object*, %struct.object** %15, align 8
  %1872 = getelementptr inbounds %struct.object, %struct.object* %1871, i64 0, i32 2, i64 2
  %1873 = load double, double* %1872, align 8
  %1874 = fcmp ogt double %1870, %1873
  br i1 %1874, label %1875, label %2809

; <label>:1875:                                   ; preds = %1867
  %1876 = load i32, i32* %4, align 4
  store i32 %1876, i32* %8, align 4
  br label %2809

; <label>:1877:                                   ; preds = %1493, %1488, %1483
  %1878 = load %struct.object*, %struct.object** %15, align 8
  %1879 = getelementptr inbounds %struct.object, %struct.object* %1878, i64 0, i32 0
  %1880 = load i32, i32* %1879, align 8
  %1881 = icmp eq i32 %1880, 20
  br i1 %1881, label %1892, label %1882

; <label>:1882:                                   ; preds = %1877
  %1883 = load %struct.object*, %struct.object** %15, align 8
  %1884 = getelementptr inbounds %struct.object, %struct.object* %1883, i64 0, i32 0
  %1885 = load i32, i32* %1884, align 8
  %1886 = icmp eq i32 %1885, 22
  br i1 %1886, label %1892, label %1887

; <label>:1887:                                   ; preds = %1882
  %1888 = load %struct.object*, %struct.object** %15, align 8
  %1889 = getelementptr inbounds %struct.object, %struct.object* %1888, i64 0, i32 0
  %1890 = load i32, i32* %1889, align 8
  %1891 = icmp eq i32 %1890, 24
  br i1 %1891, label %1892, label %2586

; <label>:1892:                                   ; preds = %1887, %1882, %1877
  %1893 = load %struct.object*, %struct.object** %15, align 8
  %1894 = getelementptr inbounds %struct.object, %struct.object* %1893, i64 0, i32 0
  %1895 = load i32, i32* %1894, align 8
  %1896 = icmp eq i32 %1895, 20
  br i1 %1896, label %1902, label %1897

; <label>:1897:                                   ; preds = %1892
  %1898 = load %struct.object*, %struct.object** %15, align 8
  %1899 = getelementptr inbounds %struct.object, %struct.object* %1898, i64 0, i32 0
  %1900 = load i32, i32* %1899, align 8
  %1901 = icmp eq i32 %1900, 22
  %.33 = select i1 %1901, i32 1, i32 2
  %.34 = select i1 %1901, i32 2, i32 0
  %.35 = select i1 %1901, i32 0, i32 1
  br label %1902

; <label>:1902:                                   ; preds = %1892, %1897
  %storemerge27 = phi i32 [ %.33, %1897 ], [ 0, %1892 ]
  %storemerge14 = phi i32 [ %.34, %1897 ], [ 1, %1892 ]
  %storemerge6 = phi i32 [ %.35, %1897 ], [ 2, %1892 ]
  store i32 %storemerge27, i32* %5, align 4
  store i32 %storemerge14, i32* %6, align 4
  store i32 %storemerge6, i32* %7, align 4
  %1903 = load [2 x double]*, [2 x double]** %2, align 8
  %1904 = sext i32 %storemerge27 to i64
  %1905 = getelementptr inbounds [2 x double], [2 x double]* %1903, i64 %1904, i64 1
  %1906 = load double, double* %1905, align 8
  %1907 = load %struct.object*, %struct.object** %15, align 8
  %1908 = load i32, i32* %5, align 4
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds %struct.object, %struct.object* %1907, i64 0, i32 2, i64 %1909
  %1911 = load double, double* %1910, align 8
  %1912 = sext i32 %1908 to i64
  %1913 = getelementptr inbounds %struct.object, %struct.object* %1907, i64 0, i32 6, i64 %1912
  %1914 = load double, double* %1913, align 8
  %1915 = fsub double %1911, %1914
  %1916 = fcmp ogt double %1906, %1915
  br i1 %1916, label %1917, label %2809

; <label>:1917:                                   ; preds = %1902
  %1918 = load [2 x double]*, [2 x double]** %2, align 8
  %1919 = load i32, i32* %5, align 4
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds [2 x double], [2 x double]* %1918, i64 %1920, i64 0
  %1922 = load double, double* %1921, align 8
  %1923 = load %struct.object*, %struct.object** %15, align 8
  %1924 = sext i32 %1919 to i64
  %1925 = getelementptr inbounds %struct.object, %struct.object* %1923, i64 0, i32 2, i64 %1924
  %1926 = load double, double* %1925, align 8
  %1927 = sext i32 %1919 to i64
  %1928 = getelementptr inbounds %struct.object, %struct.object* %1923, i64 0, i32 6, i64 %1927
  %1929 = load double, double* %1928, align 8
  %1930 = fadd double %1926, %1929
  %1931 = fcmp olt double %1922, %1930
  br i1 %1931, label %1932, label %2809

; <label>:1932:                                   ; preds = %1917
  store i32 0, i32* %13, align 4
  store i32 0, i32* %11, align 4
  %1933 = load %struct.object*, %struct.object** %15, align 8
  %1934 = load i32, i32* %6, align 4
  %1935 = sext i32 %1934 to i64
  %1936 = getelementptr inbounds %struct.object, %struct.object* %1933, i64 0, i32 2, i64 %1935
  %1937 = load double, double* %1936, align 8
  %1938 = load [2 x double]*, [2 x double]** %2, align 8
  %1939 = sext i32 %1934 to i64
  %1940 = getelementptr inbounds [2 x double], [2 x double]* %1938, i64 %1939, i64 0
  %1941 = load double, double* %1940, align 8
  %1942 = fcmp olt double %1937, %1941
  br i1 %1942, label %1971, label %1943

; <label>:1943:                                   ; preds = %1932
  %1944 = load %struct.object*, %struct.object** %15, align 8
  %1945 = load i32, i32* %6, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = getelementptr inbounds %struct.object, %struct.object* %1944, i64 0, i32 2, i64 %1946
  %1948 = load double, double* %1947, align 8
  %1949 = load [2 x double]*, [2 x double]** %2, align 8
  %1950 = sext i32 %1945 to i64
  %1951 = getelementptr inbounds [2 x double], [2 x double]* %1949, i64 %1950, i64 1
  %1952 = load double, double* %1951, align 8
  %1953 = fcmp ogt double %1948, %1952
  br i1 %1953, label %1971, label %1954

; <label>:1954:                                   ; preds = %1943
  store i32 1, i32* %11, align 4
  %1955 = load %struct.object*, %struct.object** %15, align 8
  %1956 = load i32, i32* %6, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = getelementptr inbounds %struct.object, %struct.object* %1955, i64 0, i32 2, i64 %1957
  %1959 = load double, double* %1958, align 8
  %1960 = load [2 x double]*, [2 x double]** %2, align 8
  %1961 = sext i32 %1956 to i64
  %1962 = getelementptr inbounds [2 x double], [2 x double]* %1960, i64 %1961, i64 0
  %1963 = load double, double* %1962, align 8
  %1964 = load i32, i32* %6, align 4
  %1965 = sext i32 %1964 to i64
  %1966 = getelementptr inbounds [2 x double], [2 x double]* %1960, i64 %1965, i64 1
  %1967 = load double, double* %1966, align 8
  %1968 = fadd double %1963, %1967
  %1969 = fmul double %1968, 5.000000e-01
  %1970 = fcmp olt double %1959, %1969
  %.36 = select i1 %1970, i32 0, i32 1
  br label %1971

; <label>:1971:                                   ; preds = %1954, %1943, %1932
  %storemerge9 = phi i32 [ 0, %1932 ], [ %.36, %1954 ], [ 1, %1943 ]
  store i32 %storemerge9, i32* %12, align 4
  %1972 = load %struct.object*, %struct.object** %15, align 8
  %1973 = load i32, i32* %7, align 4
  %1974 = sext i32 %1973 to i64
  %1975 = getelementptr inbounds %struct.object, %struct.object* %1972, i64 0, i32 2, i64 %1974
  %1976 = load double, double* %1975, align 8
  %1977 = load [2 x double]*, [2 x double]** %2, align 8
  %1978 = sext i32 %1973 to i64
  %1979 = getelementptr inbounds [2 x double], [2 x double]* %1977, i64 %1978, i64 0
  %1980 = load double, double* %1979, align 8
  %1981 = fcmp olt double %1976, %1980
  br i1 %1981, label %2010, label %1982

; <label>:1982:                                   ; preds = %1971
  %1983 = load %struct.object*, %struct.object** %15, align 8
  %1984 = load i32, i32* %7, align 4
  %1985 = sext i32 %1984 to i64
  %1986 = getelementptr inbounds %struct.object, %struct.object* %1983, i64 0, i32 2, i64 %1985
  %1987 = load double, double* %1986, align 8
  %1988 = load [2 x double]*, [2 x double]** %2, align 8
  %1989 = sext i32 %1984 to i64
  %1990 = getelementptr inbounds [2 x double], [2 x double]* %1988, i64 %1989, i64 1
  %1991 = load double, double* %1990, align 8
  %1992 = fcmp ogt double %1987, %1991
  br i1 %1992, label %2010, label %1993

; <label>:1993:                                   ; preds = %1982
  store i32 1, i32* %13, align 4
  %1994 = load %struct.object*, %struct.object** %15, align 8
  %1995 = load i32, i32* %7, align 4
  %1996 = sext i32 %1995 to i64
  %1997 = getelementptr inbounds %struct.object, %struct.object* %1994, i64 0, i32 2, i64 %1996
  %1998 = load double, double* %1997, align 8
  %1999 = load [2 x double]*, [2 x double]** %2, align 8
  %2000 = sext i32 %1995 to i64
  %2001 = getelementptr inbounds [2 x double], [2 x double]* %1999, i64 %2000, i64 0
  %2002 = load double, double* %2001, align 8
  %2003 = load i32, i32* %7, align 4
  %2004 = sext i32 %2003 to i64
  %2005 = getelementptr inbounds [2 x double], [2 x double]* %1999, i64 %2004, i64 1
  %2006 = load double, double* %2005, align 8
  %2007 = fadd double %2002, %2006
  %2008 = fmul double %2007, 5.000000e-01
  %2009 = fcmp olt double %1998, %2008
  %.37 = select i1 %2009, i32 0, i32 1
  br label %2010

; <label>:2010:                                   ; preds = %1993, %1982, %1971
  %storemerge12 = phi i32 [ 0, %1971 ], [ %.37, %1993 ], [ 1, %1982 ]
  store i32 %storemerge12, i32* %14, align 4
  %2011 = load [2 x double]*, [2 x double]** %2, align 8
  %2012 = getelementptr inbounds [2 x double], [2 x double]* %2011, i64 0, i64 0
  %2013 = load double, double* %2012, align 8
  %2014 = load %struct.object*, %struct.object** %15, align 8
  %2015 = getelementptr inbounds %struct.object, %struct.object* %2014, i64 0, i32 2, i64 0
  %2016 = load double, double* %2015, align 8
  %2017 = getelementptr inbounds %struct.object, %struct.object* %2014, i64 0, i32 6, i64 0
  %2018 = load double, double* %2017, align 8
  %2019 = fsub double %2016, %2018
  %2020 = fcmp olt double %2013, %2019
  br i1 %2020, label %2021, label %2032

; <label>:2021:                                   ; preds = %2010
  %2022 = load [2 x double]*, [2 x double]** %2, align 8
  %2023 = getelementptr inbounds [2 x double], [2 x double]* %2022, i64 0, i64 1
  %2024 = load double, double* %2023, align 8
  %2025 = load %struct.object*, %struct.object** %15, align 8
  %2026 = getelementptr inbounds %struct.object, %struct.object* %2025, i64 0, i32 2, i64 0
  %2027 = load double, double* %2026, align 8
  %2028 = getelementptr inbounds %struct.object, %struct.object* %2025, i64 0, i32 6, i64 0
  %2029 = load double, double* %2028, align 8
  %2030 = fadd double %2027, %2029
  %2031 = fcmp olt double %2024, %2030
  br i1 %2031, label %2054, label %2032

; <label>:2032:                                   ; preds = %2021, %2010
  %2033 = load [2 x double]*, [2 x double]** %2, align 8
  %2034 = getelementptr inbounds [2 x double], [2 x double]* %2033, i64 0, i64 0
  %2035 = load double, double* %2034, align 8
  %2036 = load %struct.object*, %struct.object** %15, align 8
  %2037 = getelementptr inbounds %struct.object, %struct.object* %2036, i64 0, i32 2, i64 0
  %2038 = load double, double* %2037, align 8
  %2039 = getelementptr inbounds %struct.object, %struct.object* %2036, i64 0, i32 6, i64 0
  %2040 = load double, double* %2039, align 8
  %2041 = fsub double %2038, %2040
  %2042 = fcmp ogt double %2035, %2041
  br i1 %2042, label %2043, label %2167

; <label>:2043:                                   ; preds = %2032
  %2044 = load [2 x double]*, [2 x double]** %2, align 8
  %2045 = getelementptr inbounds [2 x double], [2 x double]* %2044, i64 0, i64 1
  %2046 = load double, double* %2045, align 8
  %2047 = load %struct.object*, %struct.object** %15, align 8
  %2048 = getelementptr inbounds %struct.object, %struct.object* %2047, i64 0, i32 2, i64 0
  %2049 = load double, double* %2048, align 8
  %2050 = getelementptr inbounds %struct.object, %struct.object* %2047, i64 0, i32 6, i64 0
  %2051 = load double, double* %2050, align 8
  %2052 = fadd double %2049, %2051
  %2053 = fcmp ogt double %2046, %2052
  br i1 %2053, label %2054, label %2167

; <label>:2054:                                   ; preds = %2043, %2021
  %2055 = load i32, i32* %11, align 4
  %2056 = icmp eq i32 %2055, 0
  %2057 = load i32, i32* %13, align 4
  %2058 = icmp eq i32 %2057, 0
  br i1 %2056, label %2083, label %2059

; <label>:2059:                                   ; preds = %2054
  br i1 %2058, label %2061, label %2060

; <label>:2060:                                   ; preds = %2059
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2061:                                   ; preds = %2059
  %2062 = load [2 x double]*, [2 x double]** %2, align 8
  %2063 = load i32, i32* %7, align 4
  %2064 = sext i32 %2063 to i64
  %2065 = load i32, i32* %14, align 4
  %2066 = sext i32 %2065 to i64
  %2067 = getelementptr inbounds [2 x double], [2 x double]* %2062, i64 %2064, i64 %2066
  %2068 = load double, double* %2067, align 8
  %2069 = load %struct.object*, %struct.object** %15, align 8
  %2070 = load i32, i32* %7, align 4
  %2071 = sext i32 %2070 to i64
  %2072 = getelementptr inbounds %struct.object, %struct.object* %2069, i64 0, i32 2, i64 %2071
  %2073 = load double, double* %2072, align 8
  %2074 = fsub double %2068, %2073
  %2075 = call double @llvm.fabs.f64(double %2074)
  %2076 = load %struct.object*, %struct.object** %15, align 8
  %2077 = load i32, i32* %7, align 4
  %2078 = sext i32 %2077 to i64
  %2079 = getelementptr inbounds %struct.object, %struct.object* %2076, i64 0, i32 6, i64 %2078
  %2080 = load double, double* %2079, align 8
  %2081 = fcmp olt double %2075, %2080
  br i1 %2081, label %2082, label %2809

; <label>:2082:                                   ; preds = %2061
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2083:                                   ; preds = %2054
  %2084 = load [2 x double]*, [2 x double]** %2, align 8
  %2085 = load i32, i32* %6, align 4
  %2086 = sext i32 %2085 to i64
  %2087 = load i32, i32* %12, align 4
  %2088 = sext i32 %2087 to i64
  %2089 = getelementptr inbounds [2 x double], [2 x double]* %2084, i64 %2086, i64 %2088
  %2090 = load double, double* %2089, align 8
  %2091 = load %struct.object*, %struct.object** %15, align 8
  %2092 = load i32, i32* %6, align 4
  %2093 = sext i32 %2092 to i64
  %2094 = getelementptr inbounds %struct.object, %struct.object* %2091, i64 0, i32 2, i64 %2093
  %2095 = load double, double* %2094, align 8
  %2096 = fsub double %2090, %2095
  br i1 %2058, label %2106, label %2097

; <label>:2097:                                   ; preds = %2083
  %2098 = call double @llvm.fabs.f64(double %2096)
  %2099 = load %struct.object*, %struct.object** %15, align 8
  %2100 = load i32, i32* %6, align 4
  %2101 = sext i32 %2100 to i64
  %2102 = getelementptr inbounds %struct.object, %struct.object* %2099, i64 0, i32 6, i64 %2101
  %2103 = load double, double* %2102, align 8
  %2104 = fcmp olt double %2098, %2103
  br i1 %2104, label %2105, label %2809

; <label>:2105:                                   ; preds = %2097
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2106:                                   ; preds = %2083
  %2107 = sext i32 %2092 to i64
  %2108 = getelementptr inbounds %struct.object, %struct.object* %2091, i64 0, i32 6, i64 %2107
  %2109 = load double, double* %2108, align 8
  %2110 = fdiv double %2096, %2109
  %2111 = load [2 x double]*, [2 x double]** %2, align 8
  %2112 = load i32, i32* %6, align 4
  %2113 = sext i32 %2112 to i64
  %2114 = load i32, i32* %12, align 4
  %2115 = sext i32 %2114 to i64
  %2116 = getelementptr inbounds [2 x double], [2 x double]* %2111, i64 %2113, i64 %2115
  %2117 = load double, double* %2116, align 8
  %2118 = load %struct.object*, %struct.object** %15, align 8
  %2119 = load i32, i32* %6, align 4
  %2120 = sext i32 %2119 to i64
  %2121 = getelementptr inbounds %struct.object, %struct.object* %2118, i64 0, i32 2, i64 %2120
  %2122 = load double, double* %2121, align 8
  %2123 = fsub double %2117, %2122
  %2124 = sext i32 %2119 to i64
  %2125 = getelementptr inbounds %struct.object, %struct.object* %2118, i64 0, i32 6, i64 %2124
  %2126 = load double, double* %2125, align 8
  %2127 = fdiv double %2123, %2126
  %2128 = fmul double %2110, %2127
  %2129 = load [2 x double]*, [2 x double]** %2, align 8
  %2130 = load i32, i32* %7, align 4
  %2131 = sext i32 %2130 to i64
  %2132 = load i32, i32* %14, align 4
  %2133 = sext i32 %2132 to i64
  %2134 = getelementptr inbounds [2 x double], [2 x double]* %2129, i64 %2131, i64 %2133
  %2135 = load double, double* %2134, align 8
  %2136 = load %struct.object*, %struct.object** %15, align 8
  %2137 = load i32, i32* %7, align 4
  %2138 = sext i32 %2137 to i64
  %2139 = getelementptr inbounds %struct.object, %struct.object* %2136, i64 0, i32 2, i64 %2138
  %2140 = load double, double* %2139, align 8
  %2141 = fsub double %2135, %2140
  %2142 = sext i32 %2137 to i64
  %2143 = getelementptr inbounds %struct.object, %struct.object* %2136, i64 0, i32 6, i64 %2142
  %2144 = load double, double* %2143, align 8
  %2145 = fdiv double %2141, %2144
  %2146 = load [2 x double]*, [2 x double]** %2, align 8
  %2147 = load i32, i32* %7, align 4
  %2148 = sext i32 %2147 to i64
  %2149 = load i32, i32* %14, align 4
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds [2 x double], [2 x double]* %2146, i64 %2148, i64 %2150
  %2152 = load double, double* %2151, align 8
  %2153 = load %struct.object*, %struct.object** %15, align 8
  %2154 = load i32, i32* %7, align 4
  %2155 = sext i32 %2154 to i64
  %2156 = getelementptr inbounds %struct.object, %struct.object* %2153, i64 0, i32 2, i64 %2155
  %2157 = load double, double* %2156, align 8
  %2158 = fsub double %2152, %2157
  %2159 = sext i32 %2154 to i64
  %2160 = getelementptr inbounds %struct.object, %struct.object* %2153, i64 0, i32 6, i64 %2159
  %2161 = load double, double* %2160, align 8
  %2162 = fdiv double %2158, %2161
  %2163 = fmul double %2145, %2162
  %2164 = fadd double %2128, %2163
  %2165 = fcmp olt double %2164, 1.000000e+00
  br i1 %2165, label %2166, label %2809

; <label>:2166:                                   ; preds = %2106
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2167:                                   ; preds = %2043, %2032
  %2168 = load i32, i32* %11, align 4
  %2169 = icmp eq i32 %2168, 0
  %2170 = load i32, i32* %13, align 4
  %2171 = icmp eq i32 %2170, 0
  %2172 = load [2 x double]*, [2 x double]** %2, align 8
  br i1 %2169, label %2349, label %2173

; <label>:2173:                                   ; preds = %2167
  br i1 %2171, label %2251, label %2174

; <label>:2174:                                   ; preds = %2173
  %2175 = load i32, i32* %6, align 4
  %2176 = sext i32 %2175 to i64
  %2177 = load i32, i32* %12, align 4
  %2178 = sub nsw i32 1, %2177
  %2179 = sext i32 %2178 to i64
  %2180 = getelementptr inbounds [2 x double], [2 x double]* %2172, i64 %2176, i64 %2179
  %2181 = load double, double* %2180, align 8
  %2182 = load %struct.object*, %struct.object** %15, align 8
  %2183 = load i32, i32* %6, align 4
  %2184 = sext i32 %2183 to i64
  %2185 = getelementptr inbounds %struct.object, %struct.object* %2182, i64 0, i32 2, i64 %2184
  %2186 = load double, double* %2185, align 8
  %2187 = fsub double %2181, %2186
  %2188 = sext i32 %2183 to i64
  %2189 = getelementptr inbounds %struct.object, %struct.object* %2182, i64 0, i32 6, i64 %2188
  %2190 = load double, double* %2189, align 8
  %2191 = fdiv double %2187, %2190
  %2192 = load [2 x double]*, [2 x double]** %2, align 8
  %2193 = load i32, i32* %6, align 4
  %2194 = sext i32 %2193 to i64
  %2195 = load i32, i32* %12, align 4
  %2196 = sub nsw i32 1, %2195
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds [2 x double], [2 x double]* %2192, i64 %2194, i64 %2197
  %2199 = load double, double* %2198, align 8
  %2200 = load %struct.object*, %struct.object** %15, align 8
  %2201 = load i32, i32* %6, align 4
  %2202 = sext i32 %2201 to i64
  %2203 = getelementptr inbounds %struct.object, %struct.object* %2200, i64 0, i32 2, i64 %2202
  %2204 = load double, double* %2203, align 8
  %2205 = fsub double %2199, %2204
  %2206 = sext i32 %2201 to i64
  %2207 = getelementptr inbounds %struct.object, %struct.object* %2200, i64 0, i32 6, i64 %2206
  %2208 = load double, double* %2207, align 8
  %2209 = fdiv double %2205, %2208
  %2210 = fmul double %2191, %2209
  %2211 = load [2 x double]*, [2 x double]** %2, align 8
  %2212 = load i32, i32* %7, align 4
  %2213 = sext i32 %2212 to i64
  %2214 = load i32, i32* %14, align 4
  %2215 = sub nsw i32 1, %2214
  %2216 = sext i32 %2215 to i64
  %2217 = getelementptr inbounds [2 x double], [2 x double]* %2211, i64 %2213, i64 %2216
  %2218 = load double, double* %2217, align 8
  %2219 = load %struct.object*, %struct.object** %15, align 8
  %2220 = load i32, i32* %7, align 4
  %2221 = sext i32 %2220 to i64
  %2222 = getelementptr inbounds %struct.object, %struct.object* %2219, i64 0, i32 2, i64 %2221
  %2223 = load double, double* %2222, align 8
  %2224 = fsub double %2218, %2223
  %2225 = sext i32 %2220 to i64
  %2226 = getelementptr inbounds %struct.object, %struct.object* %2219, i64 0, i32 6, i64 %2225
  %2227 = load double, double* %2226, align 8
  %2228 = fdiv double %2224, %2227
  %2229 = load [2 x double]*, [2 x double]** %2, align 8
  %2230 = load i32, i32* %7, align 4
  %2231 = sext i32 %2230 to i64
  %2232 = load i32, i32* %14, align 4
  %2233 = sub nsw i32 1, %2232
  %2234 = sext i32 %2233 to i64
  %2235 = getelementptr inbounds [2 x double], [2 x double]* %2229, i64 %2231, i64 %2234
  %2236 = load double, double* %2235, align 8
  %2237 = load %struct.object*, %struct.object** %15, align 8
  %2238 = load i32, i32* %7, align 4
  %2239 = sext i32 %2238 to i64
  %2240 = getelementptr inbounds %struct.object, %struct.object* %2237, i64 0, i32 2, i64 %2239
  %2241 = load double, double* %2240, align 8
  %2242 = fsub double %2236, %2241
  %2243 = sext i32 %2238 to i64
  %2244 = getelementptr inbounds %struct.object, %struct.object* %2237, i64 0, i32 6, i64 %2243
  %2245 = load double, double* %2244, align 8
  %2246 = fdiv double %2242, %2245
  %2247 = fmul double %2228, %2246
  %2248 = fadd double %2210, %2247
  %2249 = fcmp ogt double %2248, 1.000000e+00
  br i1 %2249, label %2250, label %2809

; <label>:2250:                                   ; preds = %2174
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2251:                                   ; preds = %2173
  %2252 = load i32, i32* %7, align 4
  %2253 = sext i32 %2252 to i64
  %2254 = load i32, i32* %14, align 4
  %2255 = sext i32 %2254 to i64
  %2256 = getelementptr inbounds [2 x double], [2 x double]* %2172, i64 %2253, i64 %2255
  %2257 = load double, double* %2256, align 8
  %2258 = load %struct.object*, %struct.object** %15, align 8
  %2259 = load i32, i32* %7, align 4
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds %struct.object, %struct.object* %2258, i64 0, i32 2, i64 %2260
  %2262 = load double, double* %2261, align 8
  %2263 = fsub double %2257, %2262
  %2264 = call double @llvm.fabs.f64(double %2263)
  %2265 = load %struct.object*, %struct.object** %15, align 8
  %2266 = load i32, i32* %7, align 4
  %2267 = sext i32 %2266 to i64
  %2268 = getelementptr inbounds %struct.object, %struct.object* %2265, i64 0, i32 6, i64 %2267
  %2269 = load double, double* %2268, align 8
  %2270 = fcmp olt double %2264, %2269
  br i1 %2270, label %2271, label %2809

; <label>:2271:                                   ; preds = %2251
  %2272 = load [2 x double]*, [2 x double]** %2, align 8
  %2273 = load i32, i32* %6, align 4
  %2274 = sext i32 %2273 to i64
  %2275 = load i32, i32* %12, align 4
  %2276 = sub nsw i32 1, %2275
  %2277 = sext i32 %2276 to i64
  %2278 = getelementptr inbounds [2 x double], [2 x double]* %2272, i64 %2274, i64 %2277
  %2279 = load double, double* %2278, align 8
  %2280 = load %struct.object*, %struct.object** %15, align 8
  %2281 = load i32, i32* %6, align 4
  %2282 = sext i32 %2281 to i64
  %2283 = getelementptr inbounds %struct.object, %struct.object* %2280, i64 0, i32 2, i64 %2282
  %2284 = load double, double* %2283, align 8
  %2285 = fsub double %2279, %2284
  %2286 = sext i32 %2281 to i64
  %2287 = getelementptr inbounds %struct.object, %struct.object* %2280, i64 0, i32 6, i64 %2286
  %2288 = load double, double* %2287, align 8
  %2289 = fdiv double %2285, %2288
  %2290 = load [2 x double]*, [2 x double]** %2, align 8
  %2291 = load i32, i32* %6, align 4
  %2292 = sext i32 %2291 to i64
  %2293 = load i32, i32* %12, align 4
  %2294 = sub nsw i32 1, %2293
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds [2 x double], [2 x double]* %2290, i64 %2292, i64 %2295
  %2297 = load double, double* %2296, align 8
  %2298 = load %struct.object*, %struct.object** %15, align 8
  %2299 = load i32, i32* %6, align 4
  %2300 = sext i32 %2299 to i64
  %2301 = getelementptr inbounds %struct.object, %struct.object* %2298, i64 0, i32 2, i64 %2300
  %2302 = load double, double* %2301, align 8
  %2303 = fsub double %2297, %2302
  %2304 = sext i32 %2299 to i64
  %2305 = getelementptr inbounds %struct.object, %struct.object* %2298, i64 0, i32 6, i64 %2304
  %2306 = load double, double* %2305, align 8
  %2307 = fdiv double %2303, %2306
  %2308 = fmul double %2289, %2307
  %2309 = load [2 x double]*, [2 x double]** %2, align 8
  %2310 = load i32, i32* %7, align 4
  %2311 = sext i32 %2310 to i64
  %2312 = load i32, i32* %14, align 4
  %2313 = sub nsw i32 1, %2312
  %2314 = sext i32 %2313 to i64
  %2315 = getelementptr inbounds [2 x double], [2 x double]* %2309, i64 %2311, i64 %2314
  %2316 = load double, double* %2315, align 8
  %2317 = load %struct.object*, %struct.object** %15, align 8
  %2318 = load i32, i32* %7, align 4
  %2319 = sext i32 %2318 to i64
  %2320 = getelementptr inbounds %struct.object, %struct.object* %2317, i64 0, i32 2, i64 %2319
  %2321 = load double, double* %2320, align 8
  %2322 = fsub double %2316, %2321
  %2323 = sext i32 %2318 to i64
  %2324 = getelementptr inbounds %struct.object, %struct.object* %2317, i64 0, i32 6, i64 %2323
  %2325 = load double, double* %2324, align 8
  %2326 = fdiv double %2322, %2325
  %2327 = load [2 x double]*, [2 x double]** %2, align 8
  %2328 = load i32, i32* %7, align 4
  %2329 = sext i32 %2328 to i64
  %2330 = load i32, i32* %14, align 4
  %2331 = sub nsw i32 1, %2330
  %2332 = sext i32 %2331 to i64
  %2333 = getelementptr inbounds [2 x double], [2 x double]* %2327, i64 %2329, i64 %2332
  %2334 = load double, double* %2333, align 8
  %2335 = load %struct.object*, %struct.object** %15, align 8
  %2336 = load i32, i32* %7, align 4
  %2337 = sext i32 %2336 to i64
  %2338 = getelementptr inbounds %struct.object, %struct.object* %2335, i64 0, i32 2, i64 %2337
  %2339 = load double, double* %2338, align 8
  %2340 = fsub double %2334, %2339
  %2341 = sext i32 %2336 to i64
  %2342 = getelementptr inbounds %struct.object, %struct.object* %2335, i64 0, i32 6, i64 %2341
  %2343 = load double, double* %2342, align 8
  %2344 = fdiv double %2340, %2343
  %2345 = fmul double %2326, %2344
  %2346 = fadd double %2308, %2345
  %2347 = fcmp ogt double %2346, 1.000000e+00
  br i1 %2347, label %2348, label %2809

; <label>:2348:                                   ; preds = %2271
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2349:                                   ; preds = %2167
  %2350 = load i32, i32* %6, align 4
  %2351 = sext i32 %2350 to i64
  %2352 = load i32, i32* %12, align 4
  %2353 = sext i32 %2352 to i64
  %2354 = getelementptr inbounds [2 x double], [2 x double]* %2172, i64 %2351, i64 %2353
  %2355 = load double, double* %2354, align 8
  %2356 = load %struct.object*, %struct.object** %15, align 8
  %2357 = load i32, i32* %6, align 4
  %2358 = sext i32 %2357 to i64
  %2359 = getelementptr inbounds %struct.object, %struct.object* %2356, i64 0, i32 2, i64 %2358
  %2360 = load double, double* %2359, align 8
  %2361 = fsub double %2355, %2360
  br i1 %2171, label %2448, label %2362

; <label>:2362:                                   ; preds = %2349
  %2363 = call double @llvm.fabs.f64(double %2361)
  %2364 = load %struct.object*, %struct.object** %15, align 8
  %2365 = load i32, i32* %6, align 4
  %2366 = sext i32 %2365 to i64
  %2367 = getelementptr inbounds %struct.object, %struct.object* %2364, i64 0, i32 6, i64 %2366
  %2368 = load double, double* %2367, align 8
  %2369 = fcmp olt double %2363, %2368
  br i1 %2369, label %2370, label %2809

; <label>:2370:                                   ; preds = %2362
  %2371 = load [2 x double]*, [2 x double]** %2, align 8
  %2372 = load i32, i32* %6, align 4
  %2373 = sext i32 %2372 to i64
  %2374 = load i32, i32* %12, align 4
  %2375 = sub nsw i32 1, %2374
  %2376 = sext i32 %2375 to i64
  %2377 = getelementptr inbounds [2 x double], [2 x double]* %2371, i64 %2373, i64 %2376
  %2378 = load double, double* %2377, align 8
  %2379 = load %struct.object*, %struct.object** %15, align 8
  %2380 = load i32, i32* %6, align 4
  %2381 = sext i32 %2380 to i64
  %2382 = getelementptr inbounds %struct.object, %struct.object* %2379, i64 0, i32 2, i64 %2381
  %2383 = load double, double* %2382, align 8
  %2384 = fsub double %2378, %2383
  %2385 = sext i32 %2380 to i64
  %2386 = getelementptr inbounds %struct.object, %struct.object* %2379, i64 0, i32 6, i64 %2385
  %2387 = load double, double* %2386, align 8
  %2388 = fdiv double %2384, %2387
  %2389 = load [2 x double]*, [2 x double]** %2, align 8
  %2390 = load i32, i32* %6, align 4
  %2391 = sext i32 %2390 to i64
  %2392 = load i32, i32* %12, align 4
  %2393 = sub nsw i32 1, %2392
  %2394 = sext i32 %2393 to i64
  %2395 = getelementptr inbounds [2 x double], [2 x double]* %2389, i64 %2391, i64 %2394
  %2396 = load double, double* %2395, align 8
  %2397 = load %struct.object*, %struct.object** %15, align 8
  %2398 = load i32, i32* %6, align 4
  %2399 = sext i32 %2398 to i64
  %2400 = getelementptr inbounds %struct.object, %struct.object* %2397, i64 0, i32 2, i64 %2399
  %2401 = load double, double* %2400, align 8
  %2402 = fsub double %2396, %2401
  %2403 = sext i32 %2398 to i64
  %2404 = getelementptr inbounds %struct.object, %struct.object* %2397, i64 0, i32 6, i64 %2403
  %2405 = load double, double* %2404, align 8
  %2406 = fdiv double %2402, %2405
  %2407 = fmul double %2388, %2406
  %2408 = load [2 x double]*, [2 x double]** %2, align 8
  %2409 = load i32, i32* %7, align 4
  %2410 = sext i32 %2409 to i64
  %2411 = load i32, i32* %14, align 4
  %2412 = sub nsw i32 1, %2411
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds [2 x double], [2 x double]* %2408, i64 %2410, i64 %2413
  %2415 = load double, double* %2414, align 8
  %2416 = load %struct.object*, %struct.object** %15, align 8
  %2417 = load i32, i32* %7, align 4
  %2418 = sext i32 %2417 to i64
  %2419 = getelementptr inbounds %struct.object, %struct.object* %2416, i64 0, i32 2, i64 %2418
  %2420 = load double, double* %2419, align 8
  %2421 = fsub double %2415, %2420
  %2422 = sext i32 %2417 to i64
  %2423 = getelementptr inbounds %struct.object, %struct.object* %2416, i64 0, i32 6, i64 %2422
  %2424 = load double, double* %2423, align 8
  %2425 = fdiv double %2421, %2424
  %2426 = load [2 x double]*, [2 x double]** %2, align 8
  %2427 = load i32, i32* %7, align 4
  %2428 = sext i32 %2427 to i64
  %2429 = load i32, i32* %14, align 4
  %2430 = sub nsw i32 1, %2429
  %2431 = sext i32 %2430 to i64
  %2432 = getelementptr inbounds [2 x double], [2 x double]* %2426, i64 %2428, i64 %2431
  %2433 = load double, double* %2432, align 8
  %2434 = load %struct.object*, %struct.object** %15, align 8
  %2435 = load i32, i32* %7, align 4
  %2436 = sext i32 %2435 to i64
  %2437 = getelementptr inbounds %struct.object, %struct.object* %2434, i64 0, i32 2, i64 %2436
  %2438 = load double, double* %2437, align 8
  %2439 = fsub double %2433, %2438
  %2440 = sext i32 %2435 to i64
  %2441 = getelementptr inbounds %struct.object, %struct.object* %2434, i64 0, i32 6, i64 %2440
  %2442 = load double, double* %2441, align 8
  %2443 = fdiv double %2439, %2442
  %2444 = fmul double %2425, %2443
  %2445 = fadd double %2407, %2444
  %2446 = fcmp ogt double %2445, 1.000000e+00
  br i1 %2446, label %2447, label %2809

; <label>:2447:                                   ; preds = %2370
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2448:                                   ; preds = %2349
  %2449 = sext i32 %2357 to i64
  %2450 = getelementptr inbounds %struct.object, %struct.object* %2356, i64 0, i32 6, i64 %2449
  %2451 = load double, double* %2450, align 8
  %2452 = fdiv double %2361, %2451
  %2453 = load [2 x double]*, [2 x double]** %2, align 8
  %2454 = load i32, i32* %6, align 4
  %2455 = sext i32 %2454 to i64
  %2456 = load i32, i32* %12, align 4
  %2457 = sext i32 %2456 to i64
  %2458 = getelementptr inbounds [2 x double], [2 x double]* %2453, i64 %2455, i64 %2457
  %2459 = load double, double* %2458, align 8
  %2460 = load %struct.object*, %struct.object** %15, align 8
  %2461 = load i32, i32* %6, align 4
  %2462 = sext i32 %2461 to i64
  %2463 = getelementptr inbounds %struct.object, %struct.object* %2460, i64 0, i32 2, i64 %2462
  %2464 = load double, double* %2463, align 8
  %2465 = fsub double %2459, %2464
  %2466 = sext i32 %2461 to i64
  %2467 = getelementptr inbounds %struct.object, %struct.object* %2460, i64 0, i32 6, i64 %2466
  %2468 = load double, double* %2467, align 8
  %2469 = fdiv double %2465, %2468
  %2470 = fmul double %2452, %2469
  %2471 = load [2 x double]*, [2 x double]** %2, align 8
  %2472 = load i32, i32* %7, align 4
  %2473 = sext i32 %2472 to i64
  %2474 = load i32, i32* %14, align 4
  %2475 = sext i32 %2474 to i64
  %2476 = getelementptr inbounds [2 x double], [2 x double]* %2471, i64 %2473, i64 %2475
  %2477 = load double, double* %2476, align 8
  %2478 = load %struct.object*, %struct.object** %15, align 8
  %2479 = load i32, i32* %7, align 4
  %2480 = sext i32 %2479 to i64
  %2481 = getelementptr inbounds %struct.object, %struct.object* %2478, i64 0, i32 2, i64 %2480
  %2482 = load double, double* %2481, align 8
  %2483 = fsub double %2477, %2482
  %2484 = sext i32 %2479 to i64
  %2485 = getelementptr inbounds %struct.object, %struct.object* %2478, i64 0, i32 6, i64 %2484
  %2486 = load double, double* %2485, align 8
  %2487 = fdiv double %2483, %2486
  %2488 = load [2 x double]*, [2 x double]** %2, align 8
  %2489 = load i32, i32* %7, align 4
  %2490 = sext i32 %2489 to i64
  %2491 = load i32, i32* %14, align 4
  %2492 = sext i32 %2491 to i64
  %2493 = getelementptr inbounds [2 x double], [2 x double]* %2488, i64 %2490, i64 %2492
  %2494 = load double, double* %2493, align 8
  %2495 = load %struct.object*, %struct.object** %15, align 8
  %2496 = load i32, i32* %7, align 4
  %2497 = sext i32 %2496 to i64
  %2498 = getelementptr inbounds %struct.object, %struct.object* %2495, i64 0, i32 2, i64 %2497
  %2499 = load double, double* %2498, align 8
  %2500 = fsub double %2494, %2499
  %2501 = sext i32 %2496 to i64
  %2502 = getelementptr inbounds %struct.object, %struct.object* %2495, i64 0, i32 6, i64 %2501
  %2503 = load double, double* %2502, align 8
  %2504 = fdiv double %2500, %2503
  %2505 = fmul double %2487, %2504
  %2506 = fadd double %2470, %2505
  %2507 = fcmp olt double %2506, 1.000000e+00
  br i1 %2507, label %2508, label %2809

; <label>:2508:                                   ; preds = %2448
  %2509 = load [2 x double]*, [2 x double]** %2, align 8
  %2510 = load i32, i32* %6, align 4
  %2511 = sext i32 %2510 to i64
  %2512 = load i32, i32* %12, align 4
  %2513 = sub nsw i32 1, %2512
  %2514 = sext i32 %2513 to i64
  %2515 = getelementptr inbounds [2 x double], [2 x double]* %2509, i64 %2511, i64 %2514
  %2516 = load double, double* %2515, align 8
  %2517 = load %struct.object*, %struct.object** %15, align 8
  %2518 = load i32, i32* %6, align 4
  %2519 = sext i32 %2518 to i64
  %2520 = getelementptr inbounds %struct.object, %struct.object* %2517, i64 0, i32 2, i64 %2519
  %2521 = load double, double* %2520, align 8
  %2522 = fsub double %2516, %2521
  %2523 = sext i32 %2518 to i64
  %2524 = getelementptr inbounds %struct.object, %struct.object* %2517, i64 0, i32 6, i64 %2523
  %2525 = load double, double* %2524, align 8
  %2526 = fdiv double %2522, %2525
  %2527 = load [2 x double]*, [2 x double]** %2, align 8
  %2528 = load i32, i32* %6, align 4
  %2529 = sext i32 %2528 to i64
  %2530 = load i32, i32* %12, align 4
  %2531 = sub nsw i32 1, %2530
  %2532 = sext i32 %2531 to i64
  %2533 = getelementptr inbounds [2 x double], [2 x double]* %2527, i64 %2529, i64 %2532
  %2534 = load double, double* %2533, align 8
  %2535 = load %struct.object*, %struct.object** %15, align 8
  %2536 = load i32, i32* %6, align 4
  %2537 = sext i32 %2536 to i64
  %2538 = getelementptr inbounds %struct.object, %struct.object* %2535, i64 0, i32 2, i64 %2537
  %2539 = load double, double* %2538, align 8
  %2540 = fsub double %2534, %2539
  %2541 = sext i32 %2536 to i64
  %2542 = getelementptr inbounds %struct.object, %struct.object* %2535, i64 0, i32 6, i64 %2541
  %2543 = load double, double* %2542, align 8
  %2544 = fdiv double %2540, %2543
  %2545 = fmul double %2526, %2544
  %2546 = load [2 x double]*, [2 x double]** %2, align 8
  %2547 = load i32, i32* %7, align 4
  %2548 = sext i32 %2547 to i64
  %2549 = load i32, i32* %14, align 4
  %2550 = sub nsw i32 1, %2549
  %2551 = sext i32 %2550 to i64
  %2552 = getelementptr inbounds [2 x double], [2 x double]* %2546, i64 %2548, i64 %2551
  %2553 = load double, double* %2552, align 8
  %2554 = load %struct.object*, %struct.object** %15, align 8
  %2555 = load i32, i32* %7, align 4
  %2556 = sext i32 %2555 to i64
  %2557 = getelementptr inbounds %struct.object, %struct.object* %2554, i64 0, i32 2, i64 %2556
  %2558 = load double, double* %2557, align 8
  %2559 = fsub double %2553, %2558
  %2560 = sext i32 %2555 to i64
  %2561 = getelementptr inbounds %struct.object, %struct.object* %2554, i64 0, i32 6, i64 %2560
  %2562 = load double, double* %2561, align 8
  %2563 = fdiv double %2559, %2562
  %2564 = load [2 x double]*, [2 x double]** %2, align 8
  %2565 = load i32, i32* %7, align 4
  %2566 = sext i32 %2565 to i64
  %2567 = load i32, i32* %14, align 4
  %2568 = sub nsw i32 1, %2567
  %2569 = sext i32 %2568 to i64
  %2570 = getelementptr inbounds [2 x double], [2 x double]* %2564, i64 %2566, i64 %2569
  %2571 = load double, double* %2570, align 8
  %2572 = load %struct.object*, %struct.object** %15, align 8
  %2573 = load i32, i32* %7, align 4
  %2574 = sext i32 %2573 to i64
  %2575 = getelementptr inbounds %struct.object, %struct.object* %2572, i64 0, i32 2, i64 %2574
  %2576 = load double, double* %2575, align 8
  %2577 = fsub double %2571, %2576
  %2578 = sext i32 %2573 to i64
  %2579 = getelementptr inbounds %struct.object, %struct.object* %2572, i64 0, i32 6, i64 %2578
  %2580 = load double, double* %2579, align 8
  %2581 = fdiv double %2577, %2580
  %2582 = fmul double %2563, %2581
  %2583 = fadd double %2545, %2582
  %2584 = fcmp ogt double %2583, 1.000000e+00
  br i1 %2584, label %2585, label %2809

; <label>:2585:                                   ; preds = %2508
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2586:                                   ; preds = %1887
  %2587 = load %struct.object*, %struct.object** %15, align 8
  %2588 = getelementptr inbounds %struct.object, %struct.object* %2587, i64 0, i32 0
  %2589 = load i32, i32* %2588, align 8
  %2590 = icmp eq i32 %2589, 21
  br i1 %2590, label %2601, label %2591

; <label>:2591:                                   ; preds = %2586
  %2592 = load %struct.object*, %struct.object** %15, align 8
  %2593 = getelementptr inbounds %struct.object, %struct.object* %2592, i64 0, i32 0
  %2594 = load i32, i32* %2593, align 8
  %2595 = icmp eq i32 %2594, 23
  br i1 %2595, label %2601, label %2596

; <label>:2596:                                   ; preds = %2591
  %2597 = load %struct.object*, %struct.object** %15, align 8
  %2598 = getelementptr inbounds %struct.object, %struct.object* %2597, i64 0, i32 0
  %2599 = load i32, i32* %2598, align 8
  %2600 = icmp eq i32 %2599, 25
  br i1 %2600, label %2601, label %2804

; <label>:2601:                                   ; preds = %2596, %2591, %2586
  %2602 = load %struct.object*, %struct.object** %15, align 8
  %2603 = getelementptr inbounds %struct.object, %struct.object* %2602, i64 0, i32 0
  %2604 = load i32, i32* %2603, align 8
  %2605 = icmp eq i32 %2604, 21
  br i1 %2605, label %2611, label %2606

; <label>:2606:                                   ; preds = %2601
  %2607 = load %struct.object*, %struct.object** %15, align 8
  %2608 = getelementptr inbounds %struct.object, %struct.object* %2607, i64 0, i32 0
  %2609 = load i32, i32* %2608, align 8
  %2610 = icmp eq i32 %2609, 23
  %.38 = select i1 %2610, i32 1, i32 2
  %.39 = select i1 %2610, i32 2, i32 0
  %.40 = select i1 %2610, i32 0, i32 1
  br label %2611

; <label>:2611:                                   ; preds = %2601, %2606
  %storemerge25 = phi i32 [ %.38, %2606 ], [ 0, %2601 ]
  %storemerge4 = phi i32 [ %.39, %2606 ], [ 1, %2601 ]
  %storemerge2 = phi i32 [ %.40, %2606 ], [ 2, %2601 ]
  store i32 %storemerge25, i32* %5, align 4
  store i32 %storemerge4, i32* %6, align 4
  store i32 %storemerge2, i32* %7, align 4
  %2612 = load [2 x double]*, [2 x double]** %2, align 8
  %2613 = sext i32 %storemerge25 to i64
  %2614 = getelementptr inbounds [2 x double], [2 x double]* %2612, i64 %2613, i64 1
  %2615 = load double, double* %2614, align 8
  %2616 = load %struct.object*, %struct.object** %15, align 8
  %2617 = load i32, i32* %5, align 4
  %2618 = sext i32 %2617 to i64
  %2619 = getelementptr inbounds %struct.object, %struct.object* %2616, i64 0, i32 2, i64 %2618
  %2620 = load double, double* %2619, align 8
  %2621 = sext i32 %2617 to i64
  %2622 = getelementptr inbounds %struct.object, %struct.object* %2616, i64 0, i32 6, i64 %2621
  %2623 = load double, double* %2622, align 8
  %2624 = fsub double %2620, %2623
  %2625 = fcmp ogt double %2615, %2624
  br i1 %2625, label %2626, label %2809

; <label>:2626:                                   ; preds = %2611
  %2627 = load [2 x double]*, [2 x double]** %2, align 8
  %2628 = load i32, i32* %5, align 4
  %2629 = sext i32 %2628 to i64
  %2630 = getelementptr inbounds [2 x double], [2 x double]* %2627, i64 %2629, i64 0
  %2631 = load double, double* %2630, align 8
  %2632 = load %struct.object*, %struct.object** %15, align 8
  %2633 = sext i32 %2628 to i64
  %2634 = getelementptr inbounds %struct.object, %struct.object* %2632, i64 0, i32 2, i64 %2633
  %2635 = load double, double* %2634, align 8
  %2636 = sext i32 %2628 to i64
  %2637 = getelementptr inbounds %struct.object, %struct.object* %2632, i64 0, i32 6, i64 %2636
  %2638 = load double, double* %2637, align 8
  %2639 = fadd double %2635, %2638
  %2640 = fcmp olt double %2631, %2639
  br i1 %2640, label %2641, label %2809

; <label>:2641:                                   ; preds = %2626
  store i32 0, i32* %13, align 4
  store i32 0, i32* %11, align 4
  %2642 = load %struct.object*, %struct.object** %15, align 8
  %2643 = load i32, i32* %6, align 4
  %2644 = sext i32 %2643 to i64
  %2645 = getelementptr inbounds %struct.object, %struct.object* %2642, i64 0, i32 2, i64 %2644
  %2646 = load double, double* %2645, align 8
  %2647 = load [2 x double]*, [2 x double]** %2, align 8
  %2648 = sext i32 %2643 to i64
  %2649 = getelementptr inbounds [2 x double], [2 x double]* %2647, i64 %2648, i64 0
  %2650 = load double, double* %2649, align 8
  %2651 = fcmp olt double %2646, %2650
  br i1 %2651, label %2652, label %2653

; <label>:2652:                                   ; preds = %2641
  store i32 0, i32* %12, align 4
  br label %2666

; <label>:2653:                                   ; preds = %2641
  %2654 = load %struct.object*, %struct.object** %15, align 8
  %2655 = load i32, i32* %6, align 4
  %2656 = sext i32 %2655 to i64
  %2657 = getelementptr inbounds %struct.object, %struct.object* %2654, i64 0, i32 2, i64 %2656
  %2658 = load double, double* %2657, align 8
  %2659 = load [2 x double]*, [2 x double]** %2, align 8
  %2660 = sext i32 %2655 to i64
  %2661 = getelementptr inbounds [2 x double], [2 x double]* %2659, i64 %2660, i64 1
  %2662 = load double, double* %2661, align 8
  %2663 = fcmp ogt double %2658, %2662
  br i1 %2663, label %2664, label %2665

; <label>:2664:                                   ; preds = %2653
  store i32 1, i32* %12, align 4
  br label %2666

; <label>:2665:                                   ; preds = %2653
  store i32 1, i32* %11, align 4
  br label %2666

; <label>:2666:                                   ; preds = %2664, %2665, %2652
  %2667 = load %struct.object*, %struct.object** %15, align 8
  %2668 = load i32, i32* %7, align 4
  %2669 = sext i32 %2668 to i64
  %2670 = getelementptr inbounds %struct.object, %struct.object* %2667, i64 0, i32 2, i64 %2669
  %2671 = load double, double* %2670, align 8
  %2672 = load [2 x double]*, [2 x double]** %2, align 8
  %2673 = sext i32 %2668 to i64
  %2674 = getelementptr inbounds [2 x double], [2 x double]* %2672, i64 %2673, i64 0
  %2675 = load double, double* %2674, align 8
  %2676 = fcmp olt double %2671, %2675
  br i1 %2676, label %2677, label %2678

; <label>:2677:                                   ; preds = %2666
  store i32 0, i32* %14, align 4
  br label %2691

; <label>:2678:                                   ; preds = %2666
  %2679 = load %struct.object*, %struct.object** %15, align 8
  %2680 = load i32, i32* %7, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = getelementptr inbounds %struct.object, %struct.object* %2679, i64 0, i32 2, i64 %2681
  %2683 = load double, double* %2682, align 8
  %2684 = load [2 x double]*, [2 x double]** %2, align 8
  %2685 = sext i32 %2680 to i64
  %2686 = getelementptr inbounds [2 x double], [2 x double]* %2684, i64 %2685, i64 1
  %2687 = load double, double* %2686, align 8
  %2688 = fcmp ogt double %2683, %2687
  br i1 %2688, label %2689, label %2690

; <label>:2689:                                   ; preds = %2678
  store i32 1, i32* %14, align 4
  br label %2691

; <label>:2690:                                   ; preds = %2678
  store i32 1, i32* %13, align 4
  br label %2691

; <label>:2691:                                   ; preds = %2689, %2690, %2677
  %2692 = load i32, i32* %11, align 4
  %2693 = icmp eq i32 %2692, 0
  %2694 = load i32, i32* %13, align 4
  %2695 = icmp eq i32 %2694, 0
  br i1 %2693, label %2720, label %2696

; <label>:2696:                                   ; preds = %2691
  br i1 %2695, label %2698, label %2697

; <label>:2697:                                   ; preds = %2696
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2698:                                   ; preds = %2696
  %2699 = load [2 x double]*, [2 x double]** %2, align 8
  %2700 = load i32, i32* %7, align 4
  %2701 = sext i32 %2700 to i64
  %2702 = load i32, i32* %14, align 4
  %2703 = sext i32 %2702 to i64
  %2704 = getelementptr inbounds [2 x double], [2 x double]* %2699, i64 %2701, i64 %2703
  %2705 = load double, double* %2704, align 8
  %2706 = load %struct.object*, %struct.object** %15, align 8
  %2707 = load i32, i32* %7, align 4
  %2708 = sext i32 %2707 to i64
  %2709 = getelementptr inbounds %struct.object, %struct.object* %2706, i64 0, i32 2, i64 %2708
  %2710 = load double, double* %2709, align 8
  %2711 = fsub double %2705, %2710
  %2712 = call double @llvm.fabs.f64(double %2711)
  %2713 = load %struct.object*, %struct.object** %15, align 8
  %2714 = load i32, i32* %7, align 4
  %2715 = sext i32 %2714 to i64
  %2716 = getelementptr inbounds %struct.object, %struct.object* %2713, i64 0, i32 6, i64 %2715
  %2717 = load double, double* %2716, align 8
  %2718 = fcmp olt double %2712, %2717
  br i1 %2718, label %2719, label %2809

; <label>:2719:                                   ; preds = %2698
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2720:                                   ; preds = %2691
  %2721 = load [2 x double]*, [2 x double]** %2, align 8
  %2722 = load i32, i32* %6, align 4
  %2723 = sext i32 %2722 to i64
  %2724 = load i32, i32* %12, align 4
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds [2 x double], [2 x double]* %2721, i64 %2723, i64 %2725
  %2727 = load double, double* %2726, align 8
  %2728 = load %struct.object*, %struct.object** %15, align 8
  %2729 = load i32, i32* %6, align 4
  %2730 = sext i32 %2729 to i64
  %2731 = getelementptr inbounds %struct.object, %struct.object* %2728, i64 0, i32 2, i64 %2730
  %2732 = load double, double* %2731, align 8
  %2733 = fsub double %2727, %2732
  br i1 %2695, label %2743, label %2734

; <label>:2734:                                   ; preds = %2720
  %2735 = call double @llvm.fabs.f64(double %2733)
  %2736 = load %struct.object*, %struct.object** %15, align 8
  %2737 = load i32, i32* %6, align 4
  %2738 = sext i32 %2737 to i64
  %2739 = getelementptr inbounds %struct.object, %struct.object* %2736, i64 0, i32 6, i64 %2738
  %2740 = load double, double* %2739, align 8
  %2741 = fcmp olt double %2735, %2740
  br i1 %2741, label %2742, label %2809

; <label>:2742:                                   ; preds = %2734
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2743:                                   ; preds = %2720
  %2744 = sext i32 %2729 to i64
  %2745 = getelementptr inbounds %struct.object, %struct.object* %2728, i64 0, i32 6, i64 %2744
  %2746 = load double, double* %2745, align 8
  %2747 = fdiv double %2733, %2746
  %2748 = load [2 x double]*, [2 x double]** %2, align 8
  %2749 = load i32, i32* %6, align 4
  %2750 = sext i32 %2749 to i64
  %2751 = load i32, i32* %12, align 4
  %2752 = sext i32 %2751 to i64
  %2753 = getelementptr inbounds [2 x double], [2 x double]* %2748, i64 %2750, i64 %2752
  %2754 = load double, double* %2753, align 8
  %2755 = load %struct.object*, %struct.object** %15, align 8
  %2756 = load i32, i32* %6, align 4
  %2757 = sext i32 %2756 to i64
  %2758 = getelementptr inbounds %struct.object, %struct.object* %2755, i64 0, i32 2, i64 %2757
  %2759 = load double, double* %2758, align 8
  %2760 = fsub double %2754, %2759
  %2761 = sext i32 %2756 to i64
  %2762 = getelementptr inbounds %struct.object, %struct.object* %2755, i64 0, i32 6, i64 %2761
  %2763 = load double, double* %2762, align 8
  %2764 = fdiv double %2760, %2763
  %2765 = fmul double %2747, %2764
  %2766 = load [2 x double]*, [2 x double]** %2, align 8
  %2767 = load i32, i32* %7, align 4
  %2768 = sext i32 %2767 to i64
  %2769 = load i32, i32* %14, align 4
  %2770 = sext i32 %2769 to i64
  %2771 = getelementptr inbounds [2 x double], [2 x double]* %2766, i64 %2768, i64 %2770
  %2772 = load double, double* %2771, align 8
  %2773 = load %struct.object*, %struct.object** %15, align 8
  %2774 = load i32, i32* %7, align 4
  %2775 = sext i32 %2774 to i64
  %2776 = getelementptr inbounds %struct.object, %struct.object* %2773, i64 0, i32 2, i64 %2775
  %2777 = load double, double* %2776, align 8
  %2778 = fsub double %2772, %2777
  %2779 = sext i32 %2774 to i64
  %2780 = getelementptr inbounds %struct.object, %struct.object* %2773, i64 0, i32 6, i64 %2779
  %2781 = load double, double* %2780, align 8
  %2782 = fdiv double %2778, %2781
  %2783 = load [2 x double]*, [2 x double]** %2, align 8
  %2784 = load i32, i32* %7, align 4
  %2785 = sext i32 %2784 to i64
  %2786 = load i32, i32* %14, align 4
  %2787 = sext i32 %2786 to i64
  %2788 = getelementptr inbounds [2 x double], [2 x double]* %2783, i64 %2785, i64 %2787
  %2789 = load double, double* %2788, align 8
  %2790 = load %struct.object*, %struct.object** %15, align 8
  %2791 = load i32, i32* %7, align 4
  %2792 = sext i32 %2791 to i64
  %2793 = getelementptr inbounds %struct.object, %struct.object* %2790, i64 0, i32 2, i64 %2792
  %2794 = load double, double* %2793, align 8
  %2795 = fsub double %2789, %2794
  %2796 = sext i32 %2791 to i64
  %2797 = getelementptr inbounds %struct.object, %struct.object* %2790, i64 0, i32 6, i64 %2796
  %2798 = load double, double* %2797, align 8
  %2799 = fdiv double %2795, %2798
  %2800 = fmul double %2782, %2799
  %2801 = fadd double %2765, %2800
  %2802 = fcmp olt double %2801, 1.000000e+00
  br i1 %2802, label %2803, label %2809

; <label>:2803:                                   ; preds = %2743
  store i32 1, i32* %8, align 4
  br label %2809

; <label>:2804:                                   ; preds = %2596
  %2805 = load %struct.object*, %struct.object** %15, align 8
  %2806 = getelementptr inbounds %struct.object, %struct.object* %2805, i64 0, i32 0
  %2807 = load i32, i32* %2806, align 8
  %2808 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i64 0, i64 0), i32 %2807) #6
  br label %2809

; <label>:2809:                                   ; preds = %36, %31, %26, %19, %384, %373, %362, %351, %340, %329, %318, %1800, %1830, %1860, %1875, %1867, %1862, %1845, %1815, %1780, %2804, %2698, %2719, %2697, %2743, %2803, %2734, %2742, %2626, %2611, %1902, %1917, %2251, %2271, %2348, %2174, %2250, %2448, %2508, %2585, %2362, %2370, %2447, %2061, %2082, %2060, %2106, %2166, %2097, %2105, %1386, %1421, %1451, %1468, %1473, %1481, %1466, %1436, %1406, %46, %57, %223, %234, %245, %212, %201, %290, %301, %312, %257, %246, %112, %123, %134, %145, %156
  %2810 = load i32, i32* %3, align 4
  %2811 = add nsw i32 %2810, 1
  br label %16

; <label>:2812:                                   ; preds = %16
  %2813 = load i32, i32* %8, align 4
  ret i32 %2813
}

; Function Attrs: noinline nounwind uwtable
define void @plot(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [20 x i8], align 16
  %8 = alloca %struct.block*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  store i32 %0, i32* %2, align 4
  %10 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  store i8 112, i8* %10, align 16
  %11 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 1
  store i8 108, i8* %11, align 1
  %12 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 2
  store i8 111, i8* %12, align 2
  %13 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 3
  store i8 116, i8* %13, align 1
  %14 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 4
  store i8 46, i8* %14, align 4
  store i32 1, i32* %5, align 4
  store i32 0, i32* %4, align 4
  %15 = load i32, i32* @num_tsteps, align 4
  %.promoted9 = load i32, i32* %5, align 1
  %.promoted11 = load i32, i32* %4, align 1
  br label %16

; <label>:16:                                     ; preds = %20, %1
  %17 = phi i32 [ %21, %20 ], [ %.promoted11, %1 ]
  %18 = phi i32 [ %22, %20 ], [ %.promoted9, %1 ]
  %19 = icmp slt i32 %18, %15
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %16
  %21 = add nsw i32 %17, 1
  %22 = mul nsw i32 %18, 10
  br label %16

; <label>:23:                                     ; preds = %16
  store i32 %18, i32* %5, align 1
  store i32 %17, i32* %4, align 1
  store i32 1, i32* %5, align 4
  store i32 0, i32* %3, align 4
  %24 = load i32, i32* %4, align 4
  %25 = load i32, i32* %2, align 4
  %26 = load i32, i32* %4, align 4
  %27 = add nsw i32 %26, 5
  %.promoted5 = load i32, i32* %3, align 1
  %.promoted7 = load i32, i32* %5, align 1
  br label %28

; <label>:28:                                     ; preds = %32, %23
  %29 = phi i32 [ %41, %32 ], [ %.promoted7, %23 ]
  %30 = phi i32 [ %40, %32 ], [ %.promoted5, %23 ]
  %31 = icmp sgt i32 %30, %24
  br i1 %31, label %42, label %32

; <label>:32:                                     ; preds = %28
  %33 = sdiv i32 %25, %29
  %34 = srem i32 %33, 10
  %35 = trunc i32 %34 to i8
  %36 = add i8 %35, 48
  %37 = sub nsw i32 %27, %30
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %38
  store i8 %36, i8* %39, align 1
  %40 = add nsw i32 %30, 1
  %41 = mul nsw i32 %29, 10
  br label %28

; <label>:42:                                     ; preds = %28
  store i32 %30, i32* %3, align 1
  store i32 %29, i32* %5, align 1
  %43 = load i32, i32* %4, align 4
  %44 = add nsw i32 %43, 6
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 %45
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i64 0, i64 0
  %48 = call %struct._IO_FILE* @fopen(i8* nonnull %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #6
  store %struct._IO_FILE* %48, %struct._IO_FILE** %9, align 8
  store i32 0, i32* %6, align 4
  %49 = load i32, i32* @num_refine, align 4
  %50 = load i32*, i32** @num_blocks, align 8
  %.promoted3 = load i32, i32* %6, align 1
  br label %51

; <label>:51:                                     ; preds = %54, %42
  %52 = phi i32 [ %.promoted3, %42 ], [ %58, %54 ]
  %storemerge = phi i32 [ 0, %42 ], [ %59, %54 ]
  %53 = icmp sgt i32 %storemerge, %49
  br i1 %53, label %60, label %54

; <label>:54:                                     ; preds = %51
  %55 = sext i32 %storemerge to i64
  %56 = getelementptr inbounds i32, i32* %50, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %52, %57
  %59 = add nsw i32 %storemerge, 1
  br label %51

; <label>:60:                                     ; preds = %51
  store i32 %storemerge, i32* %3, align 4
  store i32 %52, i32* %6, align 1
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %62 = load i32, i32* %6, align 4
  %63 = load i32, i32* @num_refine, align 4
  %64 = load i32, i32* @npx, align 4
  %65 = load i32, i32* @init_block_x, align 4
  %66 = mul nsw i32 %64, %65
  %67 = load i32, i32* @npy, align 4
  %68 = load i32, i32* @init_block_y, align 4
  %69 = mul nsw i32 %67, %68
  %70 = load i32, i32* @npz, align 4
  %71 = load i32, i32* @init_block_z, align 4
  %72 = mul nsw i32 %70, %71
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.87, i64 0, i64 0), i32 %62, i32 %63, i32 %66, i32 %69, i32 %72) #6
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %75 = load i32, i32* @num_active, align 4
  %76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.88, i64 0, i64 0), i32 %75) #6
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %.promoted = load %struct.block*, %struct.block** %8, align 1
  br label %78

; <label>:78:                                     ; preds = %99, %60
  %79 = phi %struct.block* [ %.promoted, %60 ], [ %85, %99 ]
  %storemerge1 = phi i32 [ 0, %60 ], [ %100, %99 ]
  %80 = load i32, i32* @max_active_block, align 4
  %81 = icmp slt i32 %storemerge1, %80
  br i1 %81, label %82, label %101

; <label>:82:                                     ; preds = %78
  %83 = load %struct.block*, %struct.block** @blocks, align 8
  %84 = sext i32 %storemerge1 to i64
  %85 = getelementptr inbounds %struct.block, %struct.block* %83, i64 %84
  %86 = getelementptr inbounds %struct.block, %struct.block* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %89, label %99

; <label>:89:                                     ; preds = %82
  %90 = getelementptr inbounds %struct.block, %struct.block* %85, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %struct.block, %struct.block* %85, i64 0, i32 10, i64 0
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %struct.block, %struct.block* %85, i64 0, i32 10, i64 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %struct.block, %struct.block* %85, i64 0, i32 10, i64 2
  %97 = load i32, i32* %96, align 4
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.89, i64 0, i64 0), i32 %91, i32 %93, i32 %95, i32 %97) #6
  br label %99

; <label>:99:                                     ; preds = %82, %89
  %100 = add nsw i32 %storemerge1, 1
  br label %78

; <label>:101:                                    ; preds = %78
  store i32 %storemerge1, i32* %5, align 4
  store %struct.block* %79, %struct.block** %8, align 1
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %103 = call i32 @fclose(%struct._IO_FILE* %102) #6
  ret void
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define void @profile() #0 {
  %1 = alloca i32, align 4
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca %struct.object*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0), i8** %8, align 8
  call void @calculate_results()
  %10 = load i64, i64* @total_blocks, align 8
  %11 = sitofp i64 %10 to double
  %12 = load i32, i32* @x_block_size, align 4
  %13 = sitofp i32 %12 to double
  %14 = fmul double %11, %13
  %15 = load i32, i32* @y_block_size, align 4
  %16 = sitofp i32 %15 to double
  %17 = fmul double %14, %16
  %18 = load i32, i32* @z_block_size, align 4
  %19 = sitofp i32 %18 to double
  %20 = fmul double %17, %19
  store double %20, double* %6, align 8
  %21 = load i32, i32* @stencil, align 4
  %22 = icmp eq i32 %21, 7
  %23 = load double, double* %6, align 8
  %24 = fmul double %23, 2.600000e+01
  %25 = fmul double %23, 6.000000e+00
  %storemerge = select i1 %22, double %25, double %24
  store double %storemerge, double* %5, align 8
  %26 = load double, double* %6, align 8
  %27 = fadd double %26, %storemerge
  store double %27, double* %4, align 8
  %28 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %29 = fmul double %28, 1.024000e+03
  %30 = fmul double %29, 1.024000e+03
  %31 = fmul double %30, 1.024000e+03
  %32 = fdiv double %27, %31
  store double %32, double* %2, align 8
  %33 = load i32, i32* @num_pes, align 4
  %34 = sitofp i32 %33 to double
  %35 = fdiv double %32, %34
  store double %35, double* %3, align 8
  %36 = load i32, i32* @my_pe, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %1407

; <label>:38:                                     ; preds = %0
  %39 = load i32, i32* @report_perf, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %362, label %42

; <label>:42:                                     ; preds = %38
  %43 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.93, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.94, i64 0, i64 0)) #6
  store %struct._IO_FILE* %43, %struct._IO_FILE** %9, align 8
  %44 = call i64 @fwrite(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.95, i64 0, i64 0), i64 14, i64 1, %struct._IO_FILE* %43)
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %46 = load i8*, i8** %8, align 8
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.96, i64 0, i64 0), i8* %46) #6
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %49 = load i32, i32* @num_pes, align 4
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.97, i64 0, i64 0), i32 %49) #6
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %52 = load i32, i32* @init_block_x, align 4
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.98, i64 0, i64 0), i32 %52) #6
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %55 = load i32, i32* @init_block_y, align 4
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.99, i64 0, i64 0), i32 %55) #6
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %58 = load i32, i32* @init_block_z, align 4
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.100, i64 0, i64 0), i32 %58) #6
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %61 = load i32, i32* @x_block_size, align 4
  %62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.101, i64 0, i64 0), i32 %61) #6
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %64 = load i32, i32* @y_block_size, align 4
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.102, i64 0, i64 0), i32 %64) #6
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %67 = load i32, i32* @z_block_size, align 4
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.103, i64 0, i64 0), i32 %67) #6
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %70 = load i32, i32* @permute, align 4
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.104, i64 0, i64 0), i32 %70) #6
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %73 = load i32, i32* @max_num_blocks, align 4
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13.105, i64 0, i64 0), i32 %73) #6
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %76 = load i32, i32* @code, align 4
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.106, i64 0, i64 0), i32 %76) #6
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %79 = load i32, i32* @num_refine, align 4
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.107, i64 0, i64 0), i32 %79) #6
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %82 = load i32, i32* @block_change, align 4
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16.108, i64 0, i64 0), i32 %82) #6
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %85 = load i32, i32* @refine_ghost, align 4
  %86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17.109, i64 0, i64 0), i32 %85) #6
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %88 = load i32, i32* @uniform_refine, align 4
  %89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.110, i64 0, i64 0), i32 %88) #6
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %91 = load i32, i32* @num_objects, align 4
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19.111, i64 0, i64 0), i32 %91) #6
  br label %93

; <label>:93:                                     ; preds = %96, %42
  %storemerge12 = phi i32 [ 0, %42 ], [ %184, %96 ]
  store i32 %storemerge12, i32* %1, align 4
  %94 = load i32, i32* @num_objects, align 4
  %95 = icmp slt i32 %storemerge12, %94
  br i1 %95, label %96, label %185

; <label>:96:                                     ; preds = %93
  %97 = load %struct.object*, %struct.object** @objects, align 8
  %98 = load i32, i32* %1, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.object, %struct.object* %97, i64 %99
  store %struct.object* %100, %struct.object** %7, align 8
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %102 = getelementptr inbounds %struct.object, %struct.object* %100, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20.112, i64 0, i64 0), i32 %98, i32 %103) #6
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %106 = load i32, i32* %1, align 4
  %107 = load %struct.object*, %struct.object** %7, align 8
  %108 = getelementptr inbounds %struct.object, %struct.object* %107, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21.113, i64 0, i64 0), i32 %106, i32 %109) #6
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %112 = load i32, i32* %1, align 4
  %113 = load %struct.object*, %struct.object** %7, align 8
  %114 = getelementptr inbounds %struct.object, %struct.object* %113, i64 0, i32 2, i64 0
  %115 = load double, double* %114, align 8
  %116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22.114, i64 0, i64 0), i32 %112, double %115) #6
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %118 = load i32, i32* %1, align 4
  %119 = load %struct.object*, %struct.object** %7, align 8
  %120 = getelementptr inbounds %struct.object, %struct.object* %119, i64 0, i32 2, i64 1
  %121 = load double, double* %120, align 8
  %122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23.115, i64 0, i64 0), i32 %118, double %121) #6
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %124 = load i32, i32* %1, align 4
  %125 = load %struct.object*, %struct.object** %7, align 8
  %126 = getelementptr inbounds %struct.object, %struct.object* %125, i64 0, i32 2, i64 2
  %127 = load double, double* %126, align 8
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %123, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24.116, i64 0, i64 0), i32 %124, double %127) #6
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %130 = load i32, i32* %1, align 4
  %131 = load %struct.object*, %struct.object** %7, align 8
  %132 = getelementptr inbounds %struct.object, %struct.object* %131, i64 0, i32 4, i64 0
  %133 = load double, double* %132, align 8
  %134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25.117, i64 0, i64 0), i32 %130, double %133) #6
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %136 = load i32, i32* %1, align 4
  %137 = load %struct.object*, %struct.object** %7, align 8
  %138 = getelementptr inbounds %struct.object, %struct.object* %137, i64 0, i32 4, i64 1
  %139 = load double, double* %138, align 8
  %140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26.118, i64 0, i64 0), i32 %136, double %139) #6
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %142 = load i32, i32* %1, align 4
  %143 = load %struct.object*, %struct.object** %7, align 8
  %144 = getelementptr inbounds %struct.object, %struct.object* %143, i64 0, i32 4, i64 2
  %145 = load double, double* %144, align 8
  %146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27.119, i64 0, i64 0), i32 %142, double %145) #6
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %148 = load i32, i32* %1, align 4
  %149 = load %struct.object*, %struct.object** %7, align 8
  %150 = getelementptr inbounds %struct.object, %struct.object* %149, i64 0, i32 6, i64 0
  %151 = load double, double* %150, align 8
  %152 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.120, i64 0, i64 0), i32 %148, double %151) #6
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %154 = load i32, i32* %1, align 4
  %155 = load %struct.object*, %struct.object** %7, align 8
  %156 = getelementptr inbounds %struct.object, %struct.object* %155, i64 0, i32 6, i64 1
  %157 = load double, double* %156, align 8
  %158 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.121, i64 0, i64 0), i32 %154, double %157) #6
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %160 = load i32, i32* %1, align 4
  %161 = load %struct.object*, %struct.object** %7, align 8
  %162 = getelementptr inbounds %struct.object, %struct.object* %161, i64 0, i32 6, i64 2
  %163 = load double, double* %162, align 8
  %164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %159, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30.122, i64 0, i64 0), i32 %160, double %163) #6
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %166 = load i32, i32* %1, align 4
  %167 = load %struct.object*, %struct.object** %7, align 8
  %168 = getelementptr inbounds %struct.object, %struct.object* %167, i64 0, i32 8, i64 0
  %169 = load double, double* %168, align 8
  %170 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31.123, i64 0, i64 0), i32 %166, double %169) #6
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %172 = load i32, i32* %1, align 4
  %173 = load %struct.object*, %struct.object** %7, align 8
  %174 = getelementptr inbounds %struct.object, %struct.object* %173, i64 0, i32 8, i64 1
  %175 = load double, double* %174, align 8
  %176 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32.124, i64 0, i64 0), i32 %172, double %175) #6
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %178 = load i32, i32* %1, align 4
  %179 = load %struct.object*, %struct.object** %7, align 8
  %180 = getelementptr inbounds %struct.object, %struct.object* %179, i64 0, i32 8, i64 2
  %181 = load double, double* %180, align 8
  %182 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33.125, i64 0, i64 0), i32 %178, double %181) #6
  %183 = load i32, i32* %1, align 4
  %184 = add nsw i32 %183, 1
  br label %93

; <label>:185:                                    ; preds = %93
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %187 = load i32, i32* @num_tsteps, align 4
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %186, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34.126, i64 0, i64 0), i32 %187) #6
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %190 = load i32, i32* @stages_per_ts, align 4
  %191 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %189, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.127, i64 0, i64 0), i32 %190) #6
  %192 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %193 = load i32, i32* @checksum_freq, align 4
  %194 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %192, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36.128, i64 0, i64 0), i32 %193) #6
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %196 = load i32, i32* @refine_freq, align 4
  %197 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %195, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37.129, i64 0, i64 0), i32 %196) #6
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %199 = load i32, i32* @plot_freq, align 4
  %200 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %198, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38.130, i64 0, i64 0), i32 %199) #6
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %202 = load i32, i32* @num_vars, align 4
  %203 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %201, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39.131, i64 0, i64 0), i32 %202) #6
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %205 = load i32, i32* @stencil, align 4
  %206 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %204, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40.132, i64 0, i64 0), i32 %205) #6
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %208 = load i32, i32* @comm_vars, align 4
  %209 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %207, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41.133, i64 0, i64 0), i32 %208) #6
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %211 = load i32, i32* @error_tol, align 4
  %212 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %210, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42.134, i64 0, i64 0), i32 %211) #6
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %214 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 0), align 16
  %215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %213, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.135, i64 0, i64 0), double %214) #6
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %217 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 111), align 8
  %218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %216, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44.136, i64 0, i64 0), double %217) #6
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %220 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %221 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %219, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45.137, i64 0, i64 0), double %220) #6
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %223 = load double, double* %2, align 8
  %224 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %222, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46.138, i64 0, i64 0), double %223) #6
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %226 = load double, double* %3, align 8
  %227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %225, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47.139, i64 0, i64 0), double %226) #6
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %229 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 37), align 8
  %230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %228, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48.140, i64 0, i64 0), double %229) #6
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %232 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 5), align 8
  %233 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %231, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49.141, i64 0, i64 0), double %232) #6
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %235 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 6), align 16
  %236 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %234, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50.142, i64 0, i64 0), double %235) #6
  %237 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %238 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 7), align 8
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %237, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51.143, i64 0, i64 0), double %238) #6
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %241 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 75), align 8
  %242 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %240, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52.144, i64 0, i64 0), double %241) #6
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %244 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 76), align 16
  %245 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53.145, i64 0, i64 0), double %244) #6
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %247 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 74), align 16
  %248 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %246, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.54.146, i64 0, i64 0), double %247) #6
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %250 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 10), align 16
  %251 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %249, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55.147, i64 0, i64 0), double %250) #6
  %252 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %253 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 14), align 16
  %254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %252, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56.148, i64 0, i64 0), double %253) #6
  %255 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %256 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 15), align 8
  %257 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %255, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57.149, i64 0, i64 0), double %256) #6
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %259 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 16), align 16
  %260 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %258, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58.150, i64 0, i64 0), double %259) #6
  %261 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %262 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 84), align 16
  %263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %261, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59.151, i64 0, i64 0), double %262) #6
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %265 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 85), align 8
  %266 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %264, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60.152, i64 0, i64 0), double %265) #6
  %267 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %268 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 83), align 8
  %269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %267, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61.153, i64 0, i64 0), double %268) #6
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %271 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 19), align 8
  %272 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %270, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62.154, i64 0, i64 0), double %271) #6
  %273 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %274 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 23), align 8
  %275 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %273, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63.155, i64 0, i64 0), double %274) #6
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %277 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 24), align 16
  %278 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %276, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64.156, i64 0, i64 0), double %277) #6
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %280 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 25), align 8
  %281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %279, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65.157, i64 0, i64 0), double %280) #6
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %283 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 93), align 8
  %284 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66.158, i64 0, i64 0), double %283) #6
  %285 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %286 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 94), align 16
  %287 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %285, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67.159, i64 0, i64 0), double %286) #6
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %289 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 92), align 16
  %290 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %288, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68.160, i64 0, i64 0), double %289) #6
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %292 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 28), align 16
  %293 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %291, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.161, i64 0, i64 0), double %292) #6
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %295 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 32), align 16
  %296 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %294, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70.162, i64 0, i64 0), double %295) #6
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %298 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 33), align 8
  %299 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71.163, i64 0, i64 0), double %298) #6
  %300 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %301 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 34), align 16
  %302 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %300, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72.164, i64 0, i64 0), double %301) #6
  %303 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %304 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 102), align 16
  %305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %303, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.73.165, i64 0, i64 0), double %304) #6
  %306 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %307 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 103), align 8
  %308 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %306, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.74.166, i64 0, i64 0), double %307) #6
  %309 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %310 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 101), align 8
  %311 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %309, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75.167, i64 0, i64 0), double %310) #6
  %312 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %313 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 39), align 8
  %314 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %312, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76.168, i64 0, i64 0), double %313) #6
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %316 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 41), align 8
  %317 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %315, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.77.169, i64 0, i64 0), double %316) #6
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %319 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 42), align 16
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %318, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78.170, i64 0, i64 0), double %319) #6
  %321 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %322 = load i64, i64* @total_blocks, align 8
  %323 = sitofp i64 %322 to double
  %324 = load i32, i32* @num_tsteps, align 4
  %325 = load i32, i32* @stages_per_ts, align 4
  %326 = mul nsw i32 %324, %325
  %327 = sitofp i32 %326 to double
  %328 = fdiv double %323, %327
  %329 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %321, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79.171, i64 0, i64 0), double %328) #6
  %330 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %331 = load i32, i32* @nb_min, align 4
  %332 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %330, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80.172, i64 0, i64 0), i32 %331) #6
  %333 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %334 = load i32, i32* @nb_max, align 4
  %335 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %333, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.81.173, i64 0, i64 0), i32 %334) #6
  %336 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %337 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 104), align 16
  %338 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %336, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82.174, i64 0, i64 0), double %337) #6
  %339 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %340 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 105), align 8
  %341 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %339, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83.175, i64 0, i64 0), double %340) #6
  %342 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %343 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 43), align 8
  %344 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %342, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.84, i64 0, i64 0), double %343) #6
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %346 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 44), align 16
  %347 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %345, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.85, i64 0, i64 0), double %346) #6
  %348 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %349 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 46), align 16
  %350 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %348, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86.176, i64 0, i64 0), double %349) #6
  %351 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %352 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 47), align 8
  %353 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %351, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i64 0, i64 0), double %352) #6
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %355 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 45), align 8
  %356 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %354, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i64 0, i64 0), double %355) #6
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %358 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 67), align 8
  %359 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %357, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0), double %358) #6
  %360 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %361 = call i32 @fclose(%struct._IO_FILE* %360) #6
  br label %362

; <label>:362:                                    ; preds = %38, %185
  %363 = load i32, i32* @report_perf, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %1035, label %366

; <label>:366:                                    ; preds = %362
  %367 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.94, i64 0, i64 0)) #6
  store %struct._IO_FILE* %367, %struct._IO_FILE** %9, align 8
  %368 = call i64 @fwrite(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.91, i64 0, i64 0), i64 53, i64 1, %struct._IO_FILE* %367)
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %370 = call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92.177, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %369)
  %371 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %372 = load i8*, i8** %8, align 8
  %373 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %371, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0), i8* %372) #6
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %375 = call i64 @fwrite(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i64 0, i64 0), i64 21, i64 1, %struct._IO_FILE* %374)
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %377 = load i32, i32* @init_block_x, align 4
  %378 = load i32, i32* @init_block_y, align 4
  %379 = load i32, i32* @init_block_z, align 4
  %380 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %376, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i64 0, i64 0), i32 %377, i32 %378, i32 %379) #6
  %381 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %382 = load i32, i32* @x_block_size, align 4
  %383 = load i32, i32* @y_block_size, align 4
  %384 = load i32, i32* @z_block_size, align 4
  %385 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %381, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i32 %382, i32 %383, i32 %384) #6
  %386 = load i32, i32* @permute, align 4
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %391, label %388

; <label>:388:                                    ; preds = %366
  %389 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %390 = call i64 @fwrite(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i64 0, i64 0), i64 28, i64 1, %struct._IO_FILE* %389)
  br label %391

; <label>:391:                                    ; preds = %366, %388
  %392 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %393 = load i32, i32* @max_num_blocks, align 4
  %394 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %392, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i64 0, i64 0), i32 %393) #6
  %395 = load i32, i32* @target_active, align 4
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %401, label %397

; <label>:397:                                    ; preds = %391
  %398 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %399 = load i32, i32* @target_active, align 4
  %400 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %398, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i64 0, i64 0), i32 %399) #6
  br label %401

; <label>:401:                                    ; preds = %391, %397
  %402 = load i32, i32* @target_max, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %408, label %404

; <label>:404:                                    ; preds = %401
  %405 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %406 = load i32, i32* @target_max, align 4
  %407 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %405, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i64 0, i64 0), i32 %406) #6
  br label %408

; <label>:408:                                    ; preds = %401, %404
  %409 = load i32, i32* @target_min, align 4
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %415, label %411

; <label>:411:                                    ; preds = %408
  %412 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %413 = load i32, i32* @target_min, align 4
  %414 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %412, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.101, i64 0, i64 0), i32 %413) #6
  br label %415

; <label>:415:                                    ; preds = %408, %411
  %416 = load i32, i32* @code, align 4
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %422, label %418

; <label>:418:                                    ; preds = %415
  %419 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %420 = load i32, i32* @code, align 4
  %421 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %419, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0), i32 %420) #6
  br label %422

; <label>:422:                                    ; preds = %415, %418
  %423 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %424 = load i32, i32* @num_refine, align 4
  %425 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %423, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i32 %424) #6
  %426 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %427 = load i32, i32* @block_change, align 4
  %428 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %426, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.104, i64 0, i64 0), i32 %427) #6
  %429 = load i32, i32* @refine_ghost, align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %434, label %431

; <label>:431:                                    ; preds = %422
  %432 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %433 = call i64 @fwrite(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.105, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %432)
  br label %434

; <label>:434:                                    ; preds = %422, %431
  %435 = load i32, i32* @uniform_refine, align 4
  %436 = icmp eq i32 %435, 0
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  br i1 %436, label %440, label %438

; <label>:438:                                    ; preds = %434
  %439 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %437)
  br label %766

; <label>:440:                                    ; preds = %434
  %441 = load i32, i32* @num_objects, align 4
  %442 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %437, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107, i64 0, i64 0), i32 %441) #6
  br label %443

; <label>:443:                                    ; preds = %657, %440
  %storemerge10 = phi i32 [ 0, %440 ], [ %765, %657 ]
  store i32 %storemerge10, i32* %1, align 4
  %444 = load i32, i32* @num_objects, align 4
  %445 = icmp slt i32 %storemerge10, %444
  br i1 %445, label %446, label %766

; <label>:446:                                    ; preds = %443
  %447 = load %struct.object*, %struct.object** @objects, align 8
  %448 = load i32, i32* %1, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %struct.object, %struct.object* %447, i64 %449
  store %struct.object* %450, %struct.object** %7, align 8
  %451 = getelementptr inbounds %struct.object, %struct.object* %450, i64 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %458

; <label>:454:                                    ; preds = %446
  %455 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %456 = load i32, i32* %1, align 4
  %457 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %455, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), i32 %456) #6
  br label %647

; <label>:458:                                    ; preds = %446
  %459 = load %struct.object*, %struct.object** %7, align 8
  %460 = getelementptr inbounds %struct.object, %struct.object* %459, i64 0, i32 0
  %461 = load i32, i32* %460, align 8
  %462 = icmp eq i32 %461, 1
  br i1 %462, label %463, label %467

; <label>:463:                                    ; preds = %458
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %465 = load i32, i32* %1, align 4
  %466 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %464, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i64 0, i64 0), i32 %465) #6
  br label %647

; <label>:467:                                    ; preds = %458
  %468 = load %struct.object*, %struct.object** %7, align 8
  %469 = getelementptr inbounds %struct.object, %struct.object* %468, i64 0, i32 0
  %470 = load i32, i32* %469, align 8
  %471 = icmp eq i32 %470, 2
  br i1 %471, label %472, label %476

; <label>:472:                                    ; preds = %467
  %473 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %474 = load i32, i32* %1, align 4
  %475 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %473, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.110, i64 0, i64 0), i32 %474) #6
  br label %647

; <label>:476:                                    ; preds = %467
  %477 = load %struct.object*, %struct.object** %7, align 8
  %478 = getelementptr inbounds %struct.object, %struct.object* %477, i64 0, i32 0
  %479 = load i32, i32* %478, align 8
  %480 = icmp eq i32 %479, 3
  br i1 %480, label %481, label %485

; <label>:481:                                    ; preds = %476
  %482 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %483 = load i32, i32* %1, align 4
  %484 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %482, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111, i64 0, i64 0), i32 %483) #6
  br label %647

; <label>:485:                                    ; preds = %476
  %486 = load %struct.object*, %struct.object** %7, align 8
  %487 = getelementptr inbounds %struct.object, %struct.object* %486, i64 0, i32 0
  %488 = load i32, i32* %487, align 8
  %489 = icmp eq i32 %488, 4
  br i1 %489, label %490, label %494

; <label>:490:                                    ; preds = %485
  %491 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %492 = load i32, i32* %1, align 4
  %493 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %491, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i64 0, i64 0), i32 %492) #6
  br label %647

; <label>:494:                                    ; preds = %485
  %495 = load %struct.object*, %struct.object** %7, align 8
  %496 = getelementptr inbounds %struct.object, %struct.object* %495, i64 0, i32 0
  %497 = load i32, i32* %496, align 8
  %498 = icmp eq i32 %497, 5
  br i1 %498, label %499, label %503

; <label>:499:                                    ; preds = %494
  %500 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %501 = load i32, i32* %1, align 4
  %502 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %500, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i64 0, i64 0), i32 %501) #6
  br label %647

; <label>:503:                                    ; preds = %494
  %504 = load %struct.object*, %struct.object** %7, align 8
  %505 = getelementptr inbounds %struct.object, %struct.object* %504, i64 0, i32 0
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %506, 6
  br i1 %507, label %508, label %512

; <label>:508:                                    ; preds = %503
  %509 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %510 = load i32, i32* %1, align 4
  %511 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %509, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i64 0, i64 0), i32 %510) #6
  br label %647

; <label>:512:                                    ; preds = %503
  %513 = load %struct.object*, %struct.object** %7, align 8
  %514 = getelementptr inbounds %struct.object, %struct.object* %513, i64 0, i32 0
  %515 = load i32, i32* %514, align 8
  %516 = icmp eq i32 %515, 7
  br i1 %516, label %517, label %521

; <label>:517:                                    ; preds = %512
  %518 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %519 = load i32, i32* %1, align 4
  %520 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %518, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.115, i64 0, i64 0), i32 %519) #6
  br label %647

; <label>:521:                                    ; preds = %512
  %522 = load %struct.object*, %struct.object** %7, align 8
  %523 = getelementptr inbounds %struct.object, %struct.object* %522, i64 0, i32 0
  %524 = load i32, i32* %523, align 8
  %525 = icmp eq i32 %524, 8
  br i1 %525, label %526, label %530

; <label>:526:                                    ; preds = %521
  %527 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %528 = load i32, i32* %1, align 4
  %529 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %527, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i64 0, i64 0), i32 %528) #6
  br label %647

; <label>:530:                                    ; preds = %521
  %531 = load %struct.object*, %struct.object** %7, align 8
  %532 = getelementptr inbounds %struct.object, %struct.object* %531, i64 0, i32 0
  %533 = load i32, i32* %532, align 8
  %534 = icmp eq i32 %533, 9
  br i1 %534, label %535, label %539

; <label>:535:                                    ; preds = %530
  %536 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %537 = load i32, i32* %1, align 4
  %538 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %536, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117, i64 0, i64 0), i32 %537) #6
  br label %647

; <label>:539:                                    ; preds = %530
  %540 = load %struct.object*, %struct.object** %7, align 8
  %541 = getelementptr inbounds %struct.object, %struct.object* %540, i64 0, i32 0
  %542 = load i32, i32* %541, align 8
  %543 = icmp eq i32 %542, 10
  br i1 %543, label %544, label %548

; <label>:544:                                    ; preds = %539
  %545 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %546 = load i32, i32* %1, align 4
  %547 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %545, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i64 0, i64 0), i32 %546) #6
  br label %647

; <label>:548:                                    ; preds = %539
  %549 = load %struct.object*, %struct.object** %7, align 8
  %550 = getelementptr inbounds %struct.object, %struct.object* %549, i64 0, i32 0
  %551 = load i32, i32* %550, align 8
  %552 = icmp eq i32 %551, 11
  br i1 %552, label %553, label %557

; <label>:553:                                    ; preds = %548
  %554 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %555 = load i32, i32* %1, align 4
  %556 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %554, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i32 %555) #6
  br label %647

; <label>:557:                                    ; preds = %548
  %558 = load %struct.object*, %struct.object** %7, align 8
  %559 = getelementptr inbounds %struct.object, %struct.object* %558, i64 0, i32 0
  %560 = load i32, i32* %559, align 8
  %561 = icmp eq i32 %560, 12
  br i1 %561, label %562, label %566

; <label>:562:                                    ; preds = %557
  %563 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %564 = load i32, i32* %1, align 4
  %565 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %563, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i64 0, i64 0), i32 %564) #6
  br label %647

; <label>:566:                                    ; preds = %557
  %567 = load %struct.object*, %struct.object** %7, align 8
  %568 = getelementptr inbounds %struct.object, %struct.object* %567, i64 0, i32 0
  %569 = load i32, i32* %568, align 8
  %570 = icmp eq i32 %569, 13
  br i1 %570, label %571, label %575

; <label>:571:                                    ; preds = %566
  %572 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %573 = load i32, i32* %1, align 4
  %574 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %572, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i64 0, i64 0), i32 %573) #6
  br label %647

; <label>:575:                                    ; preds = %566
  %576 = load %struct.object*, %struct.object** %7, align 8
  %577 = getelementptr inbounds %struct.object, %struct.object* %576, i64 0, i32 0
  %578 = load i32, i32* %577, align 8
  %579 = icmp eq i32 %578, 14
  br i1 %579, label %580, label %584

; <label>:580:                                    ; preds = %575
  %581 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %582 = load i32, i32* %1, align 4
  %583 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %581, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i64 0, i64 0), i32 %582) #6
  br label %647

; <label>:584:                                    ; preds = %575
  %585 = load %struct.object*, %struct.object** %7, align 8
  %586 = getelementptr inbounds %struct.object, %struct.object* %585, i64 0, i32 0
  %587 = load i32, i32* %586, align 8
  %588 = icmp eq i32 %587, 15
  br i1 %588, label %589, label %593

; <label>:589:                                    ; preds = %584
  %590 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %591 = load i32, i32* %1, align 4
  %592 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %590, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i64 0, i64 0), i32 %591) #6
  br label %647

; <label>:593:                                    ; preds = %584
  %594 = load %struct.object*, %struct.object** %7, align 8
  %595 = getelementptr inbounds %struct.object, %struct.object* %594, i64 0, i32 0
  %596 = load i32, i32* %595, align 8
  %597 = icmp eq i32 %596, 20
  br i1 %597, label %598, label %602

; <label>:598:                                    ; preds = %593
  %599 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %600 = load i32, i32* %1, align 4
  %601 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %599, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i64 0, i64 0), i32 %600) #6
  br label %647

; <label>:602:                                    ; preds = %593
  %603 = load %struct.object*, %struct.object** %7, align 8
  %604 = getelementptr inbounds %struct.object, %struct.object* %603, i64 0, i32 0
  %605 = load i32, i32* %604, align 8
  %606 = icmp eq i32 %605, 21
  br i1 %606, label %607, label %611

; <label>:607:                                    ; preds = %602
  %608 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %609 = load i32, i32* %1, align 4
  %610 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %608, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.125, i64 0, i64 0), i32 %609) #6
  br label %647

; <label>:611:                                    ; preds = %602
  %612 = load %struct.object*, %struct.object** %7, align 8
  %613 = getelementptr inbounds %struct.object, %struct.object* %612, i64 0, i32 0
  %614 = load i32, i32* %613, align 8
  %615 = icmp eq i32 %614, 22
  br i1 %615, label %616, label %620

; <label>:616:                                    ; preds = %611
  %617 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %618 = load i32, i32* %1, align 4
  %619 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %617, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.126, i64 0, i64 0), i32 %618) #6
  br label %647

; <label>:620:                                    ; preds = %611
  %621 = load %struct.object*, %struct.object** %7, align 8
  %622 = getelementptr inbounds %struct.object, %struct.object* %621, i64 0, i32 0
  %623 = load i32, i32* %622, align 8
  %624 = icmp eq i32 %623, 23
  br i1 %624, label %625, label %629

; <label>:625:                                    ; preds = %620
  %626 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %627 = load i32, i32* %1, align 4
  %628 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %626, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i32 %627) #6
  br label %647

; <label>:629:                                    ; preds = %620
  %630 = load %struct.object*, %struct.object** %7, align 8
  %631 = getelementptr inbounds %struct.object, %struct.object* %630, i64 0, i32 0
  %632 = load i32, i32* %631, align 8
  %633 = icmp eq i32 %632, 24
  br i1 %633, label %634, label %638

; <label>:634:                                    ; preds = %629
  %635 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %636 = load i32, i32* %1, align 4
  %637 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %635, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i64 0, i64 0), i32 %636) #6
  br label %647

; <label>:638:                                    ; preds = %629
  %639 = load %struct.object*, %struct.object** %7, align 8
  %640 = getelementptr inbounds %struct.object, %struct.object* %639, i64 0, i32 0
  %641 = load i32, i32* %640, align 8
  %642 = icmp eq i32 %641, 25
  br i1 %642, label %643, label %647

; <label>:643:                                    ; preds = %638
  %644 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %645 = load i32, i32* %1, align 4
  %646 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %644, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129, i64 0, i64 0), i32 %645) #6
  br label %647

; <label>:647:                                    ; preds = %463, %481, %499, %517, %535, %553, %571, %589, %607, %625, %638, %643, %634, %616, %598, %580, %562, %544, %526, %508, %490, %472, %454
  %648 = load %struct.object*, %struct.object** %7, align 8
  %649 = getelementptr inbounds %struct.object, %struct.object* %648, i64 0, i32 1
  %650 = load i32, i32* %649, align 4
  %651 = icmp eq i32 %650, 0
  %652 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  br i1 %651, label %653, label %655

; <label>:653:                                    ; preds = %647
  %654 = call i64 @fwrite(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i64 0, i64 0), i64 21, i64 1, %struct._IO_FILE* %652)
  br label %657

; <label>:655:                                    ; preds = %647
  %656 = call i64 @fwrite(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.131, i64 0, i64 0), i64 38, i64 1, %struct._IO_FILE* %652)
  br label %657

; <label>:657:                                    ; preds = %655, %653
  %658 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %659 = load %struct.object*, %struct.object** %7, align 8
  %660 = getelementptr inbounds %struct.object, %struct.object* %659, i64 0, i32 3, i64 0
  %661 = load double, double* %660, align 8
  %662 = getelementptr inbounds %struct.object, %struct.object* %659, i64 0, i32 3, i64 1
  %663 = load double, double* %662, align 8
  %664 = getelementptr inbounds %struct.object, %struct.object* %659, i64 0, i32 3, i64 2
  %665 = load double, double* %664, align 8
  %666 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %658, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i64 0, i64 0), double %661, double %663, double %665) #6
  %667 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %668 = load %struct.object*, %struct.object** %7, align 8
  %669 = getelementptr inbounds %struct.object, %struct.object* %668, i64 0, i32 2, i64 0
  %670 = load double, double* %669, align 8
  %671 = getelementptr inbounds %struct.object, %struct.object* %668, i64 0, i32 2, i64 1
  %672 = load double, double* %671, align 8
  %673 = getelementptr inbounds %struct.object, %struct.object* %668, i64 0, i32 2, i64 2
  %674 = load double, double* %673, align 8
  %675 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %667, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i64 0, i64 0), double %670, double %672, double %674) #6
  %676 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %677 = load %struct.object*, %struct.object** %7, align 8
  %678 = getelementptr inbounds %struct.object, %struct.object* %677, i64 0, i32 5, i64 0
  %679 = load double, double* %678, align 8
  %680 = getelementptr inbounds %struct.object, %struct.object* %677, i64 0, i32 5, i64 1
  %681 = load double, double* %680, align 8
  %682 = getelementptr inbounds %struct.object, %struct.object* %677, i64 0, i32 5, i64 2
  %683 = load double, double* %682, align 8
  %684 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %676, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i64 0, i64 0), double %679, double %681, double %683) #6
  %685 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %686 = load %struct.object*, %struct.object** %7, align 8
  %687 = getelementptr inbounds %struct.object, %struct.object* %686, i64 0, i32 5, i64 0
  %688 = load double, double* %687, align 8
  %689 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %690 = load i32, i32* @x_block_size, align 4
  %691 = mul nsw i32 %689, %690
  %692 = sitofp i32 %691 to double
  %693 = fmul double %688, %692
  %694 = load %struct.object*, %struct.object** %7, align 8
  %695 = getelementptr inbounds %struct.object, %struct.object* %694, i64 0, i32 5, i64 1
  %696 = load double, double* %695, align 8
  %697 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %698 = load i32, i32* @y_block_size, align 4
  %699 = mul nsw i32 %697, %698
  %700 = sitofp i32 %699 to double
  %701 = fmul double %696, %700
  %702 = load %struct.object*, %struct.object** %7, align 8
  %703 = getelementptr inbounds %struct.object, %struct.object* %702, i64 0, i32 5, i64 2
  %704 = load double, double* %703, align 8
  %705 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %706 = load i32, i32* @z_block_size, align 4
  %707 = mul nsw i32 %705, %706
  %708 = sitofp i32 %707 to double
  %709 = fmul double %704, %708
  %710 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %685, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i64 0, i64 0), double %693, double %701, double %709) #6
  %711 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %712 = load %struct.object*, %struct.object** %7, align 8
  %713 = getelementptr inbounds %struct.object, %struct.object* %712, i64 0, i32 7, i64 0
  %714 = load double, double* %713, align 8
  %715 = getelementptr inbounds %struct.object, %struct.object* %712, i64 0, i32 7, i64 1
  %716 = load double, double* %715, align 8
  %717 = getelementptr inbounds %struct.object, %struct.object* %712, i64 0, i32 7, i64 2
  %718 = load double, double* %717, align 8
  %719 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %711, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0), double %714, double %716, double %718) #6
  %720 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %721 = load %struct.object*, %struct.object** %7, align 8
  %722 = getelementptr inbounds %struct.object, %struct.object* %721, i64 0, i32 6, i64 0
  %723 = load double, double* %722, align 8
  %724 = getelementptr inbounds %struct.object, %struct.object* %721, i64 0, i32 6, i64 1
  %725 = load double, double* %724, align 8
  %726 = getelementptr inbounds %struct.object, %struct.object* %721, i64 0, i32 6, i64 2
  %727 = load double, double* %726, align 8
  %728 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %720, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), double %723, double %725, double %727) #6
  %729 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %730 = load %struct.object*, %struct.object** %7, align 8
  %731 = getelementptr inbounds %struct.object, %struct.object* %730, i64 0, i32 8, i64 0
  %732 = load double, double* %731, align 8
  %733 = getelementptr inbounds %struct.object, %struct.object* %730, i64 0, i32 8, i64 1
  %734 = load double, double* %733, align 8
  %735 = getelementptr inbounds %struct.object, %struct.object* %730, i64 0, i32 8, i64 2
  %736 = load double, double* %735, align 8
  %737 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %729, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i64 0, i64 0), double %732, double %734, double %736) #6
  %738 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %739 = load %struct.object*, %struct.object** %7, align 8
  %740 = getelementptr inbounds %struct.object, %struct.object* %739, i64 0, i32 8, i64 0
  %741 = load double, double* %740, align 8
  %742 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %743 = load i32, i32* @x_block_size, align 4
  %744 = mul nsw i32 %742, %743
  %745 = sitofp i32 %744 to double
  %746 = fmul double %741, %745
  %747 = load %struct.object*, %struct.object** %7, align 8
  %748 = getelementptr inbounds %struct.object, %struct.object* %747, i64 0, i32 8, i64 1
  %749 = load double, double* %748, align 8
  %750 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %751 = load i32, i32* @y_block_size, align 4
  %752 = mul nsw i32 %750, %751
  %753 = sitofp i32 %752 to double
  %754 = fmul double %749, %753
  %755 = load %struct.object*, %struct.object** %7, align 8
  %756 = getelementptr inbounds %struct.object, %struct.object* %755, i64 0, i32 8, i64 2
  %757 = load double, double* %756, align 8
  %758 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %759 = load i32, i32* @z_block_size, align 4
  %760 = mul nsw i32 %758, %759
  %761 = sitofp i32 %760 to double
  %762 = fmul double %757, %761
  %763 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %738, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i64 0, i64 0), double %746, double %754, double %762) #6
  %764 = load i32, i32* %1, align 4
  %765 = add nsw i32 %764, 1
  br label %443

; <label>:766:                                    ; preds = %443, %438
  %767 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %768 = load i32, i32* @num_tsteps, align 4
  %769 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %767, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i64 0, i64 0), i32 %768) #6
  %770 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %771 = load i32, i32* @stages_per_ts, align 4
  %772 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %770, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.141, i64 0, i64 0), i32 %771) #6
  %773 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %774 = load i32, i32* @checksum_freq, align 4
  %775 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %773, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142, i64 0, i64 0), i32 %774) #6
  %776 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %777 = load i32, i32* @refine_freq, align 4
  %778 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %776, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i64 0, i64 0), i32 %777) #6
  %779 = load i32, i32* @plot_freq, align 4
  %780 = icmp eq i32 %779, 0
  %781 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  br i1 %780, label %785, label %782

; <label>:782:                                    ; preds = %766
  %783 = load i32, i32* @plot_freq, align 4
  %784 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %781, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i64 0, i64 0), i32 %783) #6
  br label %787

; <label>:785:                                    ; preds = %766
  %786 = call i64 @fwrite(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.145, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %781)
  br label %787

; <label>:787:                                    ; preds = %785, %782
  %788 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %789 = load i32, i32* @num_vars, align 4
  %790 = load i32, i32* @stencil, align 4
  %791 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %788, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.146, i64 0, i64 0), i32 %789, i32 %790) #6
  %792 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %793 = load i32, i32* @comm_vars, align 4
  %794 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %792, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.147, i64 0, i64 0), i32 %793) #6
  %795 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %796 = load i32, i32* @error_tol, align 4
  %797 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %795, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i64 0, i64 0), i32 %796) #6
  %798 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %799 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 0), align 16
  %800 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %798, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.149, i64 0, i64 0), double %799) #6
  %801 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %802 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 110), align 16
  %803 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %801, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.150, i64 0, i64 0), double %802) #6
  %804 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %805 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 111), align 8
  %806 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %804, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i64 0, i64 0), double %805) #6
  %807 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %808 = call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %807)
  %809 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %810 = call i64 @fwrite(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.153, i64 0, i64 0), i64 36, i64 1, %struct._IO_FILE* %809)
  %811 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %812 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %811)
  %813 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %814 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %815 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %813, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %814) #6
  %816 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %817 = load double, double* %2, align 8
  %818 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %816, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.156, i64 0, i64 0), double %817) #6
  %819 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %820 = load double, double* %3, align 8
  %821 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %819, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.157, i64 0, i64 0), double %820) #6
  %822 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %823 = load double, double* %4, align 8
  %824 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %822, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.158, i64 0, i64 0), double %823) #6
  %825 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %826 = load double, double* %5, align 8
  %827 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %825, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.159, i64 0, i64 0), double %826) #6
  %828 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %829 = load double, double* %6, align 8
  %830 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %828, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.160, i64 0, i64 0), double %829) #6
  %831 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %832 = call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %831)
  %833 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %834 = call i64 @fwrite(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.161, i64 0, i64 0), i64 36, i64 1, %struct._IO_FILE* %833)
  %835 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %836 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %835)
  %837 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %838 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 37), align 8
  %839 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %837, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %838) #6
  br label %840

; <label>:840:                                    ; preds = %862, %787
  %storemerge11 = phi i32 [ 0, %787 ], [ %922, %862 ]
  store i32 %storemerge11, i32* %1, align 4
  %841 = icmp slt i32 %storemerge11, 4
  br i1 %841, label %842, label %923

; <label>:842:                                    ; preds = %840
  %843 = load i32, i32* %1, align 4
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %845, label %848

; <label>:845:                                    ; preds = %842
  %846 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %847 = call i64 @fwrite(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %846)
  br label %862

; <label>:848:                                    ; preds = %842
  %849 = load i32, i32* %1, align 4
  %850 = icmp eq i32 %849, 1
  br i1 %850, label %851, label %854

; <label>:851:                                    ; preds = %848
  %852 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %853 = call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.163, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %852)
  br label %862

; <label>:854:                                    ; preds = %848
  %855 = load i32, i32* %1, align 4
  %856 = icmp eq i32 %855, 2
  %857 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  br i1 %856, label %858, label %860

; <label>:858:                                    ; preds = %854
  %859 = call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.164, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %857)
  br label %862

; <label>:860:                                    ; preds = %854
  %861 = call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.165, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %857)
  br label %862

; <label>:862:                                    ; preds = %851, %860, %858, %845
  %863 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %864 = call i64 @fwrite(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.166, i64 0, i64 0), i64 66, i64 1, %struct._IO_FILE* %863)
  %865 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %866 = load i32, i32* %1, align 4
  %867 = mul nsw i32 %866, 9
  %868 = add nsw i32 %867, 1
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %869
  %871 = load double, double* %870, align 8
  %872 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %865, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.167, i64 0, i64 0), double %871) #6
  %873 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %874 = load i32, i32* %1, align 4
  %875 = mul nsw i32 %874, 9
  %876 = add nsw i32 %875, 5
  %877 = sext i32 %876 to i64
  %878 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %877
  %879 = load double, double* %878, align 8
  %880 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %873, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.168, i64 0, i64 0), double %879) #6
  %881 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %882 = load i32, i32* %1, align 4
  %883 = mul nsw i32 %882, 9
  %884 = add nsw i32 %883, 6
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %885
  %887 = load double, double* %886, align 8
  %888 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %881, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.169, i64 0, i64 0), double %887) #6
  %889 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %890 = load i32, i32* %1, align 4
  %891 = mul nsw i32 %890, 9
  %892 = add nsw i32 %891, 7
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %893
  %895 = load double, double* %894, align 8
  %896 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %889, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.170, i64 0, i64 0), double %895) #6
  %897 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %898 = load i32, i32* %1, align 4
  %899 = mul nsw i32 %898, 9
  %900 = add nsw i32 %899, 75
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %901
  %903 = load double, double* %902, align 8
  %904 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %897, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i64 0, i64 0), double %903) #6
  %905 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %906 = load i32, i32* %1, align 4
  %907 = mul nsw i32 %906, 9
  %908 = add nsw i32 %907, 76
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %909
  %911 = load double, double* %910, align 8
  %912 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %905, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.172, i64 0, i64 0), double %911) #6
  %913 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %914 = load i32, i32* %1, align 4
  %915 = mul nsw i32 %914, 9
  %916 = add nsw i32 %915, 74
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %917
  %919 = load double, double* %918, align 8
  %920 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %913, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.173, i64 0, i64 0), double %919) #6
  %921 = load i32, i32* %1, align 4
  %922 = add nsw i32 %921, 1
  br label %840

; <label>:923:                                    ; preds = %840
  %924 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %925 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.174, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %924)
  %926 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %927 = call i64 @fwrite(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i64 0, i64 0), i64 33, i64 1, %struct._IO_FILE* %926)
  %928 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %929 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %928)
  %930 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %931 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 39), align 8
  %932 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %930, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %931) #6
  %933 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %934 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 41), align 8
  %935 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %933, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.176, i64 0, i64 0), double %934) #6
  %936 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %937 = load i32, i32* @total_red, align 4
  %938 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %936, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.177, i64 0, i64 0), i32 %937) #6
  %939 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %940 = load i32, i32* @num_vars, align 4
  %941 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %939, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.178, i64 0, i64 0), i32 %940) #6
  %942 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %943 = call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %942)
  %944 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %945 = call i64 @fwrite(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %944)
  %946 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %947 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %946)
  %948 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %949 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 42), align 16
  %950 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %948, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %949) #6
  %951 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %952 = load i32, i32* @nrs, align 4
  %953 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %951, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.180, i64 0, i64 0), i32 %952) #6
  %954 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %955 = load i64, i64* @total_blocks, align 8
  %956 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %954, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.181, i64 0, i64 0), i64 %955) #6
  %957 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %958 = load i64, i64* @total_blocks, align 8
  %959 = sitofp i64 %958 to double
  %960 = load i32, i32* @num_tsteps, align 4
  %961 = load i32, i32* @stages_per_ts, align 4
  %962 = mul nsw i32 %960, %961
  %963 = sitofp i32 %962 to double
  %964 = fdiv double %959, %963
  %965 = load i32, i32* @nb_min, align 4
  %966 = load i32, i32* @nb_max, align 4
  %967 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %957, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.182, i64 0, i64 0), double %964, i32 %965, i32 %966) #6
  %968 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %969 = load i32, i32* @global_max_b, align 4
  %970 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %968, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.183, i64 0, i64 0), i32 %969) #6
  %971 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %972 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 104), align 16
  %973 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %971, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.184, i64 0, i64 0), double %972) #6
  %974 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %975 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 105), align 8
  %976 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %974, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.185, i64 0, i64 0), double %975) #6
  %977 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %978 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.186, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %977)
  %979 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %980 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 43), align 8
  %981 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %979, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.187, i64 0, i64 0), double %980) #6
  %982 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %983 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 44), align 16
  %984 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %982, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.188, i64 0, i64 0), double %983) #6
  %985 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %986 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 46), align 16
  %987 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %985, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.189, i64 0, i64 0), double %986) #6
  %988 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %989 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 47), align 8
  %990 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %988, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.190, i64 0, i64 0), double %989) #6
  %991 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %992 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 45), align 8
  %993 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %991, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.191, i64 0, i64 0), double %992) #6
  %994 = load i32, i32* @target_active, align 4
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %1018, label %996

; <label>:996:                                    ; preds = %923
  %997 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %998 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 52), align 16
  %999 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %997, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.192, i64 0, i64 0), double %998) #6
  %1000 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1001 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 53), align 8
  %1002 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1000, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.193, i64 0, i64 0), double %1001) #6
  %1003 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1004 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 54), align 16
  %1005 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1003, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.194, i64 0, i64 0), double %1004) #6
  %1006 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1007 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 58), align 16
  %1008 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1006, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.195, i64 0, i64 0), double %1007) #6
  %1009 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1010 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 59), align 8
  %1011 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1009, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.196, i64 0, i64 0), double %1010) #6
  %1012 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1013 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 60), align 16
  %1014 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1012, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.194, i64 0, i64 0), double %1013) #6
  %1015 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1016 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 61), align 8
  %1017 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1015, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.197, i64 0, i64 0), double %1016) #6
  br label %1018

; <label>:1018:                                   ; preds = %923, %996
  %1019 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1020 = call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %1019)
  %1021 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1022 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.198, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %1021)
  %1023 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1024 = call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %1023)
  %1025 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1026 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 67), align 8
  %1027 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1025, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %1026) #6
  %1028 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1029 = load i32, i32* @nps, align 4
  %1030 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1028, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.199, i64 0, i64 0), i32 %1029) #6
  %1031 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1032 = call i64 @fwrite(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.200, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %1031)
  %1033 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %1034 = call i32 @fclose(%struct._IO_FILE* %1033) #6
  br label %1035

; <label>:1035:                                   ; preds = %362, %1018
  %1036 = load i32, i32* @report_perf, align 4
  %1037 = and i32 %1036, 4
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1407, label %1039

; <label>:1039:                                   ; preds = %1035
  %puts = call i32 @puts(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @str.54, i64 0, i64 0))
  %puts1 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @str.55, i64 0, i64 0))
  %1040 = load i8*, i8** %8, align 8
  %1041 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0), i8* %1040) #6
  %puts2 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.56, i64 0, i64 0))
  %1042 = load i32, i32* @init_block_x, align 4
  %1043 = load i32, i32* @init_block_y, align 4
  %1044 = load i32, i32* @init_block_z, align 4
  %1045 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i64 0, i64 0), i32 %1042, i32 %1043, i32 %1044) #6
  %1046 = load i32, i32* @x_block_size, align 4
  %1047 = load i32, i32* @y_block_size, align 4
  %1048 = load i32, i32* @z_block_size, align 4
  %1049 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i32 %1046, i32 %1047, i32 %1048) #6
  %1050 = load i32, i32* @permute, align 4
  %1051 = icmp eq i32 %1050, 0
  br i1 %1051, label %1053, label %1052

; <label>:1052:                                   ; preds = %1039
  %puts9 = call i32 @puts(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @str.62, i64 0, i64 0))
  br label %1053

; <label>:1053:                                   ; preds = %1039, %1052
  %1054 = load i32, i32* @max_num_blocks, align 4
  %1055 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i64 0, i64 0), i32 %1054) #6
  %1056 = load i32, i32* @target_active, align 4
  %1057 = icmp eq i32 %1056, 0
  br i1 %1057, label %1061, label %1058

; <label>:1058:                                   ; preds = %1053
  %1059 = load i32, i32* @target_active, align 4
  %1060 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i64 0, i64 0), i32 %1059) #6
  br label %1061

; <label>:1061:                                   ; preds = %1053, %1058
  %1062 = load i32, i32* @target_max, align 4
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1067, label %1064

; <label>:1064:                                   ; preds = %1061
  %1065 = load i32, i32* @target_max, align 4
  %1066 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i64 0, i64 0), i32 %1065) #6
  br label %1067

; <label>:1067:                                   ; preds = %1061, %1064
  %1068 = load i32, i32* @target_min, align 4
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1073, label %1070

; <label>:1070:                                   ; preds = %1067
  %1071 = load i32, i32* @target_min, align 4
  %1072 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.101, i64 0, i64 0), i32 %1071) #6
  br label %1073

; <label>:1073:                                   ; preds = %1067, %1070
  %1074 = load i32, i32* @code, align 4
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1079, label %1076

; <label>:1076:                                   ; preds = %1073
  %1077 = load i32, i32* @code, align 4
  %1078 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0), i32 %1077) #6
  br label %1079

; <label>:1079:                                   ; preds = %1073, %1076
  %1080 = load i32, i32* @num_refine, align 4
  %1081 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i32 %1080) #6
  %1082 = load i32, i32* @block_change, align 4
  %1083 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.104, i64 0, i64 0), i32 %1082) #6
  %1084 = load i32, i32* @refine_ghost, align 4
  %1085 = icmp eq i32 %1084, 0
  br i1 %1085, label %1087, label %1086

; <label>:1086:                                   ; preds = %1079
  %puts8 = call i32 @puts(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @str.61, i64 0, i64 0))
  br label %1087

; <label>:1087:                                   ; preds = %1079, %1086
  %1088 = load i32, i32* @uniform_refine, align 4
  %1089 = icmp eq i32 %1088, 0
  br i1 %1089, label %1091, label %1090

; <label>:1090:                                   ; preds = %1087
  %puts7 = call i32 @puts(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @str.60, i64 0, i64 0))
  br label %1384

; <label>:1091:                                   ; preds = %1087
  %1092 = load i32, i32* @num_objects, align 4
  %1093 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107, i64 0, i64 0), i32 %1092) #6
  br label %1094

; <label>:1094:                                   ; preds = %1283, %1091
  %storemerge3 = phi i32 [ 0, %1091 ], [ %1383, %1283 ]
  store i32 %storemerge3, i32* %1, align 4
  %1095 = load i32, i32* @num_objects, align 4
  %1096 = icmp slt i32 %storemerge3, %1095
  br i1 %1096, label %1097, label %1384

; <label>:1097:                                   ; preds = %1094
  %1098 = load %struct.object*, %struct.object** @objects, align 8
  %1099 = load i32, i32* %1, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds %struct.object, %struct.object* %1098, i64 %1100
  store %struct.object* %1101, %struct.object** %7, align 8
  %1102 = getelementptr inbounds %struct.object, %struct.object* %1101, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 8
  %1104 = icmp eq i32 %1103, 0
  br i1 %1104, label %1105, label %1108

; <label>:1105:                                   ; preds = %1097
  %1106 = load i32, i32* %1, align 4
  %1107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), i32 %1106) #6
  br label %1276

; <label>:1108:                                   ; preds = %1097
  %1109 = load %struct.object*, %struct.object** %7, align 8
  %1110 = getelementptr inbounds %struct.object, %struct.object* %1109, i64 0, i32 0
  %1111 = load i32, i32* %1110, align 8
  %1112 = icmp eq i32 %1111, 1
  br i1 %1112, label %1113, label %1116

; <label>:1113:                                   ; preds = %1108
  %1114 = load i32, i32* %1, align 4
  %1115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i64 0, i64 0), i32 %1114) #6
  br label %1276

; <label>:1116:                                   ; preds = %1108
  %1117 = load %struct.object*, %struct.object** %7, align 8
  %1118 = getelementptr inbounds %struct.object, %struct.object* %1117, i64 0, i32 0
  %1119 = load i32, i32* %1118, align 8
  %1120 = icmp eq i32 %1119, 2
  br i1 %1120, label %1121, label %1124

; <label>:1121:                                   ; preds = %1116
  %1122 = load i32, i32* %1, align 4
  %1123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.110, i64 0, i64 0), i32 %1122) #6
  br label %1276

; <label>:1124:                                   ; preds = %1116
  %1125 = load %struct.object*, %struct.object** %7, align 8
  %1126 = getelementptr inbounds %struct.object, %struct.object* %1125, i64 0, i32 0
  %1127 = load i32, i32* %1126, align 8
  %1128 = icmp eq i32 %1127, 3
  br i1 %1128, label %1129, label %1132

; <label>:1129:                                   ; preds = %1124
  %1130 = load i32, i32* %1, align 4
  %1131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111, i64 0, i64 0), i32 %1130) #6
  br label %1276

; <label>:1132:                                   ; preds = %1124
  %1133 = load %struct.object*, %struct.object** %7, align 8
  %1134 = getelementptr inbounds %struct.object, %struct.object* %1133, i64 0, i32 0
  %1135 = load i32, i32* %1134, align 8
  %1136 = icmp eq i32 %1135, 4
  br i1 %1136, label %1137, label %1140

; <label>:1137:                                   ; preds = %1132
  %1138 = load i32, i32* %1, align 4
  %1139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i64 0, i64 0), i32 %1138) #6
  br label %1276

; <label>:1140:                                   ; preds = %1132
  %1141 = load %struct.object*, %struct.object** %7, align 8
  %1142 = getelementptr inbounds %struct.object, %struct.object* %1141, i64 0, i32 0
  %1143 = load i32, i32* %1142, align 8
  %1144 = icmp eq i32 %1143, 5
  br i1 %1144, label %1145, label %1148

; <label>:1145:                                   ; preds = %1140
  %1146 = load i32, i32* %1, align 4
  %1147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i64 0, i64 0), i32 %1146) #6
  br label %1276

; <label>:1148:                                   ; preds = %1140
  %1149 = load %struct.object*, %struct.object** %7, align 8
  %1150 = getelementptr inbounds %struct.object, %struct.object* %1149, i64 0, i32 0
  %1151 = load i32, i32* %1150, align 8
  %1152 = icmp eq i32 %1151, 6
  br i1 %1152, label %1153, label %1156

; <label>:1153:                                   ; preds = %1148
  %1154 = load i32, i32* %1, align 4
  %1155 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i64 0, i64 0), i32 %1154) #6
  br label %1276

; <label>:1156:                                   ; preds = %1148
  %1157 = load %struct.object*, %struct.object** %7, align 8
  %1158 = getelementptr inbounds %struct.object, %struct.object* %1157, i64 0, i32 0
  %1159 = load i32, i32* %1158, align 8
  %1160 = icmp eq i32 %1159, 7
  br i1 %1160, label %1161, label %1164

; <label>:1161:                                   ; preds = %1156
  %1162 = load i32, i32* %1, align 4
  %1163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.115, i64 0, i64 0), i32 %1162) #6
  br label %1276

; <label>:1164:                                   ; preds = %1156
  %1165 = load %struct.object*, %struct.object** %7, align 8
  %1166 = getelementptr inbounds %struct.object, %struct.object* %1165, i64 0, i32 0
  %1167 = load i32, i32* %1166, align 8
  %1168 = icmp eq i32 %1167, 8
  br i1 %1168, label %1169, label %1172

; <label>:1169:                                   ; preds = %1164
  %1170 = load i32, i32* %1, align 4
  %1171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i64 0, i64 0), i32 %1170) #6
  br label %1276

; <label>:1172:                                   ; preds = %1164
  %1173 = load %struct.object*, %struct.object** %7, align 8
  %1174 = getelementptr inbounds %struct.object, %struct.object* %1173, i64 0, i32 0
  %1175 = load i32, i32* %1174, align 8
  %1176 = icmp eq i32 %1175, 9
  br i1 %1176, label %1177, label %1180

; <label>:1177:                                   ; preds = %1172
  %1178 = load i32, i32* %1, align 4
  %1179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117, i64 0, i64 0), i32 %1178) #6
  br label %1276

; <label>:1180:                                   ; preds = %1172
  %1181 = load %struct.object*, %struct.object** %7, align 8
  %1182 = getelementptr inbounds %struct.object, %struct.object* %1181, i64 0, i32 0
  %1183 = load i32, i32* %1182, align 8
  %1184 = icmp eq i32 %1183, 10
  br i1 %1184, label %1185, label %1188

; <label>:1185:                                   ; preds = %1180
  %1186 = load i32, i32* %1, align 4
  %1187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i64 0, i64 0), i32 %1186) #6
  br label %1276

; <label>:1188:                                   ; preds = %1180
  %1189 = load %struct.object*, %struct.object** %7, align 8
  %1190 = getelementptr inbounds %struct.object, %struct.object* %1189, i64 0, i32 0
  %1191 = load i32, i32* %1190, align 8
  %1192 = icmp eq i32 %1191, 11
  br i1 %1192, label %1193, label %1196

; <label>:1193:                                   ; preds = %1188
  %1194 = load i32, i32* %1, align 4
  %1195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i32 %1194) #6
  br label %1276

; <label>:1196:                                   ; preds = %1188
  %1197 = load %struct.object*, %struct.object** %7, align 8
  %1198 = getelementptr inbounds %struct.object, %struct.object* %1197, i64 0, i32 0
  %1199 = load i32, i32* %1198, align 8
  %1200 = icmp eq i32 %1199, 12
  br i1 %1200, label %1201, label %1204

; <label>:1201:                                   ; preds = %1196
  %1202 = load i32, i32* %1, align 4
  %1203 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i64 0, i64 0), i32 %1202) #6
  br label %1276

; <label>:1204:                                   ; preds = %1196
  %1205 = load %struct.object*, %struct.object** %7, align 8
  %1206 = getelementptr inbounds %struct.object, %struct.object* %1205, i64 0, i32 0
  %1207 = load i32, i32* %1206, align 8
  %1208 = icmp eq i32 %1207, 13
  br i1 %1208, label %1209, label %1212

; <label>:1209:                                   ; preds = %1204
  %1210 = load i32, i32* %1, align 4
  %1211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i64 0, i64 0), i32 %1210) #6
  br label %1276

; <label>:1212:                                   ; preds = %1204
  %1213 = load %struct.object*, %struct.object** %7, align 8
  %1214 = getelementptr inbounds %struct.object, %struct.object* %1213, i64 0, i32 0
  %1215 = load i32, i32* %1214, align 8
  %1216 = icmp eq i32 %1215, 14
  br i1 %1216, label %1217, label %1220

; <label>:1217:                                   ; preds = %1212
  %1218 = load i32, i32* %1, align 4
  %1219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i64 0, i64 0), i32 %1218) #6
  br label %1276

; <label>:1220:                                   ; preds = %1212
  %1221 = load %struct.object*, %struct.object** %7, align 8
  %1222 = getelementptr inbounds %struct.object, %struct.object* %1221, i64 0, i32 0
  %1223 = load i32, i32* %1222, align 8
  %1224 = icmp eq i32 %1223, 15
  br i1 %1224, label %1225, label %1228

; <label>:1225:                                   ; preds = %1220
  %1226 = load i32, i32* %1, align 4
  %1227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i64 0, i64 0), i32 %1226) #6
  br label %1276

; <label>:1228:                                   ; preds = %1220
  %1229 = load %struct.object*, %struct.object** %7, align 8
  %1230 = getelementptr inbounds %struct.object, %struct.object* %1229, i64 0, i32 0
  %1231 = load i32, i32* %1230, align 8
  %1232 = icmp eq i32 %1231, 20
  br i1 %1232, label %1233, label %1236

; <label>:1233:                                   ; preds = %1228
  %1234 = load i32, i32* %1, align 4
  %1235 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i64 0, i64 0), i32 %1234) #6
  br label %1276

; <label>:1236:                                   ; preds = %1228
  %1237 = load %struct.object*, %struct.object** %7, align 8
  %1238 = getelementptr inbounds %struct.object, %struct.object* %1237, i64 0, i32 0
  %1239 = load i32, i32* %1238, align 8
  %1240 = icmp eq i32 %1239, 21
  br i1 %1240, label %1241, label %1244

; <label>:1241:                                   ; preds = %1236
  %1242 = load i32, i32* %1, align 4
  %1243 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.125, i64 0, i64 0), i32 %1242) #6
  br label %1276

; <label>:1244:                                   ; preds = %1236
  %1245 = load %struct.object*, %struct.object** %7, align 8
  %1246 = getelementptr inbounds %struct.object, %struct.object* %1245, i64 0, i32 0
  %1247 = load i32, i32* %1246, align 8
  %1248 = icmp eq i32 %1247, 22
  br i1 %1248, label %1249, label %1252

; <label>:1249:                                   ; preds = %1244
  %1250 = load i32, i32* %1, align 4
  %1251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.126, i64 0, i64 0), i32 %1250) #6
  br label %1276

; <label>:1252:                                   ; preds = %1244
  %1253 = load %struct.object*, %struct.object** %7, align 8
  %1254 = getelementptr inbounds %struct.object, %struct.object* %1253, i64 0, i32 0
  %1255 = load i32, i32* %1254, align 8
  %1256 = icmp eq i32 %1255, 23
  br i1 %1256, label %1257, label %1260

; <label>:1257:                                   ; preds = %1252
  %1258 = load i32, i32* %1, align 4
  %1259 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i32 %1258) #6
  br label %1276

; <label>:1260:                                   ; preds = %1252
  %1261 = load %struct.object*, %struct.object** %7, align 8
  %1262 = getelementptr inbounds %struct.object, %struct.object* %1261, i64 0, i32 0
  %1263 = load i32, i32* %1262, align 8
  %1264 = icmp eq i32 %1263, 24
  br i1 %1264, label %1265, label %1268

; <label>:1265:                                   ; preds = %1260
  %1266 = load i32, i32* %1, align 4
  %1267 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i64 0, i64 0), i32 %1266) #6
  br label %1276

; <label>:1268:                                   ; preds = %1260
  %1269 = load %struct.object*, %struct.object** %7, align 8
  %1270 = getelementptr inbounds %struct.object, %struct.object* %1269, i64 0, i32 0
  %1271 = load i32, i32* %1270, align 8
  %1272 = icmp eq i32 %1271, 25
  br i1 %1272, label %1273, label %1276

; <label>:1273:                                   ; preds = %1268
  %1274 = load i32, i32* %1, align 4
  %1275 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129, i64 0, i64 0), i32 %1274) #6
  br label %1276

; <label>:1276:                                   ; preds = %1113, %1129, %1145, %1161, %1177, %1193, %1209, %1225, %1241, %1257, %1268, %1273, %1265, %1249, %1233, %1217, %1201, %1185, %1169, %1153, %1137, %1121, %1105
  %1277 = load %struct.object*, %struct.object** %7, align 8
  %1278 = getelementptr inbounds %struct.object, %struct.object* %1277, i64 0, i32 1
  %1279 = load i32, i32* %1278, align 4
  %1280 = icmp eq i32 %1279, 0
  br i1 %1280, label %1281, label %1282

; <label>:1281:                                   ; preds = %1276
  %puts6 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.59, i64 0, i64 0))
  br label %1283

; <label>:1282:                                   ; preds = %1276
  %puts5 = call i32 @puts(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @str.58, i64 0, i64 0))
  br label %1283

; <label>:1283:                                   ; preds = %1282, %1281
  %1284 = load %struct.object*, %struct.object** %7, align 8
  %1285 = getelementptr inbounds %struct.object, %struct.object* %1284, i64 0, i32 3, i64 0
  %1286 = load double, double* %1285, align 8
  %1287 = getelementptr inbounds %struct.object, %struct.object* %1284, i64 0, i32 3, i64 1
  %1288 = load double, double* %1287, align 8
  %1289 = getelementptr inbounds %struct.object, %struct.object* %1284, i64 0, i32 3, i64 2
  %1290 = load double, double* %1289, align 8
  %1291 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i64 0, i64 0), double %1286, double %1288, double %1290) #6
  %1292 = load %struct.object*, %struct.object** %7, align 8
  %1293 = getelementptr inbounds %struct.object, %struct.object* %1292, i64 0, i32 2, i64 0
  %1294 = load double, double* %1293, align 8
  %1295 = getelementptr inbounds %struct.object, %struct.object* %1292, i64 0, i32 2, i64 1
  %1296 = load double, double* %1295, align 8
  %1297 = getelementptr inbounds %struct.object, %struct.object* %1292, i64 0, i32 2, i64 2
  %1298 = load double, double* %1297, align 8
  %1299 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i64 0, i64 0), double %1294, double %1296, double %1298) #6
  %1300 = load %struct.object*, %struct.object** %7, align 8
  %1301 = getelementptr inbounds %struct.object, %struct.object* %1300, i64 0, i32 5, i64 0
  %1302 = load double, double* %1301, align 8
  %1303 = getelementptr inbounds %struct.object, %struct.object* %1300, i64 0, i32 5, i64 1
  %1304 = load double, double* %1303, align 8
  %1305 = getelementptr inbounds %struct.object, %struct.object* %1300, i64 0, i32 5, i64 2
  %1306 = load double, double* %1305, align 8
  %1307 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i64 0, i64 0), double %1302, double %1304, double %1306) #6
  %1308 = load %struct.object*, %struct.object** %7, align 8
  %1309 = getelementptr inbounds %struct.object, %struct.object* %1308, i64 0, i32 5, i64 0
  %1310 = load double, double* %1309, align 8
  %1311 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %1312 = load i32, i32* @x_block_size, align 4
  %1313 = mul nsw i32 %1311, %1312
  %1314 = sitofp i32 %1313 to double
  %1315 = fmul double %1310, %1314
  %1316 = load %struct.object*, %struct.object** %7, align 8
  %1317 = getelementptr inbounds %struct.object, %struct.object* %1316, i64 0, i32 5, i64 1
  %1318 = load double, double* %1317, align 8
  %1319 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %1320 = load i32, i32* @y_block_size, align 4
  %1321 = mul nsw i32 %1319, %1320
  %1322 = sitofp i32 %1321 to double
  %1323 = fmul double %1318, %1322
  %1324 = load %struct.object*, %struct.object** %7, align 8
  %1325 = getelementptr inbounds %struct.object, %struct.object* %1324, i64 0, i32 5, i64 2
  %1326 = load double, double* %1325, align 8
  %1327 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %1328 = load i32, i32* @z_block_size, align 4
  %1329 = mul nsw i32 %1327, %1328
  %1330 = sitofp i32 %1329 to double
  %1331 = fmul double %1326, %1330
  %1332 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i64 0, i64 0), double %1315, double %1323, double %1331) #6
  %1333 = load %struct.object*, %struct.object** %7, align 8
  %1334 = getelementptr inbounds %struct.object, %struct.object* %1333, i64 0, i32 7, i64 0
  %1335 = load double, double* %1334, align 8
  %1336 = getelementptr inbounds %struct.object, %struct.object* %1333, i64 0, i32 7, i64 1
  %1337 = load double, double* %1336, align 8
  %1338 = getelementptr inbounds %struct.object, %struct.object* %1333, i64 0, i32 7, i64 2
  %1339 = load double, double* %1338, align 8
  %1340 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0), double %1335, double %1337, double %1339) #6
  %1341 = load %struct.object*, %struct.object** %7, align 8
  %1342 = getelementptr inbounds %struct.object, %struct.object* %1341, i64 0, i32 6, i64 0
  %1343 = load double, double* %1342, align 8
  %1344 = getelementptr inbounds %struct.object, %struct.object* %1341, i64 0, i32 6, i64 1
  %1345 = load double, double* %1344, align 8
  %1346 = getelementptr inbounds %struct.object, %struct.object* %1341, i64 0, i32 6, i64 2
  %1347 = load double, double* %1346, align 8
  %1348 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), double %1343, double %1345, double %1347) #6
  %1349 = load %struct.object*, %struct.object** %7, align 8
  %1350 = getelementptr inbounds %struct.object, %struct.object* %1349, i64 0, i32 8, i64 0
  %1351 = load double, double* %1350, align 8
  %1352 = getelementptr inbounds %struct.object, %struct.object* %1349, i64 0, i32 8, i64 1
  %1353 = load double, double* %1352, align 8
  %1354 = getelementptr inbounds %struct.object, %struct.object* %1349, i64 0, i32 8, i64 2
  %1355 = load double, double* %1354, align 8
  %1356 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i64 0, i64 0), double %1351, double %1353, double %1355) #6
  %1357 = load %struct.object*, %struct.object** %7, align 8
  %1358 = getelementptr inbounds %struct.object, %struct.object* %1357, i64 0, i32 8, i64 0
  %1359 = load double, double* %1358, align 8
  %1360 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %1361 = load i32, i32* @x_block_size, align 4
  %1362 = mul nsw i32 %1360, %1361
  %1363 = sitofp i32 %1362 to double
  %1364 = fmul double %1359, %1363
  %1365 = load %struct.object*, %struct.object** %7, align 8
  %1366 = getelementptr inbounds %struct.object, %struct.object* %1365, i64 0, i32 8, i64 1
  %1367 = load double, double* %1366, align 8
  %1368 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %1369 = load i32, i32* @y_block_size, align 4
  %1370 = mul nsw i32 %1368, %1369
  %1371 = sitofp i32 %1370 to double
  %1372 = fmul double %1367, %1371
  %1373 = load %struct.object*, %struct.object** %7, align 8
  %1374 = getelementptr inbounds %struct.object, %struct.object* %1373, i64 0, i32 8, i64 2
  %1375 = load double, double* %1374, align 8
  %1376 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %1377 = load i32, i32* @z_block_size, align 4
  %1378 = mul nsw i32 %1376, %1377
  %1379 = sitofp i32 %1378 to double
  %1380 = fmul double %1375, %1379
  %1381 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i64 0, i64 0), double %1364, double %1372, double %1380) #6
  %1382 = load i32, i32* %1, align 4
  %1383 = add nsw i32 %1382, 1
  br label %1094

; <label>:1384:                                   ; preds = %1094, %1090
  %1385 = load i32, i32* @num_tsteps, align 4
  %1386 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i64 0, i64 0), i32 %1385) #6
  %1387 = load i32, i32* @stages_per_ts, align 4
  %1388 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.141, i64 0, i64 0), i32 %1387) #6
  %1389 = load i32, i32* @checksum_freq, align 4
  %1390 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142, i64 0, i64 0), i32 %1389) #6
  %1391 = load i32, i32* @refine_freq, align 4
  %1392 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i64 0, i64 0), i32 %1391) #6
  %1393 = load i32, i32* @plot_freq, align 4
  %1394 = icmp eq i32 %1393, 0
  br i1 %1394, label %1398, label %1395

; <label>:1395:                                   ; preds = %1384
  %1396 = load i32, i32* @plot_freq, align 4
  %1397 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i64 0, i64 0), i32 %1396) #6
  br label %1399

; <label>:1398:                                   ; preds = %1384
  %puts4 = call i32 @puts(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @str.57, i64 0, i64 0))
  br label %1399

; <label>:1399:                                   ; preds = %1398, %1395
  %1400 = load i32, i32* @num_vars, align 4
  %1401 = load i32, i32* @stencil, align 4
  %1402 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.146, i64 0, i64 0), i32 %1400, i32 %1401) #6
  %1403 = load i32, i32* @comm_vars, align 4
  %1404 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.147, i64 0, i64 0), i32 %1403) #6
  %1405 = load i32, i32* @error_tol, align 4
  %1406 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i64 0, i64 0), i32 %1405) #6
  br label %1407

; <label>:1407:                                   ; preds = %1399, %1035, %0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @calculate_results() #0 {
  %1 = alloca [128 x double], align 16
  %2 = alloca i32, align 4
  %3 = load i64, i64* bitcast (double* @timer_all to i64*), align 8
  %4 = bitcast [128 x double]* %1 to i64*
  store i64 %3, i64* %4, align 16
  br label %5

; <label>:5:                                      ; preds = %7, %0
  %storemerge = phi i32 [ 0, %0 ], [ %11, %7 ]
  %6 = icmp slt i32 %storemerge, 9
  br i1 %6, label %7, label %12

; <label>:7:                                      ; preds = %5
  %8 = add nsw i32 %storemerge, 1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %9
  store double 0.000000e+00, double* %10, align 8
  %11 = add nsw i32 %storemerge, 1
  br label %5

; <label>:12:                                     ; preds = %5
  store i32 %storemerge, i32* %2, align 4
  %13 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 1
  %14 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 5
  %15 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 6
  %16 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 7
  br label %17

; <label>:17:                                     ; preds = %19, %12
  %storemerge1 = phi i32 [ 0, %12 ], [ %56, %19 ]
  %18 = icmp slt i32 %storemerge1, 3
  br i1 %18, label %19, label %57

; <label>:19:                                     ; preds = %17
  %20 = sext i32 %storemerge1 to i64
  %21 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %20
  %22 = load double, double* %21, align 8
  %23 = mul nsw i32 %storemerge1, 9
  %24 = add nsw i32 %23, 10
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %25
  store double %22, double* %26, align 8
  %27 = load double, double* %13, align 8
  %28 = fadd double %27, %22
  store double %28, double* %13, align 8
  %29 = sext i32 %storemerge1 to i64
  %30 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %29
  %31 = load double, double* %30, align 8
  %32 = mul nsw i32 %storemerge1, 9
  %33 = add nsw i32 %32, 14
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %34
  store double %31, double* %35, align 8
  %36 = load double, double* %14, align 8
  %37 = fadd double %36, %31
  store double %37, double* %14, align 8
  %38 = sext i32 %storemerge1 to i64
  %39 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %38
  %40 = load double, double* %39, align 8
  %41 = mul nsw i32 %storemerge1, 9
  %42 = add nsw i32 %41, 15
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %43
  store double %40, double* %44, align 8
  %45 = load double, double* %15, align 16
  %46 = fadd double %45, %40
  store double %46, double* %15, align 16
  %47 = sext i32 %storemerge1 to i64
  %48 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %47
  %49 = load double, double* %48, align 8
  %50 = mul nsw i32 %storemerge1, 9
  %51 = add nsw i32 %50, 16
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %52
  store double %49, double* %53, align 8
  %54 = load double, double* %16, align 8
  %55 = fadd double %54, %49
  store double %55, double* %16, align 8
  %56 = add nsw i32 %storemerge1, 1
  br label %17

; <label>:57:                                     ; preds = %17
  store i32 %storemerge1, i32* %2, align 4
  %58 = load i64, i64* bitcast (double* @timer_comm_all to i64*), align 8
  %59 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 37
  %60 = bitcast double* %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = load i64, i64* bitcast (double* @timer_calc_all to i64*), align 8
  %62 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 38
  %63 = bitcast double* %62 to i64*
  store i64 %61, i64* %63, align 16
  %64 = load i64, i64* bitcast (double* @timer_cs_all to i64*), align 8
  %65 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 39
  %66 = bitcast double* %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = load i64, i64* bitcast (double* @timer_cs_calc to i64*), align 8
  %68 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 41
  %69 = bitcast double* %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = load i64, i64* bitcast (double* @timer_refine_all to i64*), align 8
  %71 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 42
  %72 = bitcast double* %71 to i64*
  store i64 %70, i64* %72, align 16
  %73 = load i64, i64* bitcast (double* @timer_refine_co to i64*), align 8
  %74 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 43
  %75 = bitcast double* %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = load i64, i64* bitcast (double* @timer_refine_mr to i64*), align 8
  %77 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 44
  %78 = bitcast double* %77 to i64*
  store i64 %76, i64* %78, align 16
  %79 = load i64, i64* bitcast (double* @timer_refine_cc to i64*), align 8
  %80 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 45
  %81 = bitcast double* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = load i64, i64* bitcast (double* @timer_refine_sb to i64*), align 8
  %83 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 46
  %84 = bitcast double* %83 to i64*
  store i64 %82, i64* %84, align 16
  %85 = load i64, i64* bitcast (double* @timer_cb_all to i64*), align 8
  %86 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 47
  %87 = bitcast double* %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = load i64, i64* bitcast (double* @timer_target_all to i64*), align 8
  %89 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 52
  %90 = bitcast double* %89 to i64*
  store i64 %88, i64* %90, align 16
  %91 = load i64, i64* bitcast (double* @timer_target_rb to i64*), align 8
  %92 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 53
  %93 = bitcast double* %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = load i64, i64* bitcast (double* @timer_target_dc to i64*), align 8
  %95 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 54
  %96 = bitcast double* %95 to i64*
  store i64 %94, i64* %96, align 16
  %97 = load i64, i64* bitcast (double* @timer_target_cb to i64*), align 8
  %98 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 58
  %99 = bitcast double* %98 to i64*
  store i64 %97, i64* %99, align 16
  %100 = load i64, i64* bitcast (double* @timer_target_ab to i64*), align 8
  %101 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 59
  %102 = bitcast double* %101 to i64*
  store i64 %100, i64* %102, align 8
  %103 = load i64, i64* bitcast (double* @timer_target_da to i64*), align 8
  %104 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 60
  %105 = bitcast double* %104 to i64*
  store i64 %103, i64* %105, align 16
  %106 = load i64, i64* bitcast (double* @timer_target_sb to i64*), align 8
  %107 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 61
  %108 = bitcast double* %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = load i64, i64* bitcast (double* @timer_plot to i64*), align 8
  %110 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 67
  %111 = bitcast double* %110 to i64*
  store i64 %109, i64* %111, align 8
  br label %112

; <label>:112:                                    ; preds = %114, %57
  %storemerge2 = phi i32 [ 0, %57 ], [ %118, %114 ]
  %113 = icmp slt i32 %storemerge2, 9
  br i1 %113, label %114, label %119

; <label>:114:                                    ; preds = %112
  %115 = add nsw i32 %storemerge2, 68
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %116
  store double 0.000000e+00, double* %117, align 8
  %118 = add nsw i32 %storemerge2, 1
  br label %112

; <label>:119:                                    ; preds = %112
  store i32 %storemerge2, i32* %2, align 4
  %120 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 74
  %121 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 75
  %122 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 76
  br label %123

; <label>:123:                                    ; preds = %125, %119
  %storemerge3 = phi i32 [ 0, %119 ], [ %156, %125 ]
  %124 = icmp slt i32 %storemerge3, 3
  br i1 %124, label %125, label %157

; <label>:125:                                    ; preds = %123
  %126 = sext i32 %storemerge3 to i64
  %127 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = sitofp i32 %128 to double
  %130 = mul nsw i32 %storemerge3, 9
  %131 = add nsw i32 %130, 83
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %132
  store double %129, double* %133, align 8
  %134 = load double, double* %120, align 16
  %135 = fadd double %134, %129
  store double %135, double* %120, align 16
  %136 = sext i32 %storemerge3 to i64
  %137 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = sitofp i32 %138 to double
  %140 = mul nsw i32 %storemerge3, 9
  %141 = add nsw i32 %140, 84
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %142
  store double %139, double* %143, align 8
  %144 = load double, double* %121, align 8
  %145 = fadd double %144, %139
  store double %145, double* %121, align 8
  %146 = sext i32 %storemerge3 to i64
  %147 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sitofp i32 %148 to double
  %150 = mul nsw i32 %storemerge3, 9
  %151 = add nsw i32 %150, 85
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %152
  store double %149, double* %153, align 8
  %154 = load double, double* %122, align 16
  %155 = fadd double %154, %149
  store double %155, double* %122, align 16
  %156 = add nsw i32 %storemerge3, 1
  br label %123

; <label>:157:                                    ; preds = %123
  store i32 %storemerge3, i32* %2, align 4
  %158 = load i32, i32* @num_refined, align 4
  %159 = sitofp i32 %158 to double
  %160 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 104
  store double %159, double* %160, align 16
  %161 = load i32, i32* @num_reformed, align 4
  %162 = sitofp i32 %161 to double
  %163 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 105
  store double %162, double* %163, align 8
  %164 = load i32, i32* @counter_malloc, align 4
  %165 = sitofp i32 %164 to double
  %166 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 110
  store double %165, double* %166, align 16
  %167 = load i64, i64* bitcast (double* @size_malloc to i64*), align 8
  %168 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 111
  %169 = bitcast double* %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = load i32, i32* @counter_malloc_init, align 4
  %171 = sitofp i32 %170 to double
  %172 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 112
  store double %171, double* %172, align 16
  %173 = load i64, i64* bitcast (double* @size_malloc_init to i64*), align 8
  %174 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 113
  %175 = bitcast double* %174 to i64*
  store i64 %173, i64* %175, align 8
  %176 = load i32, i32* @counter_malloc, align 4
  %177 = load i32, i32* @counter_malloc_init, align 4
  %178 = sub nsw i32 %176, %177
  %179 = sitofp i32 %178 to double
  %180 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 114
  store double %179, double* %180, align 16
  %181 = load double, double* @size_malloc, align 8
  %182 = load double, double* @size_malloc_init, align 8
  %183 = fsub double %181, %182
  %184 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 115
  store double %183, double* %184, align 8
  br label %185

; <label>:185:                                    ; preds = %187, %157
  %storemerge4 = phi i32 [ 0, %157 ], [ %195, %187 ]
  %186 = icmp slt i32 %storemerge4, 128
  br i1 %186, label %187, label %196

; <label>:187:                                    ; preds = %185
  %188 = sext i32 %storemerge4 to i64
  %189 = getelementptr inbounds [128 x double], [128 x double]* %1, i64 0, i64 %188
  %190 = bitcast double* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = sext i32 %storemerge4 to i64
  %193 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %192
  %194 = bitcast double* %193 to i64*
  store i64 %191, i64* %194, align 8
  %195 = add nsw i32 %storemerge4, 1
  br label %185

; <label>:196:                                    ; preds = %185
  store i32 %storemerge4, i32* %2, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @init_profile() #0 {
  %1 = alloca i32, align 4
  store double 0.000000e+00, double* @timer_all, align 8
  store double 0.000000e+00, double* @timer_comm_all, align 8
  br label %2

; <label>:2:                                      ; preds = %4, %0
  %storemerge = phi i32 [ 0, %0 ], [ %13, %4 ]
  %3 = icmp slt i32 %storemerge, 3
  br i1 %3, label %4, label %14

; <label>:4:                                      ; preds = %2
  %5 = sext i32 %storemerge to i64
  %6 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %5
  store double 0.000000e+00, double* %6, align 8
  %7 = sext i32 %storemerge to i64
  %8 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %7
  store double 0.000000e+00, double* %8, align 8
  %9 = sext i32 %storemerge to i64
  %10 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %9
  store double 0.000000e+00, double* %10, align 8
  %11 = sext i32 %storemerge to i64
  %12 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %11
  store double 0.000000e+00, double* %12, align 8
  %13 = add nsw i32 %storemerge, 1
  br label %2

; <label>:14:                                     ; preds = %2
  store i32 %storemerge, i32* %1, align 4
  store double 0.000000e+00, double* @timer_calc_all, align 8
  store double 0.000000e+00, double* @timer_cs_all, align 8
  store double 0.000000e+00, double* @timer_cs_calc, align 8
  store double 0.000000e+00, double* @timer_refine_all, align 8
  store double 0.000000e+00, double* @timer_refine_co, align 8
  store double 0.000000e+00, double* @timer_refine_mr, align 8
  store double 0.000000e+00, double* @timer_refine_cc, align 8
  store double 0.000000e+00, double* @timer_refine_sb, align 8
  store double 0.000000e+00, double* @timer_cb_all, align 8
  store double 0.000000e+00, double* @timer_target_all, align 8
  store double 0.000000e+00, double* @timer_target_rb, align 8
  store double 0.000000e+00, double* @timer_target_dc, align 8
  store double 0.000000e+00, double* @timer_target_cb, align 8
  store double 0.000000e+00, double* @timer_target_ab, align 8
  store double 0.000000e+00, double* @timer_target_da, align 8
  store double 0.000000e+00, double* @timer_target_sb, align 8
  store double 0.000000e+00, double* @timer_plot, align 8
  store i64 0, i64* @total_blocks, align 8
  store i32 0, i32* @nrs, align 4
  store i32 0, i32* @nps, align 4
  store i32 0, i32* @num_refined, align 4
  store i32 0, i32* @num_reformed, align 4
  br label %15

; <label>:15:                                     ; preds = %17, %14
  %storemerge1 = phi i32 [ 0, %14 ], [ %24, %17 ]
  %16 = icmp slt i32 %storemerge1, 3
  br i1 %16, label %17, label %25

; <label>:17:                                     ; preds = %15
  %18 = sext i32 %storemerge1 to i64
  %19 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %18
  store i32 0, i32* %19, align 4
  %20 = sext i32 %storemerge1 to i64
  %21 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %20
  store i32 0, i32* %21, align 4
  %22 = sext i32 %storemerge1 to i64
  %23 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %22
  store i32 0, i32* %23, align 4
  %24 = add nsw i32 %storemerge1, 1
  br label %15

; <label>:25:                                     ; preds = %15
  store i32 %storemerge1, i32* %1, align 4
  store i32 0, i32* @total_red, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @refine(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca %struct.block*, align 8
  store i32 %0, i32* %2, align 4
  store double 0.000000e+00, double* %10, align 8
  %12 = call double @timer()
  store double %12, double* %8, align 8
  %13 = icmp eq i32 %0, 0
  %num_refine.block_change = select i1 %13, i32* @num_refine, i32* @block_change
  %storemerge = load i32, i32* %num_refine.block_change, align 4
  store i32 %storemerge, i32* %6, align 4
  %14 = load i32, i32* %6, align 4
  %.promoted10 = load i32, i32* %4, align 1
  %.promoted13 = load i32, i32* %5, align 1
  %.promoted16 = load %struct.block*, %struct.block** %11, align 1
  %.promoted = load double, double* %9, align 1
  %.promoted20 = load double, double* %10, align 1
  br label %15

; <label>:15:                                     ; preds = %74, %1
  %16 = phi double [ %.promoted20, %1 ], [ %97, %74 ]
  %17 = phi double [ %.promoted, %1 ], [ %91, %74 ]
  %.lcssa18 = phi %struct.block* [ %.promoted16, %1 ], [ %.lcssa17, %74 ]
  %storemerge8.lcssa15 = phi i32 [ %.promoted13, %1 ], [ %storemerge8.lcssa14, %74 ]
  %storemerge7.lcssa911 = phi i32 [ %.promoted10, %1 ], [ %storemerge7, %74 ]
  %storemerge1 = phi i32 [ 0, %1 ], [ %98, %74 ]
  %18 = icmp slt i32 %storemerge1, %14
  br i1 %18, label %19, label %99

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @num_refine, align 4
  %21 = load i32*, i32** @num_blocks, align 8
  br label %22

; <label>:22:                                     ; preds = %30, %19
  %storemerge7 = phi i32 [ %20, %19 ], [ %31, %30 ]
  %23 = icmp sgt i32 %storemerge7, -1
  br i1 %23, label %24, label %.loopexit

; <label>:24:                                     ; preds = %22
  %25 = sext i32 %storemerge7 to i64
  %26 = getelementptr inbounds i32, i32* %21, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

; <label>:29:                                     ; preds = %24
  store i32 %storemerge7, i32* @cur_max_level, align 4
  br label %.loopexit

; <label>:30:                                     ; preds = %24
  %31 = add nsw i32 %storemerge7, -1
  br label %22

.loopexit:                                        ; preds = %22, %29
  call void @reset_all()
  %32 = load i32, i32* @uniform_refine, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %65, label %34

; <label>:34:                                     ; preds = %.loopexit
  br label %35

; <label>:35:                                     ; preds = %63, %34
  %36 = phi %struct.block* [ %.lcssa18, %34 ], [ %51, %63 ]
  %storemerge8 = phi i32 [ 0, %34 ], [ %64, %63 ]
  %37 = load i32*, i32** @sorted_index, align 8
  %38 = load i32, i32* @num_refine, align 4
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %37, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %storemerge8, %42
  br i1 %43, label %44, label %74

; <label>:44:                                     ; preds = %35
  %45 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %46 = sext i32 %storemerge8 to i64
  %47 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %45, i64 %46, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.block*, %struct.block** @blocks, align 8
  %50 = sext i32 %48 to i64
  %51 = getelementptr inbounds %struct.block, %struct.block* %49, i64 %50
  %52 = getelementptr inbounds %struct.block, %struct.block* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %63

; <label>:55:                                     ; preds = %44
  %56 = getelementptr inbounds %struct.block, %struct.block* %51, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* @num_refine, align 4
  %59 = icmp slt i32 %57, %58
  %60 = getelementptr inbounds %struct.block, %struct.block* %51, i64 0, i32 2
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %55
  store i32 1, i32* %60, align 8
  br label %63

; <label>:62:                                     ; preds = %55
  store i32 0, i32* %60, align 8
  br label %63

; <label>:63:                                     ; preds = %44, %62, %61
  %64 = add nsw i32 %storemerge8, 1
  br label %35

; <label>:65:                                     ; preds = %.loopexit
  %66 = call double @timer()
  call void @check_objects()
  %67 = call double @timer()
  %68 = fsub double %67, %66
  %69 = load double, double* @timer_refine_co, align 8
  %70 = fadd double %69, %68
  store double %70, double* @timer_refine_co, align 8
  %71 = call double @timer()
  %72 = fsub double %71, %66
  %73 = fadd double %16, %72
  br label %74

; <label>:74:                                     ; preds = %35, %65
  %75 = phi double [ %73, %65 ], [ %16, %35 ]
  %.lcssa17 = phi %struct.block* [ %.lcssa18, %65 ], [ %36, %35 ]
  %storemerge8.lcssa14 = phi i32 [ %storemerge8.lcssa15, %65 ], [ %storemerge8, %35 ]
  %76 = call double @timer()
  %77 = call i32 @refine_level()
  %78 = call double @timer()
  %79 = fsub double %78, %76
  %80 = load double, double* @timer_refine_mr, align 8
  %81 = fadd double %80, %79
  store double %81, double* @timer_refine_mr, align 8
  %82 = fsub double %78, %76
  %83 = fadd double %75, %82
  %84 = call double @timer()
  call void @split_blocks()
  %85 = call double @timer()
  %86 = fsub double %85, %84
  %87 = load double, double* @timer_refine_sb, align 8
  %88 = fadd double %87, %86
  store double %88, double* @timer_refine_sb, align 8
  %89 = fsub double %85, %84
  %90 = fadd double %83, %89
  %91 = call double @timer()
  call void @consolidate_blocks()
  %92 = call double @timer()
  %93 = fsub double %92, %91
  %94 = load double, double* @timer_cb_all, align 8
  %95 = fadd double %94, %93
  store double %95, double* @timer_cb_all, align 8
  %96 = fsub double %92, %91
  %97 = fadd double %90, %96
  %98 = add nsw i32 %storemerge1, 1
  br label %15

; <label>:99:                                     ; preds = %15
  store i32 %storemerge7.lcssa911, i32* %4, align 1
  store i32 %storemerge8.lcssa15, i32* %5, align 1
  store %struct.block* %.lcssa18, %struct.block** %11, align 1
  store i32 %storemerge1, i32* %3, align 4
  store double %17, double* %9, align 1
  store double %16, double* %10, align 1
  %100 = load i32, i32* @target_active, align 4
  %101 = icmp eq i32 %100, 0
  %102 = load i32, i32* @target_max, align 4
  %103 = icmp eq i32 %102, 0
  %or.cond = and i1 %101, %103
  %104 = load i32, i32* @target_min, align 4
  %105 = icmp eq i32 %104, 0
  %or.cond24 = and i1 %or.cond, %105
  br i1 %or.cond24, label %189, label %106

; <label>:106:                                    ; preds = %99
  %107 = load i32, i32* @my_pe, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %122

; <label>:109:                                    ; preds = %106
  %110 = load i32, i32* %2, align 4
  br label %111

; <label>:111:                                    ; preds = %114, %109
  %storemerge4 = phi i32 [ 0, %109 ], [ %120, %114 ]
  %112 = load i32, i32* @num_refine, align 4
  %113 = icmp sgt i32 %storemerge4, %112
  br i1 %113, label %121, label %114

; <label>:114:                                    ; preds = %111
  %115 = load i32*, i32** @num_blocks, align 8
  %116 = sext i32 %storemerge4 to i64
  %117 = getelementptr inbounds i32, i32* %115, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.201, i64 0, i64 0), i32 %storemerge4, i32 %110, i32 %118) #6
  %120 = add nsw i32 %storemerge4, 1
  br label %111

; <label>:121:                                    ; preds = %111
  store i32 %storemerge4, i32* %4, align 4
  %putchar5 = call i32 @putchar(i32 10)
  br label %122

; <label>:122:                                    ; preds = %106, %121
  %123 = call double @timer()
  store double %123, double* %9, align 8
  %124 = load i32*, i32** @num_blocks, align 8
  %125 = load i32, i32* %124, align 4
  store i32 %125, i32* @global_active, align 4
  br label %126

; <label>:126:                                    ; preds = %129, %122
  %storemerge6 = phi i32 [ 1, %122 ], [ %136, %129 ]
  %127 = load i32, i32* @num_refine, align 4
  %128 = icmp sgt i32 %storemerge6, %127
  br i1 %128, label %137, label %129

; <label>:129:                                    ; preds = %126
  %130 = load i32*, i32** @num_blocks, align 8
  %131 = sext i32 %storemerge6 to i64
  %132 = getelementptr inbounds i32, i32* %130, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* @global_active, align 4
  %135 = add nsw i32 %134, %133
  store i32 %135, i32* @global_active, align 4
  %136 = add nsw i32 %storemerge6, 1
  br label %126

; <label>:137:                                    ; preds = %126
  store i32 %storemerge6, i32* %3, align 4
  %138 = load i32, i32* @target_active, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %147, label %140

; <label>:140:                                    ; preds = %137
  %141 = load i32, i32* @global_active, align 4
  %142 = load i32, i32* @num_pes, align 4
  %143 = load i32, i32* @target_active, align 4
  %144 = mul nsw i32 %142, %143
  %145 = add nsw i32 %144, 3
  %146 = icmp sgt i32 %141, %145
  br i1 %146, label %156, label %147

; <label>:147:                                    ; preds = %137, %140
  %148 = load i32, i32* @target_max, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %160, label %150

; <label>:150:                                    ; preds = %147
  %151 = load i32, i32* @global_active, align 4
  %152 = load i32, i32* @num_pes, align 4
  %153 = load i32, i32* @target_max, align 4
  %154 = mul nsw i32 %152, %153
  %155 = icmp sgt i32 %151, %154
  br i1 %155, label %156, label %160

; <label>:156:                                    ; preds = %150, %140
  %157 = call i32 @reduce_blocks() #6
  %158 = load i32, i32* %7, align 4
  %159 = add nsw i32 %158, %157
  store i32 %159, i32* %7, align 4
  br label %180

; <label>:160:                                    ; preds = %147, %150
  %161 = load i32, i32* @target_active, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %170, label %163

; <label>:163:                                    ; preds = %160
  %164 = load i32, i32* @global_active, align 4
  %165 = load i32, i32* @num_pes, align 4
  %166 = load i32, i32* @target_active, align 4
  %167 = mul nsw i32 %165, %166
  %168 = add nsw i32 %167, -3
  %169 = icmp slt i32 %164, %168
  br i1 %169, label %179, label %170

; <label>:170:                                    ; preds = %160, %163
  %171 = load i32, i32* @target_min, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %180, label %173

; <label>:173:                                    ; preds = %170
  %174 = load i32, i32* @global_active, align 4
  %175 = load i32, i32* @num_pes, align 4
  %176 = load i32, i32* @target_min, align 4
  %177 = mul nsw i32 %175, %176
  %178 = icmp slt i32 %174, %177
  br i1 %178, label %179, label %180

; <label>:179:                                    ; preds = %173, %163
  call void @add_blocks() #6
  br label %180

; <label>:180:                                    ; preds = %173, %179, %170, %156
  %181 = call double @timer()
  %182 = load double, double* %9, align 8
  %183 = fsub double %181, %182
  %184 = load double, double* @timer_target_all, align 8
  %185 = fadd double %184, %183
  store double %185, double* @timer_target_all, align 8
  %186 = fsub double %181, %182
  %187 = load double, double* %10, align 8
  %188 = fadd double %187, %186
  store double %188, double* %10, align 8
  br label %189

; <label>:189:                                    ; preds = %99, %180
  %190 = call double @timer()
  store double %190, double* %9, align 8
  %191 = load i32, i32* @num_active, align 4
  %192 = load i32, i32* @local_max_b, align 4
  %193 = icmp sgt i32 %191, %192
  br i1 %193, label %194, label %196

; <label>:194:                                    ; preds = %189
  %195 = load i32, i32* @num_active, align 4
  store i32 %195, i32* @local_max_b, align 4
  br label %196

; <label>:196:                                    ; preds = %194, %189
  %197 = load i32, i32* @local_max_b, align 4
  %198 = load i32, i32* @global_max_b, align 4
  %199 = icmp sgt i32 %197, %198
  br i1 %199, label %200, label %202

; <label>:200:                                    ; preds = %196
  %201 = load i32, i32* @local_max_b, align 4
  store i32 %201, i32* @global_max_b, align 4
  br label %202

; <label>:202:                                    ; preds = %200, %196
  %203 = load i32, i32* %2, align 4
  br label %204

; <label>:204:                                    ; preds = %231, %202
  %storemerge2 = phi i32 [ 0, %202 ], [ %232, %231 ]
  %205 = load i32, i32* @num_refine, align 4
  %206 = icmp sgt i32 %storemerge2, %205
  br i1 %206, label %233, label %207

; <label>:207:                                    ; preds = %204
  %208 = icmp eq i32 %storemerge2, 0
  %209 = load i32*, i32** @num_blocks, align 8
  br i1 %208, label %210, label %212

; <label>:210:                                    ; preds = %207
  %211 = load i32, i32* %209, align 4
  br label %218

; <label>:212:                                    ; preds = %207
  %213 = sext i32 %storemerge2 to i64
  %214 = getelementptr inbounds i32, i32* %209, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* @global_active, align 4
  %217 = add nsw i32 %216, %215
  br label %218

; <label>:218:                                    ; preds = %212, %210
  %storemerge3 = phi i32 [ %211, %210 ], [ %217, %212 ]
  store i32 %storemerge3, i32* @global_active, align 4
  %219 = load i32, i32* @my_pe, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %231

; <label>:221:                                    ; preds = %218
  %222 = load i32, i32* @report_perf, align 4
  %223 = and i32 %222, 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %231, label %225

; <label>:225:                                    ; preds = %221
  %226 = load i32*, i32** @num_blocks, align 8
  %227 = sext i32 %storemerge2 to i64
  %228 = getelementptr inbounds i32, i32* %226, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.203, i64 0, i64 0), i32 %storemerge2, i32 %203, i32 %229) #6
  br label %231

; <label>:231:                                    ; preds = %225, %218, %221
  %232 = add nsw i32 %storemerge2, 1
  br label %204

; <label>:233:                                    ; preds = %204
  store i32 %storemerge2, i32* %4, align 4
  %234 = load i32, i32* @my_pe, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %241

; <label>:236:                                    ; preds = %233
  %237 = load i32, i32* @report_perf, align 4
  %238 = and i32 %237, 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %241, label %240

; <label>:240:                                    ; preds = %236
  %putchar = call i32 @putchar(i32 10)
  br label %241

; <label>:241:                                    ; preds = %236, %233, %240
  %242 = call double @timer()
  %243 = load double, double* %9, align 8
  %244 = fsub double %242, %243
  %245 = load double, double* %10, align 8
  %246 = fadd double %245, %244
  store double %246, double* %10, align 8
  %247 = call double @timer()
  %248 = load double, double* %8, align 8
  %249 = fsub double %247, %248
  %250 = fsub double %249, %246
  %251 = load double, double* @timer_refine_cc, align 8
  %252 = fadd double %251, %250
  store double %252, double* @timer_refine_cc, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @reset_all() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.block*, align 8
  %5 = alloca %struct.parent*, align 8
  %.promoted10 = load i32, i32* %1, align 1
  %.promoted12 = load %struct.block*, %struct.block** %4, align 1
  br label %6

; <label>:6:                                      ; preds = %29, %0
  %7 = phi %struct.block* [ %.promoted12, %0 ], [ %23, %29 ]
  %8 = phi i32 [ %.promoted10, %0 ], [ %20, %29 ]
  %storemerge = phi i32 [ 0, %0 ], [ %30, %29 ]
  %9 = load i32*, i32** @sorted_index, align 8
  %10 = load i32, i32* @num_refine, align 4
  %11 = add nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %9, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %storemerge, %14
  br i1 %15, label %16, label %31

; <label>:16:                                     ; preds = %6
  %17 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %18 = sext i32 %storemerge to i64
  %19 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %17, i64 %18, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.block*, %struct.block** @blocks, align 8
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds %struct.block, %struct.block* %21, i64 %22
  %24 = getelementptr inbounds %struct.block, %struct.block* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %16
  %28 = getelementptr inbounds %struct.block, %struct.block* %23, i64 0, i32 2
  store i32 -1, i32* %28, align 8
  br label %29

; <label>:29:                                     ; preds = %16, %27
  %30 = add nsw i32 %storemerge, 1
  br label %6

; <label>:31:                                     ; preds = %6
  store i32 %storemerge, i32* %3, align 4
  store i32 %8, i32* %1, align 1
  store %struct.block* %7, %struct.block** %4, align 1
  %.promoted = load i32, i32* %2, align 1
  %.promoted7 = load %struct.parent*, %struct.parent** %5, align 1
  br label %32

; <label>:32:                                     ; preds = %86, %31
  %33 = phi %struct.parent* [ %.promoted7, %31 ], [ %39, %86 ]
  %storemerge3.lcssa5 = phi i32 [ %.promoted, %31 ], [ %storemerge3.lcssa4, %86 ]
  %storemerge1 = phi i32 [ 0, %31 ], [ %87, %86 ]
  %34 = load i32, i32* @max_active_parent, align 4
  %35 = icmp slt i32 %storemerge1, %34
  br i1 %35, label %36, label %88

; <label>:36:                                     ; preds = %32
  %37 = load %struct.parent*, %struct.parent** @parents, align 8
  %38 = sext i32 %storemerge1 to i64
  %39 = getelementptr inbounds %struct.parent, %struct.parent* %37, i64 %38
  %40 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %43, label %86

; <label>:43:                                     ; preds = %36
  %44 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 5
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 5
  br label %46

; <label>:46:                                     ; preds = %54, %43
  %storemerge2 = phi i32 [ 0, %43 ], [ %55, %54 ]
  %47 = icmp slt i32 %storemerge2, 8
  br i1 %47, label %48, label %56

; <label>:48:                                     ; preds = %46
  %49 = sext i32 %storemerge2 to i64
  %50 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %54

; <label>:53:                                     ; preds = %48
  store i32 0, i32* %45, align 4
  br label %54

; <label>:54:                                     ; preds = %48, %53
  %55 = add nsw i32 %storemerge2, 1
  br label %46

; <label>:56:                                     ; preds = %46
  %57 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %86

; <label>:60:                                     ; preds = %56
  %61 = load %struct.block*, %struct.block** @blocks, align 8
  %62 = load %struct.block*, %struct.block** @blocks, align 8
  br label %63

; <label>:63:                                     ; preds = %84, %60
  %storemerge3 = phi i32 [ 0, %60 ], [ %85, %84 ]
  %64 = icmp slt i32 %storemerge3, 8
  br i1 %64, label %65, label %86

; <label>:65:                                     ; preds = %63
  %66 = sext i32 %storemerge3 to i64
  %67 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %84

; <label>:70:                                     ; preds = %65
  %71 = sext i32 %storemerge3 to i64
  %72 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.block, %struct.block* %61, i64 %74, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %78, label %84

; <label>:78:                                     ; preds = %70
  %79 = sext i32 %storemerge3 to i64
  %80 = getelementptr inbounds %struct.parent, %struct.parent* %39, i64 0, i32 6, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.block, %struct.block* %62, i64 %82, i32 2
  store i32 0, i32* %83, align 8
  br label %84

; <label>:84:                                     ; preds = %65, %78, %70
  %85 = add nsw i32 %storemerge3, 1
  br label %63

; <label>:86:                                     ; preds = %36, %63, %56
  %storemerge3.lcssa4 = phi i32 [ %storemerge3.lcssa5, %36 ], [ %storemerge2, %56 ], [ %storemerge3, %63 ]
  %87 = add nsw i32 %storemerge1, 1
  br label %32

; <label>:88:                                     ; preds = %32
  store i32 %storemerge3.lcssa5, i32* %2, align 1
  store %struct.parent* %33, %struct.parent** %5, align 1
  store i32 %storemerge1, i32* %1, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @refine_level() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.block*, align 8
  %12 = alloca %struct.parent*, align 8
  %13 = load i32, i32* @cur_max_level, align 4
  %.promoted174 = load i32, i32* %5, align 1
  %.promoted176 = load i32, i32* %3, align 1
  %.promoted179 = load i32, i32* %8, align 1
  %.promoted181 = load i32, i32* %9, align 1
  %.promoted183 = load i32, i32* %2, align 1
  %.promoted185 = load i32, i32* %10, align 1
  %.promoted187 = load i32, i32* %4, align 1
  %.promoted189 = load i32, i32* %6, align 1
  %.promoted191 = load i32, i32* %7, align 1
  br label %14

; <label>:14:                                     ; preds = %498, %0
  %.lcssa113144.lcssa.lcssa192 = phi i32 [ %.promoted191, %0 ], [ %.lcssa113144, %498 ]
  %storemerge3.lcssa132.lcssa.lcssa190 = phi i32 [ %.promoted189, %0 ], [ %storemerge3.lcssa132, %498 ]
  %storemerge5.lcssa91.lcssa100.lcssa128.lcssa.lcssa188 = phi i32 [ %.promoted187, %0 ], [ %storemerge5.lcssa91.lcssa100.lcssa128, %498 ]
  %storemerge2.lcssa.lcssa186 = phi i32 [ %.promoted185, %0 ], [ %storemerge2, %498 ]
  %.lcssa8994.lcssa111.lcssa140.lcssa.lcssa184 = phi i32 [ %.promoted183, %0 ], [ %.lcssa8994.lcssa111.lcssa140, %498 ]
  %.lcssa124156.lcssa.lcssa182 = phi i32 [ %.promoted181, %0 ], [ %.lcssa124156, %498 ]
  %.lcssa122152.lcssa.lcssa180 = phi i32 [ %.promoted179, %0 ], [ %.lcssa122152, %498 ]
  %storemerge4.lcssa106.lcssa136.lcssa.lcssa177 = phi i32 [ %.promoted176, %0 ], [ %storemerge4.lcssa106.lcssa136, %498 ]
  %storemerge6.lcssa120.lcssa148.lcssa.lcssa175 = phi i32 [ %.promoted174, %0 ], [ %storemerge6.lcssa120.lcssa148, %498 ]
  %storemerge = phi i32 [ %13, %0 ], [ %499, %498 ]
  %15 = icmp sgt i32 %storemerge, -1
  br i1 %15, label %16, label %500

; <label>:16:                                     ; preds = %14
  %17 = sext i32 %storemerge to i64
  %18 = add nsw i32 %storemerge, 1
  %19 = sext i32 %18 to i64
  %20 = add nsw i32 %storemerge, -1
  %21 = add nsw i32 %storemerge, 1
  br label %22

; <label>:22:                                     ; preds = %310, %16
  %.lcssa4775.lcssa85 = phi i32 [ %.lcssa4775, %310 ], [ %.lcssa8994.lcssa111.lcssa140.lcssa.lcssa184, %16 ]
  %.lcssa4971.lcssa83 = phi i32 [ %.lcssa4971, %310 ], [ %.lcssa124156.lcssa.lcssa182, %16 ]
  %storemerge9.lcssa60.lcssa80 = phi i32 [ %storemerge9.lcssa60, %310 ], [ %storemerge4.lcssa106.lcssa136.lcssa.lcssa177, %16 ]
  %storemerge10.lcssa35.lcssa55.lcssa78 = phi i32 [ %storemerge10.lcssa35.lcssa55, %310 ], [ %storemerge6.lcssa120.lcssa148.lcssa.lcssa175, %16 ]
  %23 = load i32*, i32** @sorted_index, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %17
  %25 = load i32, i32* %24, align 4
  br label %26

; <label>:26:                                     ; preds = %308, %22
  %.lcssa4775 = phi i32 [ %.lcssa4775.lcssa85, %22 ], [ %.lcssa4773, %308 ]
  %.lcssa4971 = phi i32 [ %.lcssa4971.lcssa83, %22 ], [ %.lcssa4968, %308 ]
  %.lcssa2943.lcssa66 = phi i32 [ 0, %22 ], [ %.lcssa2943.lcssa63, %308 ]
  %storemerge9.lcssa60 = phi i32 [ %storemerge9.lcssa60.lcssa80, %22 ], [ %storemerge9.lcssa57, %308 ]
  %storemerge10.lcssa35.lcssa55 = phi i32 [ %storemerge10.lcssa35.lcssa55.lcssa78, %22 ], [ %storemerge10.lcssa35.lcssa52, %308 ]
  %storemerge1 = phi i32 [ %25, %22 ], [ %309, %308 ]
  %27 = load i32*, i32** @sorted_index, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 %19
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %storemerge1, %29
  br i1 %30, label %31, label %310

; <label>:31:                                     ; preds = %26
  %32 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %33 = sext i32 %storemerge1 to i64
  %34 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %32, i64 %33, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %struct.block*, %struct.block** @blocks, align 8
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds %struct.block, %struct.block* %36, i64 %37
  store %struct.block* %38, %struct.block** %11, align 8
  %39 = getelementptr inbounds %struct.block, %struct.block* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %42, label %308

; <label>:42:                                     ; preds = %31
  %43 = load %struct.block*, %struct.block** %11, align 8
  %44 = getelementptr inbounds %struct.block, %struct.block* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %storemerge
  br i1 %46, label %47, label %308

; <label>:47:                                     ; preds = %42
  %48 = load %struct.block*, %struct.block** %11, align 8
  %49 = getelementptr inbounds %struct.block, %struct.block* %48, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1
  %52 = load %struct.block*, %struct.block** %11, align 8
  br i1 %51, label %53, label %230

; <label>:53:                                     ; preds = %47
  %54 = getelementptr inbounds %struct.block, %struct.block* %52, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %115, label %57

; <label>:57:                                     ; preds = %53
  %58 = load %struct.block*, %struct.block** %11, align 8
  %59 = getelementptr inbounds %struct.block, %struct.block* %58, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* @my_pe, align 4
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %63, label %115

; <label>:63:                                     ; preds = %57
  %64 = load %struct.parent*, %struct.parent** @parents, align 8
  %65 = load %struct.block*, %struct.block** %11, align 8
  %66 = getelementptr inbounds %struct.block, %struct.block* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.parent, %struct.parent* %64, i64 %68
  store %struct.parent* %69, %struct.parent** %12, align 8
  %70 = getelementptr inbounds %struct.parent, %struct.parent* %64, i64 %68, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %76

; <label>:73:                                     ; preds = %63
  %74 = load %struct.parent*, %struct.parent** %12, align 8
  %75 = getelementptr inbounds %struct.parent, %struct.parent* %74, i64 0, i32 5
  store i32 0, i32* %75, align 4
  br label %76

; <label>:76:                                     ; preds = %73, %63
  %77 = load %struct.parent*, %struct.parent** %12, align 8
  %78 = load i32, i32* @my_pe, align 4
  %79 = load %struct.parent*, %struct.parent** %12, align 8
  %80 = load %struct.block*, %struct.block** @blocks, align 8
  %81 = load %struct.parent*, %struct.parent** %12, align 8
  %82 = load %struct.block*, %struct.block** @blocks, align 8
  %83 = load %struct.parent*, %struct.parent** %12, align 8
  br label %84

; <label>:84:                                     ; preds = %112, %76
  %85 = phi i32 [ %.lcssa2943.lcssa66, %76 ], [ %113, %112 ]
  %storemerge11 = phi i32 [ 0, %76 ], [ %114, %112 ]
  %86 = icmp slt i32 %storemerge11, 8
  br i1 %86, label %87, label %115

; <label>:87:                                     ; preds = %84
  %88 = sext i32 %storemerge11 to i64
  %89 = getelementptr inbounds %struct.parent, %struct.parent* %77, i64 0, i32 7, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, %78
  br i1 %91, label %92, label %112

; <label>:92:                                     ; preds = %87
  %93 = sext i32 %storemerge11 to i64
  %94 = getelementptr inbounds %struct.parent, %struct.parent* %79, i64 0, i32 6, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, -1
  br i1 %96, label %97, label %112

; <label>:97:                                     ; preds = %92
  %98 = sext i32 %storemerge11 to i64
  %99 = getelementptr inbounds %struct.parent, %struct.parent* %81, i64 0, i32 6, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.block, %struct.block* %80, i64 %101, i32 2
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %105, label %112

; <label>:105:                                    ; preds = %97
  %106 = sext i32 %storemerge11 to i64
  %107 = getelementptr inbounds %struct.parent, %struct.parent* %83, i64 0, i32 6, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.block, %struct.block* %82, i64 %109, i32 2
  store i32 0, i32* %110, align 8
  %111 = add nsw i32 %85, 1
  br label %112

; <label>:112:                                    ; preds = %87, %92, %105, %97
  %113 = phi i32 [ %85, %92 ], [ %85, %87 ], [ %111, %105 ], [ %85, %97 ]
  %114 = add nsw i32 %storemerge11, 1
  br label %84

; <label>:115:                                    ; preds = %84, %53, %57
  %.lcssa2943.lcssa62 = phi i32 [ %.lcssa2943.lcssa66, %53 ], [ %.lcssa2943.lcssa66, %57 ], [ %85, %84 ]
  %storemerge10.lcssa35.lcssa51 = phi i32 [ %storemerge10.lcssa35.lcssa55, %53 ], [ %storemerge10.lcssa35.lcssa55, %57 ], [ %storemerge11, %84 ]
  %116 = load %struct.block*, %struct.block** %11, align 8
  %117 = load %struct.block*, %struct.block** %11, align 8
  %118 = load %struct.block*, %struct.block** %11, align 8
  %119 = load %struct.block*, %struct.block** @blocks, align 8
  %120 = load %struct.block*, %struct.block** %11, align 8
  %121 = load %struct.block*, %struct.block** @blocks, align 8
  %122 = load %struct.block*, %struct.block** @blocks, align 8
  %123 = load %struct.block*, %struct.block** @blocks, align 8
  %124 = load %struct.block*, %struct.block** @blocks, align 8
  %125 = load i32, i32* @my_pe, align 4
  %126 = load %struct.block*, %struct.block** @blocks, align 8
  %127 = load %struct.parent*, %struct.parent** @parents, align 8
  %128 = load i32, i32* @my_pe, align 4
  %129 = load %struct.block*, %struct.block** @blocks, align 8
  %130 = load %struct.block*, %struct.block** @blocks, align 8
  br label %131

; <label>:131:                                    ; preds = %226, %115
  %132 = phi i32 [ %.lcssa4971, %115 ], [ %227, %226 ]
  %133 = phi i32 [ %.lcssa4775, %115 ], [ %228, %226 ]
  %.lcssa2943 = phi i32 [ %.lcssa2943.lcssa62, %115 ], [ %.lcssa2937, %226 ]
  %storemerge10.lcssa35 = phi i32 [ %storemerge10.lcssa35.lcssa51, %115 ], [ %storemerge10.lcssa31, %226 ]
  %storemerge9 = phi i32 [ 0, %115 ], [ %229, %226 ]
  %134 = icmp slt i32 %storemerge9, 6
  br i1 %134, label %135, label %308

; <label>:135:                                    ; preds = %131
  %136 = sext i32 %storemerge9 to i64
  %137 = getelementptr inbounds %struct.block, %struct.block* %116, i64 0, i32 8, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, %storemerge
  %140 = sext i32 %storemerge9 to i64
  br i1 %139, label %141, label %208

; <label>:141:                                    ; preds = %135
  %142 = getelementptr inbounds %struct.block, %struct.block* %117, i64 0, i32 9, i64 %140, i64 0, i64 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp sgt i32 %143, -1
  br i1 %144, label %145, label %226

; <label>:145:                                    ; preds = %141
  %146 = sext i32 %143 to i64
  %147 = getelementptr inbounds %struct.block, %struct.block* %119, i64 %146, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %150, label %226

; <label>:150:                                    ; preds = %145
  %151 = sext i32 %143 to i64
  %152 = getelementptr inbounds %struct.block, %struct.block* %121, i64 %151, i32 2
  store i32 0, i32* %152, align 8
  %153 = add nsw i32 %.lcssa2943, 1
  %154 = sext i32 %143 to i64
  %155 = getelementptr inbounds %struct.block, %struct.block* %122, i64 %154, i32 4
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, -1
  br i1 %157, label %226, label %158

; <label>:158:                                    ; preds = %150
  %159 = sext i32 %143 to i64
  %160 = getelementptr inbounds %struct.block, %struct.block* %124, i64 %159, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, %125
  br i1 %162, label %163, label %226

; <label>:163:                                    ; preds = %158
  %164 = sext i32 %156 to i64
  %165 = getelementptr inbounds %struct.parent, %struct.parent* %127, i64 %164
  store %struct.parent* %165, %struct.parent** %12, align 8
  %166 = getelementptr inbounds %struct.parent, %struct.parent* %127, i64 %164, i32 5
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, -1
  br i1 %168, label %169, label %172

; <label>:169:                                    ; preds = %163
  %170 = load %struct.parent*, %struct.parent** %12, align 8
  %171 = getelementptr inbounds %struct.parent, %struct.parent* %170, i64 0, i32 5
  store i32 0, i32* %171, align 4
  br label %172

; <label>:172:                                    ; preds = %169, %163
  %173 = load %struct.parent*, %struct.parent** %12, align 8
  %174 = load %struct.parent*, %struct.parent** %12, align 8
  %175 = load %struct.parent*, %struct.parent** %12, align 8
  %176 = load %struct.parent*, %struct.parent** %12, align 8
  br label %177

; <label>:177:                                    ; preds = %205, %172
  %178 = phi i32 [ %153, %172 ], [ %206, %205 ]
  %storemerge10 = phi i32 [ 0, %172 ], [ %207, %205 ]
  %179 = icmp slt i32 %storemerge10, 8
  br i1 %179, label %180, label %226

; <label>:180:                                    ; preds = %177
  %181 = sext i32 %storemerge10 to i64
  %182 = getelementptr inbounds %struct.parent, %struct.parent* %173, i64 0, i32 7, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, %128
  br i1 %184, label %185, label %205

; <label>:185:                                    ; preds = %180
  %186 = sext i32 %storemerge10 to i64
  %187 = getelementptr inbounds %struct.parent, %struct.parent* %174, i64 0, i32 6, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = icmp sgt i32 %188, -1
  br i1 %189, label %190, label %205

; <label>:190:                                    ; preds = %185
  %191 = sext i32 %storemerge10 to i64
  %192 = getelementptr inbounds %struct.parent, %struct.parent* %175, i64 0, i32 6, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.block, %struct.block* %129, i64 %194, i32 2
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %198, label %205

; <label>:198:                                    ; preds = %190
  %199 = sext i32 %storemerge10 to i64
  %200 = getelementptr inbounds %struct.parent, %struct.parent* %176, i64 0, i32 6, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %struct.block, %struct.block* %130, i64 %202, i32 2
  store i32 0, i32* %203, align 8
  %204 = add nsw i32 %178, 1
  br label %205

; <label>:205:                                    ; preds = %180, %185, %198, %190
  %206 = phi i32 [ %178, %185 ], [ %178, %180 ], [ %204, %198 ], [ %178, %190 ]
  %207 = add nsw i32 %storemerge10, 1
  br label %177

; <label>:208:                                    ; preds = %135
  %209 = getelementptr inbounds %struct.block, %struct.block* %118, i64 0, i32 8, i64 %140
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %20
  br i1 %211, label %212, label %226

; <label>:212:                                    ; preds = %208
  %213 = sext i32 %storemerge9 to i64
  %214 = getelementptr inbounds %struct.block, %struct.block* %120, i64 0, i32 9, i64 %213, i64 0, i64 0
  %215 = load i32, i32* %214, align 4
  %216 = icmp sgt i32 %215, -1
  br i1 %216, label %217, label %226

; <label>:217:                                    ; preds = %212
  %218 = sext i32 %215 to i64
  %219 = getelementptr inbounds %struct.block, %struct.block* %123, i64 %218, i32 2
  %220 = load i32, i32* %219, align 8
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %226, label %222

; <label>:222:                                    ; preds = %217
  %223 = sext i32 %215 to i64
  %224 = getelementptr inbounds %struct.block, %struct.block* %126, i64 %223, i32 2
  store i32 1, i32* %224, align 8
  %225 = add nsw i32 %.lcssa2943, 1
  br label %226

; <label>:226:                                    ; preds = %145, %177, %150, %158, %141, %212, %217, %222, %208
  %227 = phi i32 [ %132, %141 ], [ %132, %145 ], [ %156, %177 ], [ %156, %150 ], [ %156, %158 ], [ %132, %212 ], [ %132, %217 ], [ %132, %222 ], [ %132, %208 ]
  %228 = phi i32 [ %143, %145 ], [ %143, %177 ], [ %143, %150 ], [ %143, %158 ], [ %143, %141 ], [ %133, %208 ], [ %215, %222 ], [ %215, %217 ], [ %215, %212 ]
  %.lcssa2937 = phi i32 [ %.lcssa2943, %141 ], [ %.lcssa2943, %145 ], [ %153, %150 ], [ %153, %158 ], [ %178, %177 ], [ %.lcssa2943, %208 ], [ %.lcssa2943, %212 ], [ %.lcssa2943, %217 ], [ %225, %222 ]
  %storemerge10.lcssa31 = phi i32 [ %storemerge10.lcssa35, %141 ], [ %storemerge10.lcssa35, %145 ], [ %storemerge10.lcssa35, %150 ], [ %storemerge10.lcssa35, %158 ], [ %storemerge10, %177 ], [ %storemerge10.lcssa35, %212 ], [ %storemerge10.lcssa35, %217 ], [ %storemerge10.lcssa35, %222 ], [ %storemerge10.lcssa35, %208 ]
  %229 = add nsw i32 %storemerge9, 1
  br label %131

; <label>:230:                                    ; preds = %47
  %231 = getelementptr inbounds %struct.block, %struct.block* %52, i64 0, i32 2
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, -1
  br i1 %233, label %234, label %308

; <label>:234:                                    ; preds = %230
  %235 = load %struct.block*, %struct.block** %11, align 8
  %236 = load %struct.block*, %struct.block** %11, align 8
  %237 = getelementptr inbounds %struct.block, %struct.block* %236, i64 0, i32 2
  %238 = getelementptr inbounds %struct.block, %struct.block* %236, i64 0, i32 4
  %239 = load %struct.block*, %struct.block** %11, align 8
  %240 = getelementptr inbounds %struct.block, %struct.block* %239, i64 0, i32 5
  %241 = load i32, i32* @my_pe, align 4
  %242 = load %struct.parent*, %struct.parent** @parents, align 8
  %243 = load i32, i32* @my_pe, align 4
  %244 = load %struct.block*, %struct.block** @blocks, align 8
  %245 = load %struct.block*, %struct.block** @blocks, align 8
  br label %246

; <label>:246:                                    ; preds = %304, %234
  %247 = phi i32 [ %.lcssa4971, %234 ], [ %305, %304 ]
  %248 = phi i32 [ %.lcssa2943.lcssa66, %234 ], [ %306, %304 ]
  %storemerge8.lcssa18 = phi i32 [ %storemerge10.lcssa35.lcssa55, %234 ], [ %storemerge8.lcssa16, %304 ]
  %storemerge7 = phi i32 [ 0, %234 ], [ %307, %304 ]
  %249 = icmp slt i32 %storemerge7, 6
  br i1 %249, label %250, label %308

; <label>:250:                                    ; preds = %246
  %251 = sext i32 %storemerge7 to i64
  %252 = getelementptr inbounds %struct.block, %struct.block* %235, i64 0, i32 8, i64 %251
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, %21
  br i1 %254, label %255, label %304

; <label>:255:                                    ; preds = %250
  store i32 0, i32* %237, align 8
  %256 = add nsw i32 %248, 1
  %257 = load i32, i32* %238, align 8
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %304, label %259

; <label>:259:                                    ; preds = %255
  %260 = load i32, i32* %240, align 4
  %261 = icmp eq i32 %260, %241
  br i1 %261, label %262, label %304

; <label>:262:                                    ; preds = %259
  %263 = sext i32 %257 to i64
  %264 = getelementptr inbounds %struct.parent, %struct.parent* %242, i64 %263
  store %struct.parent* %264, %struct.parent** %12, align 8
  %265 = getelementptr inbounds %struct.parent, %struct.parent* %242, i64 %263, i32 5
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, -1
  br i1 %267, label %268, label %271

; <label>:268:                                    ; preds = %262
  %269 = load %struct.parent*, %struct.parent** %12, align 8
  %270 = getelementptr inbounds %struct.parent, %struct.parent* %269, i64 0, i32 5
  store i32 0, i32* %270, align 4
  br label %271

; <label>:271:                                    ; preds = %268, %262
  %272 = load %struct.parent*, %struct.parent** %12, align 8
  %273 = load %struct.parent*, %struct.parent** %12, align 8
  %274 = load %struct.parent*, %struct.parent** %12, align 8
  %275 = load %struct.parent*, %struct.parent** %12, align 8
  br label %276

; <label>:276:                                    ; preds = %302, %271
  %storemerge8 = phi i32 [ 0, %271 ], [ %303, %302 ]
  %277 = icmp slt i32 %storemerge8, 8
  br i1 %277, label %278, label %304

; <label>:278:                                    ; preds = %276
  %279 = sext i32 %storemerge8 to i64
  %280 = getelementptr inbounds %struct.parent, %struct.parent* %272, i64 0, i32 7, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, %243
  br i1 %282, label %283, label %302

; <label>:283:                                    ; preds = %278
  %284 = sext i32 %storemerge8 to i64
  %285 = getelementptr inbounds %struct.parent, %struct.parent* %273, i64 0, i32 6, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = icmp sgt i32 %286, -1
  br i1 %287, label %288, label %302

; <label>:288:                                    ; preds = %283
  %289 = sext i32 %storemerge8 to i64
  %290 = getelementptr inbounds %struct.parent, %struct.parent* %274, i64 0, i32 6, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds %struct.block, %struct.block* %244, i64 %292, i32 2
  %294 = load i32, i32* %293, align 8
  %295 = icmp eq i32 %294, -1
  br i1 %295, label %296, label %302

; <label>:296:                                    ; preds = %288
  %297 = sext i32 %storemerge8 to i64
  %298 = getelementptr inbounds %struct.parent, %struct.parent* %275, i64 0, i32 6, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %struct.block, %struct.block* %245, i64 %300, i32 2
  store i32 0, i32* %301, align 8
  br label %302

; <label>:302:                                    ; preds = %278, %283, %288, %296
  %303 = add nsw i32 %storemerge8, 1
  br label %276

; <label>:304:                                    ; preds = %250, %276, %255, %259
  %305 = phi i32 [ %247, %250 ], [ %257, %276 ], [ %257, %255 ], [ %257, %259 ]
  %306 = phi i32 [ %248, %250 ], [ %256, %276 ], [ %256, %255 ], [ %256, %259 ]
  %storemerge8.lcssa16 = phi i32 [ %storemerge8.lcssa18, %250 ], [ %storemerge8.lcssa18, %255 ], [ %storemerge8.lcssa18, %259 ], [ %storemerge8, %276 ]
  %307 = add nsw i32 %storemerge7, 1
  br label %246

; <label>:308:                                    ; preds = %31, %42, %230, %246, %131
  %.lcssa4773 = phi i32 [ %.lcssa4775, %42 ], [ %.lcssa4775, %31 ], [ %133, %131 ], [ %.lcssa4775, %246 ], [ %.lcssa4775, %230 ]
  %.lcssa4968 = phi i32 [ %.lcssa4971, %42 ], [ %.lcssa4971, %31 ], [ %132, %131 ], [ %.lcssa4971, %230 ], [ %247, %246 ]
  %.lcssa2943.lcssa63 = phi i32 [ %.lcssa2943.lcssa66, %42 ], [ %.lcssa2943.lcssa66, %31 ], [ %.lcssa2943, %131 ], [ %.lcssa2943.lcssa66, %230 ], [ %248, %246 ]
  %storemerge9.lcssa57 = phi i32 [ %storemerge9.lcssa60, %42 ], [ %storemerge9.lcssa60, %31 ], [ %storemerge9, %131 ], [ %storemerge9.lcssa60, %230 ], [ %storemerge7, %246 ]
  %storemerge10.lcssa35.lcssa52 = phi i32 [ %storemerge10.lcssa35.lcssa55, %42 ], [ %storemerge10.lcssa35.lcssa55, %31 ], [ %storemerge10.lcssa35, %131 ], [ %storemerge10.lcssa35.lcssa55, %230 ], [ %storemerge8.lcssa18, %246 ]
  %309 = add nsw i32 %storemerge1, 1
  br label %26

; <label>:310:                                    ; preds = %26
  %311 = icmp eq i32 %.lcssa2943.lcssa66, 0
  br i1 %311, label %312, label %22

; <label>:312:                                    ; preds = %310
  %313 = sext i32 %storemerge to i64
  %314 = add nsw i32 %storemerge, 1
  %315 = sext i32 %314 to i64
  %316 = add nsw i32 %storemerge, -1
  %317 = add nsw i32 %storemerge, 1
  br label %318

; <label>:318:                                    ; preds = %496, %312
  %.lcssa124156.lcssa172 = phi i32 [ %.lcssa124156, %496 ], [ %.lcssa4971, %312 ]
  %storemerge6.lcssa120.lcssa148.lcssa169 = phi i32 [ %storemerge6.lcssa120.lcssa148, %496 ], [ %storemerge10.lcssa35.lcssa55, %312 ]
  %.lcssa113144.lcssa167 = phi i32 [ %.lcssa113144, %496 ], [ %.lcssa113144.lcssa.lcssa192, %312 ]
  %.lcssa8994.lcssa111.lcssa140.lcssa165 = phi i32 [ %.lcssa8994.lcssa111.lcssa140, %496 ], [ %.lcssa4775, %312 ]
  %storemerge4.lcssa106.lcssa136.lcssa163 = phi i32 [ %storemerge4.lcssa106.lcssa136, %496 ], [ %storemerge9.lcssa60, %312 ]
  %storemerge3.lcssa132.lcssa161 = phi i32 [ %storemerge3.lcssa132, %496 ], [ %storemerge3.lcssa132.lcssa.lcssa190, %312 ]
  %storemerge5.lcssa91.lcssa100.lcssa128.lcssa159 = phi i32 [ %storemerge5.lcssa91.lcssa100.lcssa128, %496 ], [ %storemerge5.lcssa91.lcssa100.lcssa128.lcssa.lcssa188, %312 ]
  %319 = load i32*, i32** @sorted_index, align 8
  %320 = getelementptr inbounds i32, i32* %319, i64 %313
  %321 = load i32, i32* %320, align 4
  br label %322

; <label>:322:                                    ; preds = %494, %318
  %.lcssa124156 = phi i32 [ %.lcssa124156.lcssa172, %318 ], [ %.lcssa124154, %494 ]
  %.lcssa122152 = phi i32 [ 0, %318 ], [ %.lcssa122150, %494 ]
  %storemerge6.lcssa120.lcssa148 = phi i32 [ %storemerge6.lcssa120.lcssa148.lcssa169, %318 ], [ %storemerge6.lcssa120.lcssa146, %494 ]
  %.lcssa113144 = phi i32 [ %.lcssa113144.lcssa167, %318 ], [ %.lcssa113142, %494 ]
  %.lcssa8994.lcssa111.lcssa140 = phi i32 [ %.lcssa8994.lcssa111.lcssa140.lcssa165, %318 ], [ %.lcssa8994.lcssa111.lcssa138, %494 ]
  %storemerge4.lcssa106.lcssa136 = phi i32 [ %storemerge4.lcssa106.lcssa136.lcssa163, %318 ], [ %storemerge4.lcssa106.lcssa134, %494 ]
  %storemerge3.lcssa132 = phi i32 [ %storemerge3.lcssa132.lcssa161, %318 ], [ %storemerge3.lcssa130, %494 ]
  %storemerge5.lcssa91.lcssa100.lcssa128 = phi i32 [ %storemerge5.lcssa91.lcssa100.lcssa128.lcssa159, %318 ], [ %storemerge5.lcssa91.lcssa100.lcssa126, %494 ]
  %storemerge2 = phi i32 [ %321, %318 ], [ %495, %494 ]
  %323 = load i32*, i32** @sorted_index, align 8
  %324 = getelementptr inbounds i32, i32* %323, i64 %315
  %325 = load i32, i32* %324, align 4
  %326 = icmp slt i32 %storemerge2, %325
  br i1 %326, label %327, label %496

; <label>:327:                                    ; preds = %322
  %328 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %329 = sext i32 %storemerge2 to i64
  %330 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %328, i64 %329, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = load %struct.block*, %struct.block** @blocks, align 8
  %333 = sext i32 %331 to i64
  %334 = getelementptr inbounds %struct.block, %struct.block* %332, i64 %333
  store %struct.block* %334, %struct.block** %11, align 8
  %335 = getelementptr inbounds %struct.block, %struct.block* %334, i64 0, i32 0
  %336 = load i32, i32* %335, align 8
  %337 = icmp sgt i32 %336, -1
  br i1 %337, label %338, label %494

; <label>:338:                                    ; preds = %327
  %339 = load %struct.block*, %struct.block** %11, align 8
  %340 = getelementptr inbounds %struct.block, %struct.block* %339, i64 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, %storemerge
  br i1 %342, label %343, label %494

; <label>:343:                                    ; preds = %338
  %344 = load %struct.block*, %struct.block** %11, align 8
  %345 = getelementptr inbounds %struct.block, %struct.block* %344, i64 0, i32 2
  %346 = load i32, i32* %345, align 8
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %494

; <label>:348:                                    ; preds = %343
  %349 = load %struct.block*, %struct.block** %11, align 8
  %350 = load %struct.block*, %struct.block** %11, align 8
  %351 = load %struct.block*, %struct.block** %11, align 8
  %352 = load %struct.block*, %struct.block** @blocks, align 8
  %353 = load %struct.block*, %struct.block** %11, align 8
  %354 = load %struct.block*, %struct.block** %11, align 8
  %355 = load %struct.block*, %struct.block** @blocks, align 8
  %356 = load %struct.block*, %struct.block** @blocks, align 8
  %357 = load %struct.block*, %struct.block** @blocks, align 8
  %358 = load %struct.block*, %struct.block** %11, align 8
  %359 = load %struct.block*, %struct.block** @blocks, align 8
  %360 = load %struct.block*, %struct.block** @blocks, align 8
  %361 = load i32, i32* @my_pe, align 4
  %362 = load %struct.parent*, %struct.parent** @parents, align 8
  %363 = load i32, i32* @my_pe, align 4
  %364 = load %struct.block*, %struct.block** @blocks, align 8
  %365 = load %struct.block*, %struct.block** @blocks, align 8
  br label %366

; <label>:366:                                    ; preds = %489, %348
  %367 = phi i32 [ %.lcssa124156, %348 ], [ %490, %489 ]
  %368 = phi i32 [ %.lcssa122152, %348 ], [ %491, %489 ]
  %storemerge6.lcssa120 = phi i32 [ %storemerge6.lcssa120.lcssa148, %348 ], [ %storemerge6.lcssa115, %489 ]
  %369 = phi i32 [ %.lcssa113144, %348 ], [ %492, %489 ]
  %.lcssa8994.lcssa111 = phi i32 [ %.lcssa8994.lcssa111.lcssa140, %348 ], [ %.lcssa8994.lcssa108, %489 ]
  %storemerge4.lcssa106 = phi i32 [ %storemerge4.lcssa106.lcssa136, %348 ], [ %storemerge4.lcssa103, %489 ]
  %storemerge5.lcssa91.lcssa100 = phi i32 [ %storemerge5.lcssa91.lcssa100.lcssa128, %348 ], [ %storemerge5.lcssa91.lcssa97, %489 ]
  %storemerge3 = phi i32 [ 0, %348 ], [ %493, %489 ]
  %370 = icmp slt i32 %storemerge3, 6
  br i1 %370, label %371, label %494

; <label>:371:                                    ; preds = %366
  %372 = sext i32 %storemerge3 to i64
  %373 = getelementptr inbounds %struct.block, %struct.block* %349, i64 0, i32 8, i64 %372
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, %316
  %376 = sext i32 %storemerge3 to i64
  br i1 %375, label %377, label %440

; <label>:377:                                    ; preds = %371
  %378 = getelementptr inbounds %struct.block, %struct.block* %350, i64 0, i32 9, i64 %376, i64 0, i64 0
  %379 = load i32, i32* %378, align 4
  %380 = icmp sgt i32 %379, -1
  br i1 %380, label %381, label %489

; <label>:381:                                    ; preds = %377
  %382 = sext i32 %379 to i64
  %383 = getelementptr inbounds %struct.block, %struct.block* %352, i64 %382, i32 2
  %384 = load i32, i32* %383, align 8
  %385 = icmp eq i32 %384, -1
  br i1 %385, label %386, label %489

; <label>:386:                                    ; preds = %381
  %387 = sext i32 %379 to i64
  %388 = getelementptr inbounds %struct.block, %struct.block* %355, i64 %387, i32 2
  store i32 0, i32* %388, align 8
  %389 = add nsw i32 %368, 1
  %390 = sext i32 %379 to i64
  %391 = getelementptr inbounds %struct.block, %struct.block* %356, i64 %390, i32 4
  %392 = load i32, i32* %391, align 8
  %393 = icmp eq i32 %392, -1
  br i1 %393, label %489, label %394

; <label>:394:                                    ; preds = %386
  %395 = sext i32 %379 to i64
  %396 = getelementptr inbounds %struct.block, %struct.block* %360, i64 %395, i32 5
  %397 = load i32, i32* %396, align 4
  %398 = icmp eq i32 %397, %361
  br i1 %398, label %399, label %489

; <label>:399:                                    ; preds = %394
  %400 = sext i32 %392 to i64
  %401 = getelementptr inbounds %struct.parent, %struct.parent* %362, i64 %400
  store %struct.parent* %401, %struct.parent** %12, align 8
  %402 = getelementptr inbounds %struct.parent, %struct.parent* %362, i64 %400, i32 5
  %403 = load i32, i32* %402, align 4
  %404 = icmp eq i32 %403, -1
  br i1 %404, label %405, label %489

; <label>:405:                                    ; preds = %399
  %406 = load %struct.parent*, %struct.parent** %12, align 8
  %407 = getelementptr inbounds %struct.parent, %struct.parent* %406, i64 0, i32 5
  store i32 0, i32* %407, align 4
  %408 = load %struct.parent*, %struct.parent** %12, align 8
  %409 = load %struct.parent*, %struct.parent** %12, align 8
  %410 = load %struct.parent*, %struct.parent** %12, align 8
  %411 = load %struct.parent*, %struct.parent** %12, align 8
  br label %412

; <label>:412:                                    ; preds = %438, %405
  %storemerge6 = phi i32 [ 0, %405 ], [ %439, %438 ]
  %413 = icmp slt i32 %storemerge6, 8
  br i1 %413, label %414, label %489

; <label>:414:                                    ; preds = %412
  %415 = sext i32 %storemerge6 to i64
  %416 = getelementptr inbounds %struct.parent, %struct.parent* %408, i64 0, i32 7, i64 %415
  %417 = load i32, i32* %416, align 4
  %418 = icmp eq i32 %417, %363
  br i1 %418, label %419, label %438

; <label>:419:                                    ; preds = %414
  %420 = sext i32 %storemerge6 to i64
  %421 = getelementptr inbounds %struct.parent, %struct.parent* %409, i64 0, i32 6, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = icmp sgt i32 %422, -1
  br i1 %423, label %424, label %438

; <label>:424:                                    ; preds = %419
  %425 = sext i32 %storemerge6 to i64
  %426 = getelementptr inbounds %struct.parent, %struct.parent* %410, i64 0, i32 6, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds %struct.block, %struct.block* %364, i64 %428, i32 2
  %430 = load i32, i32* %429, align 8
  %431 = icmp eq i32 %430, -1
  br i1 %431, label %432, label %438

; <label>:432:                                    ; preds = %424
  %433 = sext i32 %storemerge6 to i64
  %434 = getelementptr inbounds %struct.parent, %struct.parent* %411, i64 0, i32 6, i64 %433
  %435 = load i32, i32* %434, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds %struct.block, %struct.block* %365, i64 %436, i32 2
  store i32 0, i32* %437, align 8
  br label %438

; <label>:438:                                    ; preds = %414, %419, %424, %432
  %439 = add nsw i32 %storemerge6, 1
  br label %412

; <label>:440:                                    ; preds = %371
  %441 = getelementptr inbounds %struct.block, %struct.block* %351, i64 0, i32 8, i64 %376
  %442 = load i32, i32* %441, align 4
  %443 = icmp eq i32 %442, %storemerge
  %444 = sext i32 %storemerge3 to i64
  br i1 %443, label %445, label %458

; <label>:445:                                    ; preds = %440
  %446 = getelementptr inbounds %struct.block, %struct.block* %353, i64 0, i32 9, i64 %444, i64 0, i64 0
  %447 = load i32, i32* %446, align 4
  %448 = icmp sgt i32 %447, -1
  br i1 %448, label %449, label %489

; <label>:449:                                    ; preds = %445
  %450 = sext i32 %447 to i64
  %451 = sdiv i32 %storemerge3, 2
  %452 = shl nsw i32 %451, 1
  %453 = add nsw i32 %storemerge3, 1
  %454 = srem i32 %453, 2
  %455 = add nsw i32 %452, %454
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds %struct.block, %struct.block* %357, i64 %450, i32 7, i64 %456
  store i32 0, i32* %457, align 4
  br label %489

; <label>:458:                                    ; preds = %440
  %459 = getelementptr inbounds %struct.block, %struct.block* %354, i64 0, i32 8, i64 %444
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, %317
  br i1 %461, label %462, label %489

; <label>:462:                                    ; preds = %458
  %463 = sdiv i32 %storemerge3, 2
  %464 = shl nsw i32 %463, 1
  %465 = add nsw i32 %storemerge3, 1
  %466 = srem i32 %465, 2
  %467 = add nsw i32 %464, %466
  %468 = sext i32 %storemerge3 to i64
  %469 = sext i32 %467 to i64
  br label %470

; <label>:470:                                    ; preds = %487, %462
  %.lcssa8994 = phi i32 [ %.lcssa8994.lcssa111, %462 ], [ %475, %487 ]
  %storemerge5.lcssa91 = phi i32 [ %storemerge5.lcssa91.lcssa100, %462 ], [ %storemerge5, %487 ]
  %storemerge4 = phi i32 [ 0, %462 ], [ %488, %487 ]
  %471 = icmp slt i32 %storemerge4, 2
  br i1 %471, label %472, label %489

; <label>:472:                                    ; preds = %470
  %473 = sext i32 %storemerge4 to i64
  br label %474

; <label>:474:                                    ; preds = %485, %472
  %475 = phi i32 [ %.lcssa8994, %472 ], [ %480, %485 ]
  %storemerge5 = phi i32 [ 0, %472 ], [ %486, %485 ]
  %476 = icmp slt i32 %storemerge5, 2
  br i1 %476, label %477, label %487

; <label>:477:                                    ; preds = %474
  %478 = sext i32 %storemerge5 to i64
  %479 = getelementptr inbounds %struct.block, %struct.block* %358, i64 0, i32 9, i64 %468, i64 %473, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = icmp sgt i32 %480, -1
  br i1 %481, label %482, label %485

; <label>:482:                                    ; preds = %477
  %483 = sext i32 %480 to i64
  %484 = getelementptr inbounds %struct.block, %struct.block* %359, i64 %483, i32 7, i64 %469
  store i32 0, i32* %484, align 4
  br label %485

; <label>:485:                                    ; preds = %477, %482
  %486 = add nsw i32 %storemerge5, 1
  br label %474

; <label>:487:                                    ; preds = %474
  %488 = add nsw i32 %storemerge4, 1
  br label %470

; <label>:489:                                    ; preds = %381, %399, %412, %386, %394, %377, %458, %470, %445, %449
  %490 = phi i32 [ %367, %377 ], [ %367, %381 ], [ %392, %399 ], [ %392, %412 ], [ %392, %386 ], [ %392, %394 ], [ %367, %458 ], [ %367, %470 ], [ %367, %445 ], [ %367, %449 ]
  %491 = phi i32 [ %368, %377 ], [ %368, %381 ], [ %389, %399 ], [ %389, %412 ], [ %389, %386 ], [ %389, %394 ], [ %368, %458 ], [ %368, %470 ], [ %368, %445 ], [ %368, %449 ]
  %storemerge6.lcssa115 = phi i32 [ %storemerge6.lcssa120, %377 ], [ %storemerge6.lcssa120, %381 ], [ %storemerge6.lcssa120, %386 ], [ %storemerge6.lcssa120, %394 ], [ %storemerge6.lcssa120, %399 ], [ %storemerge6, %412 ], [ %storemerge6.lcssa120, %458 ], [ %storemerge6.lcssa120, %470 ], [ %storemerge6.lcssa120, %445 ], [ %storemerge6.lcssa120, %449 ]
  %492 = phi i32 [ %369, %381 ], [ %369, %399 ], [ %369, %412 ], [ %369, %386 ], [ %369, %394 ], [ %369, %377 ], [ %369, %449 ], [ %369, %445 ], [ %369, %458 ], [ %467, %470 ]
  %.lcssa8994.lcssa108 = phi i32 [ %379, %381 ], [ %379, %399 ], [ %379, %412 ], [ %379, %386 ], [ %379, %394 ], [ %379, %377 ], [ %447, %449 ], [ %447, %445 ], [ %.lcssa8994.lcssa111, %458 ], [ %.lcssa8994, %470 ]
  %storemerge4.lcssa103 = phi i32 [ %storemerge4.lcssa106, %381 ], [ %storemerge4.lcssa106, %399 ], [ %storemerge4.lcssa106, %412 ], [ %storemerge4.lcssa106, %386 ], [ %storemerge4.lcssa106, %394 ], [ %storemerge4.lcssa106, %377 ], [ %storemerge4.lcssa106, %449 ], [ %storemerge4.lcssa106, %445 ], [ %storemerge4.lcssa106, %458 ], [ %storemerge4, %470 ]
  %storemerge5.lcssa91.lcssa97 = phi i32 [ %storemerge5.lcssa91.lcssa100, %381 ], [ %storemerge5.lcssa91.lcssa100, %399 ], [ %storemerge5.lcssa91.lcssa100, %412 ], [ %storemerge5.lcssa91.lcssa100, %386 ], [ %storemerge5.lcssa91.lcssa100, %394 ], [ %storemerge5.lcssa91.lcssa100, %377 ], [ %storemerge5.lcssa91.lcssa100, %449 ], [ %storemerge5.lcssa91.lcssa100, %445 ], [ %storemerge5.lcssa91.lcssa100, %458 ], [ %storemerge5.lcssa91, %470 ]
  %493 = add nsw i32 %storemerge3, 1
  br label %366

; <label>:494:                                    ; preds = %327, %366, %343, %338
  %.lcssa124154 = phi i32 [ %.lcssa124156, %327 ], [ %.lcssa124156, %343 ], [ %.lcssa124156, %338 ], [ %367, %366 ]
  %.lcssa122150 = phi i32 [ %.lcssa122152, %327 ], [ %.lcssa122152, %343 ], [ %.lcssa122152, %338 ], [ %368, %366 ]
  %storemerge6.lcssa120.lcssa146 = phi i32 [ %storemerge6.lcssa120.lcssa148, %327 ], [ %storemerge6.lcssa120.lcssa148, %343 ], [ %storemerge6.lcssa120.lcssa148, %338 ], [ %storemerge6.lcssa120, %366 ]
  %.lcssa113142 = phi i32 [ %.lcssa113144, %327 ], [ %.lcssa113144, %343 ], [ %.lcssa113144, %338 ], [ %369, %366 ]
  %.lcssa8994.lcssa111.lcssa138 = phi i32 [ %.lcssa8994.lcssa111.lcssa140, %327 ], [ %.lcssa8994.lcssa111.lcssa140, %343 ], [ %.lcssa8994.lcssa111.lcssa140, %338 ], [ %.lcssa8994.lcssa111, %366 ]
  %storemerge4.lcssa106.lcssa134 = phi i32 [ %storemerge4.lcssa106.lcssa136, %327 ], [ %storemerge4.lcssa106.lcssa136, %343 ], [ %storemerge4.lcssa106.lcssa136, %338 ], [ %storemerge4.lcssa106, %366 ]
  %storemerge3.lcssa130 = phi i32 [ %storemerge3.lcssa132, %327 ], [ %storemerge3.lcssa132, %343 ], [ %storemerge3.lcssa132, %338 ], [ %storemerge3, %366 ]
  %storemerge5.lcssa91.lcssa100.lcssa126 = phi i32 [ %storemerge5.lcssa91.lcssa100.lcssa128, %327 ], [ %storemerge5.lcssa91.lcssa100.lcssa128, %343 ], [ %storemerge5.lcssa91.lcssa100.lcssa128, %338 ], [ %storemerge5.lcssa91.lcssa100, %366 ]
  %495 = add nsw i32 %storemerge2, 1
  br label %322

; <label>:496:                                    ; preds = %322
  %497 = icmp eq i32 %.lcssa122152, 0
  br i1 %497, label %498, label %318

; <label>:498:                                    ; preds = %496
  %499 = add nsw i32 %storemerge, -1
  br label %14

; <label>:500:                                    ; preds = %14
  store i32 %storemerge6.lcssa120.lcssa148.lcssa.lcssa175, i32* %5, align 1
  store i32 %storemerge4.lcssa106.lcssa136.lcssa.lcssa177, i32* %3, align 1
  store i32 %storemerge, i32* %1, align 4
  store i32 %.lcssa122152.lcssa.lcssa180, i32* %8, align 1
  store i32 %.lcssa124156.lcssa.lcssa182, i32* %9, align 1
  store i32 %.lcssa8994.lcssa111.lcssa140.lcssa.lcssa184, i32* %2, align 1
  store i32 %storemerge2.lcssa.lcssa186, i32* %10, align 1
  store i32 %storemerge5.lcssa91.lcssa100.lcssa128.lcssa.lcssa188, i32* %4, align 1
  store i32 %storemerge3.lcssa132.lcssa.lcssa190, i32* %6, align 1
  store i32 %.lcssa113144.lcssa.lcssa192, i32* %7, align 1
  store i32 0, i32* %10, align 4
  store i32 0, i32* %3, align 4
  %501 = load i32*, i32** @sorted_index, align 8
  %502 = load i32, i32* @num_refine, align 4
  %503 = add nsw i32 %502, 1
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds i32, i32* %501, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = load %struct.block*, %struct.block** @blocks, align 8
  %508 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %.promoted = load i32, i32* %10, align 1
  %.promoted12 = load i32, i32* %3, align 1
  br label %509

; <label>:509:                                    ; preds = %513, %500
  %510 = phi i32 [ %spec.select, %513 ], [ %.promoted12, %500 ]
  %511 = phi i32 [ %522, %513 ], [ %.promoted, %500 ]
  %512 = icmp slt i32 %511, %506
  br i1 %512, label %513, label %523

; <label>:513:                                    ; preds = %509
  %514 = sext i32 %511 to i64
  %515 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %508, i64 %514, i32 1
  %516 = load i32, i32* %515, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds %struct.block, %struct.block* %507, i64 %517, i32 2
  %519 = load i32, i32* %518, align 8
  %520 = icmp eq i32 %519, 1
  %521 = add nsw i32 %510, 1
  %spec.select = select i1 %520, i32 %521, i32 %510
  %522 = add nsw i32 %511, 1
  br label %509

; <label>:523:                                    ; preds = %509
  store i32 %511, i32* %10, align 1
  store i32 %510, i32* %3, align 1
  %524 = load i32, i32* %3, align 4
  ret i32 %524
}

; Function Attrs: noinline nounwind uwtable
define void @stencil_calc(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca %struct.block*, align 8
  store i32 %0, i32* %2, align 4
  %10 = load i32, i32* @x_block_size, align 4
  %11 = add nsw i32 %10, 2
  %12 = zext i32 %11 to i64
  %13 = load i32, i32* @y_block_size, align 4
  %14 = add nsw i32 %13, 2
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* @z_block_size, align 4
  %17 = add nsw i32 %16, 2
  %18 = zext i32 %17 to i64
  %19 = mul nuw i64 %12, %15
  %20 = mul nuw i64 %19, %18
  %21 = alloca double, i64 %20, align 16
  %22 = load i32, i32* @stencil, align 4
  %23 = icmp eq i32 %22, 7
  %24 = mul nuw i64 %15, %18
  %25 = mul nuw i64 %15, %18
  br i1 %23, label %26, label %245

; <label>:26:                                     ; preds = %1
  br label %27

; <label>:27:                                     ; preds = %242, %26
  %storemerge7 = phi i32 [ 0, %26 ], [ %243, %242 ]
  %28 = load i32*, i32** @sorted_index, align 8
  %29 = load i32, i32* @num_refine, align 4
  %30 = add nsw i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %28, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %storemerge7, %33
  br i1 %34, label %35, label %244

; <label>:35:                                     ; preds = %27
  %36 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %37 = sext i32 %storemerge7 to i64
  %38 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %36, i64 %37, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load %struct.block*, %struct.block** @blocks, align 8
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds %struct.block, %struct.block* %40, i64 %41
  store %struct.block* %42, %struct.block** %9, align 8
  %43 = getelementptr inbounds %struct.block, %struct.block* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, -1
  br i1 %45, label %46, label %242

; <label>:46:                                     ; preds = %35
  %47 = load i32, i32* @x_block_size, align 4
  %48 = load i32, i32* @y_block_size, align 4
  %49 = load i32, i32* @z_block_size, align 4
  %50 = load %struct.block*, %struct.block** %9, align 8
  %51 = getelementptr inbounds %struct.block, %struct.block* %50, i64 0, i32 11
  %52 = load i32, i32* %2, align 4
  %53 = sext i32 %52 to i64
  %54 = load %struct.block*, %struct.block** %9, align 8
  %55 = getelementptr inbounds %struct.block, %struct.block* %54, i64 0, i32 11
  %56 = load i32, i32* %2, align 4
  %57 = sext i32 %56 to i64
  %58 = load %struct.block*, %struct.block** %9, align 8
  %59 = getelementptr inbounds %struct.block, %struct.block* %58, i64 0, i32 11
  %60 = load i32, i32* %2, align 4
  %61 = sext i32 %60 to i64
  %62 = load %struct.block*, %struct.block** %9, align 8
  %63 = getelementptr inbounds %struct.block, %struct.block* %62, i64 0, i32 11
  %64 = load i32, i32* %2, align 4
  %65 = sext i32 %64 to i64
  %66 = load %struct.block*, %struct.block** %9, align 8
  %67 = getelementptr inbounds %struct.block, %struct.block* %66, i64 0, i32 11
  %68 = load i32, i32* %2, align 4
  %69 = sext i32 %68 to i64
  %70 = load %struct.block*, %struct.block** %9, align 8
  %71 = getelementptr inbounds %struct.block, %struct.block* %70, i64 0, i32 11
  %72 = load i32, i32* %2, align 4
  %73 = sext i32 %72 to i64
  %74 = load %struct.block*, %struct.block** %9, align 8
  %75 = getelementptr inbounds %struct.block, %struct.block* %74, i64 0, i32 11
  %76 = load i32, i32* %2, align 4
  %77 = sext i32 %76 to i64
  br label %78

; <label>:78:                                     ; preds = %195, %46
  %storemerge8 = phi i32 [ 1, %46 ], [ %196, %195 ]
  %79 = icmp sgt i32 %storemerge8, %47
  br i1 %79, label %197, label %80

; <label>:80:                                     ; preds = %78
  %81 = add nsw i32 %storemerge8, -1
  %82 = sext i32 %81 to i64
  %83 = sext i32 %storemerge8 to i64
  %84 = sext i32 %storemerge8 to i64
  %85 = sext i32 %storemerge8 to i64
  %86 = sext i32 %storemerge8 to i64
  %87 = sext i32 %storemerge8 to i64
  %88 = add nsw i32 %storemerge8, 1
  %89 = sext i32 %88 to i64
  %90 = sext i32 %storemerge8 to i64
  %91 = mul nsw i64 %24, %90
  %92 = getelementptr inbounds double, double* %21, i64 %91
  br label %93

; <label>:93:                                     ; preds = %193, %80
  %storemerge12 = phi i32 [ 1, %80 ], [ %194, %193 ]
  %94 = icmp sgt i32 %storemerge12, %48
  br i1 %94, label %195, label %95

; <label>:95:                                     ; preds = %93
  %96 = sext i32 %storemerge12 to i64
  %97 = add nsw i32 %storemerge12, -1
  %98 = sext i32 %97 to i64
  %99 = sext i32 %storemerge12 to i64
  %100 = sext i32 %storemerge12 to i64
  %101 = sext i32 %storemerge12 to i64
  %102 = add nsw i32 %storemerge12, 1
  %103 = sext i32 %102 to i64
  %104 = sext i32 %storemerge12 to i64
  %105 = sext i32 %storemerge12 to i64
  %106 = mul nsw i64 %105, %18
  %107 = getelementptr inbounds double, double* %92, i64 %106
  br label %108

; <label>:108:                                    ; preds = %110, %95
  %storemerge13 = phi i32 [ 1, %95 ], [ %192, %110 ]
  %109 = icmp sgt i32 %storemerge13, %49
  br i1 %109, label %193, label %110

; <label>:110:                                    ; preds = %108
  %111 = load double****, double***** %51, align 8
  %112 = getelementptr inbounds double***, double**** %111, i64 %53
  %113 = load double***, double**** %112, align 8
  %114 = getelementptr inbounds double**, double*** %113, i64 %82
  %115 = load double**, double*** %114, align 8
  %116 = getelementptr inbounds double*, double** %115, i64 %96
  %117 = load double*, double** %116, align 8
  %118 = sext i32 %storemerge13 to i64
  %119 = getelementptr inbounds double, double* %117, i64 %118
  %120 = load double, double* %119, align 8
  %121 = load double****, double***** %55, align 8
  %122 = getelementptr inbounds double***, double**** %121, i64 %57
  %123 = load double***, double**** %122, align 8
  %124 = getelementptr inbounds double**, double*** %123, i64 %83
  %125 = load double**, double*** %124, align 8
  %126 = getelementptr inbounds double*, double** %125, i64 %98
  %127 = load double*, double** %126, align 8
  %128 = sext i32 %storemerge13 to i64
  %129 = getelementptr inbounds double, double* %127, i64 %128
  %130 = load double, double* %129, align 8
  %131 = fadd double %120, %130
  %132 = load double****, double***** %59, align 8
  %133 = getelementptr inbounds double***, double**** %132, i64 %61
  %134 = load double***, double**** %133, align 8
  %135 = getelementptr inbounds double**, double*** %134, i64 %84
  %136 = load double**, double*** %135, align 8
  %137 = getelementptr inbounds double*, double** %136, i64 %99
  %138 = load double*, double** %137, align 8
  %139 = add nsw i32 %storemerge13, -1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds double, double* %138, i64 %140
  %142 = load double, double* %141, align 8
  %143 = fadd double %131, %142
  %144 = load double****, double***** %63, align 8
  %145 = getelementptr inbounds double***, double**** %144, i64 %65
  %146 = load double***, double**** %145, align 8
  %147 = getelementptr inbounds double**, double*** %146, i64 %85
  %148 = load double**, double*** %147, align 8
  %149 = getelementptr inbounds double*, double** %148, i64 %100
  %150 = load double*, double** %149, align 8
  %151 = sext i32 %storemerge13 to i64
  %152 = getelementptr inbounds double, double* %150, i64 %151
  %153 = load double, double* %152, align 8
  %154 = fadd double %143, %153
  %155 = load double****, double***** %67, align 8
  %156 = getelementptr inbounds double***, double**** %155, i64 %69
  %157 = load double***, double**** %156, align 8
  %158 = getelementptr inbounds double**, double*** %157, i64 %86
  %159 = load double**, double*** %158, align 8
  %160 = getelementptr inbounds double*, double** %159, i64 %101
  %161 = load double*, double** %160, align 8
  %162 = add nsw i32 %storemerge13, 1
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds double, double* %161, i64 %163
  %165 = load double, double* %164, align 8
  %166 = fadd double %154, %165
  %167 = load double****, double***** %71, align 8
  %168 = getelementptr inbounds double***, double**** %167, i64 %73
  %169 = load double***, double**** %168, align 8
  %170 = getelementptr inbounds double**, double*** %169, i64 %87
  %171 = load double**, double*** %170, align 8
  %172 = getelementptr inbounds double*, double** %171, i64 %103
  %173 = load double*, double** %172, align 8
  %174 = sext i32 %storemerge13 to i64
  %175 = getelementptr inbounds double, double* %173, i64 %174
  %176 = load double, double* %175, align 8
  %177 = fadd double %166, %176
  %178 = load double****, double***** %75, align 8
  %179 = getelementptr inbounds double***, double**** %178, i64 %77
  %180 = load double***, double**** %179, align 8
  %181 = getelementptr inbounds double**, double*** %180, i64 %89
  %182 = load double**, double*** %181, align 8
  %183 = getelementptr inbounds double*, double** %182, i64 %104
  %184 = load double*, double** %183, align 8
  %185 = sext i32 %storemerge13 to i64
  %186 = getelementptr inbounds double, double* %184, i64 %185
  %187 = load double, double* %186, align 8
  %188 = fadd double %177, %187
  %189 = fdiv double %188, 7.000000e+00
  %190 = sext i32 %storemerge13 to i64
  %191 = getelementptr inbounds double, double* %107, i64 %190
  store double %189, double* %191, align 8
  %192 = add nsw i32 %storemerge13, 1
  br label %108

; <label>:193:                                    ; preds = %108
  store i32 %storemerge13, i32* %5, align 4
  %194 = add nsw i32 %storemerge12, 1
  br label %93

; <label>:195:                                    ; preds = %93
  store i32 %storemerge12, i32* %4, align 4
  %196 = add nsw i32 %storemerge8, 1
  br label %78

; <label>:197:                                    ; preds = %78
  store i32 %storemerge8, i32* %3, align 4
  %198 = load i32, i32* %2, align 4
  %199 = sext i32 %198 to i64
  br label %200

; <label>:200:                                    ; preds = %239, %197
  %storemerge9 = phi i32 [ 1, %197 ], [ %240, %239 ]
  %201 = load i32, i32* @x_block_size, align 4
  %202 = icmp sgt i32 %storemerge9, %201
  br i1 %202, label %241, label %203

; <label>:203:                                    ; preds = %200
  %204 = sext i32 %storemerge9 to i64
  %205 = mul nsw i64 %25, %204
  %206 = getelementptr inbounds double, double* %21, i64 %205
  %207 = sext i32 %storemerge9 to i64
  br label %208

; <label>:208:                                    ; preds = %237, %203
  %storemerge10 = phi i32 [ 1, %203 ], [ %238, %237 ]
  %209 = load i32, i32* @y_block_size, align 4
  %210 = icmp sgt i32 %storemerge10, %209
  br i1 %210, label %239, label %211

; <label>:211:                                    ; preds = %208
  %212 = sext i32 %storemerge10 to i64
  %213 = mul nsw i64 %212, %18
  %214 = getelementptr inbounds double, double* %206, i64 %213
  %215 = sext i32 %storemerge10 to i64
  br label %216

; <label>:216:                                    ; preds = %219, %211
  %storemerge11 = phi i32 [ 1, %211 ], [ %236, %219 ]
  %217 = load i32, i32* @z_block_size, align 4
  %218 = icmp sgt i32 %storemerge11, %217
  br i1 %218, label %237, label %219

; <label>:219:                                    ; preds = %216
  %220 = sext i32 %storemerge11 to i64
  %221 = getelementptr inbounds double, double* %214, i64 %220
  %222 = bitcast double* %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = load %struct.block*, %struct.block** %9, align 8
  %225 = getelementptr inbounds %struct.block, %struct.block* %224, i64 0, i32 11
  %226 = load double****, double***** %225, align 8
  %227 = getelementptr inbounds double***, double**** %226, i64 %199
  %228 = load double***, double**** %227, align 8
  %229 = getelementptr inbounds double**, double*** %228, i64 %207
  %230 = load double**, double*** %229, align 8
  %231 = getelementptr inbounds double*, double** %230, i64 %215
  %232 = load double*, double** %231, align 8
  %233 = sext i32 %storemerge11 to i64
  %234 = getelementptr inbounds double, double* %232, i64 %233
  %235 = bitcast double* %234 to i64*
  store i64 %223, i64* %235, align 8
  %236 = add nsw i32 %storemerge11, 1
  br label %216

; <label>:237:                                    ; preds = %216
  store i32 %storemerge11, i32* %5, align 4
  %238 = add nsw i32 %storemerge10, 1
  br label %208

; <label>:239:                                    ; preds = %208
  store i32 %storemerge10, i32* %4, align 4
  %240 = add nsw i32 %storemerge9, 1
  br label %200

; <label>:241:                                    ; preds = %200
  store i32 %storemerge9, i32* %3, align 4
  br label %242

; <label>:242:                                    ; preds = %35, %241
  %243 = add nsw i32 %storemerge7, 1
  br label %27

; <label>:244:                                    ; preds = %27
  store i32 %storemerge7, i32* %6, align 4
  br label %853

; <label>:245:                                    ; preds = %1
  %.promoted36 = load i32, i32* %5, align 1
  %.promoted39 = load i32, i32* %3, align 1
  %.promoted42 = load i32, i32* %4, align 1
  %.promoted = load double, double* %7, align 1
  %.promoted47 = load double, double* %8, align 1
  br label %246

; <label>:246:                                    ; preds = %850, %245
  %.lcssa1521.lcssa30.lcssa49 = phi double [ %.promoted47, %245 ], [ %.lcssa1521.lcssa30.lcssa48, %850 ]
  %.lcssa20.lcssa28.lcssa46 = phi double [ %.promoted, %245 ], [ %.lcssa20.lcssa28.lcssa45, %850 ]
  %storemerge3.lcssa35.lcssa44 = phi i32 [ %.promoted42, %245 ], [ %storemerge3.lcssa35.lcssa43, %850 ]
  %storemerge2.lcssa41 = phi i32 [ %.promoted39, %245 ], [ %storemerge2.lcssa40, %850 ]
  %storemerge4.lcssa31.lcssa34.lcssa38 = phi i32 [ %.promoted36, %245 ], [ %storemerge4.lcssa31.lcssa34.lcssa37, %850 ]
  %storemerge = phi i32 [ 0, %245 ], [ %851, %850 ]
  %247 = load i32*, i32** @sorted_index, align 8
  %248 = load i32, i32* @num_refine, align 4
  %249 = add nsw i32 %248, 1
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %247, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %storemerge, %252
  br i1 %253, label %254, label %852

; <label>:254:                                    ; preds = %246
  %255 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %256 = sext i32 %storemerge to i64
  %257 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %255, i64 %256, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = load %struct.block*, %struct.block** @blocks, align 8
  %260 = sext i32 %258 to i64
  %261 = getelementptr inbounds %struct.block, %struct.block* %259, i64 %260
  store %struct.block* %261, %struct.block** %9, align 8
  %262 = getelementptr inbounds %struct.block, %struct.block* %261, i64 0, i32 0
  %263 = load i32, i32* %262, align 8
  %264 = icmp sgt i32 %263, -1
  br i1 %264, label %265, label %850

; <label>:265:                                    ; preds = %254
  %266 = load i32, i32* @x_block_size, align 4
  %267 = load i32, i32* @y_block_size, align 4
  %268 = load i32, i32* @z_block_size, align 4
  %269 = load %struct.block*, %struct.block** %9, align 8
  %270 = getelementptr inbounds %struct.block, %struct.block* %269, i64 0, i32 11
  %271 = load i32, i32* %2, align 4
  %272 = sext i32 %271 to i64
  %273 = load %struct.block*, %struct.block** %9, align 8
  %274 = getelementptr inbounds %struct.block, %struct.block* %273, i64 0, i32 11
  %275 = load i32, i32* %2, align 4
  %276 = sext i32 %275 to i64
  %277 = load %struct.block*, %struct.block** %9, align 8
  %278 = getelementptr inbounds %struct.block, %struct.block* %277, i64 0, i32 11
  %279 = load i32, i32* %2, align 4
  %280 = sext i32 %279 to i64
  %281 = load %struct.block*, %struct.block** %9, align 8
  %282 = getelementptr inbounds %struct.block, %struct.block* %281, i64 0, i32 11
  %283 = load i32, i32* %2, align 4
  %284 = sext i32 %283 to i64
  %285 = load %struct.block*, %struct.block** %9, align 8
  %286 = getelementptr inbounds %struct.block, %struct.block* %285, i64 0, i32 11
  %287 = load i32, i32* %2, align 4
  %288 = sext i32 %287 to i64
  %289 = load %struct.block*, %struct.block** %9, align 8
  %290 = getelementptr inbounds %struct.block, %struct.block* %289, i64 0, i32 11
  %291 = load i32, i32* %2, align 4
  %292 = sext i32 %291 to i64
  %293 = load %struct.block*, %struct.block** %9, align 8
  %294 = getelementptr inbounds %struct.block, %struct.block* %293, i64 0, i32 11
  %295 = load i32, i32* %2, align 4
  %296 = sext i32 %295 to i64
  %297 = load %struct.block*, %struct.block** %9, align 8
  %298 = getelementptr inbounds %struct.block, %struct.block* %297, i64 0, i32 11
  %299 = load i32, i32* %2, align 4
  %300 = sext i32 %299 to i64
  %301 = load %struct.block*, %struct.block** %9, align 8
  %302 = getelementptr inbounds %struct.block, %struct.block* %301, i64 0, i32 11
  %303 = load i32, i32* %2, align 4
  %304 = sext i32 %303 to i64
  %305 = load %struct.block*, %struct.block** %9, align 8
  %306 = getelementptr inbounds %struct.block, %struct.block* %305, i64 0, i32 11
  %307 = load i32, i32* %2, align 4
  %308 = sext i32 %307 to i64
  %309 = load %struct.block*, %struct.block** %9, align 8
  %310 = getelementptr inbounds %struct.block, %struct.block* %309, i64 0, i32 11
  %311 = load i32, i32* %2, align 4
  %312 = sext i32 %311 to i64
  %313 = load %struct.block*, %struct.block** %9, align 8
  %314 = getelementptr inbounds %struct.block, %struct.block* %313, i64 0, i32 11
  %315 = load i32, i32* %2, align 4
  %316 = sext i32 %315 to i64
  %317 = load %struct.block*, %struct.block** %9, align 8
  %318 = getelementptr inbounds %struct.block, %struct.block* %317, i64 0, i32 11
  %319 = load i32, i32* %2, align 4
  %320 = sext i32 %319 to i64
  %321 = load %struct.block*, %struct.block** %9, align 8
  %322 = getelementptr inbounds %struct.block, %struct.block* %321, i64 0, i32 11
  %323 = load i32, i32* %2, align 4
  %324 = sext i32 %323 to i64
  %325 = load %struct.block*, %struct.block** %9, align 8
  %326 = getelementptr inbounds %struct.block, %struct.block* %325, i64 0, i32 11
  %327 = load i32, i32* %2, align 4
  %328 = sext i32 %327 to i64
  %329 = load %struct.block*, %struct.block** %9, align 8
  %330 = getelementptr inbounds %struct.block, %struct.block* %329, i64 0, i32 11
  %331 = load i32, i32* %2, align 4
  %332 = sext i32 %331 to i64
  %333 = load %struct.block*, %struct.block** %9, align 8
  %334 = getelementptr inbounds %struct.block, %struct.block* %333, i64 0, i32 11
  %335 = load i32, i32* %2, align 4
  %336 = sext i32 %335 to i64
  %337 = load %struct.block*, %struct.block** %9, align 8
  %338 = getelementptr inbounds %struct.block, %struct.block* %337, i64 0, i32 11
  %339 = load i32, i32* %2, align 4
  %340 = sext i32 %339 to i64
  %341 = load %struct.block*, %struct.block** %9, align 8
  %342 = getelementptr inbounds %struct.block, %struct.block* %341, i64 0, i32 11
  %343 = load i32, i32* %2, align 4
  %344 = sext i32 %343 to i64
  %345 = load %struct.block*, %struct.block** %9, align 8
  %346 = getelementptr inbounds %struct.block, %struct.block* %345, i64 0, i32 11
  %347 = load i32, i32* %2, align 4
  %348 = sext i32 %347 to i64
  %349 = load %struct.block*, %struct.block** %9, align 8
  %350 = getelementptr inbounds %struct.block, %struct.block* %349, i64 0, i32 11
  %351 = load i32, i32* %2, align 4
  %352 = sext i32 %351 to i64
  %353 = load %struct.block*, %struct.block** %9, align 8
  %354 = getelementptr inbounds %struct.block, %struct.block* %353, i64 0, i32 11
  %355 = load i32, i32* %2, align 4
  %356 = sext i32 %355 to i64
  %357 = load %struct.block*, %struct.block** %9, align 8
  %358 = getelementptr inbounds %struct.block, %struct.block* %357, i64 0, i32 11
  %359 = load i32, i32* %2, align 4
  %360 = sext i32 %359 to i64
  %361 = load %struct.block*, %struct.block** %9, align 8
  %362 = getelementptr inbounds %struct.block, %struct.block* %361, i64 0, i32 11
  %363 = load i32, i32* %2, align 4
  %364 = sext i32 %363 to i64
  %365 = load %struct.block*, %struct.block** %9, align 8
  %366 = getelementptr inbounds %struct.block, %struct.block* %365, i64 0, i32 11
  %367 = load i32, i32* %2, align 4
  %368 = sext i32 %367 to i64
  %369 = load %struct.block*, %struct.block** %9, align 8
  %370 = getelementptr inbounds %struct.block, %struct.block* %369, i64 0, i32 11
  %371 = load i32, i32* %2, align 4
  %372 = sext i32 %371 to i64
  %373 = load %struct.block*, %struct.block** %9, align 8
  %374 = getelementptr inbounds %struct.block, %struct.block* %373, i64 0, i32 11
  %375 = load i32, i32* %2, align 4
  %376 = sext i32 %375 to i64
  br label %377

; <label>:377:                                    ; preds = %804, %265
  %.lcssa1521.lcssa30 = phi double [ %.lcssa1521.lcssa30.lcssa49, %265 ], [ %.lcssa1521, %804 ]
  %.lcssa20.lcssa28 = phi double [ %.lcssa20.lcssa28.lcssa46, %265 ], [ %.lcssa20, %804 ]
  %storemerge5.lcssa26 = phi i32 [ %storemerge3.lcssa35.lcssa44, %265 ], [ %storemerge5, %804 ]
  %storemerge6.lcssa17.lcssa23 = phi i32 [ %storemerge4.lcssa31.lcssa34.lcssa38, %265 ], [ %storemerge6.lcssa17, %804 ]
  %storemerge1 = phi i32 [ 1, %265 ], [ %805, %804 ]
  %378 = icmp sgt i32 %storemerge1, %266
  br i1 %378, label %806, label %379

; <label>:379:                                    ; preds = %377
  %380 = add nsw i32 %storemerge1, -1
  %381 = sext i32 %380 to i64
  %382 = add nsw i32 %storemerge1, -1
  %383 = sext i32 %382 to i64
  %384 = add nsw i32 %storemerge1, -1
  %385 = sext i32 %384 to i64
  %386 = add nsw i32 %storemerge1, -1
  %387 = sext i32 %386 to i64
  %388 = add nsw i32 %storemerge1, -1
  %389 = sext i32 %388 to i64
  %390 = add nsw i32 %storemerge1, -1
  %391 = sext i32 %390 to i64
  %392 = add nsw i32 %storemerge1, -1
  %393 = sext i32 %392 to i64
  %394 = add nsw i32 %storemerge1, -1
  %395 = sext i32 %394 to i64
  %396 = add nsw i32 %storemerge1, -1
  %397 = sext i32 %396 to i64
  %398 = sext i32 %storemerge1 to i64
  %399 = sext i32 %storemerge1 to i64
  %400 = sext i32 %storemerge1 to i64
  %401 = sext i32 %storemerge1 to i64
  %402 = sext i32 %storemerge1 to i64
  %403 = sext i32 %storemerge1 to i64
  %404 = sext i32 %storemerge1 to i64
  %405 = sext i32 %storemerge1 to i64
  %406 = sext i32 %storemerge1 to i64
  %407 = add nsw i32 %storemerge1, 1
  %408 = sext i32 %407 to i64
  %409 = add nsw i32 %storemerge1, 1
  %410 = sext i32 %409 to i64
  %411 = add nsw i32 %storemerge1, 1
  %412 = sext i32 %411 to i64
  %413 = add nsw i32 %storemerge1, 1
  %414 = sext i32 %413 to i64
  %415 = add nsw i32 %storemerge1, 1
  %416 = sext i32 %415 to i64
  %417 = add nsw i32 %storemerge1, 1
  %418 = sext i32 %417 to i64
  %419 = add nsw i32 %storemerge1, 1
  %420 = sext i32 %419 to i64
  %421 = add nsw i32 %storemerge1, 1
  %422 = sext i32 %421 to i64
  %423 = add nsw i32 %storemerge1, 1
  %424 = sext i32 %423 to i64
  %425 = sext i32 %storemerge1 to i64
  %426 = mul nsw i64 %24, %425
  %427 = getelementptr inbounds double, double* %21, i64 %426
  br label %428

; <label>:428:                                    ; preds = %802, %379
  %.lcssa1521 = phi double [ %.lcssa1521.lcssa30, %379 ], [ %480, %802 ]
  %.lcssa20 = phi double [ %.lcssa20.lcssa28, %379 ], [ %481, %802 ]
  %storemerge6.lcssa17 = phi i32 [ %storemerge6.lcssa17.lcssa23, %379 ], [ %storemerge6, %802 ]
  %storemerge5 = phi i32 [ 1, %379 ], [ %803, %802 ]
  %429 = icmp sgt i32 %storemerge5, %267
  br i1 %429, label %804, label %430

; <label>:430:                                    ; preds = %428
  %431 = add nsw i32 %storemerge5, -1
  %432 = sext i32 %431 to i64
  %433 = add nsw i32 %storemerge5, -1
  %434 = sext i32 %433 to i64
  %435 = add nsw i32 %storemerge5, -1
  %436 = sext i32 %435 to i64
  %437 = sext i32 %storemerge5 to i64
  %438 = sext i32 %storemerge5 to i64
  %439 = sext i32 %storemerge5 to i64
  %440 = add nsw i32 %storemerge5, 1
  %441 = sext i32 %440 to i64
  %442 = add nsw i32 %storemerge5, 1
  %443 = sext i32 %442 to i64
  %444 = add nsw i32 %storemerge5, 1
  %445 = sext i32 %444 to i64
  %446 = add nsw i32 %storemerge5, -1
  %447 = sext i32 %446 to i64
  %448 = add nsw i32 %storemerge5, -1
  %449 = sext i32 %448 to i64
  %450 = add nsw i32 %storemerge5, -1
  %451 = sext i32 %450 to i64
  %452 = sext i32 %storemerge5 to i64
  %453 = sext i32 %storemerge5 to i64
  %454 = sext i32 %storemerge5 to i64
  %455 = add nsw i32 %storemerge5, 1
  %456 = sext i32 %455 to i64
  %457 = add nsw i32 %storemerge5, 1
  %458 = sext i32 %457 to i64
  %459 = add nsw i32 %storemerge5, 1
  %460 = sext i32 %459 to i64
  %461 = add nsw i32 %storemerge5, -1
  %462 = sext i32 %461 to i64
  %463 = add nsw i32 %storemerge5, -1
  %464 = sext i32 %463 to i64
  %465 = add nsw i32 %storemerge5, -1
  %466 = sext i32 %465 to i64
  %467 = sext i32 %storemerge5 to i64
  %468 = sext i32 %storemerge5 to i64
  %469 = sext i32 %storemerge5 to i64
  %470 = add nsw i32 %storemerge5, 1
  %471 = sext i32 %470 to i64
  %472 = add nsw i32 %storemerge5, 1
  %473 = sext i32 %472 to i64
  %474 = add nsw i32 %storemerge5, 1
  %475 = sext i32 %474 to i64
  %476 = sext i32 %storemerge5 to i64
  %477 = mul nsw i64 %476, %18
  %478 = getelementptr inbounds double, double* %427, i64 %477
  br label %479

; <label>:479:                                    ; preds = %483, %430
  %480 = phi double [ %.lcssa1521, %430 ], [ %691, %483 ]
  %481 = phi double [ %.lcssa20, %430 ], [ %587, %483 ]
  %storemerge6 = phi i32 [ 1, %430 ], [ %801, %483 ]
  %482 = icmp sgt i32 %storemerge6, %268
  br i1 %482, label %802, label %483

; <label>:483:                                    ; preds = %479
  %484 = load double****, double***** %270, align 8
  %485 = getelementptr inbounds double***, double**** %484, i64 %272
  %486 = load double***, double**** %485, align 8
  %487 = getelementptr inbounds double**, double*** %486, i64 %381
  %488 = load double**, double*** %487, align 8
  %489 = getelementptr inbounds double*, double** %488, i64 %432
  %490 = load double*, double** %489, align 8
  %491 = add nsw i32 %storemerge6, -1
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds double, double* %490, i64 %492
  %494 = load double, double* %493, align 8
  %495 = load double****, double***** %274, align 8
  %496 = getelementptr inbounds double***, double**** %495, i64 %276
  %497 = load double***, double**** %496, align 8
  %498 = getelementptr inbounds double**, double*** %497, i64 %383
  %499 = load double**, double*** %498, align 8
  %500 = getelementptr inbounds double*, double** %499, i64 %434
  %501 = load double*, double** %500, align 8
  %502 = sext i32 %storemerge6 to i64
  %503 = getelementptr inbounds double, double* %501, i64 %502
  %504 = load double, double* %503, align 8
  %505 = fadd double %494, %504
  %506 = load double****, double***** %278, align 8
  %507 = getelementptr inbounds double***, double**** %506, i64 %280
  %508 = load double***, double**** %507, align 8
  %509 = getelementptr inbounds double**, double*** %508, i64 %385
  %510 = load double**, double*** %509, align 8
  %511 = getelementptr inbounds double*, double** %510, i64 %436
  %512 = load double*, double** %511, align 8
  %513 = add nsw i32 %storemerge6, 1
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds double, double* %512, i64 %514
  %516 = load double, double* %515, align 8
  %517 = fadd double %505, %516
  %518 = load double****, double***** %282, align 8
  %519 = getelementptr inbounds double***, double**** %518, i64 %284
  %520 = load double***, double**** %519, align 8
  %521 = getelementptr inbounds double**, double*** %520, i64 %387
  %522 = load double**, double*** %521, align 8
  %523 = getelementptr inbounds double*, double** %522, i64 %437
  %524 = load double*, double** %523, align 8
  %525 = add nsw i32 %storemerge6, -1
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds double, double* %524, i64 %526
  %528 = load double, double* %527, align 8
  %529 = fadd double %517, %528
  %530 = load double****, double***** %286, align 8
  %531 = getelementptr inbounds double***, double**** %530, i64 %288
  %532 = load double***, double**** %531, align 8
  %533 = getelementptr inbounds double**, double*** %532, i64 %389
  %534 = load double**, double*** %533, align 8
  %535 = getelementptr inbounds double*, double** %534, i64 %438
  %536 = load double*, double** %535, align 8
  %537 = sext i32 %storemerge6 to i64
  %538 = getelementptr inbounds double, double* %536, i64 %537
  %539 = load double, double* %538, align 8
  %540 = fadd double %529, %539
  %541 = load double****, double***** %290, align 8
  %542 = getelementptr inbounds double***, double**** %541, i64 %292
  %543 = load double***, double**** %542, align 8
  %544 = getelementptr inbounds double**, double*** %543, i64 %391
  %545 = load double**, double*** %544, align 8
  %546 = getelementptr inbounds double*, double** %545, i64 %439
  %547 = load double*, double** %546, align 8
  %548 = add nsw i32 %storemerge6, 1
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds double, double* %547, i64 %549
  %551 = load double, double* %550, align 8
  %552 = fadd double %540, %551
  %553 = load double****, double***** %294, align 8
  %554 = getelementptr inbounds double***, double**** %553, i64 %296
  %555 = load double***, double**** %554, align 8
  %556 = getelementptr inbounds double**, double*** %555, i64 %393
  %557 = load double**, double*** %556, align 8
  %558 = getelementptr inbounds double*, double** %557, i64 %441
  %559 = load double*, double** %558, align 8
  %560 = add nsw i32 %storemerge6, -1
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds double, double* %559, i64 %561
  %563 = load double, double* %562, align 8
  %564 = fadd double %552, %563
  %565 = load double****, double***** %298, align 8
  %566 = getelementptr inbounds double***, double**** %565, i64 %300
  %567 = load double***, double**** %566, align 8
  %568 = getelementptr inbounds double**, double*** %567, i64 %395
  %569 = load double**, double*** %568, align 8
  %570 = getelementptr inbounds double*, double** %569, i64 %443
  %571 = load double*, double** %570, align 8
  %572 = sext i32 %storemerge6 to i64
  %573 = getelementptr inbounds double, double* %571, i64 %572
  %574 = load double, double* %573, align 8
  %575 = fadd double %564, %574
  %576 = load double****, double***** %302, align 8
  %577 = getelementptr inbounds double***, double**** %576, i64 %304
  %578 = load double***, double**** %577, align 8
  %579 = getelementptr inbounds double**, double*** %578, i64 %397
  %580 = load double**, double*** %579, align 8
  %581 = getelementptr inbounds double*, double** %580, i64 %445
  %582 = load double*, double** %581, align 8
  %583 = add nsw i32 %storemerge6, 1
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds double, double* %582, i64 %584
  %586 = load double, double* %585, align 8
  %587 = fadd double %575, %586
  %588 = load double****, double***** %306, align 8
  %589 = getelementptr inbounds double***, double**** %588, i64 %308
  %590 = load double***, double**** %589, align 8
  %591 = getelementptr inbounds double**, double*** %590, i64 %398
  %592 = load double**, double*** %591, align 8
  %593 = getelementptr inbounds double*, double** %592, i64 %447
  %594 = load double*, double** %593, align 8
  %595 = add nsw i32 %storemerge6, -1
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds double, double* %594, i64 %596
  %598 = load double, double* %597, align 8
  %599 = load double****, double***** %310, align 8
  %600 = getelementptr inbounds double***, double**** %599, i64 %312
  %601 = load double***, double**** %600, align 8
  %602 = getelementptr inbounds double**, double*** %601, i64 %399
  %603 = load double**, double*** %602, align 8
  %604 = getelementptr inbounds double*, double** %603, i64 %449
  %605 = load double*, double** %604, align 8
  %606 = sext i32 %storemerge6 to i64
  %607 = getelementptr inbounds double, double* %605, i64 %606
  %608 = load double, double* %607, align 8
  %609 = fadd double %598, %608
  %610 = load double****, double***** %314, align 8
  %611 = getelementptr inbounds double***, double**** %610, i64 %316
  %612 = load double***, double**** %611, align 8
  %613 = getelementptr inbounds double**, double*** %612, i64 %400
  %614 = load double**, double*** %613, align 8
  %615 = getelementptr inbounds double*, double** %614, i64 %451
  %616 = load double*, double** %615, align 8
  %617 = add nsw i32 %storemerge6, 1
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds double, double* %616, i64 %618
  %620 = load double, double* %619, align 8
  %621 = fadd double %609, %620
  %622 = load double****, double***** %318, align 8
  %623 = getelementptr inbounds double***, double**** %622, i64 %320
  %624 = load double***, double**** %623, align 8
  %625 = getelementptr inbounds double**, double*** %624, i64 %401
  %626 = load double**, double*** %625, align 8
  %627 = getelementptr inbounds double*, double** %626, i64 %452
  %628 = load double*, double** %627, align 8
  %629 = add nsw i32 %storemerge6, -1
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds double, double* %628, i64 %630
  %632 = load double, double* %631, align 8
  %633 = fadd double %621, %632
  %634 = load double****, double***** %322, align 8
  %635 = getelementptr inbounds double***, double**** %634, i64 %324
  %636 = load double***, double**** %635, align 8
  %637 = getelementptr inbounds double**, double*** %636, i64 %402
  %638 = load double**, double*** %637, align 8
  %639 = getelementptr inbounds double*, double** %638, i64 %453
  %640 = load double*, double** %639, align 8
  %641 = sext i32 %storemerge6 to i64
  %642 = getelementptr inbounds double, double* %640, i64 %641
  %643 = load double, double* %642, align 8
  %644 = fadd double %633, %643
  %645 = load double****, double***** %326, align 8
  %646 = getelementptr inbounds double***, double**** %645, i64 %328
  %647 = load double***, double**** %646, align 8
  %648 = getelementptr inbounds double**, double*** %647, i64 %403
  %649 = load double**, double*** %648, align 8
  %650 = getelementptr inbounds double*, double** %649, i64 %454
  %651 = load double*, double** %650, align 8
  %652 = add nsw i32 %storemerge6, 1
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds double, double* %651, i64 %653
  %655 = load double, double* %654, align 8
  %656 = fadd double %644, %655
  %657 = load double****, double***** %330, align 8
  %658 = getelementptr inbounds double***, double**** %657, i64 %332
  %659 = load double***, double**** %658, align 8
  %660 = getelementptr inbounds double**, double*** %659, i64 %404
  %661 = load double**, double*** %660, align 8
  %662 = getelementptr inbounds double*, double** %661, i64 %456
  %663 = load double*, double** %662, align 8
  %664 = add nsw i32 %storemerge6, -1
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds double, double* %663, i64 %665
  %667 = load double, double* %666, align 8
  %668 = fadd double %656, %667
  %669 = load double****, double***** %334, align 8
  %670 = getelementptr inbounds double***, double**** %669, i64 %336
  %671 = load double***, double**** %670, align 8
  %672 = getelementptr inbounds double**, double*** %671, i64 %405
  %673 = load double**, double*** %672, align 8
  %674 = getelementptr inbounds double*, double** %673, i64 %458
  %675 = load double*, double** %674, align 8
  %676 = sext i32 %storemerge6 to i64
  %677 = getelementptr inbounds double, double* %675, i64 %676
  %678 = load double, double* %677, align 8
  %679 = fadd double %668, %678
  %680 = load double****, double***** %338, align 8
  %681 = getelementptr inbounds double***, double**** %680, i64 %340
  %682 = load double***, double**** %681, align 8
  %683 = getelementptr inbounds double**, double*** %682, i64 %406
  %684 = load double**, double*** %683, align 8
  %685 = getelementptr inbounds double*, double** %684, i64 %460
  %686 = load double*, double** %685, align 8
  %687 = add nsw i32 %storemerge6, 1
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds double, double* %686, i64 %688
  %690 = load double, double* %689, align 8
  %691 = fadd double %679, %690
  %692 = load double****, double***** %342, align 8
  %693 = getelementptr inbounds double***, double**** %692, i64 %344
  %694 = load double***, double**** %693, align 8
  %695 = getelementptr inbounds double**, double*** %694, i64 %408
  %696 = load double**, double*** %695, align 8
  %697 = getelementptr inbounds double*, double** %696, i64 %462
  %698 = load double*, double** %697, align 8
  %699 = add nsw i32 %storemerge6, -1
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds double, double* %698, i64 %700
  %702 = load double, double* %701, align 8
  %703 = load double****, double***** %346, align 8
  %704 = getelementptr inbounds double***, double**** %703, i64 %348
  %705 = load double***, double**** %704, align 8
  %706 = getelementptr inbounds double**, double*** %705, i64 %410
  %707 = load double**, double*** %706, align 8
  %708 = getelementptr inbounds double*, double** %707, i64 %464
  %709 = load double*, double** %708, align 8
  %710 = sext i32 %storemerge6 to i64
  %711 = getelementptr inbounds double, double* %709, i64 %710
  %712 = load double, double* %711, align 8
  %713 = fadd double %702, %712
  %714 = load double****, double***** %350, align 8
  %715 = getelementptr inbounds double***, double**** %714, i64 %352
  %716 = load double***, double**** %715, align 8
  %717 = getelementptr inbounds double**, double*** %716, i64 %412
  %718 = load double**, double*** %717, align 8
  %719 = getelementptr inbounds double*, double** %718, i64 %466
  %720 = load double*, double** %719, align 8
  %721 = add nsw i32 %storemerge6, 1
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds double, double* %720, i64 %722
  %724 = load double, double* %723, align 8
  %725 = fadd double %713, %724
  %726 = load double****, double***** %354, align 8
  %727 = getelementptr inbounds double***, double**** %726, i64 %356
  %728 = load double***, double**** %727, align 8
  %729 = getelementptr inbounds double**, double*** %728, i64 %414
  %730 = load double**, double*** %729, align 8
  %731 = getelementptr inbounds double*, double** %730, i64 %467
  %732 = load double*, double** %731, align 8
  %733 = add nsw i32 %storemerge6, -1
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds double, double* %732, i64 %734
  %736 = load double, double* %735, align 8
  %737 = fadd double %725, %736
  %738 = load double****, double***** %358, align 8
  %739 = getelementptr inbounds double***, double**** %738, i64 %360
  %740 = load double***, double**** %739, align 8
  %741 = getelementptr inbounds double**, double*** %740, i64 %416
  %742 = load double**, double*** %741, align 8
  %743 = getelementptr inbounds double*, double** %742, i64 %468
  %744 = load double*, double** %743, align 8
  %745 = sext i32 %storemerge6 to i64
  %746 = getelementptr inbounds double, double* %744, i64 %745
  %747 = load double, double* %746, align 8
  %748 = fadd double %737, %747
  %749 = load double****, double***** %362, align 8
  %750 = getelementptr inbounds double***, double**** %749, i64 %364
  %751 = load double***, double**** %750, align 8
  %752 = getelementptr inbounds double**, double*** %751, i64 %418
  %753 = load double**, double*** %752, align 8
  %754 = getelementptr inbounds double*, double** %753, i64 %469
  %755 = load double*, double** %754, align 8
  %756 = add nsw i32 %storemerge6, 1
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds double, double* %755, i64 %757
  %759 = load double, double* %758, align 8
  %760 = fadd double %748, %759
  %761 = load double****, double***** %366, align 8
  %762 = getelementptr inbounds double***, double**** %761, i64 %368
  %763 = load double***, double**** %762, align 8
  %764 = getelementptr inbounds double**, double*** %763, i64 %420
  %765 = load double**, double*** %764, align 8
  %766 = getelementptr inbounds double*, double** %765, i64 %471
  %767 = load double*, double** %766, align 8
  %768 = add nsw i32 %storemerge6, -1
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds double, double* %767, i64 %769
  %771 = load double, double* %770, align 8
  %772 = fadd double %760, %771
  %773 = load double****, double***** %370, align 8
  %774 = getelementptr inbounds double***, double**** %773, i64 %372
  %775 = load double***, double**** %774, align 8
  %776 = getelementptr inbounds double**, double*** %775, i64 %422
  %777 = load double**, double*** %776, align 8
  %778 = getelementptr inbounds double*, double** %777, i64 %473
  %779 = load double*, double** %778, align 8
  %780 = sext i32 %storemerge6 to i64
  %781 = getelementptr inbounds double, double* %779, i64 %780
  %782 = load double, double* %781, align 8
  %783 = fadd double %772, %782
  %784 = load double****, double***** %374, align 8
  %785 = getelementptr inbounds double***, double**** %784, i64 %376
  %786 = load double***, double**** %785, align 8
  %787 = getelementptr inbounds double**, double*** %786, i64 %424
  %788 = load double**, double*** %787, align 8
  %789 = getelementptr inbounds double*, double** %788, i64 %475
  %790 = load double*, double** %789, align 8
  %791 = add nsw i32 %storemerge6, 1
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds double, double* %790, i64 %792
  %794 = load double, double* %793, align 8
  %795 = fadd double %783, %794
  %796 = fadd double %587, %691
  %797 = fadd double %796, %795
  %798 = fdiv double %797, 2.700000e+01
  %799 = sext i32 %storemerge6 to i64
  %800 = getelementptr inbounds double, double* %478, i64 %799
  store double %798, double* %800, align 8
  %801 = add nsw i32 %storemerge6, 1
  br label %479

; <label>:802:                                    ; preds = %479
  %803 = add nsw i32 %storemerge5, 1
  br label %428

; <label>:804:                                    ; preds = %428
  %805 = add nsw i32 %storemerge1, 1
  br label %377

; <label>:806:                                    ; preds = %377
  %807 = load i32, i32* %2, align 4
  %808 = sext i32 %807 to i64
  br label %809

; <label>:809:                                    ; preds = %848, %806
  %storemerge3.lcssa35 = phi i32 [ %storemerge5.lcssa26, %806 ], [ %storemerge3, %848 ]
  %storemerge4.lcssa31.lcssa34 = phi i32 [ %storemerge6.lcssa17.lcssa23, %806 ], [ %storemerge4.lcssa31, %848 ]
  %storemerge2 = phi i32 [ 1, %806 ], [ %849, %848 ]
  %810 = load i32, i32* @x_block_size, align 4
  %811 = icmp sgt i32 %storemerge2, %810
  br i1 %811, label %850, label %812

; <label>:812:                                    ; preds = %809
  %813 = sext i32 %storemerge2 to i64
  %814 = mul nsw i64 %25, %813
  %815 = getelementptr inbounds double, double* %21, i64 %814
  %816 = sext i32 %storemerge2 to i64
  br label %817

; <label>:817:                                    ; preds = %846, %812
  %storemerge4.lcssa31 = phi i32 [ %storemerge4.lcssa31.lcssa34, %812 ], [ %storemerge4, %846 ]
  %storemerge3 = phi i32 [ 1, %812 ], [ %847, %846 ]
  %818 = load i32, i32* @y_block_size, align 4
  %819 = icmp sgt i32 %storemerge3, %818
  br i1 %819, label %848, label %820

; <label>:820:                                    ; preds = %817
  %821 = sext i32 %storemerge3 to i64
  %822 = mul nsw i64 %821, %18
  %823 = getelementptr inbounds double, double* %815, i64 %822
  %824 = sext i32 %storemerge3 to i64
  br label %825

; <label>:825:                                    ; preds = %828, %820
  %storemerge4 = phi i32 [ 1, %820 ], [ %845, %828 ]
  %826 = load i32, i32* @z_block_size, align 4
  %827 = icmp sgt i32 %storemerge4, %826
  br i1 %827, label %846, label %828

; <label>:828:                                    ; preds = %825
  %829 = sext i32 %storemerge4 to i64
  %830 = getelementptr inbounds double, double* %823, i64 %829
  %831 = bitcast double* %830 to i64*
  %832 = load i64, i64* %831, align 8
  %833 = load %struct.block*, %struct.block** %9, align 8
  %834 = getelementptr inbounds %struct.block, %struct.block* %833, i64 0, i32 11
  %835 = load double****, double***** %834, align 8
  %836 = getelementptr inbounds double***, double**** %835, i64 %808
  %837 = load double***, double**** %836, align 8
  %838 = getelementptr inbounds double**, double*** %837, i64 %816
  %839 = load double**, double*** %838, align 8
  %840 = getelementptr inbounds double*, double** %839, i64 %824
  %841 = load double*, double** %840, align 8
  %842 = sext i32 %storemerge4 to i64
  %843 = getelementptr inbounds double, double* %841, i64 %842
  %844 = bitcast double* %843 to i64*
  store i64 %832, i64* %844, align 8
  %845 = add nsw i32 %storemerge4, 1
  br label %825

; <label>:846:                                    ; preds = %825
  %847 = add nsw i32 %storemerge3, 1
  br label %817

; <label>:848:                                    ; preds = %817
  %849 = add nsw i32 %storemerge2, 1
  br label %809

; <label>:850:                                    ; preds = %254, %809
  %.lcssa1521.lcssa30.lcssa48 = phi double [ %.lcssa1521.lcssa30.lcssa49, %254 ], [ %.lcssa1521.lcssa30, %809 ]
  %.lcssa20.lcssa28.lcssa45 = phi double [ %.lcssa20.lcssa28.lcssa46, %254 ], [ %.lcssa20.lcssa28, %809 ]
  %storemerge3.lcssa35.lcssa43 = phi i32 [ %storemerge3.lcssa35.lcssa44, %254 ], [ %storemerge3.lcssa35, %809 ]
  %storemerge2.lcssa40 = phi i32 [ %storemerge2.lcssa41, %254 ], [ %storemerge2, %809 ]
  %storemerge4.lcssa31.lcssa34.lcssa37 = phi i32 [ %storemerge4.lcssa31.lcssa34.lcssa38, %254 ], [ %storemerge4.lcssa31.lcssa34, %809 ]
  %851 = add nsw i32 %storemerge, 1
  br label %246

; <label>:852:                                    ; preds = %246
  store i32 %storemerge4.lcssa31.lcssa34.lcssa38, i32* %5, align 1
  store i32 %storemerge2.lcssa41, i32* %3, align 1
  store i32 %storemerge3.lcssa35.lcssa44, i32* %4, align 1
  store double %.lcssa20.lcssa28.lcssa46, double* %7, align 1
  store double %.lcssa1521.lcssa30.lcssa49, double* %8, align 1
  store i32 %storemerge, i32* %6, align 4
  br label %853

; <label>:853:                                    ; preds = %852, %244
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @reduce_blocks() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca %struct.parent*, align 8
  store i32 0, i32* %7, align 4
  store double 0.000000e+00, double* %10, align 8
  %12 = call double @timer()
  store double %12, double* %8, align 8
  call void @zero_refine()
  %13 = load i32, i32* @target_active, align 4
  %14 = icmp eq i32 %13, 0
  %15 = load i32, i32* @global_active, align 4
  %16 = load i32, i32* @num_pes, align 4
  %17 = load i32, i32* @target_active, align 4
  %18 = mul nsw i32 %16, %17
  %19 = sub nsw i32 %15, %18
  %20 = add nsw i32 %19, 3
  %storemerge.in = select i1 %14, i32 %19, i32 %20
  %storemerge = sdiv i32 %storemerge.in, 7
  store i32 %storemerge, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %21 = load i32, i32* @num_refine, align 4
  %22 = load i32, i32* %4, align 4
  %23 = load i32, i32* %4, align 4
  %.promoted17 = load i32, i32* %2, align 1
  %.promoted19 = load %struct.parent*, %struct.parent** %11, align 1
  %.promoted = load i32, i32* %6, align 1
  %.promoted22 = load i32, i32* %3, align 1
  %.promoted24 = load i32, i32* %5, align 1
  %.promoted26 = load double, double* %9, align 1
  %.promoted28 = load double, double* %10, align 1
  br label %24

; <label>:24:                                     ; preds = %95, %0
  %25 = phi double [ %.promoted28, %0 ], [ %100, %95 ]
  %26 = phi double [ %.promoted26, %0 ], [ %97, %95 ]
  %.lcssa1625 = phi i32 [ %.promoted24, %0 ], [ %51, %95 ]
  %storemerge4.lcssa11.lcssa23 = phi i32 [ %.promoted22, %0 ], [ %storemerge4.lcssa11, %95 ]
  %.lcssa621 = phi i32 [ %.promoted, %0 ], [ %32, %95 ]
  %.lcssa1320 = phi %struct.parent* [ %.promoted19, %0 ], [ %52, %95 ]
  %storemerge3.lcssa18 = phi i32 [ %.promoted17, %0 ], [ %storemerge3, %95 ]
  %storemerge1.in = phi i32 [ %21, %0 ], [ %storemerge1, %95 ]
  %storemerge1 = add nsw i32 %storemerge1.in, -1
  %27 = icmp slt i32 %.lcssa1625, %22
  br i1 %27, label %28, label %101

; <label>:28:                                     ; preds = %24
  %29 = load i32, i32* @max_active_parent, align 4
  %30 = load %struct.parent*, %struct.parent** @parents, align 8
  br label %31

; <label>:31:                                     ; preds = %46, %28
  %32 = phi i32 [ %.lcssa621, %28 ], [ %47, %46 ]
  %33 = phi %struct.parent* [ %.lcssa1320, %28 ], [ %37, %46 ]
  %storemerge2 = phi i32 [ 0, %28 ], [ %48, %46 ]
  %34 = icmp slt i32 %storemerge2, %29
  br i1 %34, label %35, label %49

; <label>:35:                                     ; preds = %31
  %36 = sext i32 %storemerge2 to i64
  %37 = getelementptr inbounds %struct.parent, %struct.parent* %30, i64 %36
  %38 = getelementptr inbounds %struct.parent, %struct.parent* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, -1
  br i1 %40, label %41, label %46

; <label>:41:                                     ; preds = %35
  %42 = getelementptr inbounds %struct.parent, %struct.parent* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, %storemerge1
  %45 = add nsw i32 %32, 1
  %spec.select = select i1 %44, i32 %45, i32 %32
  br label %46

; <label>:46:                                     ; preds = %35, %41
  %47 = phi i32 [ %spec.select, %41 ], [ %32, %35 ]
  %48 = add nsw i32 %storemerge2, 1
  br label %31

; <label>:49:                                     ; preds = %31
  br label %50

; <label>:50:                                     ; preds = %92, %49
  %51 = phi i32 [ %.lcssa1625, %49 ], [ %93, %92 ]
  %52 = phi %struct.parent* [ %33, %49 ], [ %59, %92 ]
  %storemerge4.lcssa11 = phi i32 [ %storemerge4.lcssa11.lcssa23, %49 ], [ %storemerge4.lcssa9, %92 ]
  %storemerge3 = phi i32 [ 0, %49 ], [ %94, %92 ]
  %53 = load i32, i32* @max_active_parent, align 4
  %54 = icmp slt i32 %storemerge3, %53
  %55 = icmp slt i32 %51, %23
  %spec.select30 = select i1 %54, i1 %55, i1 false
  br i1 %spec.select30, label %56, label %95

; <label>:56:                                     ; preds = %50
  %57 = load %struct.parent*, %struct.parent** @parents, align 8
  %58 = sext i32 %storemerge3 to i64
  %59 = getelementptr inbounds %struct.parent, %struct.parent* %57, i64 %58
  %60 = getelementptr inbounds %struct.parent, %struct.parent* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %63, label %92

; <label>:63:                                     ; preds = %56
  %64 = getelementptr inbounds %struct.parent, %struct.parent* %59, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %storemerge1
  br i1 %66, label %67, label %92

; <label>:67:                                     ; preds = %63
  %68 = getelementptr inbounds %struct.parent, %struct.parent* %59, i64 0, i32 5
  store i32 -1, i32* %68, align 4
  %69 = add nsw i32 %51, 1
  %70 = load i32, i32* @my_pe, align 4
  %71 = load %struct.block*, %struct.block** @blocks, align 8
  br label %72

; <label>:72:                                     ; preds = %90, %67
  %storemerge4 = phi i32 [ 0, %67 ], [ %91, %90 ]
  %73 = icmp slt i32 %storemerge4, 8
  br i1 %73, label %74, label %92

; <label>:74:                                     ; preds = %72
  %75 = sext i32 %storemerge4 to i64
  %76 = getelementptr inbounds %struct.parent, %struct.parent* %59, i64 0, i32 7, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %70
  br i1 %78, label %79, label %90

; <label>:79:                                     ; preds = %74
  %80 = sext i32 %storemerge4 to i64
  %81 = getelementptr inbounds %struct.parent, %struct.parent* %59, i64 0, i32 6, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, -1
  br i1 %83, label %84, label %90

; <label>:84:                                     ; preds = %79
  %85 = sext i32 %storemerge4 to i64
  %86 = getelementptr inbounds %struct.parent, %struct.parent* %59, i64 0, i32 6, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.block, %struct.block* %71, i64 %88, i32 2
  store i32 -1, i32* %89, align 8
  br label %90

; <label>:90:                                     ; preds = %74, %79, %84
  %91 = add nsw i32 %storemerge4, 1
  br label %72

; <label>:92:                                     ; preds = %56, %72, %63
  %93 = phi i32 [ %51, %56 ], [ %51, %63 ], [ %69, %72 ]
  %storemerge4.lcssa9 = phi i32 [ %storemerge4.lcssa11, %56 ], [ %storemerge4.lcssa11, %63 ], [ %storemerge4, %72 ]
  %94 = add nsw i32 %storemerge3, 1
  br label %50

; <label>:95:                                     ; preds = %50
  %96 = call double @timer()
  %97 = fsub double %96, %26
  call void @consolidate_blocks()
  %98 = call double @timer()
  %99 = fsub double %98, %97
  %100 = fadd double %25, %99
  br label %24

; <label>:101:                                    ; preds = %24
  store i32 %storemerge3.lcssa18, i32* %2, align 1
  store %struct.parent* %.lcssa1320, %struct.parent** %11, align 1
  store i32 %storemerge1, i32* %1, align 4
  store i32 %.lcssa621, i32* %6, align 1
  store i32 %storemerge4.lcssa11.lcssa23, i32* %3, align 1
  store i32 %.lcssa1625, i32* %5, align 1
  store double %26, double* %9, align 1
  store double %25, double* %10, align 1
  %102 = call double @timer()
  %103 = load double, double* %8, align 8
  %104 = fsub double %102, %103
  %105 = load double, double* @timer_target_rb, align 8
  %106 = fadd double %105, %104
  store double %106, double* @timer_target_rb, align 8
  %107 = call double @timer()
  %108 = fsub double %107, %103
  %109 = load double, double* %10, align 8
  %110 = fsub double %108, %109
  %111 = load double, double* @timer_target_dc, align 8
  %112 = fadd double %111, %110
  store double %112, double* @timer_target_dc, align 8
  %113 = load double, double* @timer_target_cb, align 8
  %114 = fadd double %113, %109
  store double %114, double* @timer_target_cb, align 8
  %115 = load i32, i32* %7, align 4
  ret i32 %115
}

; Function Attrs: noinline nounwind uwtable
define void @zero_refine() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.block*, align 8
  %5 = alloca %struct.parent*, align 8
  %.promoted4 = load i32, i32* %2, align 1
  %.promoted7 = load %struct.block*, %struct.block** %4, align 1
  %.promoted10 = load i32, i32* %1, align 1
  br label %6

; <label>:6:                                      ; preds = %41, %0
  %7 = phi i32 [ %.promoted10, %0 ], [ %20, %41 ]
  %8 = phi %struct.block* [ %.promoted7, %0 ], [ %23, %41 ]
  %storemerge2.lcssa6 = phi i32 [ %.promoted4, %0 ], [ %storemerge2.lcssa5, %41 ]
  %storemerge = phi i32 [ 0, %0 ], [ %42, %41 ]
  %9 = load i32*, i32** @sorted_index, align 8
  %10 = load i32, i32* @num_refine, align 4
  %11 = add nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %9, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %storemerge, %14
  br i1 %15, label %16, label %43

; <label>:16:                                     ; preds = %6
  %17 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %18 = sext i32 %storemerge to i64
  %19 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %17, i64 %18, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = load %struct.block*, %struct.block** @blocks, align 8
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds %struct.block, %struct.block* %21, i64 %22
  %24 = getelementptr inbounds %struct.block, %struct.block* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %41

; <label>:27:                                     ; preds = %16
  %28 = getelementptr inbounds %struct.block, %struct.block* %23, i64 0, i32 2
  store i32 0, i32* %28, align 8
  br label %29

; <label>:29:                                     ; preds = %39, %27
  %storemerge2 = phi i32 [ 0, %27 ], [ %40, %39 ]
  %30 = icmp slt i32 %storemerge2, 6
  br i1 %30, label %31, label %41

; <label>:31:                                     ; preds = %29
  %32 = sext i32 %storemerge2 to i64
  %33 = getelementptr inbounds %struct.block, %struct.block* %23, i64 0, i32 8, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %39

; <label>:36:                                     ; preds = %31
  %37 = sext i32 %storemerge2 to i64
  %38 = getelementptr inbounds %struct.block, %struct.block* %23, i64 0, i32 7, i64 %37
  store i32 0, i32* %38, align 4
  br label %39

; <label>:39:                                     ; preds = %31, %36
  %40 = add nsw i32 %storemerge2, 1
  br label %29

; <label>:41:                                     ; preds = %16, %29
  %storemerge2.lcssa5 = phi i32 [ %storemerge2.lcssa6, %16 ], [ %storemerge2, %29 ]
  %42 = add nsw i32 %storemerge, 1
  br label %6

; <label>:43:                                     ; preds = %6
  store i32 %storemerge2.lcssa6, i32* %2, align 1
  store %struct.block* %8, %struct.block** %4, align 1
  store i32 %storemerge, i32* %3, align 4
  store i32 %7, i32* %1, align 1
  %.promoted = load %struct.parent*, %struct.parent** %5, align 1
  br label %44

; <label>:44:                                     ; preds = %57, %43
  %45 = phi %struct.parent* [ %.promoted, %43 ], [ %51, %57 ]
  %storemerge1 = phi i32 [ 0, %43 ], [ %58, %57 ]
  %46 = load i32, i32* @max_active_parent, align 4
  %47 = icmp slt i32 %storemerge1, %46
  br i1 %47, label %48, label %59

; <label>:48:                                     ; preds = %44
  %49 = load %struct.parent*, %struct.parent** @parents, align 8
  %50 = sext i32 %storemerge1 to i64
  %51 = getelementptr inbounds %struct.parent, %struct.parent* %49, i64 %50
  %52 = getelementptr inbounds %struct.parent, %struct.parent* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %57

; <label>:55:                                     ; preds = %48
  %56 = getelementptr inbounds %struct.parent, %struct.parent* %51, i64 0, i32 5
  store i32 0, i32* %56, align 4
  br label %57

; <label>:57:                                     ; preds = %48, %55
  %58 = add nsw i32 %storemerge1, 1
  br label %44

; <label>:59:                                     ; preds = %44
  store i32 %storemerge1, i32* %1, align 4
  store %struct.parent* %45, %struct.parent** %5, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @add_blocks() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca %struct.block*, align 8
  store double 0.000000e+00, double* %7, align 8
  %9 = call double @timer()
  store double %9, double* %6, align 8
  %10 = load i32, i32* @target_active, align 4
  %11 = icmp eq i32 %10, 0
  %12 = load i32, i32* @num_pes, align 4
  %13 = load i32, i32* @target_active, align 4
  %14 = mul nsw i32 %12, %13
  br i1 %11, label %19, label %15

; <label>:15:                                     ; preds = %0
  %16 = add nsw i32 %14, 3
  %17 = load i32, i32* @global_active, align 4
  %18 = sub nsw i32 %16, %17
  br label %22

; <label>:19:                                     ; preds = %0
  %20 = load i32, i32* @global_active, align 4
  %21 = sub nsw i32 %14, %20
  br label %22

; <label>:22:                                     ; preds = %19, %15
  %storemerge.in = phi i32 [ %21, %19 ], [ %18, %15 ]
  %storemerge = sdiv i32 %storemerge.in, 7
  store i32 %storemerge, i32* %4, align 4
  store i32 0, i32* %1, align 4
  store i32 0, i32* %5, align 4
  %23 = load i32, i32* %4, align 4
  %24 = load i32, i32* %4, align 4
  %.promoted6 = load i32, i32* %2, align 1
  %.promoted9 = load i32, i32* %3, align 1
  %.promoted11 = load i32, i32* %5, align 1
  %.promoted = load %struct.block*, %struct.block** %8, align 1
  %.promoted14 = load i32, i32* %1, align 1
  %.promoted16 = load double, double* %7, align 1
  br label %25

; <label>:25:                                     ; preds = %.critedge, %22
  %26 = phi double [ %78, %.critedge ], [ %.promoted16, %22 ]
  %27 = phi i32 [ %79, %.critedge ], [ %.promoted14, %22 ]
  %.lcssa513 = phi %struct.block* [ %43, %.critedge ], [ %.promoted, %22 ]
  %.lcssa12 = phi i32 [ %44, %.critedge ], [ %.promoted11, %22 ]
  %storemerge2.lcssa10 = phi i32 [ %storemerge2, %.critedge ], [ %.promoted9, %22 ]
  %storemerge1.lcssa37 = phi i32 [ %storemerge1, %.critedge ], [ %.promoted6, %22 ]
  %28 = icmp slt i32 %.lcssa12, %23
  br i1 %28, label %29, label %80

; <label>:29:                                     ; preds = %25
  call void @zero_refine()
  %30 = load i32, i32* @num_refine, align 4
  %31 = load i32*, i32** @num_blocks, align 8
  br label %32

; <label>:32:                                     ; preds = %40, %29
  %storemerge1 = phi i32 [ %30, %29 ], [ %41, %40 ]
  %33 = icmp sgt i32 %storemerge1, -1
  br i1 %33, label %34, label %.loopexit

; <label>:34:                                     ; preds = %32
  %35 = sext i32 %storemerge1 to i64
  %36 = getelementptr inbounds i32, i32* %31, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

; <label>:39:                                     ; preds = %34
  store i32 %storemerge1, i32* @cur_max_level, align 4
  br label %.loopexit

; <label>:40:                                     ; preds = %34
  %41 = add nsw i32 %storemerge1, -1
  br label %32

.loopexit:                                        ; preds = %32, %39
  br label %42

; <label>:42:                                     ; preds = %72, %.loopexit
  %43 = phi %struct.block* [ %.lcssa513, %.loopexit ], [ %61, %72 ]
  %44 = phi i32 [ %.lcssa12, %.loopexit ], [ %73, %72 ]
  %storemerge2 = phi i32 [ 0, %.loopexit ], [ %74, %72 ]
  %45 = icmp slt i32 %44, %24
  br i1 %45, label %46, label %.critedge

; <label>:46:                                     ; preds = %42
  %47 = load i32*, i32** @sorted_index, align 8
  %48 = load i32, i32* @num_refine, align 4
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %47, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %storemerge2, %52
  br i1 %53, label %54, label %.critedge

; <label>:54:                                     ; preds = %46
  %55 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %56 = sext i32 %storemerge2 to i64
  %57 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %55, i64 %56, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.block*, %struct.block** @blocks, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds %struct.block, %struct.block* %59, i64 %60
  %62 = getelementptr inbounds %struct.block, %struct.block* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %65, label %72

; <label>:65:                                     ; preds = %54
  %66 = getelementptr inbounds %struct.block, %struct.block* %61, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %27
  br i1 %68, label %69, label %72

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %struct.block, %struct.block* %61, i64 0, i32 2
  store i32 1, i32* %70, align 8
  %71 = add nsw i32 %44, 1
  br label %72

; <label>:72:                                     ; preds = %54, %69, %65
  %73 = phi i32 [ %44, %54 ], [ %71, %69 ], [ %44, %65 ]
  %74 = add nsw i32 %storemerge2, 1
  br label %42

.critedge:                                        ; preds = %42, %46
  %75 = call double @timer()
  call void @split_blocks()
  %76 = call double @timer()
  %77 = fsub double %76, %75
  %78 = fadd double %26, %77
  %79 = add nsw i32 %27, 1
  br label %25

; <label>:80:                                     ; preds = %25
  store i32 %storemerge1.lcssa37, i32* %2, align 1
  store i32 %storemerge2.lcssa10, i32* %3, align 1
  store i32 %.lcssa12, i32* %5, align 1
  store %struct.block* %.lcssa513, %struct.block** %8, align 1
  store i32 %27, i32* %1, align 1
  store double %26, double* %7, align 1
  %81 = call double @timer()
  %82 = load double, double* %6, align 8
  %83 = fsub double %81, %82
  %84 = load double, double* @timer_target_ab, align 8
  %85 = fadd double %84, %83
  store double %85, double* @timer_target_ab, align 8
  %86 = call double @timer()
  %87 = fsub double %86, %82
  %88 = load double, double* %7, align 8
  %89 = fsub double %87, %88
  %90 = load double, double* @timer_target_da, align 8
  %91 = fadd double %90, %89
  store double %91, double* @timer_target_da, align 8
  %92 = load double, double* @timer_target_sb, align 8
  %93 = fadd double %92, %88
  store double %93, double* @timer_target_sb, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define double @timer() #0 {
  %1 = call i64 @clock() #6
  %2 = sitofp i64 %1 to double
  %3 = fdiv double %2, 1.000000e+06
  ret double %3
}

; Function Attrs: nounwind
declare i64 @clock() #4

; Function Attrs: noinline nounwind uwtable
define i8* @ma_malloc(i64, i8*, i32) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i64 %0, i64* %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = call noalias i8* @malloc(i64 %0) #6
  store i8* %8, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %3
  %11 = load i8*, i8** %5, align 8
  %12 = load i32, i32* %6, align 4
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.214, i64 0, i64 0), i8* %11, i32 %12) #6
  call void @exit(i32 -1) #7
  unreachable

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @counter_malloc, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* @counter_malloc, align 4
  %17 = load i64, i64* %4, align 8
  %18 = uitofp i64 %17 to double
  %19 = load double, double* @size_malloc, align 8
  %20 = fadd double %19, %18
  store double %20, double* @size_malloc, align 8
  %21 = load i8*, i8** %7, align 8
  ret i8* %21
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #6

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #6

; Function Attrs: nounwind
declare i32 @putchar(i32) #6

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
