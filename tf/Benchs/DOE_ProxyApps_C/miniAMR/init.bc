; ModuleID = 'init.c'
source_filename = "init.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.block = type { i32, i32, i32, i32, i32, i32, i32, [6 x i32], [6 x i32], [6 x [2 x [2 x i32]]], [3 x i32], double**** }
%struct.parent = type { i32, i32, i32, i32, i32, i32, [8 x i32], [8 x i32], [3 x i32] }
%struct.sorted_block = type { i32, i32 }
%struct.object = type { i32, i32, [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double] }

@num_pes = common global i32 0, align 4
@npx = common global i32 0, align 4
@npy = common global i32 0, align 4
@npz = common global i32 0, align 4
@error_tol = common global i32 0, align 4
@tol = common global double 0.000000e+00, align 8
@p8 = common global i32* null, align 8
@p2 = common global i32* null, align 8
@num_refine = common global i32 0, align 4
@sorted_index = common global i32* null, align 8
@block_start = common global i32* null, align 8
@init_block_x = common global i32 0, align 4
@init_block_y = common global i32 0, align 4
@init_block_z = common global i32 0, align 4
@global_max_b = common global i32 0, align 4
@local_max_b = common global i32 0, align 4
@num_blocks = common global i32* null, align 8
@x_block_size = common global i32 0, align 4
@x_block_half = common global i32 0, align 4
@y_block_size = common global i32 0, align 4
@y_block_half = common global i32 0, align 4
@z_block_size = common global i32 0, align 4
@z_block_half = common global i32 0, align 4
@max_active_block = common global i32 0, align 4
@num_active = common global i32 0, align 4
@global_active = common global i32 0, align 4
@max_active_parent = common global i32 0, align 4
@num_parents = common global i32 0, align 4
@mesh_size = common global [3 x i32] zeroinitializer, align 4
@blocks = common global %struct.block* null, align 8
@num_vars = common global i32 0, align 4
@grid_sum = common global double* null, align 8
@parents = common global %struct.parent* null, align 8
@sorted_list = common global %struct.sorted_block* null, align 8
@my_pe = common global i32 0, align 4
@max_num_blocks = common global i32 0, align 4
@target_active = common global i32 0, align 4
@target_max = common global i32 0, align 4
@target_min = common global i32 0, align 4
@uniform_refine = common global i32 0, align 4
@comm_vars = common global i32 0, align 4
@reorder = common global i32 0, align 4
@inbalance = common global i32 0, align 4
@refine_freq = common global i32 0, align 4
@report_diffusion = common global i32 0, align 4
@checksum_freq = common global i32 0, align 4
@stages_per_ts = common global i32 0, align 4
@num_tsteps = common global i32 0, align 4
@stencil = common global i32 0, align 4
@report_perf = common global i32 0, align 4
@plot_freq = common global i32 0, align 4
@lb_opt = common global i32 0, align 4
@block_change = common global i32 0, align 4
@code = common global i32 0, align 4
@permute = common global i32 0, align 4
@nonblocking = common global i32 0, align 4
@refine_ghost = common global i32 0, align 4
@max_num_parents = common global i32 0, align 4
@cur_max_level = common global i32 0, align 4
@max_mesh_size = common global i32 0, align 4
@from = common global i32* null, align 8
@to = common global i32* null, align 8
@msg_len = common global [3 x [4 x i32]] zeroinitializer, align 16
@num_objects = common global i32 0, align 4
@objects = common global %struct.object* null, align 8

; Function Attrs: noinline nounwind uwtable
define void @init() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca [25 x i32], align 16
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %struct.block*, align 8
  %32 = load i32, i32* @num_pes, align 4
  %33 = zext i32 %32 to i64
  %34 = call i8* @llvm.stacksave()
  store i8* %34, i8** %20, align 8
  %35 = alloca i32, i64 %33, align 16
  %36 = load i32, i32* @num_pes, align 4
  %37 = zext i32 %36 to i64
  %38 = mul nuw i64 3, %37
  %39 = alloca i32, i64 %38, align 16
  %40 = load i32, i32* @npx, align 4
  %41 = zext i32 %40 to i64
  %42 = load i32, i32* @npy, align 4
  %43 = zext i32 %42 to i64
  %44 = load i32, i32* @npz, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw i64 %41, %43
  %47 = mul nuw i64 %46, %45
  %48 = alloca i32, i64 %47, align 16
  %49 = load i32, i32* @error_tol, align 4
  %50 = sub nsw i32 0, %49
  %51 = sitofp i32 %50 to double
  %52 = call double @pow(double 1.000000e+01, double %51) #1
  store double %52, double* @tol, align 8
  %53 = load i32*, i32** @p8, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 0
  store i32 1, i32* %54, align 4
  %55 = load i32*, i32** @p2, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 0
  store i32 1, i32* %56, align 4
  store i32 0, i32* %3, align 4
  br label %57

; <label>:57:                                     ; preds = %89, %0
  %58 = load i32, i32* %3, align 4
  %59 = load i32, i32* @num_refine, align 4
  %60 = add nsw i32 %59, 1
  %61 = icmp slt i32 %58, %60
  br i1 %61, label %62, label %92

; <label>:62:                                     ; preds = %57
  %63 = load i32*, i32** @p8, align 8
  %64 = load i32, i32* %3, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %63, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = mul nsw i32 %67, 8
  %69 = load i32*, i32** @p8, align 8
  %70 = load i32, i32* %3, align 4
  %71 = add nsw i32 %70, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %69, i64 %72
  store i32 %68, i32* %73, align 4
  %74 = load i32*, i32** @p2, align 8
  %75 = load i32, i32* %3, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, 2
  %80 = load i32*, i32** @p2, align 8
  %81 = load i32, i32* %3, align 4
  %82 = add nsw i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i32, i32* %80, i64 %83
  store i32 %79, i32* %84, align 4
  %85 = load i32*, i32** @sorted_index, align 8
  %86 = load i32, i32* %3, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  store i32 0, i32* %88, align 4
  br label %89

; <label>:89:                                     ; preds = %62
  %90 = load i32, i32* %3, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %3, align 4
  br label %57

; <label>:92:                                     ; preds = %57
  %93 = load i32*, i32** @sorted_index, align 8
  %94 = load i32, i32* @num_refine, align 4
  %95 = add nsw i32 %94, 1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %93, i64 %96
  store i32 0, i32* %97, align 4
  %98 = load i32*, i32** @block_start, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 0
  store i32 0, i32* %99, align 4
  %100 = load i32, i32* @init_block_x, align 4
  %101 = load i32, i32* @init_block_y, align 4
  %102 = mul nsw i32 %100, %101
  %103 = load i32, i32* @init_block_z, align 4
  %104 = mul nsw i32 %102, %103
  store i32 %104, i32* @global_max_b, align 4
  store i32 %104, i32* @local_max_b, align 4
  %105 = load i32, i32* @num_pes, align 4
  %106 = load i32, i32* @global_max_b, align 4
  %107 = mul nsw i32 %105, %106
  store i32 %107, i32* %22, align 4
  store i32 1, i32* %3, align 4
  br label %108

; <label>:108:                                    ; preds = %131, %92
  %109 = load i32, i32* %3, align 4
  %110 = load i32, i32* @num_refine, align 4
  %111 = icmp sle i32 %109, %110
  br i1 %111, label %112, label %134

; <label>:112:                                    ; preds = %108
  %113 = load i32*, i32** @block_start, align 8
  %114 = load i32, i32* %3, align 4
  %115 = sub nsw i32 %114, 1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %113, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %22, align 4
  %120 = add nsw i32 %118, %119
  %121 = load i32*, i32** @block_start, align 8
  %122 = load i32, i32* %3, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  store i32 %120, i32* %124, align 4
  %125 = load i32, i32* %22, align 4
  %126 = mul nsw i32 %125, 8
  store i32 %126, i32* %22, align 4
  %127 = load i32*, i32** @num_blocks, align 8
  %128 = load i32, i32* %3, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  store i32 0, i32* %130, align 4
  br label %131

; <label>:131:                                    ; preds = %112
  %132 = load i32, i32* %3, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %3, align 4
  br label %108

; <label>:134:                                    ; preds = %108
  %135 = load i32, i32* @x_block_size, align 4
  %136 = sdiv i32 %135, 2
  store i32 %136, i32* @x_block_half, align 4
  %137 = load i32, i32* @y_block_size, align 4
  %138 = sdiv i32 %137, 2
  store i32 %138, i32* @y_block_half, align 4
  %139 = load i32, i32* @z_block_size, align 4
  %140 = sdiv i32 %139, 2
  store i32 %140, i32* @z_block_half, align 4
  %141 = load i32, i32* @init_block_x, align 4
  %142 = load i32, i32* @init_block_y, align 4
  %143 = mul nsw i32 %141, %142
  %144 = load i32, i32* @init_block_z, align 4
  %145 = mul nsw i32 %143, %144
  store i32 %145, i32* @max_active_block, align 4
  %146 = load i32, i32* @max_active_block, align 4
  store i32 %146, i32* @num_active, align 4
  %147 = load i32, i32* @num_active, align 4
  %148 = load i32, i32* @num_pes, align 4
  %149 = mul nsw i32 %147, %148
  store i32 %149, i32* @global_active, align 4
  store i32 0, i32* @max_active_parent, align 4
  store i32 0, i32* @num_parents, align 4
  %150 = load i32*, i32** @p2, align 8
  %151 = load i32, i32* @num_refine, align 4
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %150, i64 %153
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %9, align 4
  %156 = load i32, i32* @npx, align 4
  %157 = load i32, i32* @init_block_x, align 4
  %158 = mul nsw i32 %156, %157
  %159 = load i32, i32* %9, align 4
  %160 = mul nsw i32 %158, %159
  store i32 %160, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %161 = load i32, i32* @npy, align 4
  %162 = load i32, i32* @init_block_y, align 4
  %163 = mul nsw i32 %161, %162
  %164 = load i32, i32* %9, align 4
  %165 = mul nsw i32 %163, %164
  store i32 %165, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %166 = load i32, i32* @npz, align 4
  %167 = load i32, i32* @init_block_z, align 4
  %168 = mul nsw i32 %166, %167
  %169 = load i32, i32* %9, align 4
  %170 = mul nsw i32 %168, %169
  store i32 %170, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %1, align 4
  store i32 0, i32* %8, align 4
  br label %171

; <label>:171:                                    ; preds = %465, %134
  %172 = load i32, i32* %5, align 4
  %173 = load i32, i32* @init_block_z, align 4
  %174 = icmp slt i32 %172, %173
  br i1 %174, label %175, label %468

; <label>:175:                                    ; preds = %171
  store i32 0, i32* %4, align 4
  br label %176

; <label>:176:                                    ; preds = %461, %175
  %177 = load i32, i32* %4, align 4
  %178 = load i32, i32* @init_block_y, align 4
  %179 = icmp slt i32 %177, %178
  br i1 %179, label %180, label %464

; <label>:180:                                    ; preds = %176
  store i32 0, i32* %3, align 4
  br label %181

; <label>:181:                                    ; preds = %455, %180
  %182 = load i32, i32* %3, align 4
  %183 = load i32, i32* @init_block_x, align 4
  %184 = icmp slt i32 %182, %183
  br i1 %184, label %185, label %460

; <label>:185:                                    ; preds = %181
  %186 = load %struct.block*, %struct.block** @blocks, align 8
  %187 = load i32, i32* %8, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.block, %struct.block* %186, i64 %188
  store %struct.block* %189, %struct.block** %31, align 8
  %190 = load %struct.block*, %struct.block** %31, align 8
  %191 = getelementptr inbounds %struct.block, %struct.block* %190, i32 0, i32 1
  store i32 0, i32* %191, align 4
  %192 = load i32, i32* %1, align 4
  %193 = load %struct.block*, %struct.block** %31, align 8
  %194 = getelementptr inbounds %struct.block, %struct.block* %193, i32 0, i32 0
  store i32 %192, i32* %194, align 8
  %195 = load %struct.block*, %struct.block** %31, align 8
  %196 = getelementptr inbounds %struct.block, %struct.block* %195, i32 0, i32 4
  store i32 -1, i32* %196, align 8
  %197 = load i32, i32* %3, align 4
  %198 = load i32, i32* %9, align 4
  %199 = mul nsw i32 %197, %198
  %200 = load i32, i32* %9, align 4
  %201 = sdiv i32 %200, 2
  %202 = add nsw i32 %199, %201
  %203 = load %struct.block*, %struct.block** %31, align 8
  %204 = getelementptr inbounds %struct.block, %struct.block* %203, i32 0, i32 10
  %205 = getelementptr inbounds [3 x i32], [3 x i32]* %204, i64 0, i64 0
  store i32 %202, i32* %205, align 4
  %206 = load i32, i32* %4, align 4
  %207 = load i32, i32* %9, align 4
  %208 = mul nsw i32 %206, %207
  %209 = load i32, i32* %9, align 4
  %210 = sdiv i32 %209, 2
  %211 = add nsw i32 %208, %210
  %212 = load %struct.block*, %struct.block** %31, align 8
  %213 = getelementptr inbounds %struct.block, %struct.block* %212, i32 0, i32 10
  %214 = getelementptr inbounds [3 x i32], [3 x i32]* %213, i64 0, i64 1
  store i32 %211, i32* %214, align 4
  %215 = load i32, i32* %5, align 4
  %216 = load i32, i32* %9, align 4
  %217 = mul nsw i32 %215, %216
  %218 = load i32, i32* %9, align 4
  %219 = sdiv i32 %218, 2
  %220 = add nsw i32 %217, %219
  %221 = load %struct.block*, %struct.block** %31, align 8
  %222 = getelementptr inbounds %struct.block, %struct.block* %221, i32 0, i32 10
  %223 = getelementptr inbounds [3 x i32], [3 x i32]* %222, i64 0, i64 2
  store i32 %220, i32* %223, align 4
  %224 = load i32, i32* %8, align 4
  %225 = load i32, i32* %1, align 4
  call void @add_sorted_list(i32 %224, i32 %225, i32 0)
  store i32 0, i32* %2, align 4
  br label %226

; <label>:226:                                    ; preds = %279, %185
  %227 = load i32, i32* %2, align 4
  %228 = load i32, i32* @num_vars, align 4
  %229 = icmp slt i32 %227, %228
  br i1 %229, label %230, label %282

; <label>:230:                                    ; preds = %226
  store i32 1, i32* %17, align 4
  br label %231

; <label>:231:                                    ; preds = %275, %230
  %232 = load i32, i32* %17, align 4
  %233 = load i32, i32* @x_block_size, align 4
  %234 = icmp sle i32 %232, %233
  br i1 %234, label %235, label %278

; <label>:235:                                    ; preds = %231
  store i32 1, i32* %18, align 4
  br label %236

; <label>:236:                                    ; preds = %271, %235
  %237 = load i32, i32* %18, align 4
  %238 = load i32, i32* @y_block_size, align 4
  %239 = icmp sle i32 %237, %238
  br i1 %239, label %240, label %274

; <label>:240:                                    ; preds = %236
  store i32 1, i32* %19, align 4
  br label %241

; <label>:241:                                    ; preds = %267, %240
  %242 = load i32, i32* %19, align 4
  %243 = load i32, i32* @z_block_size, align 4
  %244 = icmp sle i32 %242, %243
  br i1 %244, label %245, label %270

; <label>:245:                                    ; preds = %241
  %246 = call i32 @glibc_compat_rand()
  %247 = sitofp i32 %246 to double
  %248 = fdiv double %247, 0x41DFFFFFFFC00000
  %249 = load %struct.block*, %struct.block** %31, align 8
  %250 = getelementptr inbounds %struct.block, %struct.block* %249, i32 0, i32 11
  %251 = load double****, double***** %250, align 8
  %252 = load i32, i32* %2, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds double***, double**** %251, i64 %253
  %255 = load double***, double**** %254, align 8
  %256 = load i32, i32* %17, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds double**, double*** %255, i64 %257
  %259 = load double**, double*** %258, align 8
  %260 = load i32, i32* %18, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds double*, double** %259, i64 %261
  %263 = load double*, double** %262, align 8
  %264 = load i32, i32* %19, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds double, double* %263, i64 %265
  store double %248, double* %266, align 8
  br label %267

; <label>:267:                                    ; preds = %245
  %268 = load i32, i32* %19, align 4
  %269 = add nsw i32 %268, 1
  store i32 %269, i32* %19, align 4
  br label %241

; <label>:270:                                    ; preds = %241
  br label %271

; <label>:271:                                    ; preds = %270
  %272 = load i32, i32* %18, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* %18, align 4
  br label %236

; <label>:274:                                    ; preds = %236
  br label %275

; <label>:275:                                    ; preds = %274
  %276 = load i32, i32* %17, align 4
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* %17, align 4
  br label %231

; <label>:278:                                    ; preds = %231
  br label %279

; <label>:279:                                    ; preds = %278
  %280 = load i32, i32* %2, align 4
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %2, align 4
  br label %226

; <label>:282:                                    ; preds = %226
  %283 = load i32, i32* %3, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %294

; <label>:285:                                    ; preds = %282
  %286 = load %struct.block*, %struct.block** %31, align 8
  %287 = getelementptr inbounds %struct.block, %struct.block* %286, i32 0, i32 8
  %288 = getelementptr inbounds [6 x i32], [6 x i32]* %287, i64 0, i64 0
  store i32 -2, i32* %288, align 4
  %289 = load %struct.block*, %struct.block** %31, align 8
  %290 = getelementptr inbounds %struct.block, %struct.block* %289, i32 0, i32 9
  %291 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %290, i64 0, i64 0
  %292 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %291, i64 0, i64 0
  %293 = getelementptr inbounds [2 x i32], [2 x i32]* %292, i64 0, i64 0
  store i32 0, i32* %293, align 4
  br label %305

; <label>:294:                                    ; preds = %282
  %295 = load %struct.block*, %struct.block** %31, align 8
  %296 = getelementptr inbounds %struct.block, %struct.block* %295, i32 0, i32 8
  %297 = getelementptr inbounds [6 x i32], [6 x i32]* %296, i64 0, i64 0
  store i32 0, i32* %297, align 4
  %298 = load i32, i32* %8, align 4
  %299 = sub nsw i32 %298, 1
  %300 = load %struct.block*, %struct.block** %31, align 8
  %301 = getelementptr inbounds %struct.block, %struct.block* %300, i32 0, i32 9
  %302 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %301, i64 0, i64 0
  %303 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %302, i64 0, i64 0
  %304 = getelementptr inbounds [2 x i32], [2 x i32]* %303, i64 0, i64 0
  store i32 %299, i32* %304, align 4
  br label %305

; <label>:305:                                    ; preds = %294, %285
  %306 = load %struct.block*, %struct.block** %31, align 8
  %307 = getelementptr inbounds %struct.block, %struct.block* %306, i32 0, i32 7
  %308 = getelementptr inbounds [6 x i32], [6 x i32]* %307, i64 0, i64 0
  store i32 0, i32* %308, align 4
  %309 = load i32, i32* %3, align 4
  %310 = load i32, i32* @init_block_x, align 4
  %311 = sub nsw i32 %310, 1
  %312 = icmp eq i32 %309, %311
  br i1 %312, label %313, label %322

; <label>:313:                                    ; preds = %305
  %314 = load %struct.block*, %struct.block** %31, align 8
  %315 = getelementptr inbounds %struct.block, %struct.block* %314, i32 0, i32 8
  %316 = getelementptr inbounds [6 x i32], [6 x i32]* %315, i64 0, i64 1
  store i32 -2, i32* %316, align 4
  %317 = load %struct.block*, %struct.block** %31, align 8
  %318 = getelementptr inbounds %struct.block, %struct.block* %317, i32 0, i32 9
  %319 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %318, i64 0, i64 1
  %320 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %319, i64 0, i64 0
  %321 = getelementptr inbounds [2 x i32], [2 x i32]* %320, i64 0, i64 0
  store i32 0, i32* %321, align 4
  br label %333

; <label>:322:                                    ; preds = %305
  %323 = load %struct.block*, %struct.block** %31, align 8
  %324 = getelementptr inbounds %struct.block, %struct.block* %323, i32 0, i32 8
  %325 = getelementptr inbounds [6 x i32], [6 x i32]* %324, i64 0, i64 1
  store i32 0, i32* %325, align 4
  %326 = load i32, i32* %8, align 4
  %327 = add nsw i32 %326, 1
  %328 = load %struct.block*, %struct.block** %31, align 8
  %329 = getelementptr inbounds %struct.block, %struct.block* %328, i32 0, i32 9
  %330 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %329, i64 0, i64 1
  %331 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %330, i64 0, i64 0
  %332 = getelementptr inbounds [2 x i32], [2 x i32]* %331, i64 0, i64 0
  store i32 %327, i32* %332, align 4
  br label %333

; <label>:333:                                    ; preds = %322, %313
  %334 = load %struct.block*, %struct.block** %31, align 8
  %335 = getelementptr inbounds %struct.block, %struct.block* %334, i32 0, i32 7
  %336 = getelementptr inbounds [6 x i32], [6 x i32]* %335, i64 0, i64 1
  store i32 0, i32* %336, align 4
  %337 = load i32, i32* %4, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %348

; <label>:339:                                    ; preds = %333
  %340 = load %struct.block*, %struct.block** %31, align 8
  %341 = getelementptr inbounds %struct.block, %struct.block* %340, i32 0, i32 8
  %342 = getelementptr inbounds [6 x i32], [6 x i32]* %341, i64 0, i64 2
  store i32 -2, i32* %342, align 4
  %343 = load %struct.block*, %struct.block** %31, align 8
  %344 = getelementptr inbounds %struct.block, %struct.block* %343, i32 0, i32 9
  %345 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %344, i64 0, i64 2
  %346 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %345, i64 0, i64 0
  %347 = getelementptr inbounds [2 x i32], [2 x i32]* %346, i64 0, i64 0
  store i32 0, i32* %347, align 4
  br label %360

; <label>:348:                                    ; preds = %333
  %349 = load %struct.block*, %struct.block** %31, align 8
  %350 = getelementptr inbounds %struct.block, %struct.block* %349, i32 0, i32 8
  %351 = getelementptr inbounds [6 x i32], [6 x i32]* %350, i64 0, i64 2
  store i32 0, i32* %351, align 4
  %352 = load i32, i32* %8, align 4
  %353 = load i32, i32* @init_block_x, align 4
  %354 = sub nsw i32 %352, %353
  %355 = load %struct.block*, %struct.block** %31, align 8
  %356 = getelementptr inbounds %struct.block, %struct.block* %355, i32 0, i32 9
  %357 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %356, i64 0, i64 2
  %358 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %357, i64 0, i64 0
  %359 = getelementptr inbounds [2 x i32], [2 x i32]* %358, i64 0, i64 0
  store i32 %354, i32* %359, align 4
  br label %360

; <label>:360:                                    ; preds = %348, %339
  %361 = load %struct.block*, %struct.block** %31, align 8
  %362 = getelementptr inbounds %struct.block, %struct.block* %361, i32 0, i32 7
  %363 = getelementptr inbounds [6 x i32], [6 x i32]* %362, i64 0, i64 2
  store i32 0, i32* %363, align 4
  %364 = load i32, i32* %4, align 4
  %365 = load i32, i32* @init_block_y, align 4
  %366 = sub nsw i32 %365, 1
  %367 = icmp eq i32 %364, %366
  br i1 %367, label %368, label %377

; <label>:368:                                    ; preds = %360
  %369 = load %struct.block*, %struct.block** %31, align 8
  %370 = getelementptr inbounds %struct.block, %struct.block* %369, i32 0, i32 8
  %371 = getelementptr inbounds [6 x i32], [6 x i32]* %370, i64 0, i64 3
  store i32 -2, i32* %371, align 4
  %372 = load %struct.block*, %struct.block** %31, align 8
  %373 = getelementptr inbounds %struct.block, %struct.block* %372, i32 0, i32 9
  %374 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %373, i64 0, i64 3
  %375 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %374, i64 0, i64 0
  %376 = getelementptr inbounds [2 x i32], [2 x i32]* %375, i64 0, i64 0
  store i32 0, i32* %376, align 4
  br label %389

; <label>:377:                                    ; preds = %360
  %378 = load %struct.block*, %struct.block** %31, align 8
  %379 = getelementptr inbounds %struct.block, %struct.block* %378, i32 0, i32 8
  %380 = getelementptr inbounds [6 x i32], [6 x i32]* %379, i64 0, i64 3
  store i32 0, i32* %380, align 4
  %381 = load i32, i32* %8, align 4
  %382 = load i32, i32* @init_block_x, align 4
  %383 = add nsw i32 %381, %382
  %384 = load %struct.block*, %struct.block** %31, align 8
  %385 = getelementptr inbounds %struct.block, %struct.block* %384, i32 0, i32 9
  %386 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %385, i64 0, i64 3
  %387 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %386, i64 0, i64 0
  %388 = getelementptr inbounds [2 x i32], [2 x i32]* %387, i64 0, i64 0
  store i32 %383, i32* %388, align 4
  br label %389

; <label>:389:                                    ; preds = %377, %368
  %390 = load %struct.block*, %struct.block** %31, align 8
  %391 = getelementptr inbounds %struct.block, %struct.block* %390, i32 0, i32 7
  %392 = getelementptr inbounds [6 x i32], [6 x i32]* %391, i64 0, i64 3
  store i32 0, i32* %392, align 4
  %393 = load i32, i32* %5, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %404

; <label>:395:                                    ; preds = %389
  %396 = load %struct.block*, %struct.block** %31, align 8
  %397 = getelementptr inbounds %struct.block, %struct.block* %396, i32 0, i32 8
  %398 = getelementptr inbounds [6 x i32], [6 x i32]* %397, i64 0, i64 4
  store i32 -2, i32* %398, align 4
  %399 = load %struct.block*, %struct.block** %31, align 8
  %400 = getelementptr inbounds %struct.block, %struct.block* %399, i32 0, i32 9
  %401 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %400, i64 0, i64 4
  %402 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %401, i64 0, i64 0
  %403 = getelementptr inbounds [2 x i32], [2 x i32]* %402, i64 0, i64 0
  store i32 0, i32* %403, align 4
  br label %418

; <label>:404:                                    ; preds = %389
  %405 = load %struct.block*, %struct.block** %31, align 8
  %406 = getelementptr inbounds %struct.block, %struct.block* %405, i32 0, i32 8
  %407 = getelementptr inbounds [6 x i32], [6 x i32]* %406, i64 0, i64 4
  store i32 0, i32* %407, align 4
  %408 = load i32, i32* %8, align 4
  %409 = load i32, i32* @init_block_x, align 4
  %410 = load i32, i32* @init_block_y, align 4
  %411 = mul nsw i32 %409, %410
  %412 = sub nsw i32 %408, %411
  %413 = load %struct.block*, %struct.block** %31, align 8
  %414 = getelementptr inbounds %struct.block, %struct.block* %413, i32 0, i32 9
  %415 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %414, i64 0, i64 4
  %416 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %415, i64 0, i64 0
  %417 = getelementptr inbounds [2 x i32], [2 x i32]* %416, i64 0, i64 0
  store i32 %412, i32* %417, align 4
  br label %418

; <label>:418:                                    ; preds = %404, %395
  %419 = load %struct.block*, %struct.block** %31, align 8
  %420 = getelementptr inbounds %struct.block, %struct.block* %419, i32 0, i32 7
  %421 = getelementptr inbounds [6 x i32], [6 x i32]* %420, i64 0, i64 4
  store i32 0, i32* %421, align 4
  %422 = load i32, i32* %5, align 4
  %423 = load i32, i32* @init_block_z, align 4
  %424 = sub nsw i32 %423, 1
  %425 = icmp eq i32 %422, %424
  br i1 %425, label %426, label %435

; <label>:426:                                    ; preds = %418
  %427 = load %struct.block*, %struct.block** %31, align 8
  %428 = getelementptr inbounds %struct.block, %struct.block* %427, i32 0, i32 8
  %429 = getelementptr inbounds [6 x i32], [6 x i32]* %428, i64 0, i64 5
  store i32 -2, i32* %429, align 4
  %430 = load %struct.block*, %struct.block** %31, align 8
  %431 = getelementptr inbounds %struct.block, %struct.block* %430, i32 0, i32 9
  %432 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %431, i64 0, i64 5
  %433 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %432, i64 0, i64 0
  %434 = getelementptr inbounds [2 x i32], [2 x i32]* %433, i64 0, i64 0
  store i32 0, i32* %434, align 4
  br label %449

; <label>:435:                                    ; preds = %418
  %436 = load %struct.block*, %struct.block** %31, align 8
  %437 = getelementptr inbounds %struct.block, %struct.block* %436, i32 0, i32 8
  %438 = getelementptr inbounds [6 x i32], [6 x i32]* %437, i64 0, i64 5
  store i32 0, i32* %438, align 4
  %439 = load i32, i32* %8, align 4
  %440 = load i32, i32* @init_block_x, align 4
  %441 = load i32, i32* @init_block_y, align 4
  %442 = mul nsw i32 %440, %441
  %443 = add nsw i32 %439, %442
  %444 = load %struct.block*, %struct.block** %31, align 8
  %445 = getelementptr inbounds %struct.block, %struct.block* %444, i32 0, i32 9
  %446 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %445, i64 0, i64 5
  %447 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %446, i64 0, i64 0
  %448 = getelementptr inbounds [2 x i32], [2 x i32]* %447, i64 0, i64 0
  store i32 %443, i32* %448, align 4
  br label %449

; <label>:449:                                    ; preds = %435, %426
  %450 = load %struct.block*, %struct.block** %31, align 8
  %451 = getelementptr inbounds %struct.block, %struct.block* %450, i32 0, i32 7
  %452 = getelementptr inbounds [6 x i32], [6 x i32]* %451, i64 0, i64 5
  store i32 0, i32* %452, align 4
  %453 = load i32, i32* %8, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %8, align 4
  br label %455

; <label>:455:                                    ; preds = %449
  %456 = load i32, i32* %3, align 4
  %457 = add nsw i32 %456, 1
  store i32 %457, i32* %3, align 4
  %458 = load i32, i32* %1, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %1, align 4
  br label %181

; <label>:460:                                    ; preds = %181
  br label %461

; <label>:461:                                    ; preds = %460
  %462 = load i32, i32* %4, align 4
  %463 = add nsw i32 %462, 1
  store i32 %463, i32* %4, align 4
  br label %176

; <label>:464:                                    ; preds = %176
  br label %465

; <label>:465:                                    ; preds = %464
  %466 = load i32, i32* %5, align 4
  %467 = add nsw i32 %466, 1
  store i32 %467, i32* %5, align 4
  br label %171

; <label>:468:                                    ; preds = %171
  store i32 0, i32* %2, align 4
  br label %469

; <label>:469:                                    ; preds = %480, %468
  %470 = load i32, i32* %2, align 4
  %471 = load i32, i32* @num_vars, align 4
  %472 = icmp slt i32 %470, %471
  br i1 %472, label %473, label %483

; <label>:473:                                    ; preds = %469
  %474 = load i32, i32* %2, align 4
  %475 = call double @check_sum(i32 %474)
  %476 = load double*, double** @grid_sum, align 8
  %477 = load i32, i32* %2, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds double, double* %476, i64 %478
  store double %475, double* %479, align 8
  br label %480

; <label>:480:                                    ; preds = %473
  %481 = load i32, i32* %2, align 4
  %482 = add nsw i32 %481, 1
  store i32 %482, i32* %2, align 4
  br label %469

; <label>:483:                                    ; preds = %469
  %484 = load i8*, i8** %20, align 8
  call void @llvm.stackrestore(i8* %484)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

; Function Attrs: nounwind
declare double @pow(double, double) #2

declare void @add_sorted_list(i32, i32, i32) #3

declare i32 @glibc_compat_rand() #3

declare double @check_sum(i32) #3

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
