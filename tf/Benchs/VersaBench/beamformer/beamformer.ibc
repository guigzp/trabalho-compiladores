; ModuleID = 'beamformer.rbc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.BeamFirData = type { i32, i32, i32, float*, float* }

@detector_out_StrictFP = common global [4 x [512 x float]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"i:\00", align 1
@optarg = external global i8*, align 8
@numiters = internal global i32 100, align 4
@.str.1 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [60 x i8] c"A = %lf and B = %lf differ more than FP_ABSTOLERANCE = %lf\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define i32 @main(i32, i8**) #0 {
  br label %3

; <label>:3:                                      ; preds = %8, %2
  %4 = call i32 @getopt(i32 %0, i8** %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #7
  switch i32 %4, label %8 [
    i32 -1, label %9
    i32 105, label %5
  ]

; <label>:5:                                      ; preds = %3
  %6 = load i8*, i8** @optarg, align 8
  %7 = call i32 @atoi(i8* %6) #8
  store i32 %7, i32* @numiters, align 4
  br label %8

; <label>:8:                                      ; preds = %3, %5
  br label %3

; <label>:9:                                      ; preds = %3
  call void @begin_StrictFP()
  call void @begin()
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @getopt(i32, i8**, i8*) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #2

; Function Attrs: noinline nounwind uwtable
define void @begin_StrictFP() #0 {
  %1 = alloca [12 x %struct.BeamFirData], align 16
  %2 = alloca [12 x %struct.BeamFirData], align 16
  %3 = alloca [4 x %struct.BeamFirData], align 16
  %4 = alloca [24576 x float], align 16
  %5 = alloca [24576 x float], align 16
  %6 = alloca [12 x [12288 x float]], align 16
  %7 = alloca [4 x [24 x float]], align 16
  %8 = alloca [12288 x float], align 16
  %9 = alloca [1024 x float], align 16
  %10 = alloca [1024 x float], align 16
  %11 = alloca [512 x float], align 16
  br label %12

; <label>:12:                                     ; preds = %13, %0
  %indvars.iv33 = phi i64 [ %indvars.iv.next34, %13 ], [ 0, %0 ]
  %exitcond35 = icmp eq i64 %indvars.iv33, 12
  br i1 %exitcond35, label %16, label %13

; <label>:13:                                     ; preds = %12
  %14 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %1, i64 0, i64 %indvars.iv33
  call void @BeamFirSetup_StrictFP(%struct.BeamFirData* nonnull %14, i32 64)
  %15 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %2, i64 0, i64 %indvars.iv33
  call void @BeamFirSetup_StrictFP(%struct.BeamFirData* nonnull %15, i32 64)
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  br label %12

; <label>:16:                                     ; preds = %12
  br label %17

; <label>:17:                                     ; preds = %18, %16
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %18 ], [ 0, %16 ]
  %exitcond32 = icmp eq i64 %indvars.iv30, 4
  br i1 %exitcond32, label %22, label %18

; <label>:18:                                     ; preds = %17
  %19 = getelementptr inbounds [4 x %struct.BeamFirData], [4 x %struct.BeamFirData]* %3, i64 0, i64 %indvars.iv30
  call void @BeamFirSetup_StrictFP(%struct.BeamFirData* nonnull %19, i32 512)
  %20 = getelementptr inbounds [4 x [24 x float]], [4 x [24 x float]]* %7, i64 0, i64 %indvars.iv30, i64 0
  %21 = trunc i64 %indvars.iv30 to i32
  call void @BeamFormWeights_StrictFP(i32 %21, float* nonnull %20)
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1
  br label %17

; <label>:22:                                     ; preds = %17
  br label %23

; <label>:23:                                     ; preds = %46, %22
  %indvars.iv27 = phi i64 [ %indvars.iv.next28, %46 ], [ 0, %22 ]
  %exitcond29 = icmp eq i64 %indvars.iv27, 12
  br i1 %exitcond29, label %47, label %24

; <label>:24:                                     ; preds = %23
  %25 = trunc i64 %indvars.iv27 to i32
  br label %26

; <label>:26:                                     ; preds = %27, %24
  %indvars.iv18 = phi i64 [ %indvars.iv.next19, %27 ], [ 0, %24 ]
  %exitcond20 = icmp eq i64 %indvars.iv18, 12
  br i1 %exitcond20, label %30, label %27

; <label>:27:                                     ; preds = %26
  %28 = shl nsw i64 %indvars.iv18, 11
  %29 = getelementptr inbounds [24576 x float], [24576 x float]* %4, i64 0, i64 %28
  call void @InputGenerate_StrictFP(i32 %25, float* nonnull %29, i32 1024)
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  br label %26

; <label>:30:                                     ; preds = %26
  %31 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %1, i64 0, i64 %indvars.iv27
  br label %32

; <label>:32:                                     ; preds = %33, %30
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %33 ], [ 0, %30 ]
  %exitcond23 = icmp eq i64 %indvars.iv21, 1024
  br i1 %exitcond23, label %38, label %33

; <label>:33:                                     ; preds = %32
  %34 = shl nuw nsw i64 %indvars.iv21, 1
  %35 = getelementptr inbounds [24576 x float], [24576 x float]* %4, i64 0, i64 %34
  %36 = shl nuw nsw i64 %indvars.iv21, 1
  %37 = getelementptr inbounds [24576 x float], [24576 x float]* %5, i64 0, i64 %36
  call void @BeamFirFilter_StrictFP(%struct.BeamFirData* nonnull %31, i32 1024, i32 1, float* nonnull %35, float* nonnull %37)
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1
  br label %32

; <label>:38:                                     ; preds = %32
  %39 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %2, i64 0, i64 %indvars.iv27
  br label %40

; <label>:40:                                     ; preds = %41, %38
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %41 ], [ 0, %38 ]
  %exitcond26 = icmp eq i64 %indvars.iv24, 512
  br i1 %exitcond26, label %46, label %41

; <label>:41:                                     ; preds = %40
  %42 = shl nsw i64 %indvars.iv24, 2
  %43 = getelementptr inbounds [24576 x float], [24576 x float]* %5, i64 0, i64 %42
  %44 = shl nuw nsw i64 %indvars.iv24, 1
  %45 = getelementptr inbounds [12 x [12288 x float]], [12 x [12288 x float]]* %6, i64 0, i64 %indvars.iv27, i64 %44
  call void @BeamFirFilter_StrictFP(%struct.BeamFirData* nonnull %39, i32 1024, i32 2, float* nonnull %43, float* nonnull %45)
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  br label %40

; <label>:46:                                     ; preds = %40
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  br label %23

; <label>:47:                                     ; preds = %23
  br label %48

; <label>:48:                                     ; preds = %72, %47
  %indvars.iv15 = phi i64 [ %indvars.iv.next16, %72 ], [ 0, %47 ]
  %exitcond17 = icmp eq i64 %indvars.iv15, 12
  br i1 %exitcond17, label %73, label %49

; <label>:49:                                     ; preds = %48
  %50 = shl nuw nsw i64 %indvars.iv15, 1
  %51 = shl nuw nsw i64 %indvars.iv15, 1
  br label %52

; <label>:52:                                     ; preds = %53, %49
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %53 ], [ 0, %49 ]
  %exitcond14 = icmp eq i64 %indvars.iv12, 512
  br i1 %exitcond14, label %72, label %53

; <label>:53:                                     ; preds = %52
  %54 = shl nuw nsw i64 %indvars.iv12, 1
  %55 = getelementptr inbounds [12 x [12288 x float]], [12 x [12288 x float]]* %6, i64 0, i64 %indvars.iv15, i64 %54
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = mul nuw nsw i64 %indvars.iv12, 24
  %59 = add nuw nsw i64 %58, %50
  %60 = getelementptr inbounds [12288 x float], [12288 x float]* %8, i64 0, i64 %59
  %61 = bitcast float* %60 to i32*
  store i32 %57, i32* %61, align 8
  %62 = shl nuw nsw i64 %indvars.iv12, 1
  %63 = or i64 %62, 1
  %64 = getelementptr inbounds [12 x [12288 x float]], [12 x [12288 x float]]* %6, i64 0, i64 %indvars.iv15, i64 %63
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = mul nuw nsw i64 %indvars.iv12, 24
  %68 = add nuw nsw i64 %67, %51
  %69 = or i64 %68, 1
  %70 = getelementptr inbounds [12288 x float], [12288 x float]* %8, i64 0, i64 %69
  %71 = bitcast float* %70 to i32*
  store i32 %66, i32* %71, align 4
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  br label %52

; <label>:72:                                     ; preds = %52
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  br label %48

; <label>:73:                                     ; preds = %48
  %74 = getelementptr inbounds [1024 x float], [1024 x float]* %10, i64 0, i64 0
  %75 = getelementptr inbounds [512 x float], [512 x float]* %11, i64 0, i64 0
  %76 = getelementptr inbounds [512 x float], [512 x float]* %11, i64 0, i64 0
  br label %77

; <label>:77:                                     ; preds = %95, %73
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %95 ], [ 0, %73 ]
  %exitcond11 = icmp eq i64 %indvars.iv9, 4
  br i1 %exitcond11, label %98, label %78

; <label>:78:                                     ; preds = %77
  %79 = getelementptr inbounds [4 x [24 x float]], [4 x [24 x float]]* %7, i64 0, i64 %indvars.iv9, i64 0
  %80 = trunc i64 %indvars.iv9 to i32
  br label %81

; <label>:81:                                     ; preds = %82, %78
  %indvars.iv = phi i64 [ %indvars.iv.next, %82 ], [ 0, %78 ]
  %exitcond = icmp eq i64 %indvars.iv, 512
  br i1 %exitcond, label %87, label %82

; <label>:82:                                     ; preds = %81
  %83 = mul nuw nsw i64 %indvars.iv, 24
  %84 = getelementptr inbounds [12288 x float], [12288 x float]* %8, i64 0, i64 %83
  %85 = shl nuw nsw i64 %indvars.iv, 1
  %86 = getelementptr inbounds [1024 x float], [1024 x float]* %9, i64 0, i64 %85
  call void @BeamForm_StrictFP(i32 %80, float* nonnull %79, float* nonnull %84, float* nonnull %86)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %81

; <label>:87:                                     ; preds = %81
  %88 = getelementptr inbounds [4 x %struct.BeamFirData], [4 x %struct.BeamFirData]* %3, i64 0, i64 %indvars.iv9
  br label %89

; <label>:89:                                     ; preds = %90, %87
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %90 ], [ 0, %87 ]
  %exitcond8 = icmp eq i64 %indvars.iv6, 512
  br i1 %exitcond8, label %95, label %90

; <label>:90:                                     ; preds = %89
  %91 = shl nuw nsw i64 %indvars.iv6, 1
  %92 = getelementptr inbounds [1024 x float], [1024 x float]* %9, i64 0, i64 %91
  %93 = shl nuw nsw i64 %indvars.iv6, 1
  %94 = getelementptr inbounds [1024 x float], [1024 x float]* %10, i64 0, i64 %93
  call void @BeamFirFilter_StrictFP(%struct.BeamFirData* nonnull %88, i32 512, i32 1, float* nonnull %92, float* nonnull %94)
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  br label %89

; <label>:95:                                     ; preds = %89
  call void @Magnitude_StrictFP(float* nonnull %74, float* nonnull %75, i32 512)
  %96 = getelementptr inbounds [4 x [512 x float]], [4 x [512 x float]]* @detector_out_StrictFP, i64 0, i64 %indvars.iv9, i64 0
  %97 = trunc i64 %indvars.iv9 to i32
  call void @Detector_StrictFP(i32 %97, float* nonnull %76, float* nonnull %96)
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  br label %77

; <label>:98:                                     ; preds = %77
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @begin() #0 {
  %1 = alloca [12 x %struct.BeamFirData], align 16
  %2 = alloca [12 x %struct.BeamFirData], align 16
  %3 = alloca [4 x %struct.BeamFirData], align 16
  %4 = alloca [24576 x float], align 16
  %5 = alloca [24576 x float], align 16
  %6 = alloca [12 x [12288 x float]], align 16
  %7 = alloca [4 x [24 x float]], align 16
  %8 = alloca [12288 x float], align 16
  %9 = alloca [1024 x float], align 16
  %10 = alloca [1024 x float], align 16
  %11 = alloca [512 x float], align 16
  %12 = alloca [4 x [512 x float]], align 16
  br label %13

; <label>:13:                                     ; preds = %14, %0
  %indvars.iv38 = phi i64 [ %indvars.iv.next39, %14 ], [ 0, %0 ]
  %exitcond40 = icmp eq i64 %indvars.iv38, 12
  br i1 %exitcond40, label %17, label %14

; <label>:14:                                     ; preds = %13
  %15 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %1, i64 0, i64 %indvars.iv38
  call void @BeamFirSetup(%struct.BeamFirData* nonnull %15, i32 64)
  %16 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %2, i64 0, i64 %indvars.iv38
  call void @BeamFirSetup(%struct.BeamFirData* nonnull %16, i32 64)
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1
  br label %13

; <label>:17:                                     ; preds = %13
  br label %18

; <label>:18:                                     ; preds = %19, %17
  %indvars.iv35 = phi i64 [ %indvars.iv.next36, %19 ], [ 0, %17 ]
  %exitcond37 = icmp eq i64 %indvars.iv35, 4
  br i1 %exitcond37, label %23, label %19

; <label>:19:                                     ; preds = %18
  %20 = getelementptr inbounds [4 x %struct.BeamFirData], [4 x %struct.BeamFirData]* %3, i64 0, i64 %indvars.iv35
  call void @BeamFirSetup(%struct.BeamFirData* nonnull %20, i32 512)
  %21 = getelementptr inbounds [4 x [24 x float]], [4 x [24 x float]]* %7, i64 0, i64 %indvars.iv35, i64 0
  %22 = trunc i64 %indvars.iv35 to i32
  call void @BeamFormWeights(i32 %22, float* nonnull %21)
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1
  br label %18

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds [1024 x float], [1024 x float]* %10, i64 0, i64 0
  %25 = getelementptr inbounds [512 x float], [512 x float]* %11, i64 0, i64 0
  %26 = getelementptr inbounds [512 x float], [512 x float]* %11, i64 0, i64 0
  br label %27

; <label>:27:                                     ; preds = %126, %23
  %28 = load i32, i32* @numiters, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %.thread, label %30

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @numiters, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* @numiters, align 4
  %33 = icmp sgt i32 %31, 0
  br i1 %33, label %.thread, label %127

.thread:                                          ; preds = %27, %30
  br label %34

; <label>:34:                                     ; preds = %57, %.thread
  %indvars.iv13 = phi i64 [ %indvars.iv.next14, %57 ], [ 0, %.thread ]
  %exitcond15 = icmp eq i64 %indvars.iv13, 12
  br i1 %exitcond15, label %58, label %35

; <label>:35:                                     ; preds = %34
  %36 = trunc i64 %indvars.iv13 to i32
  br label %37

; <label>:37:                                     ; preds = %38, %35
  %indvars.iv = phi i64 [ %indvars.iv.next, %38 ], [ 0, %35 ]
  %exitcond = icmp eq i64 %indvars.iv, 12
  br i1 %exitcond, label %41, label %38

; <label>:38:                                     ; preds = %37
  %39 = shl nsw i64 %indvars.iv, 11
  %40 = getelementptr inbounds [24576 x float], [24576 x float]* %4, i64 0, i64 %39
  call void @InputGenerate(i32 %36, float* nonnull %40, i32 1024)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %37

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %1, i64 0, i64 %indvars.iv13
  br label %43

; <label>:43:                                     ; preds = %44, %41
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %44 ], [ 0, %41 ]
  %exitcond9 = icmp eq i64 %indvars.iv7, 1024
  br i1 %exitcond9, label %49, label %44

; <label>:44:                                     ; preds = %43
  %45 = shl nuw nsw i64 %indvars.iv7, 1
  %46 = getelementptr inbounds [24576 x float], [24576 x float]* %4, i64 0, i64 %45
  %47 = shl nuw nsw i64 %indvars.iv7, 1
  %48 = getelementptr inbounds [24576 x float], [24576 x float]* %5, i64 0, i64 %47
  call void @BeamFirFilter(%struct.BeamFirData* nonnull %42, i32 1024, i32 1, float* nonnull %46, float* nonnull %48)
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  br label %43

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds [12 x %struct.BeamFirData], [12 x %struct.BeamFirData]* %2, i64 0, i64 %indvars.iv13
  br label %51

; <label>:51:                                     ; preds = %52, %49
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %52 ], [ 0, %49 ]
  %exitcond12 = icmp eq i64 %indvars.iv10, 512
  br i1 %exitcond12, label %57, label %52

; <label>:52:                                     ; preds = %51
  %53 = shl nsw i64 %indvars.iv10, 2
  %54 = getelementptr inbounds [24576 x float], [24576 x float]* %5, i64 0, i64 %53
  %55 = shl nuw nsw i64 %indvars.iv10, 1
  %56 = getelementptr inbounds [12 x [12288 x float]], [12 x [12288 x float]]* %6, i64 0, i64 %indvars.iv13, i64 %55
  call void @BeamFirFilter(%struct.BeamFirData* nonnull %50, i32 1024, i32 2, float* nonnull %54, float* nonnull %56)
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1
  br label %51

; <label>:57:                                     ; preds = %51
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  br label %34

; <label>:58:                                     ; preds = %34
  br label %59

; <label>:59:                                     ; preds = %83, %58
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %83 ], [ 0, %58 ]
  %exitcond21 = icmp eq i64 %indvars.iv19, 12
  br i1 %exitcond21, label %84, label %60

; <label>:60:                                     ; preds = %59
  %61 = shl nuw nsw i64 %indvars.iv19, 1
  %62 = shl nuw nsw i64 %indvars.iv19, 1
  br label %63

; <label>:63:                                     ; preds = %64, %60
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %64 ], [ 0, %60 ]
  %exitcond18 = icmp eq i64 %indvars.iv16, 512
  br i1 %exitcond18, label %83, label %64

; <label>:64:                                     ; preds = %63
  %65 = shl nuw nsw i64 %indvars.iv16, 1
  %66 = getelementptr inbounds [12 x [12288 x float]], [12 x [12288 x float]]* %6, i64 0, i64 %indvars.iv19, i64 %65
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = mul nuw nsw i64 %indvars.iv16, 24
  %70 = add nuw nsw i64 %69, %61
  %71 = getelementptr inbounds [12288 x float], [12288 x float]* %8, i64 0, i64 %70
  %72 = bitcast float* %71 to i32*
  store i32 %68, i32* %72, align 8
  %73 = shl nuw nsw i64 %indvars.iv16, 1
  %74 = or i64 %73, 1
  %75 = getelementptr inbounds [12 x [12288 x float]], [12 x [12288 x float]]* %6, i64 0, i64 %indvars.iv19, i64 %74
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = mul nuw nsw i64 %indvars.iv16, 24
  %79 = add nuw nsw i64 %78, %62
  %80 = or i64 %79, 1
  %81 = getelementptr inbounds [12288 x float], [12288 x float]* %8, i64 0, i64 %80
  %82 = bitcast float* %81 to i32*
  store i32 %77, i32* %82, align 4
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  br label %63

; <label>:83:                                     ; preds = %63
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  br label %59

; <label>:84:                                     ; preds = %59
  br label %85

; <label>:85:                                     ; preds = %103, %84
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %103 ], [ 0, %84 ]
  %exitcond30 = icmp eq i64 %indvars.iv28, 4
  br i1 %exitcond30, label %106, label %86

; <label>:86:                                     ; preds = %85
  %87 = getelementptr inbounds [4 x [24 x float]], [4 x [24 x float]]* %7, i64 0, i64 %indvars.iv28, i64 0
  %88 = trunc i64 %indvars.iv28 to i32
  br label %89

; <label>:89:                                     ; preds = %90, %86
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %90 ], [ 0, %86 ]
  %exitcond24 = icmp eq i64 %indvars.iv22, 512
  br i1 %exitcond24, label %95, label %90

; <label>:90:                                     ; preds = %89
  %91 = mul nuw nsw i64 %indvars.iv22, 24
  %92 = getelementptr inbounds [12288 x float], [12288 x float]* %8, i64 0, i64 %91
  %93 = shl nuw nsw i64 %indvars.iv22, 1
  %94 = getelementptr inbounds [1024 x float], [1024 x float]* %9, i64 0, i64 %93
  call void @BeamForm(i32 %88, float* nonnull %87, float* nonnull %92, float* nonnull %94)
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1
  br label %89

; <label>:95:                                     ; preds = %89
  %96 = getelementptr inbounds [4 x %struct.BeamFirData], [4 x %struct.BeamFirData]* %3, i64 0, i64 %indvars.iv28
  br label %97

; <label>:97:                                     ; preds = %98, %95
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %98 ], [ 0, %95 ]
  %exitcond27 = icmp eq i64 %indvars.iv25, 512
  br i1 %exitcond27, label %103, label %98

; <label>:98:                                     ; preds = %97
  %99 = shl nuw nsw i64 %indvars.iv25, 1
  %100 = getelementptr inbounds [1024 x float], [1024 x float]* %9, i64 0, i64 %99
  %101 = shl nuw nsw i64 %indvars.iv25, 1
  %102 = getelementptr inbounds [1024 x float], [1024 x float]* %10, i64 0, i64 %101
  call void @BeamFirFilter(%struct.BeamFirData* nonnull %96, i32 512, i32 1, float* nonnull %100, float* nonnull %102)
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  br label %97

; <label>:103:                                    ; preds = %97
  call void @Magnitude(float* nonnull %24, float* nonnull %25, i32 512)
  %104 = getelementptr inbounds [4 x [512 x float]], [4 x [512 x float]]* %12, i64 0, i64 %indvars.iv28, i64 0
  %105 = trunc i64 %indvars.iv28 to i32
  call void @Detector(i32 %105, float* nonnull %26, float* nonnull %104)
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  br label %85

; <label>:106:                                    ; preds = %85
  br label %107

; <label>:107:                                    ; preds = %125, %106
  %indvars.iv33 = phi i64 [ %indvars.iv.next34, %125 ], [ 0, %106 ]
  %108 = icmp ult i64 %indvars.iv33, 512
  br i1 %108, label %109, label %126

; <label>:109:                                    ; preds = %107
  br label %110

; <label>:110:                                    ; preds = %120, %109
  %indvars.iv31 = phi i64 [ %indvars.iv.next32, %120 ], [ 0, %109 ]
  %111 = icmp ult i64 %indvars.iv31, 4
  br i1 %111, label %112, label %125

; <label>:112:                                    ; preds = %110
  %113 = getelementptr inbounds [4 x [512 x float]], [4 x [512 x float]]* %12, i64 0, i64 %indvars.iv31, i64 %indvars.iv33
  %114 = load float, float* %113, align 4
  %115 = getelementptr inbounds [4 x [512 x float]], [4 x [512 x float]]* @detector_out_StrictFP, i64 0, i64 %indvars.iv31, i64 %indvars.iv33
  %116 = load float, float* %115, align 4
  %117 = call i32 @check_FP(float %114, float %116)
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

; <label>:119:                                    ; preds = %112
  call void @exit(i32 1) #9
  unreachable

; <label>:120:                                    ; preds = %112
  %121 = getelementptr inbounds [4 x [512 x float]], [4 x [512 x float]]* @detector_out_StrictFP, i64 0, i64 %indvars.iv31, i64 %indvars.iv33
  %122 = load float, float* %121, align 4
  %123 = fpext float %122 to double
  %124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), double %123) #7
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  br label %110

; <label>:125:                                    ; preds = %110
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  br label %107

; <label>:126:                                    ; preds = %107
  br label %27

; <label>:127:                                    ; preds = %30
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @BeamFirSetup(%struct.BeamFirData* nocapture, i32) #0 {
  %3 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = sext i32 %1 to i64
  %7 = shl nsw i64 %6, 3
  %8 = call noalias i8* @malloc(i64 %7) #7
  %9 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %10 = bitcast float** %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = sext i32 %1 to i64
  %12 = shl nsw i64 %11, 3
  %13 = call noalias i8* @malloc(i64 %12) #7
  %14 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %15 = bitcast float** %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %17 = load float*, float** %16, align 8
  store float 1.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %19 = load float*, float** %18, align 8
  %20 = getelementptr inbounds float, float* %19, i64 1
  store float 0.000000e+00, float* %20, align 4
  %21 = shl nsw i32 %1, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %24 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  br label %25

; <label>:25:                                     ; preds = %27, %2
  %indvars.iv = phi i64 [ %indvars.iv.next, %27 ], [ 1, %2 ]
  %26 = icmp slt i64 %indvars.iv, %22
  br i1 %26, label %27, label %32

; <label>:27:                                     ; preds = %25
  %28 = load float*, float** %23, align 8
  %29 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  store float 0.000000e+00, float* %29, align 4
  %30 = load float*, float** %24, align 8
  %31 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  store float 0.000000e+00, float* %31, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %25

; <label>:32:                                     ; preds = %25
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @BeamFormWeights(i32, float* nocapture) #3 {
  %3 = zext i32 %0 to i64
  br label %4

; <label>:4:                                      ; preds = %17, %2
  %indvars.iv = phi i64 [ %indvars.iv.next, %17 ], [ 0, %2 ]
  %exitcond = icmp eq i64 %indvars.iv, 12
  br i1 %exitcond, label %18, label %5

; <label>:5:                                      ; preds = %4
  %6 = icmp eq i64 %indvars.iv, %3
  %7 = shl nuw nsw i64 %indvars.iv, 1
  %8 = getelementptr inbounds float, float* %1, i64 %7
  br i1 %6, label %9, label %13

; <label>:9:                                      ; preds = %5
  store float 1.000000e+00, float* %8, align 4
  %10 = shl nuw nsw i64 %indvars.iv, 1
  %11 = or i64 %10, 1
  %12 = getelementptr inbounds float, float* %1, i64 %11
  store float 0.000000e+00, float* %12, align 4
  br label %17

; <label>:13:                                     ; preds = %5
  store float 0.000000e+00, float* %8, align 4
  %14 = shl nuw nsw i64 %indvars.iv, 1
  %15 = or i64 %14, 1
  %16 = getelementptr inbounds float, float* %1, i64 %15
  store float 0.000000e+00, float* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %9, %13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %4

; <label>:18:                                     ; preds = %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @InputGenerate(i32, float* nocapture, i32) #0 {
  %4 = icmp eq i32 %0, 1
  %5 = sext i32 %2 to i64
  br i1 %4, label %.split.us, label %.split

.split.us:                                        ; preds = %3
  br label %6

; <label>:6:                                      ; preds = %36, %.split.us
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %36 ], [ 0, %.split.us ]
  %7 = icmp slt i64 %indvars.iv1, %5
  br i1 %7, label %8, label %.us-lcssa.us

; <label>:8:                                      ; preds = %6
  %9 = icmp eq i64 %indvars.iv1, 256
  %10 = trunc i64 %indvars.iv1 to i32
  %11 = mul nsw i32 %10, %0
  %12 = sitofp i32 %11 to double
  %13 = call double @sqrt(double %12) #7
  %14 = fptrunc double %13 to float
  br i1 %9, label %24, label %15

; <label>:15:                                     ; preds = %8
  %16 = fsub float -0.000000e+00, %14
  %17 = shl nuw nsw i64 %indvars.iv1, 1
  %18 = getelementptr inbounds float, float* %1, i64 %17
  store float %16, float* %18, align 4
  %19 = fadd float %14, 1.000000e+00
  %20 = fsub float -0.000000e+00, %19
  %21 = shl nuw nsw i64 %indvars.iv1, 1
  %22 = or i64 %21, 1
  %23 = getelementptr inbounds float, float* %1, i64 %22
  store float %20, float* %23, align 4
  br label %36

; <label>:24:                                     ; preds = %8
  %25 = shl nuw nsw i64 %indvars.iv1, 1
  %26 = getelementptr inbounds float, float* %1, i64 %25
  store float %14, float* %26, align 4
  %27 = trunc i64 %indvars.iv1 to i32
  %28 = mul nsw i32 %27, %0
  %29 = sitofp i32 %28 to double
  %30 = call double @sqrt(double %29) #7
  %31 = fadd double %30, 1.000000e+00
  %32 = fptrunc double %31 to float
  %33 = shl nuw nsw i64 %indvars.iv1, 1
  %34 = or i64 %33, 1
  %35 = getelementptr inbounds float, float* %1, i64 %34
  store float %32, float* %35, align 4
  br label %36

; <label>:36:                                     ; preds = %24, %15
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1
  br label %6

.split:                                           ; preds = %3
  br label %37

; <label>:37:                                     ; preds = %39, %.split
  %indvars.iv = phi i64 [ %indvars.iv.next, %39 ], [ 0, %.split ]
  %38 = icmp slt i64 %indvars.iv, %5
  br i1 %38, label %39, label %.us-lcssa.us

; <label>:39:                                     ; preds = %37
  %40 = trunc i64 %indvars.iv to i32
  %41 = mul nsw i32 %40, %0
  %42 = sitofp i32 %41 to double
  %43 = call double @sqrt(double %42) #7
  %44 = fptrunc double %43 to float
  %45 = fsub float -0.000000e+00, %44
  %46 = shl nuw nsw i64 %indvars.iv, 1
  %47 = getelementptr inbounds float, float* %1, i64 %46
  store float %45, float* %47, align 4
  %48 = fadd float %44, 1.000000e+00
  %49 = fsub float -0.000000e+00, %48
  %50 = shl nuw nsw i64 %indvars.iv, 1
  %51 = or i64 %50, 1
  %52 = getelementptr inbounds float, float* %1, i64 %51
  store float %49, float* %52, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %37

.us-lcssa.us:                                     ; preds = %37, %6
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @BeamFirFilter(%struct.BeamFirData* nocapture, i32, i32, float* nocapture readonly, float* nocapture) #3 {
  %6 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = shl nsw i32 %7, 1
  %9 = add nsw i32 %8, -1
  %10 = add nsw i32 %7, -1
  %11 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = sub nsw i32 %10, %12
  %14 = shl nsw i32 %13, 1
  %15 = bitcast float* %3 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %18 = load float*, float** %17, align 8
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds float, float* %18, i64 %19
  %21 = bitcast float* %20 to i32*
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds float, float* %3, i64 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %26 = load float*, float** %25, align 8
  %27 = or i32 %14, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, float* %26, i64 %28
  %30 = bitcast float* %29 to i32*
  store i32 %24, i32* %30, align 4
  %31 = shl nsw i32 %7, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %34 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  br label %35

; <label>:35:                                     ; preds = %38, %5
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %38 ], [ 0, %5 ]
  %.0 = phi i32 [ %54, %38 ], [ %14, %5 ]
  %36 = phi <2 x float> [ %66, %38 ], [ zeroinitializer, %5 ]
  %37 = icmp slt i64 %indvars.iv4, %32
  br i1 %37, label %38, label %67

; <label>:38:                                     ; preds = %35
  %39 = load float*, float** %33, align 8
  %40 = sext i32 %.0 to i64
  %41 = getelementptr inbounds float, float* %39, i64 %40
  %42 = load float, float* %41, align 4
  %43 = add nsw i32 %.0, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds float, float* %39, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load float*, float** %34, align 8
  %48 = getelementptr inbounds float, float* %47, i64 %indvars.iv4
  %49 = load float, float* %48, align 4
  %50 = or i64 %indvars.iv4, 1
  %51 = getelementptr inbounds float, float* %47, i64 %50
  %52 = load float, float* %51, align 4
  %53 = add nsw i32 %.0, 2
  %54 = and i32 %53, %9
  %55 = insertelement <2 x float> undef, float %42, i32 0
  %56 = insertelement <2 x float> %55, float %46, i32 1
  %57 = insertelement <2 x float> undef, float %49, i32 0
  %58 = insertelement <2 x float> %57, float %49, i32 1
  %59 = fmul <2 x float> %56, %58
  %60 = insertelement <2 x float> undef, float %46, i32 0
  %61 = insertelement <2 x float> %60, float %42, i32 1
  %62 = insertelement <2 x float> undef, float %52, i32 0
  %63 = insertelement <2 x float> %62, float %52, i32 1
  %64 = fmul <2 x float> %61, %63
  %65 = fadd <2 x float> %59, %64
  %66 = fadd <2 x float> %36, %65
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 2
  br label %35

; <label>:67:                                     ; preds = %35
  %68 = add nsw i32 %7, -1
  %69 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  %72 = and i32 %71, %68
  %73 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = extractelement <2 x float> %36, i32 0
  store float %74, float* %4, align 4
  %75 = getelementptr inbounds float, float* %4, i64 1
  %76 = extractelement <2 x float> %36, i32 1
  store float %76, float* %75, align 4
  %77 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, %2
  store i32 %79, i32* %77, align 4
  %80 = icmp eq i32 %79, %1
  br i1 %80, label %81, label %.loopexit

; <label>:81:                                     ; preds = %67
  %82 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 1
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 0
  %85 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  br label %86

; <label>:86:                                     ; preds = %91, %81
  %indvars.iv = phi i64 [ %indvars.iv.next, %91 ], [ 0, %81 ]
  %87 = load i32, i32* %84, align 8
  %88 = shl nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = icmp slt i64 %indvars.iv, %89
  br i1 %90, label %91, label %.loopexit

; <label>:91:                                     ; preds = %86
  %92 = load float*, float** %85, align 8
  %93 = getelementptr inbounds float, float* %92, i64 %indvars.iv
  store float 0.000000e+00, float* %93, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %86

.loopexit:                                        ; preds = %86, %67
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @BeamForm(i32, float* nocapture readonly, float* nocapture readonly, float* nocapture) #3 {
  br label %5

; <label>:5:                                      ; preds = %7, %4
  %indvars.iv = phi i64 [ %indvars.iv.next, %7 ], [ 0, %4 ]
  %6 = phi <2 x float> [ %44, %7 ], [ zeroinitializer, %4 ]
  %exitcond = icmp eq i64 %indvars.iv, 12
  br i1 %exitcond, label %45, label %7

; <label>:7:                                      ; preds = %5
  %8 = shl nuw nsw i64 %indvars.iv, 1
  %9 = getelementptr inbounds float, float* %1, i64 %8
  %10 = load float, float* %9, align 4
  %11 = shl nuw nsw i64 %indvars.iv, 1
  %12 = or i64 %11, 1
  %13 = getelementptr inbounds float, float* %1, i64 %12
  %14 = load float, float* %13, align 4
  %15 = shl nuw nsw i64 %indvars.iv, 1
  %16 = getelementptr inbounds float, float* %2, i64 %15
  %17 = load float, float* %16, align 4
  %18 = shl nuw nsw i64 %indvars.iv, 1
  %19 = getelementptr inbounds float, float* %1, i64 %18
  %20 = load float, float* %19, align 4
  %21 = shl nuw nsw i64 %indvars.iv, 1
  %22 = getelementptr inbounds float, float* %2, i64 %21
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = insertelement <2 x float> undef, float %20, i32 0
  %26 = insertelement <2 x float> %25, float %10, i32 1
  %27 = fmul <2 x float> %26, %24
  %28 = shl nuw nsw i64 %indvars.iv, 1
  %29 = or i64 %28, 1
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4
  %32 = shl nuw nsw i64 %indvars.iv, 1
  %33 = or i64 %32, 1
  %34 = getelementptr inbounds float, float* %2, i64 %33
  %35 = load float, float* %34, align 4
  %36 = insertelement <2 x float> undef, float %31, i32 0
  %37 = insertelement <2 x float> %36, float %14, i32 1
  %38 = insertelement <2 x float> undef, float %35, i32 0
  %39 = insertelement <2 x float> %38, float %17, i32 1
  %40 = fmul <2 x float> %37, %39
  %41 = fsub <2 x float> %27, %40
  %42 = fadd <2 x float> %27, %40
  %43 = shufflevector <2 x float> %41, <2 x float> %42, <2 x i32> <i32 0, i32 3>
  %44 = fadd <2 x float> %6, %43
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %5

; <label>:45:                                     ; preds = %5
  %46 = extractelement <2 x float> %6, i32 0
  store float %46, float* %3, align 4
  %47 = getelementptr inbounds float, float* %3, i64 1
  %48 = extractelement <2 x float> %6, i32 1
  store float %48, float* %47, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @Magnitude(float* nocapture readonly, float* nocapture, i32) #0 {
  %4 = sext i32 %2 to i64
  br label %5

; <label>:5:                                      ; preds = %7, %3
  %indvars.iv = phi i64 [ %indvars.iv.next, %7 ], [ 0, %3 ]
  %6 = icmp slt i64 %indvars.iv, %4
  br i1 %6, label %7, label %26

; <label>:7:                                      ; preds = %5
  %8 = shl nuw nsw i64 %indvars.iv, 1
  %9 = getelementptr inbounds float, float* %0, i64 %8
  %10 = load float, float* %9, align 4
  %11 = shl nuw nsw i64 %indvars.iv, 1
  %12 = getelementptr inbounds float, float* %0, i64 %11
  %13 = load float, float* %12, align 4
  %14 = fmul float %10, %13
  %15 = shl nuw nsw i64 %indvars.iv, 1
  %16 = or i64 %15, 1
  %17 = getelementptr inbounds float, float* %0, i64 %16
  %18 = load float, float* %17, align 4
  %19 = shl nuw nsw i64 %indvars.iv, 1
  %20 = or i64 %19, 1
  %21 = getelementptr inbounds float, float* %0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fmul float %18, %22
  %24 = fadd float %14, %23
  %sqrtf = call float @sqrtf(float %24) #1
  %25 = getelementptr inbounds float, float* %1, i64 %indvars.iv
  store float %sqrtf, float* %25, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %5

; <label>:26:                                     ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @Detector(i32, float* nocapture readonly, float* nocapture) #3 {
  %4 = icmp eq i32 %0, 1
  br i1 %4, label %.split.us, label %.split

.split.us:                                        ; preds = %3
  br label %5

; <label>:5:                                      ; preds = %6, %.split.us
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %6 ], [ 0, %.split.us ]
  %cond = icmp eq i64 %indvars.iv1, 512
  br i1 %cond, label %.us-lcssa.us, label %6

; <label>:6:                                      ; preds = %5
  %7 = getelementptr inbounds float, float* %1, i64 %indvars.iv1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds float, float* %2, i64 %indvars.iv1
  %11 = bitcast float* %10 to i32*
  store i32 %9, i32* %11, align 4
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1
  br label %5

.split:                                           ; preds = %3
  br label %12

; <label>:12:                                     ; preds = %13, %.split
  %indvars.iv = phi i64 [ %indvars.iv.next, %13 ], [ 0, %.split ]
  %exitcond = icmp eq i64 %indvars.iv, 512
  br i1 %exitcond, label %.us-lcssa.us, label %13

; <label>:13:                                     ; preds = %12
  %14 = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %18 = bitcast float* %17 to i32*
  store i32 %16, i32* %18, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %12

.us-lcssa.us:                                     ; preds = %5, %12
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_FP(float, float) #0 {
  %3 = fsub float %0, %1
  %4 = call float @llvm.fabs.f32(float %3)
  %5 = fpext float %4 to double
  %6 = fcmp ogt double %5, 1.000000e-05
  br i1 %6, label %7, label %12

; <label>:7:                                      ; preds = %2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = fpext float %0 to double
  %10 = fpext float %1 to double
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), double %9, double %10, double 1.000000e-05) #10
  br label %12

; <label>:12:                                     ; preds = %2, %7
  %.0 = phi i32 [ 0, %7 ], [ 1, %2 ]
  ret i32 %.0
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

declare i32 @printf(i8*, ...) #5

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #5

; Function Attrs: nounwind
declare double @sqrt(double) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: noinline nounwind uwtable
define void @BeamFirSetup_StrictFP(%struct.BeamFirData* nocapture, i32) #0 {
  %3 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = sext i32 %1 to i64
  %7 = shl nsw i64 %6, 3
  %8 = call noalias i8* @malloc(i64 %7) #7
  %9 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %10 = bitcast float** %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = sext i32 %1 to i64
  %12 = shl nsw i64 %11, 3
  %13 = call noalias i8* @malloc(i64 %12) #7
  %14 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %15 = bitcast float** %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %17 = load float*, float** %16, align 8
  store float 1.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %19 = load float*, float** %18, align 8
  %20 = getelementptr inbounds float, float* %19, i64 1
  store float 0.000000e+00, float* %20, align 4
  %21 = shl nsw i32 %1, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  %24 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  br label %25

; <label>:25:                                     ; preds = %27, %2
  %indvars.iv = phi i64 [ %indvars.iv.next, %27 ], [ 1, %2 ]
  %26 = icmp slt i64 %indvars.iv, %22
  br i1 %26, label %27, label %32

; <label>:27:                                     ; preds = %25
  %28 = load float*, float** %23, align 8
  %29 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  store float 0.000000e+00, float* %29, align 4
  %30 = load float*, float** %24, align 8
  %31 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  store float 0.000000e+00, float* %31, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %25

; <label>:32:                                     ; preds = %25
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @BeamFormWeights_StrictFP(i32, float* nocapture) #3 {
  %3 = zext i32 %0 to i64
  br label %4

; <label>:4:                                      ; preds = %17, %2
  %indvars.iv = phi i64 [ %indvars.iv.next, %17 ], [ 0, %2 ]
  %exitcond = icmp eq i64 %indvars.iv, 12
  br i1 %exitcond, label %18, label %5

; <label>:5:                                      ; preds = %4
  %6 = icmp eq i64 %indvars.iv, %3
  %7 = shl nuw nsw i64 %indvars.iv, 1
  %8 = getelementptr inbounds float, float* %1, i64 %7
  br i1 %6, label %9, label %13

; <label>:9:                                      ; preds = %5
  store float 1.000000e+00, float* %8, align 4
  %10 = shl nuw nsw i64 %indvars.iv, 1
  %11 = or i64 %10, 1
  %12 = getelementptr inbounds float, float* %1, i64 %11
  store float 0.000000e+00, float* %12, align 4
  br label %17

; <label>:13:                                     ; preds = %5
  store float 0.000000e+00, float* %8, align 4
  %14 = shl nuw nsw i64 %indvars.iv, 1
  %15 = or i64 %14, 1
  %16 = getelementptr inbounds float, float* %1, i64 %15
  store float 0.000000e+00, float* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %9, %13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %4

; <label>:18:                                     ; preds = %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @InputGenerate_StrictFP(i32, float* nocapture, i32) #0 {
  %4 = icmp eq i32 %0, 1
  %5 = sext i32 %2 to i64
  br i1 %4, label %.split.us, label %.split

.split.us:                                        ; preds = %3
  br label %6

; <label>:6:                                      ; preds = %36, %.split.us
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %36 ], [ 0, %.split.us ]
  %7 = icmp slt i64 %indvars.iv1, %5
  br i1 %7, label %8, label %.us-lcssa.us

; <label>:8:                                      ; preds = %6
  %9 = icmp eq i64 %indvars.iv1, 256
  %10 = trunc i64 %indvars.iv1 to i32
  %11 = mul nsw i32 %10, %0
  %12 = sitofp i32 %11 to double
  %13 = call double @sqrt(double %12) #7
  %14 = fptrunc double %13 to float
  br i1 %9, label %24, label %15

; <label>:15:                                     ; preds = %8
  %16 = fsub float -0.000000e+00, %14
  %17 = shl nuw nsw i64 %indvars.iv1, 1
  %18 = getelementptr inbounds float, float* %1, i64 %17
  store float %16, float* %18, align 4
  %19 = fadd float %14, 1.000000e+00
  %20 = fsub float -0.000000e+00, %19
  %21 = shl nuw nsw i64 %indvars.iv1, 1
  %22 = or i64 %21, 1
  %23 = getelementptr inbounds float, float* %1, i64 %22
  store float %20, float* %23, align 4
  br label %36

; <label>:24:                                     ; preds = %8
  %25 = shl nuw nsw i64 %indvars.iv1, 1
  %26 = getelementptr inbounds float, float* %1, i64 %25
  store float %14, float* %26, align 4
  %27 = trunc i64 %indvars.iv1 to i32
  %28 = mul nsw i32 %27, %0
  %29 = sitofp i32 %28 to double
  %30 = call double @sqrt(double %29) #7
  %31 = fadd double %30, 1.000000e+00
  %32 = fptrunc double %31 to float
  %33 = shl nuw nsw i64 %indvars.iv1, 1
  %34 = or i64 %33, 1
  %35 = getelementptr inbounds float, float* %1, i64 %34
  store float %32, float* %35, align 4
  br label %36

; <label>:36:                                     ; preds = %24, %15
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1
  br label %6

.split:                                           ; preds = %3
  br label %37

; <label>:37:                                     ; preds = %39, %.split
  %indvars.iv = phi i64 [ %indvars.iv.next, %39 ], [ 0, %.split ]
  %38 = icmp slt i64 %indvars.iv, %5
  br i1 %38, label %39, label %.us-lcssa.us

; <label>:39:                                     ; preds = %37
  %40 = trunc i64 %indvars.iv to i32
  %41 = mul nsw i32 %40, %0
  %42 = sitofp i32 %41 to double
  %43 = call double @sqrt(double %42) #7
  %44 = fptrunc double %43 to float
  %45 = fsub float -0.000000e+00, %44
  %46 = shl nuw nsw i64 %indvars.iv, 1
  %47 = getelementptr inbounds float, float* %1, i64 %46
  store float %45, float* %47, align 4
  %48 = fadd float %44, 1.000000e+00
  %49 = fsub float -0.000000e+00, %48
  %50 = shl nuw nsw i64 %indvars.iv, 1
  %51 = or i64 %50, 1
  %52 = getelementptr inbounds float, float* %1, i64 %51
  store float %49, float* %52, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %37

.us-lcssa.us:                                     ; preds = %37, %6
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @BeamFirFilter_StrictFP(%struct.BeamFirData* nocapture, i32, i32, float* nocapture readonly, float* nocapture) #3 {
  %6 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = shl nsw i32 %7, 1
  %9 = add nsw i32 %8, -1
  %10 = add nsw i32 %7, -1
  %11 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = sub nsw i32 %10, %12
  %14 = shl nsw i32 %13, 1
  %15 = bitcast float* %3 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %18 = load float*, float** %17, align 8
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds float, float* %18, i64 %19
  %21 = bitcast float* %20 to i32*
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds float, float* %3, i64 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %26 = load float*, float** %25, align 8
  %27 = or i32 %14, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, float* %26, i64 %28
  %30 = bitcast float* %29 to i32*
  store i32 %24, i32* %30, align 4
  %31 = shl nsw i32 %7, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  %34 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 3
  br label %35

; <label>:35:                                     ; preds = %38, %5
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %38 ], [ 0, %5 ]
  %.0 = phi i32 [ %54, %38 ], [ %14, %5 ]
  %36 = phi <2 x float> [ %66, %38 ], [ zeroinitializer, %5 ]
  %37 = icmp slt i64 %indvars.iv4, %32
  br i1 %37, label %38, label %67

; <label>:38:                                     ; preds = %35
  %39 = load float*, float** %33, align 8
  %40 = sext i32 %.0 to i64
  %41 = getelementptr inbounds float, float* %39, i64 %40
  %42 = load float, float* %41, align 4
  %43 = add nsw i32 %.0, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds float, float* %39, i64 %44
  %46 = load float, float* %45, align 4
  %47 = load float*, float** %34, align 8
  %48 = getelementptr inbounds float, float* %47, i64 %indvars.iv4
  %49 = load float, float* %48, align 4
  %50 = or i64 %indvars.iv4, 1
  %51 = getelementptr inbounds float, float* %47, i64 %50
  %52 = load float, float* %51, align 4
  %53 = add nsw i32 %.0, 2
  %54 = and i32 %53, %9
  %55 = insertelement <2 x float> undef, float %42, i32 0
  %56 = insertelement <2 x float> %55, float %46, i32 1
  %57 = insertelement <2 x float> undef, float %49, i32 0
  %58 = insertelement <2 x float> %57, float %49, i32 1
  %59 = fmul <2 x float> %56, %58
  %60 = insertelement <2 x float> undef, float %46, i32 0
  %61 = insertelement <2 x float> %60, float %42, i32 1
  %62 = insertelement <2 x float> undef, float %52, i32 0
  %63 = insertelement <2 x float> %62, float %52, i32 1
  %64 = fmul <2 x float> %61, %63
  %65 = fadd <2 x float> %59, %64
  %66 = fadd <2 x float> %36, %65
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 2
  br label %35

; <label>:67:                                     ; preds = %35
  %68 = add nsw i32 %7, -1
  %69 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  %72 = and i32 %71, %68
  %73 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = extractelement <2 x float> %36, i32 0
  store float %74, float* %4, align 4
  %75 = getelementptr inbounds float, float* %4, i64 1
  %76 = extractelement <2 x float> %36, i32 1
  store float %76, float* %75, align 4
  %77 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, %2
  store i32 %79, i32* %77, align 4
  %80 = icmp eq i32 %79, %1
  br i1 %80, label %81, label %.loopexit

; <label>:81:                                     ; preds = %67
  %82 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 1
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 2
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 0
  %85 = getelementptr inbounds %struct.BeamFirData, %struct.BeamFirData* %0, i64 0, i32 4
  br label %86

; <label>:86:                                     ; preds = %91, %81
  %indvars.iv = phi i64 [ %indvars.iv.next, %91 ], [ 0, %81 ]
  %87 = load i32, i32* %84, align 8
  %88 = shl nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = icmp slt i64 %indvars.iv, %89
  br i1 %90, label %91, label %.loopexit

; <label>:91:                                     ; preds = %86
  %92 = load float*, float** %85, align 8
  %93 = getelementptr inbounds float, float* %92, i64 %indvars.iv
  store float 0.000000e+00, float* %93, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %86

.loopexit:                                        ; preds = %86, %67
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @BeamForm_StrictFP(i32, float* nocapture readonly, float* nocapture readonly, float* nocapture) #3 {
  br label %5

; <label>:5:                                      ; preds = %7, %4
  %indvars.iv = phi i64 [ %indvars.iv.next, %7 ], [ 0, %4 ]
  %6 = phi <2 x float> [ %44, %7 ], [ zeroinitializer, %4 ]
  %exitcond = icmp eq i64 %indvars.iv, 12
  br i1 %exitcond, label %45, label %7

; <label>:7:                                      ; preds = %5
  %8 = shl nuw nsw i64 %indvars.iv, 1
  %9 = getelementptr inbounds float, float* %1, i64 %8
  %10 = load float, float* %9, align 4
  %11 = shl nuw nsw i64 %indvars.iv, 1
  %12 = or i64 %11, 1
  %13 = getelementptr inbounds float, float* %1, i64 %12
  %14 = load float, float* %13, align 4
  %15 = shl nuw nsw i64 %indvars.iv, 1
  %16 = getelementptr inbounds float, float* %2, i64 %15
  %17 = load float, float* %16, align 4
  %18 = shl nuw nsw i64 %indvars.iv, 1
  %19 = getelementptr inbounds float, float* %1, i64 %18
  %20 = load float, float* %19, align 4
  %21 = shl nuw nsw i64 %indvars.iv, 1
  %22 = getelementptr inbounds float, float* %2, i64 %21
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = insertelement <2 x float> undef, float %20, i32 0
  %26 = insertelement <2 x float> %25, float %10, i32 1
  %27 = fmul <2 x float> %26, %24
  %28 = shl nuw nsw i64 %indvars.iv, 1
  %29 = or i64 %28, 1
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4
  %32 = shl nuw nsw i64 %indvars.iv, 1
  %33 = or i64 %32, 1
  %34 = getelementptr inbounds float, float* %2, i64 %33
  %35 = load float, float* %34, align 4
  %36 = insertelement <2 x float> undef, float %31, i32 0
  %37 = insertelement <2 x float> %36, float %14, i32 1
  %38 = insertelement <2 x float> undef, float %35, i32 0
  %39 = insertelement <2 x float> %38, float %17, i32 1
  %40 = fmul <2 x float> %37, %39
  %41 = fsub <2 x float> %27, %40
  %42 = fadd <2 x float> %27, %40
  %43 = shufflevector <2 x float> %41, <2 x float> %42, <2 x i32> <i32 0, i32 3>
  %44 = fadd <2 x float> %6, %43
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %5

; <label>:45:                                     ; preds = %5
  %46 = extractelement <2 x float> %6, i32 0
  store float %46, float* %3, align 4
  %47 = getelementptr inbounds float, float* %3, i64 1
  %48 = extractelement <2 x float> %6, i32 1
  store float %48, float* %47, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @Magnitude_StrictFP(float* nocapture readonly, float* nocapture, i32) #0 {
  %4 = sext i32 %2 to i64
  br label %5

; <label>:5:                                      ; preds = %7, %3
  %indvars.iv = phi i64 [ %indvars.iv.next, %7 ], [ 0, %3 ]
  %6 = icmp slt i64 %indvars.iv, %4
  br i1 %6, label %7, label %26

; <label>:7:                                      ; preds = %5
  %8 = shl nuw nsw i64 %indvars.iv, 1
  %9 = getelementptr inbounds float, float* %0, i64 %8
  %10 = load float, float* %9, align 4
  %11 = shl nuw nsw i64 %indvars.iv, 1
  %12 = getelementptr inbounds float, float* %0, i64 %11
  %13 = load float, float* %12, align 4
  %14 = fmul float %10, %13
  %15 = shl nuw nsw i64 %indvars.iv, 1
  %16 = or i64 %15, 1
  %17 = getelementptr inbounds float, float* %0, i64 %16
  %18 = load float, float* %17, align 4
  %19 = shl nuw nsw i64 %indvars.iv, 1
  %20 = or i64 %19, 1
  %21 = getelementptr inbounds float, float* %0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fmul float %18, %22
  %24 = fadd float %14, %23
  %sqrtf = call float @sqrtf(float %24) #1
  %25 = getelementptr inbounds float, float* %1, i64 %indvars.iv
  store float %sqrtf, float* %25, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %5

; <label>:26:                                     ; preds = %5
  ret void
}

; Function Attrs: noinline norecurse nounwind uwtable
define void @Detector_StrictFP(i32, float* nocapture readonly, float* nocapture) #3 {
  %4 = icmp eq i32 %0, 1
  br i1 %4, label %.split.us, label %.split

.split.us:                                        ; preds = %3
  br label %5

; <label>:5:                                      ; preds = %6, %.split.us
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %6 ], [ 0, %.split.us ]
  %cond = icmp eq i64 %indvars.iv1, 512
  br i1 %cond, label %.us-lcssa.us, label %6

; <label>:6:                                      ; preds = %5
  %7 = getelementptr inbounds float, float* %1, i64 %indvars.iv1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds float, float* %2, i64 %indvars.iv1
  %11 = bitcast float* %10 to i32*
  store i32 %9, i32* %11, align 4
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1
  br label %5

.split:                                           ; preds = %3
  br label %12

; <label>:12:                                     ; preds = %13, %.split
  %indvars.iv = phi i64 [ %indvars.iv.next, %13 ], [ 0, %.split ]
  %exitcond = icmp eq i64 %indvars.iv, 512
  br i1 %exitcond, label %.us-lcssa.us, label %13

; <label>:13:                                     ; preds = %12
  %14 = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %18 = bitcast float* %17 to i32*
  store i32 %16, i32* %18, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br label %12

.us-lcssa.us:                                     ; preds = %5, %12
  ret void
}

declare float @sqrtf(float)

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }
attributes #9 = { noreturn nounwind }
attributes #10 = { cold nounwind }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
