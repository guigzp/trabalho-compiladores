; ModuleID = 'trans.c'
source_filename = "trans.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@ht = common global i32* null, align 8
@he = common global i8* null, align 8
@.str = private unnamed_addr constant [30 x i8] c"Failed to allocate %u bytes.\0A\00", align 1
@hits = common global i64 0, align 8
@posed = common global i64 0, align 8
@columns = external global [0 x i32], align 4
@lock = common global i32 0, align 4
@htindex = common global i32 0, align 4
@stride = common global i32 0, align 4
@.str.1 = private unnamed_addr constant [19 x i8] c"store rate = %.3f\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"- %5.3f  < %5.3f  = %5.3f  > %5.3f  + %5.3f\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"%7d%c\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @trans_init() #0 {
  %1 = call i32 (...) @play_init()
  %2 = call noalias i8* @calloc(i64 1050011, i64 4) #4
  %3 = bitcast i8* %2 to i32*
  store i32* %3, i32** @ht, align 8
  %4 = call noalias i8* @calloc(i64 1050011, i64 1) #4
  store i8* %4, i8** @he, align 8
  %5 = load i32*, i32** @ht, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %10, label %7

; <label>:7:                                      ; preds = %0
  %8 = load i8*, i8** @he, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %7, %0
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0), i64 5250055)
  call void @exit(i32 0) #5
  unreachable

; <label>:12:                                     ; preds = %7
  ret void
}

declare i32 @play_init(...) #1

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

declare i32 @printf(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: noinline nounwind uwtable
define void @emptyTT() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %4

; <label>:4:                                      ; preds = %32, %0
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1050011
  br i1 %6, label %7, label %35

; <label>:7:                                      ; preds = %4
  %8 = load i8*, i8** @he, align 8
  %9 = load i32, i32* %1, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  store i32 %13, i32* %2, align 4
  %14 = and i32 %13, 31
  store i32 %14, i32* %3, align 4
  %15 = icmp slt i32 %14, 31
  br i1 %15, label %16, label %31

; <label>:16:                                     ; preds = %7
  %17 = load i32, i32* %2, align 4
  %18 = load i32, i32* %3, align 4
  %19 = icmp slt i32 %18, 16
  br i1 %19, label %20, label %22

; <label>:20:                                     ; preds = %16
  %21 = load i32, i32* %3, align 4
  br label %23

; <label>:22:                                     ; preds = %16
  br label %23

; <label>:23:                                     ; preds = %22, %20
  %24 = phi i32 [ %21, %20 ], [ 4, %22 ]
  %25 = sub nsw i32 %17, %24
  %26 = trunc i32 %25 to i8
  %27 = load i8*, i8** @he, align 8
  %28 = load i32, i32* %1, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  store i8 %26, i8* %30, align 1
  br label %31

; <label>:31:                                     ; preds = %23, %7
  br label %32

; <label>:32:                                     ; preds = %31
  %33 = load i32, i32* %1, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %1, align 4
  br label %4

; <label>:35:                                     ; preds = %4
  store i64 0, i64* @hits, align 8
  store i64 0, i64* @posed, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define double @hitRate() #0 {
  %1 = load i64, i64* @posed, align 8
  %2 = icmp ne i64 %1, 0
  br i1 %2, label %3, label %9

; <label>:3:                                      ; preds = %0
  %4 = load i64, i64* @hits, align 8
  %5 = sitofp i64 %4 to double
  %6 = load i64, i64* @posed, align 8
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  br label %10

; <label>:9:                                      ; preds = %0
  br label %10

; <label>:10:                                     ; preds = %9, %3
  %11 = phi double [ %8, %3 ], [ 0.000000e+00, %9 ]
  ret double %11
}

; Function Attrs: noinline nounwind uwtable
define void @hash() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 1), align 4
  %5 = shl i32 %4, 7
  %6 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 2), align 4
  %7 = or i32 %5, %6
  %8 = shl i32 %7, 7
  %9 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 3), align 4
  %10 = or i32 %8, %9
  store i32 %10, i32* %1, align 4
  %11 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 7), align 4
  %12 = shl i32 %11, 7
  %13 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 6), align 4
  %14 = or i32 %12, %13
  %15 = shl i32 %14, 7
  %16 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 5), align 4
  %17 = or i32 %15, %16
  store i32 %17, i32* %2, align 4
  %18 = load i32, i32* %1, align 4
  %19 = load i32, i32* %2, align 4
  %20 = icmp ugt i32 %18, %19
  br i1 %20, label %21, label %31

; <label>:21:                                     ; preds = %0
  %22 = load i32, i32* %1, align 4
  %23 = shl i32 %22, 7
  %24 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 4), align 4
  %25 = or i32 %23, %24
  %26 = zext i32 %25 to i64
  %27 = shl i64 %26, 21
  %28 = load i32, i32* %2, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %27, %29
  br label %41

; <label>:31:                                     ; preds = %0
  %32 = load i32, i32* %2, align 4
  %33 = shl i32 %32, 7
  %34 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @columns, i64 0, i64 4), align 4
  %35 = or i32 %33, %34
  %36 = zext i32 %35 to i64
  %37 = shl i64 %36, 21
  %38 = load i32, i32* %1, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %37, %39
  br label %41

; <label>:41:                                     ; preds = %31, %21
  %42 = phi i64 [ %30, %21 ], [ %40, %31 ]
  store i64 %42, i64* %3, align 8
  %43 = load i64, i64* %3, align 8
  %44 = ashr i64 %43, 17
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* @lock, align 4
  %46 = load i64, i64* %3, align 8
  %47 = srem i64 %46, 1050011
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* @htindex, align 4
  %49 = load i32, i32* @lock, align 4
  %50 = urem i32 %49, 179
  %51 = add i32 131072, %50
  store i32 %51, i32* @stride, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define i32 @transpose() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @hash()
  %4 = load i32, i32* @htindex, align 4
  store i32 %4, i32* %3, align 4
  store i32 0, i32* %2, align 4
  br label %5

; <label>:5:                                      ; preds = %32, %0
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 8
  br i1 %7, label %8, label %35

; <label>:8:                                      ; preds = %5
  %9 = load i32*, i32** @ht, align 8
  %10 = load i32, i32* %3, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %9, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* @lock, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %8
  %17 = load i8*, i8** @he, align 8
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  store i32 %22, i32* %1, align 4
  br label %36

; <label>:23:                                     ; preds = %8
  %24 = load i32, i32* @stride, align 4
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %25, %24
  store i32 %26, i32* %3, align 4
  %27 = icmp sge i32 %26, 1050011
  br i1 %27, label %28, label %31

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* %3, align 4
  %30 = sub nsw i32 %29, 1050011
  store i32 %30, i32* %3, align 4
  br label %31

; <label>:31:                                     ; preds = %28, %23
  br label %32

; <label>:32:                                     ; preds = %31
  %33 = load i32, i32* %2, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %2, align 4
  br label %5

; <label>:35:                                     ; preds = %5
  store i32 -128, i32* %1, align 4
  br label %36

; <label>:36:                                     ; preds = %35, %16
  %37 = load i32, i32* %1, align 4
  ret i32 %37
}

; Function Attrs: noinline nounwind uwtable
define void @transput(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* @htindex, align 4
  store i32 %7, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %8

; <label>:8:                                      ; preds = %47, %2
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 8
  br i1 %10, label %11, label %50

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* %4, align 4
  %13 = load i8*, i8** @he, align 8
  %14 = load i32, i32* %6, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = and i32 %18, 31
  %20 = icmp sgt i32 %12, %19
  br i1 %20, label %21, label %38

; <label>:21:                                     ; preds = %11
  %22 = load i64, i64* @hits, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* @hits, align 8
  %24 = load i32, i32* @lock, align 4
  %25 = load i32*, i32** @ht, align 8
  %26 = load i32, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  store i32 %24, i32* %28, align 4
  %29 = load i32, i32* %3, align 4
  %30 = shl i32 %29, 5
  %31 = load i32, i32* %4, align 4
  %32 = or i32 %30, %31
  %33 = trunc i32 %32 to i8
  %34 = load i8*, i8** @he, align 8
  %35 = load i32, i32* %6, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  store i8 %33, i8* %37, align 1
  br label %50

; <label>:38:                                     ; preds = %11
  %39 = load i32, i32* @stride, align 4
  %40 = load i32, i32* %6, align 4
  %41 = add nsw i32 %40, %39
  store i32 %41, i32* %6, align 4
  %42 = icmp sge i32 %41, 1050011
  br i1 %42, label %43, label %46

; <label>:43:                                     ; preds = %38
  %44 = load i32, i32* %6, align 4
  %45 = sub nsw i32 %44, 1050011
  store i32 %45, i32* %6, align 4
  br label %46

; <label>:46:                                     ; preds = %43, %38
  br label %47

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %8

; <label>:50:                                     ; preds = %21, %8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @transrestore(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp sgt i32 %7, 31
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %2
  store i32 31, i32* %4, align 4
  br label %10

; <label>:10:                                     ; preds = %9, %2
  %11 = load i64, i64* @posed, align 8
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* @posed, align 8
  call void @hash()
  %13 = load i32, i32* @htindex, align 4
  store i32 %13, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %14

; <label>:14:                                     ; preds = %46, %10
  %15 = load i32, i32* %5, align 4
  %16 = icmp slt i32 %15, 8
  br i1 %16, label %17, label %49

; <label>:17:                                     ; preds = %14
  %18 = load i32*, i32** @ht, align 8
  %19 = load i32, i32* %6, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* @lock, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %37

; <label>:25:                                     ; preds = %17
  %26 = load i64, i64* @hits, align 8
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* @hits, align 8
  %28 = load i32, i32* %3, align 4
  %29 = shl i32 %28, 5
  %30 = load i32, i32* %4, align 4
  %31 = or i32 %29, %30
  %32 = trunc i32 %31 to i8
  %33 = load i8*, i8** @he, align 8
  %34 = load i32, i32* %6, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  store i8 %32, i8* %36, align 1
  br label %52

; <label>:37:                                     ; preds = %17
  %38 = load i32, i32* @stride, align 4
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, %38
  store i32 %40, i32* %6, align 4
  %41 = icmp sge i32 %40, 1050011
  br i1 %41, label %42, label %45

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* %6, align 4
  %44 = sub nsw i32 %43, 1050011
  store i32 %44, i32* %6, align 4
  br label %45

; <label>:45:                                     ; preds = %42, %37
  br label %46

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %5, align 4
  br label %14

; <label>:49:                                     ; preds = %14
  %50 = load i32, i32* %3, align 4
  %51 = load i32, i32* %4, align 4
  call void @transput(i32 %50, i32 %51)
  br label %52

; <label>:52:                                     ; preds = %49, %25
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @transtore(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 31
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %2
  store i32 31, i32* %4, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %2
  %9 = load i64, i64* @posed, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* @posed, align 8
  call void @hash()
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %4, align 4
  call void @transput(i32 %11, i32 %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define void @htstat() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [32 x i32], align 16
  %4 = alloca [8 x i32], align 16
  store i32 0, i32* %2, align 4
  br label %5

; <label>:5:                                      ; preds = %12, %0
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 32
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %2, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [32 x i32], [32 x i32]* %3, i64 0, i64 %10
  store i32 0, i32* %11, align 4
  br label %12

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* %2, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %2, align 4
  br label %5

; <label>:15:                                     ; preds = %5
  store i32 0, i32* %2, align 4
  br label %16

; <label>:16:                                     ; preds = %23, %15
  %17 = load i32, i32* %2, align 4
  %18 = icmp slt i32 %17, 8
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* %2, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %21
  store i32 0, i32* %22, align 4
  br label %23

; <label>:23:                                     ; preds = %19
  %24 = load i32, i32* %2, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %2, align 4
  br label %16

; <label>:26:                                     ; preds = %16
  store i32 0, i32* %2, align 4
  br label %27

; <label>:27:                                     ; preds = %64, %26
  %28 = load i32, i32* %2, align 4
  %29 = icmp slt i32 %28, 1050011
  br i1 %29, label %30, label %67

; <label>:30:                                     ; preds = %27
  %31 = load i8*, i8** @he, align 8
  %32 = load i32, i32* %2, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = and i32 %36, 31
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [32 x i32], [32 x i32]* %3, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %39, align 4
  %42 = load i8*, i8** @he, align 8
  %43 = load i32, i32* %2, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = and i32 %47, 31
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %63

; <label>:50:                                     ; preds = %30
  %51 = load i8*, i8** @he, align 8
  %52 = load i32, i32* %2, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = ashr i32 %56, 5
  %58 = add nsw i32 4, %57
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 4
  br label %63

; <label>:63:                                     ; preds = %50, %30
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* %2, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %2, align 4
  br label %27

; <label>:67:                                     ; preds = %27
  store i32 0, i32* %2, align 4
  store i32 0, i32* %1, align 4
  br label %68

; <label>:68:                                     ; preds = %78, %67
  %69 = load i32, i32* %2, align 4
  %70 = icmp slt i32 %69, 8
  br i1 %70, label %71, label %81

; <label>:71:                                     ; preds = %68
  %72 = load i32, i32* %2, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* %1, align 4
  %77 = add nsw i32 %76, %75
  store i32 %77, i32* %1, align 4
  br label %78

; <label>:78:                                     ; preds = %71
  %79 = load i32, i32* %2, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %2, align 4
  br label %68

; <label>:81:                                     ; preds = %68
  %82 = load i32, i32* %1, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %118

; <label>:84:                                     ; preds = %81
  %85 = call double @hitRate()
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0), double %85)
  %87 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 2
  %88 = load i32, i32* %87, align 8
  %89 = sitofp i32 %88 to double
  %90 = load i32, i32* %1, align 4
  %91 = sitofp i32 %90 to double
  %92 = fdiv double %89, %91
  %93 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 3
  %94 = load i32, i32* %93, align 4
  %95 = sitofp i32 %94 to double
  %96 = load i32, i32* %1, align 4
  %97 = sitofp i32 %96 to double
  %98 = fdiv double %95, %97
  %99 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 4
  %100 = load i32, i32* %99, align 16
  %101 = sitofp i32 %100 to double
  %102 = load i32, i32* %1, align 4
  %103 = sitofp i32 %102 to double
  %104 = fdiv double %101, %103
  %105 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 5
  %106 = load i32, i32* %105, align 4
  %107 = sitofp i32 %106 to double
  %108 = load i32, i32* %1, align 4
  %109 = sitofp i32 %108 to double
  %110 = fdiv double %107, %109
  %111 = getelementptr inbounds [8 x i32], [8 x i32]* %4, i64 0, i64 6
  %112 = load i32, i32* %111, align 8
  %113 = sitofp i32 %112 to double
  %114 = load i32, i32* %1, align 4
  %115 = sitofp i32 %114 to double
  %116 = fdiv double %113, %115
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), double %92, double %98, double %104, double %110, double %116)
  br label %118

; <label>:118:                                    ; preds = %84, %81
  store i32 0, i32* %2, align 4
  br label %119

; <label>:119:                                    ; preds = %133, %118
  %120 = load i32, i32* %2, align 4
  %121 = icmp slt i32 %120, 32
  br i1 %121, label %122, label %136

; <label>:122:                                    ; preds = %119
  %123 = load i32, i32* %2, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [32 x i32], [32 x i32]* %3, i64 0, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = load i32, i32* %2, align 4
  %128 = and i32 %127, 7
  %129 = icmp eq i32 %128, 7
  %130 = zext i1 %129 to i64
  %131 = select i1 %129, i32 10, i32 9
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i32 %126, i32 %131)
  br label %133

; <label>:133:                                    ; preds = %122
  %134 = load i32, i32* %2, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %2, align 4
  br label %119

; <label>:136:                                    ; preds = %119
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
